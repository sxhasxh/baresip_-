!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS32	rem-0.5.2/include/rem_dsp.h	/^static inline int ABS32(int a)$/;"	f
ACCEPTED	re-0.5.6/src/sip/strans.c	/^	ACCEPTED,$/;"	e	enum:state	file:
ACCEPTING	re-0.5.6/src/websock/websock.c	/^	ACCEPTING = 0,$/;"	e	enum:websock_state	file:
ACCESS_ALLOW	baresip/src/contact.c	/^	ACCESS_ALLOW$/;"	e	enum:access	file:
ACCESS_BLOCK	baresip/src/contact.c	/^	ACCESS_BLOCK,$/;"	e	enum:access	file:
ACCESS_UNKNOWN	baresip/src/contact.c	/^	ACCESS_UNKNOWN = 0,$/;"	e	enum:access	file:
ACTION_HANGUP_A	baresip/test/call.c	/^	ACTION_HANGUP_A,$/;"	e	enum:action	file:
ACTION_HANGUP_B	baresip/test/call.c	/^	ACTION_HANGUP_B,$/;"	e	enum:action	file:
ACTION_NOTHING	baresip/test/call.c	/^	ACTION_NOTHING$/;"	e	enum:action	file:
ACTION_RECANCEL	baresip/test/call.c	/^	ACTION_RECANCEL = 0,$/;"	e	enum:action	file:
AES_BLOCK_SIZE	re-0.5.6/include/re_aes.h	9;"	d
AES_MODE_CTR	re-0.5.6/include/re_aes.h	/^	AES_MODE_CTR  \/**< AES Counter mode (CTR) *\/$/;"	e	enum:aes_mode
AFLAGS	re-0.5.6/mk/re.mk	/^	AFLAGS		:= crD$/;"	m
AFLAGS	re-0.5.6/mk/re.mk	/^	AFLAGS		:= cru$/;"	m
ALIGN_MASK	re-0.5.6/include/re_types.h	114;"	d
ANSWERMODE_AUTO	baresip/include/baresip.h	/^	ANSWERMODE_AUTO$/;"	e	enum:answermode
ANSWERMODE_EARLY	baresip/include/baresip.h	/^	ANSWERMODE_EARLY,$/;"	e	enum:answermode
ANSWERMODE_MANUAL	baresip/include/baresip.h	/^	ANSWERMODE_MANUAL = 0,$/;"	e	enum:answermode
APP_MK	baresip/Makefile	/^APP_MK	:= src\/srcs.mk$/;"	m
APP_OBJS	baresip/Makefile	/^APP_OBJS  := $(OBJS) $(patsubst %.c,$(BUILD)\/src\/%.o,$(APP_SRCS)) $(MOD_OBJS)$/;"	m
AR	re-0.5.6/mk/re.mk	/^	AR		:= ar$/;"	m
ARCH	re-0.5.6/include/re_sys.h	18;"	d
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= arm$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= arm6$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= i386$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= i486$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= i586$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= i686$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= mips$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= ppc$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= ppc64$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= sparc$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= sparc64$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH	:= x86_64$/;"	m
ARCH	re-0.5.6/mk/re.mk	/^ARCH   := arm64$/;"	m
ARRAY_SIZE	re-0.5.6/include/re_types.h	110;"	d
ARRAY_SIZE	re-0.5.6/include/re_types.h	111;"	d
ASSERT_DOUBLE_EQ	baresip/test/test.h	26;"	d
ASSERT_EQ	baresip/test/test.h	16;"	d
ASSERT_STREQ	baresip/test/test.h	36;"	d
ASSERT_TRUE	baresip/test/test.h	8;"	d
AUBUF_DEBUG	rem-0.5.2/src/aubuf/aubuf.c	11;"	d	file:
AUDIO_BANDWIDTH	baresip/src/core.h	/^	AUDIO_BANDWIDTH = 128000,  \/**< Bandwidth for audio in bits\/s      *\/$/;"	e	enum:__anon2
AUDIO_MODE_POLL	baresip/include/baresip.h	/^	AUDIO_MODE_POLL = 0,         \/**< Polling mode                  *\/$/;"	e	enum:audio_mode
AUDIO_MODE_THREAD	baresip/include/baresip.h	/^	AUDIO_MODE_THREAD,           \/**< Use dedicated thread          *\/$/;"	e	enum:audio_mode
AUDIO_SAMPSZ	baresip/src/audio.c	/^	AUDIO_SAMPSZ    = 3*1920  \/* Max samples, 48000Hz 2ch at 60ms *\/$/;"	e	enum:__anon10	file:
AUFILE_READ	rem-0.5.2/include/rem_aufile.h	/^	AUFILE_READ,$/;"	e	enum:aufile_mode
AUFILE_WRITE	rem-0.5.2/include/rem_aufile.h	/^	AUFILE_WRITE,$/;"	e	enum:aufile_mode
AUFMT_FLOAT	rem-0.5.2/include/rem_au.h	/^	AUFMT_FLOAT,  \/**< Float 32 bit (CPU endian)                   *\/$/;"	e	enum:aufmt
AUFMT_PCMA	rem-0.5.2/include/rem_au.h	/^	AUFMT_PCMA,   \/**< G.711 A-law       *\/$/;"	e	enum:aufmt
AUFMT_PCMU	rem-0.5.2/include/rem_au.h	/^	AUFMT_PCMU,   \/**< G.711 U-law       *\/$/;"	e	enum:aufmt
AUFMT_S16LE	rem-0.5.2/include/rem_au.h	/^	AUFMT_S16LE,  \/**< Signed 16-bit PCM *\/$/;"	e	enum:aufmt
AUFMT_S24_3LE	rem-0.5.2/include/rem_au.h	/^	AUFMT_S24_3LE,\/**< Signed 24bit Little Endian in 3bytes format *\/$/;"	e	enum:aufmt
AULEVEL_MAX	baresip/include/baresip.h	77;"	d
AULEVEL_MIN	baresip/include/baresip.h	76;"	d
AUTH_ANSWER	re-0.5.6/src/dns/hdr.c	/^	AUTH_ANSWER         = 10,$/;"	e	enum:__anon99	file:
AUTO	baresip/modules/mpa/mpa.h	/^	enum { AUTO=0, STEREO, JOINT_STEREO, SINGLE_CHANNEL, DUAL_CHANNEL }$/;"	e	enum:mpa_param::__anon28
AVCodecID	baresip/modules/avcodec/avcodec.h	9;"	d
AVCodecID	baresip/modules/avformat/avformat.c	46;"	d	file:
AVMEDIA_TYPE_VIDEO	baresip/modules/avformat/avformat.c	41;"	d	file:
AV_CODEC_ID_H263	baresip/modules/avcodec/avcodec.h	12;"	d
AV_CODEC_ID_H264	baresip/modules/avcodec/avcodec.h	13;"	d
AV_CODEC_ID_MPEG4	baresip/modules/avcodec/avcodec.h	14;"	d
AV_CODEC_ID_NONE	baresip/modules/avcodec/avcodec.h	11;"	d
AV_CODEC_ID_NONE	baresip/modules/avformat/avformat.c	47;"	d	file:
AV_PIX_FMT_NV12	baresip/modules/avcodec/decode.c	22;"	d	file:
AV_PIX_FMT_NV12	baresip/modules/avcodec/encode.c	25;"	d	file:
AV_PIX_FMT_YUV420P	baresip/modules/avcodec/decode.c	20;"	d	file:
AV_PIX_FMT_YUV420P	baresip/modules/avcodec/encode.c	24;"	d	file:
AV_PIX_FMT_YUV420P	baresip/modules/avformat/avformat.c	52;"	d	file:
AV_PIX_FMT_YUV420P	baresip/modules/h265/decode.c	16;"	d	file:
AV_PIX_FMT_YUVJ420P	baresip/modules/avcodec/decode.c	21;"	d	file:
AV_PIX_FMT_YUVJ420P	baresip/modules/avformat/avformat.c	53;"	d	file:
BARESIP_FLAGS	baresip/debian/rules	/^BARESIP_FLAGS := MOD_AUTODETECT=1$/;"	m
BARESIP_FRAMESIZE	baresip/modules/mpa/mpa.h	10;"	d
BARESIP_H__	baresip/include/baresip.h	8;"	d
BARESIP_VERSION	baresip/include/baresip.h	16;"	d
BEHAVIOUR_ANSWER	baresip/test/call.c	/^	BEHAVIOUR_ANSWER = 0,$/;"	e	enum:behaviour	file:
BEHAVIOUR_PROGRESS	baresip/test/call.c	/^	BEHAVIOUR_PROGRESS,$/;"	e	enum:behaviour	file:
BEHAVIOUR_REJECT	baresip/test/call.c	/^	BEHAVIOUR_REJECT$/;"	e	enum:behaviour	file:
BFCP_ACCEPTED	re-0.5.6/include/re_bfcp.h	/^	BFCP_ACCEPTED  = 2,$/;"	e	enum:bfcp_reqstat
BFCP_ATTR_HDR_SIZE	re-0.5.6/src/bfcp/attr.c	/^	BFCP_ATTR_HDR_SIZE = 2,$/;"	e	enum:__anon134	file:
BFCP_BAD_LENGTH	re-0.5.6/include/re_bfcp.h	/^	BFCP_BAD_LENGTH             = 13,$/;"	e	enum:bfcp_err
BFCP_BENEFICIARY_ID	re-0.5.6/include/re_bfcp.h	/^	BFCP_BENEFICIARY_ID     =  1,$/;"	e	enum:bfcp_attrib
BFCP_BENEFICIARY_INFO	re-0.5.6/include/re_bfcp.h	/^	BFCP_BENEFICIARY_INFO   = 14,$/;"	e	enum:bfcp_attrib
BFCP_CANCELLED	re-0.5.6/include/re_bfcp.h	/^	BFCP_CANCELLED = 5,$/;"	e	enum:bfcp_reqstat
BFCP_CHAIR_ACTION	re-0.5.6/include/re_bfcp.h	/^	BFCP_CHAIR_ACTION         =  9,$/;"	e	enum:bfcp_prim
BFCP_CHAIR_ACTION_ACK	re-0.5.6/include/re_bfcp.h	/^	BFCP_CHAIR_ACTION_ACK     = 10,$/;"	e	enum:bfcp_prim
BFCP_CONF_NOT_EXIST	re-0.5.6/include/re_bfcp.h	/^	BFCP_CONF_NOT_EXIST         = 1,$/;"	e	enum:bfcp_err
BFCP_DENIED	re-0.5.6/include/re_bfcp.h	/^	BFCP_DENIED    = 4,$/;"	e	enum:bfcp_reqstat
BFCP_DTLS	re-0.5.6/include/re_bfcp.h	/^	BFCP_DTLS,$/;"	e	enum:bfcp_transp
BFCP_ENCODE_HANDLER	re-0.5.6/include/re_bfcp.h	/^	BFCP_ENCODE_HANDLER     = 1<<8,$/;"	e	enum:bfcp_attrib
BFCP_ERROR	re-0.5.6/include/re_bfcp.h	/^	BFCP_ERROR                = 13,$/;"	e	enum:bfcp_prim
BFCP_ERROR_CODE	re-0.5.6/include/re_bfcp.h	/^	BFCP_ERROR_CODE         =  6,$/;"	e	enum:bfcp_attrib
BFCP_ERROR_INFO	re-0.5.6/include/re_bfcp.h	/^	BFCP_ERROR_INFO         =  7,$/;"	e	enum:bfcp_attrib
BFCP_FLOOR_ID	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_ID           =  2,$/;"	e	enum:bfcp_attrib
BFCP_FLOOR_QUERY	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_QUERY          =  7,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_RELEASE	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_RELEASE        =  2,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_REQUEST	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQUEST        =  1,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_REQUEST_ID	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQUEST_ID   =  3,$/;"	e	enum:bfcp_attrib
BFCP_FLOOR_REQUEST_QUERY	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQUEST_QUERY  =  3,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_REQUEST_STATUS	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQUEST_STATUS =  4,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_REQ_ID_NOT_EXIST	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQ_ID_NOT_EXIST = 7,$/;"	e	enum:bfcp_err
BFCP_FLOOR_REQ_INFO	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQ_INFO     = 15,$/;"	e	enum:bfcp_attrib
BFCP_FLOOR_REQ_STATUS	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQ_STATUS   = 17,$/;"	e	enum:bfcp_attrib
BFCP_FLOOR_REQ_STATUS_ACK	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_REQ_STATUS_ACK = 14,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_STATUS	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_STATUS         =  8,$/;"	e	enum:bfcp_prim
BFCP_FLOOR_STATUS_ACK	re-0.5.6/include/re_bfcp.h	/^	BFCP_FLOOR_STATUS_ACK     = 15,$/;"	e	enum:bfcp_prim
BFCP_GENERIC_ERROR	re-0.5.6/include/re_bfcp.h	/^	BFCP_GENERIC_ERROR          = 14,$/;"	e	enum:bfcp_err
BFCP_GOODBYE	re-0.5.6/include/re_bfcp.h	/^	BFCP_GOODBYE              = 16,$/;"	e	enum:bfcp_prim
BFCP_GOODBYE_ACK	re-0.5.6/include/re_bfcp.h	/^	BFCP_GOODBYE_ACK          = 17,$/;"	e	enum:bfcp_prim
BFCP_GRANTED	re-0.5.6/include/re_bfcp.h	/^	BFCP_GRANTED   = 3,$/;"	e	enum:bfcp_reqstat
BFCP_HDR_SIZE	re-0.5.6/src/bfcp/msg.c	/^	BFCP_HDR_SIZE = 12,$/;"	e	enum:__anon133	file:
BFCP_HELLO	re-0.5.6/include/re_bfcp.h	/^	BFCP_HELLO                = 11,$/;"	e	enum:bfcp_prim
BFCP_HELLO_ACK	re-0.5.6/include/re_bfcp.h	/^	BFCP_HELLO_ACK            = 12,$/;"	e	enum:bfcp_prim
BFCP_INVALID_FLOOR_ID	re-0.5.6/include/re_bfcp.h	/^	BFCP_INVALID_FLOOR_ID       = 6,$/;"	e	enum:bfcp_err
BFCP_MANDATORY	re-0.5.6/include/re_bfcp.h	/^	BFCP_MANDATORY          = 1<<7,$/;"	e	enum:bfcp_attrib
BFCP_MAX_FLOOR_REQ_REACHED	re-0.5.6/include/re_bfcp.h	/^	BFCP_MAX_FLOOR_REQ_REACHED  = 8,$/;"	e	enum:bfcp_err
BFCP_OVERALL_REQ_STATUS	re-0.5.6/include/re_bfcp.h	/^	BFCP_OVERALL_REQ_STATUS = 18,$/;"	e	enum:bfcp_attrib
BFCP_PARSE_ERROR	re-0.5.6/include/re_bfcp.h	/^	BFCP_PARSE_ERROR            = 10,$/;"	e	enum:bfcp_err
BFCP_PART_PROV_INFO	re-0.5.6/include/re_bfcp.h	/^	BFCP_PART_PROV_INFO     =  8,$/;"	e	enum:bfcp_attrib
BFCP_PENDING	re-0.5.6/include/re_bfcp.h	/^	BFCP_PENDING   = 1,$/;"	e	enum:bfcp_reqstat
BFCP_PRIORITY	re-0.5.6/include/re_bfcp.h	/^	BFCP_PRIORITY           =  4,$/;"	e	enum:bfcp_attrib
BFCP_PRIO_HIGH	re-0.5.6/include/re_bfcp.h	/^	BFCP_PRIO_HIGH    = 3,$/;"	e	enum:bfcp_priority
BFCP_PRIO_HIGHEST	re-0.5.6/include/re_bfcp.h	/^	BFCP_PRIO_HIGHEST = 4$/;"	e	enum:bfcp_priority
BFCP_PRIO_LOW	re-0.5.6/include/re_bfcp.h	/^	BFCP_PRIO_LOW     = 1,$/;"	e	enum:bfcp_priority
BFCP_PRIO_LOWEST	re-0.5.6/include/re_bfcp.h	/^	BFCP_PRIO_LOWEST  = 0,$/;"	e	enum:bfcp_priority
BFCP_PRIO_NORMAL	re-0.5.6/include/re_bfcp.h	/^	BFCP_PRIO_NORMAL  = 2,$/;"	e	enum:bfcp_priority
BFCP_RELEASED	re-0.5.6/include/re_bfcp.h	/^	BFCP_RELEASED  = 6,$/;"	e	enum:bfcp_reqstat
BFCP_REQUESTED_BY_INFO	re-0.5.6/include/re_bfcp.h	/^	BFCP_REQUESTED_BY_INFO  = 16,$/;"	e	enum:bfcp_attrib
BFCP_REQUEST_STATUS	re-0.5.6/include/re_bfcp.h	/^	BFCP_REQUEST_STATUS     =  5,$/;"	e	enum:bfcp_attrib
BFCP_REVOKED	re-0.5.6/include/re_bfcp.h	/^	BFCP_REVOKED   = 7$/;"	e	enum:bfcp_reqstat
BFCP_STATUS_INFO	re-0.5.6/include/re_bfcp.h	/^	BFCP_STATUS_INFO        =  9,$/;"	e	enum:bfcp_attrib
BFCP_SUPPORTED_ATTRS	re-0.5.6/include/re_bfcp.h	/^	BFCP_SUPPORTED_ATTRS    = 10,$/;"	e	enum:bfcp_attrib
BFCP_SUPPORTED_PRIMS	re-0.5.6/include/re_bfcp.h	/^	BFCP_SUPPORTED_PRIMS    = 11,$/;"	e	enum:bfcp_attrib
BFCP_T1	re-0.5.6/src/bfcp/request.c	/^	BFCP_T1  = 500,$/;"	e	enum:__anon135	file:
BFCP_T2	re-0.5.6/src/bfcp/reply.c	/^	BFCP_T2  = 10000,$/;"	e	enum:__anon136	file:
BFCP_TXC	re-0.5.6/src/bfcp/request.c	/^	BFCP_TXC = 4,$/;"	e	enum:__anon135	file:
BFCP_UDP	re-0.5.6/include/re_bfcp.h	/^	BFCP_UDP,$/;"	e	enum:bfcp_transp
BFCP_UNAUTH_OPERATION	re-0.5.6/include/re_bfcp.h	/^	BFCP_UNAUTH_OPERATION       = 5,$/;"	e	enum:bfcp_err
BFCP_UNKNOWN_MAND_ATTR	re-0.5.6/include/re_bfcp.h	/^	BFCP_UNKNOWN_MAND_ATTR      = 4,$/;"	e	enum:bfcp_err
BFCP_UNKNOWN_PRIM	re-0.5.6/include/re_bfcp.h	/^	BFCP_UNKNOWN_PRIM           = 3,$/;"	e	enum:bfcp_err
BFCP_UNSUPPORTED_VERSION	re-0.5.6/include/re_bfcp.h	/^	BFCP_UNSUPPORTED_VERSION    = 12,$/;"	e	enum:bfcp_err
BFCP_USER_DISP_NAME	re-0.5.6/include/re_bfcp.h	/^	BFCP_USER_DISP_NAME     = 12,$/;"	e	enum:bfcp_attrib
BFCP_USER_NOT_EXIST	re-0.5.6/include/re_bfcp.h	/^	BFCP_USER_NOT_EXIST         = 2,$/;"	e	enum:bfcp_err
BFCP_USER_QUERY	re-0.5.6/include/re_bfcp.h	/^	BFCP_USER_QUERY           =  5,$/;"	e	enum:bfcp_prim
BFCP_USER_STATUS	re-0.5.6/include/re_bfcp.h	/^	BFCP_USER_STATUS          =  6,$/;"	e	enum:bfcp_prim
BFCP_USER_URI	re-0.5.6/include/re_bfcp.h	/^	BFCP_USER_URI           = 13,$/;"	e	enum:bfcp_attrib
BFCP_USE_DTLS	re-0.5.6/include/re_bfcp.h	/^	BFCP_USE_DTLS               = 11,$/;"	e	enum:bfcp_err
BFCP_USE_TLS	re-0.5.6/include/re_bfcp.h	/^	BFCP_USE_TLS                = 9,$/;"	e	enum:bfcp_err
BFCP_VER1	re-0.5.6/include/re_bfcp.h	/^	BFCP_VER1 = 1,$/;"	e	enum:__anon164
BFCP_VER2	re-0.5.6/include/re_bfcp.h	/^	BFCP_VER2 = 2,$/;"	e	enum:__anon164
BIN	baresip/Makefile	/^BIN	:= $(PROJECT)$(BIN_SUFFIX)$/;"	m
BINDIR	baresip/Makefile	/^BINDIR	:= $(PREFIX)\/bin$/;"	m
BIN_SUFFIX	re-0.5.6/mk/re.mk	/^	BIN_SUFFIX	:= .exe$/;"	m
BIN_SUFFIX	re-0.5.6/mk/re.mk	/^BIN_SUFFIX	:=$/;"	m
BITS_MASK	re-0.5.6/include/re_bitv.h	/^	BITS_MASK = (BITS_SZ-1)$/;"	e	enum:__anon169
BITS_SZ	re-0.5.6/include/re_bitv.h	/^	BITS_SZ   = (8*sizeof(bitv_t)),$/;"	e	enum:__anon169
BITV_DECL	re-0.5.6/include/re_bitv.h	16;"	d
BITV_NELEM	re-0.5.6/include/re_bitv.h	15;"	d
BLOCK_SIZE	rem-0.5.2/src/dtmf/dec.c	12;"	d	file:
BREAKPOINT	re-0.5.6/include/re_types.h	139;"	d
BREAKPOINT	re-0.5.6/include/re_types.h	141;"	d
BUFC	baresip/modules/coreaudio/player.c	16;"	d	file:
BUFC	baresip/modules/coreaudio/player.c	18;"	d	file:
BUFC	baresip/modules/coreaudio/recorder.c	15;"	d	file:
BUFSIZE	re-0.5.6/src/net/linux/rt.c	/^enum {BUFSIZE = 8192};$/;"	e	enum:__anon115	file:
BUFSIZE_MAX	re-0.5.6/src/http/client.c	/^	BUFSIZE_MAX  = 524288,$/;"	e	enum:__anon107	file:
BUFSIZE_MAX	re-0.5.6/src/http/server.c	/^	BUFSIZE_MAX  = 524288,$/;"	e	enum:__anon105	file:
BUFSIZE_MAX	re-0.5.6/src/websock/websock.c	/^	BUFSIZE_MAX   = 131072,$/;"	e	enum:__anon130	file:
BUF_CAST	re-0.5.6/src/net/sockopt.c	22;"	d	file:
BUF_CAST	re-0.5.6/src/net/sockopt.c	24;"	d	file:
BUF_CAST	re-0.5.6/src/tcp/tcp.c	41;"	d	file:
BUF_CAST	re-0.5.6/src/tcp/tcp.c	46;"	d	file:
BUF_CAST	re-0.5.6/src/udp/udp.c	43;"	d	file:
BUF_CAST	re-0.5.6/src/udp/udp.c	48;"	d	file:
BUILD	re-0.5.6/mk/re.mk	/^BUILD   := build-$(ARCH)$/;"	m
BURST_MAX	baresip/src/video.c	/^	BURST_MAX       = 8192,                \/**< in bytes            *\/$/;"	e	enum:__anon16	file:
BYTE_ORDER	re-0.5.6/src/md5/md5.c	57;"	d	file:
BYTE_ORDER	re-0.5.6/src/md5/md5.c	59;"	d	file:
BYTE_ORDER	re-0.5.6/src/md5/md5.c	61;"	d	file:
BufferCB	baresip/modules/dshow/dshow.cpp	/^	STDMETHOD(BufferCB) (double sample_time, BYTE *buf, long buf_len)$/;"	f	class:Grabber
BufferQueue	baresip/modules/opensles/player.c	/^	SLAndroidSimpleBufferQueueItf BufferQueue;$/;"	m	struct:auplay_st	file:
CALLING	re-0.5.6/src/sip/ctrans.c	/^	CALLING,$/;"	e	enum:state	file:
CALL_EVENT_CLOSED	baresip/include/baresip.h	/^	CALL_EVENT_CLOSED,$/;"	e	enum:call_event
CALL_EVENT_ESTABLISHED	baresip/include/baresip.h	/^	CALL_EVENT_ESTABLISHED,$/;"	e	enum:call_event
CALL_EVENT_INCOMING	baresip/include/baresip.h	/^	CALL_EVENT_INCOMING,$/;"	e	enum:call_event
CALL_EVENT_PROGRESS	baresip/include/baresip.h	/^	CALL_EVENT_PROGRESS,$/;"	e	enum:call_event
CALL_EVENT_RINGING	baresip/include/baresip.h	/^	CALL_EVENT_RINGING,$/;"	e	enum:call_event
CALL_EVENT_TRANSFER	baresip/include/baresip.h	/^	CALL_EVENT_TRANSFER,$/;"	e	enum:call_event
CALL_EVENT_TRANSFER_FAILED	baresip/include/baresip.h	/^	CALL_EVENT_TRANSFER_FAILED,$/;"	e	enum:call_event
CALL_LINENUM_MAX	baresip/src/core.h	/^	CALL_LINENUM_MAX  = 256$/;"	e	enum:__anon3
CALL_LINENUM_MIN	baresip/src/core.h	/^	CALL_LINENUM_MIN  =   1,$/;"	e	enum:__anon3
CAND_PRIO_HOST	re-0.5.6/src/ice/util.c	/^	CAND_PRIO_HOST  = 126$/;"	e	enum:__anon113	file:
CAND_PRIO_PRFLX	re-0.5.6/src/ice/util.c	/^	CAND_PRIO_PRFLX = 110,$/;"	e	enum:__anon113	file:
CAND_PRIO_RELAY	re-0.5.6/src/ice/util.c	/^	CAND_PRIO_RELAY =   0,$/;"	e	enum:__anon113	file:
CAND_PRIO_SRFLX	re-0.5.6/src/ice/util.c	/^	CAND_PRIO_SRFLX = 100,$/;"	e	enum:__anon113	file:
CBU	rem-0.5.2/src/vidconv/vconv.c	/^static const int16_t CBU[256] = {$/;"	v	file:
CC	re-0.5.6/mk/re.mk	/^	CC := gcc$/;"	m
CC	re-0.5.6/mk/re.mk	/^CC	:= $(CCACHE) $(CC)$/;"	m
CCACHE	re-0.5.6/mk/re.mk	/^CCACHE	:= $(shell [ -e \/usr\/bin\/ccache ] 2>\/dev\/null \\$/;"	m
CCACHE	re-0.5.6/mk/re.mk	/^CCACHE :=$/;"	m
CC_FULLVER	re-0.5.6/mk/re.mk	/^	CC_FULLVER := $(shell echo "$(CC_LONGVER)"|head -n 1| \\$/;"	m
CC_LONGVER	re-0.5.6/mk/re.mk	/^CC_LONGVER := $(shell if $(CC) -v 2>\/dev\/null; then \\$/;"	m
CC_NAME	re-0.5.6/mk/re.mk	/^	CC_NAME     := $(CC)$/;"	m
CC_NAME	re-0.5.6/mk/re.mk	/^	CC_NAME := clang$/;"	m
CC_NAME	re-0.5.6/mk/re.mk	/^	CC_NAME := gcc$/;"	m
CC_NAME	re-0.5.6/mk/re.mk	/^	CC_NAME := icc$/;"	m
CC_NAME	re-0.5.6/mk/re.mk	/^	CC_NAME := suncc$/;"	m
CC_SHORTVER	re-0.5.6/mk/re.mk	/^	CC_SHORTVER := $(shell echo "$(CC_FULLVER)" | cut -d. -f1,2 )$/;"	m
CC_SHORTVER	re-0.5.6/mk/re.mk	/^	CC_SHORTVER := $(shell echo "$(CC_LONGVER)"|head -n 1| \\$/;"	m
CC_SHORTVER	re-0.5.6/mk/re.mk	/^	CC_SHORTVER := $(shell echo "$(CC_VER)" | cut -d" " -f 2| \\$/;"	m
CC_SHORTVER	re-0.5.6/mk/re.mk	/^	CC_SHORTVER := unknown$/;"	m
CC_VER	re-0.5.6/mk/re.mk	/^	CC_VER      := unknown$/;"	m
CC_VER	re-0.5.6/mk/re.mk	/^	CC_VER := $(CC) $(CC_FULLVER)$/;"	m
CC_VER	re-0.5.6/mk/re.mk	/^	CC_VER := $(CC) $(CC_SHORTVER)$/;"	m
CC_VER	re-0.5.6/mk/re.mk	/^	CC_VER := $(word 1,$(CC)) $(shell $(CC) - --version|head -n 1|\\$/;"	m
CGU	rem-0.5.2/src/vidconv/vconv.c	/^static const int16_t CGU[256] = {$/;"	v	file:
CGV	rem-0.5.2/src/vidconv/vconv.c	/^static const int16_t CGV[256] = {$/;"	v	file:
CHAN_HASH_SIZE	re-0.5.6/src/turn/turnc.c	/^	CHAN_HASH_SIZE = 16,$/;"	e	enum:__anon121	file:
CHAN_HDR_SIZE	re-0.5.6/src/turn/turnc.h	/^	CHAN_HDR_SIZE = 4,$/;"	e	enum:__anon119
CHAN_LIFETIME	re-0.5.6/src/turn/chan.c	/^	CHAN_LIFETIME = 600,$/;"	e	enum:__anon120	file:
CHAN_NUMB_MAX	re-0.5.6/src/turn/chan.c	/^	CHAN_NUMB_MAX = 0x7fff$/;"	e	enum:__anon120	file:
CHAN_NUMB_MIN	re-0.5.6/src/turn/chan.c	/^	CHAN_NUMB_MIN = 0x4000,$/;"	e	enum:__anon120	file:
CHAN_REFRESH	re-0.5.6/src/turn/chan.c	/^	CHAN_REFRESH = 250,$/;"	e	enum:__anon120	file:
CLANG_IGNORE	re-0.5.6/mk/re.mk	/^CLANG_IGNORE  :=$/;"	m
CLANG_OPTIONS	re-0.5.6/mk/re.mk	/^CLANG_OPTIONS := -Iinclude -I$(LIBRE_INC) $(CFLAGS)$/;"	m
CLOSED	re-0.5.6/src/websock/websock.c	/^	CLOSED,$/;"	e	enum:websock_state	file:
CLOSING	re-0.5.6/src/websock/websock.c	/^	CLOSING,$/;"	e	enum:websock_state	file:
CMD_IPRM	baresip/include/baresip.h	/^	CMD_IPRM = CMD_PRM | CMD_PROG,  \/**< Interactive parameter  *\/$/;"	e	enum:__anon25
CMD_PRM	baresip/include/baresip.h	/^	CMD_PRM  = (1<<0),              \/**< Command with parameter *\/$/;"	e	enum:__anon25
CMD_PROG	baresip/include/baresip.h	/^	CMD_PROG = (1<<1),              \/**< Show progress          *\/$/;"	e	enum:__anon25
CNAME_RECURSE_MAX	re-0.5.6/src/dns/rrlist.c	/^	CNAME_RECURSE_MAX = 16,$/;"	e	enum:__anon100	file:
CODEC2_MODE	baresip/modules/codec2/codec2.c	/^	CODEC2_MODE = CODEC2_MODE_2400$/;"	e	enum:__anon29	file:
CODED_OCTETS	baresip/modules/bv32/bv32.c	/^	CODED_OCTETS = 20$/;"	e	enum:__anon73	file:
COMMENTS	baresip/modules/gtk/gtk_mod.c	25;"	d	file:
COMPID_MAX	re-0.5.6/src/ice/comp.c	/^enum {COMPID_MIN = 1, COMPID_MAX = 255};$/;"	e	enum:__anon114	file:
COMPID_MIN	re-0.5.6/src/ice/comp.c	/^enum {COMPID_MIN = 1, COMPID_MAX = 255};$/;"	e	enum:__anon114	file:
COMPLETED	re-0.5.6/src/sip/ctrans.c	/^	COMPLETED,$/;"	e	enum:state	file:
COMPLETED	re-0.5.6/src/sip/strans.c	/^	COMPLETED,$/;"	e	enum:state	file:
COMPLETE_WAIT	re-0.5.6/src/sip/ctrans.c	/^	COMPLETE_WAIT = 32000,$/;"	e	enum:__anon123	file:
COMP_LOOP	re-0.5.6/src/dns/dname.c	18;"	d	file:
COMP_MASK	re-0.5.6/src/dns/dname.c	16;"	d	file:
CONFIRMED	re-0.5.6/src/sip/strans.c	/^	CONFIRMED,$/;"	e	enum:state	file:
CONNECTING	re-0.5.6/src/websock/websock.c	/^	CONNECTING,$/;"	e	enum:websock_state	file:
CONN_BSIZE	re-0.5.6/src/http/client.c	/^	CONN_BSIZE   = 256,$/;"	e	enum:__anon107	file:
CONN_TIMEOUT	re-0.5.6/src/dns/client.c	/^	CONN_TIMEOUT = 10 * 1000,$/;"	e	enum:__anon101	file:
CONN_TIMEOUT	re-0.5.6/src/http/client.c	/^	CONN_TIMEOUT = 30000,$/;"	e	enum:__anon107	file:
CONS_PORT	baresip/modules/cons/cons.c	/^enum {CONS_PORT = 5555};$/;"	e	enum:__anon87	file:
COPYRIGHT	baresip/modules/gtk/gtk_mod.c	24;"	d	file:
CROSS_COMPILE	re-0.5.6/mk/re.mk	/^	CROSS_COMPILE	?= $(MACHINE)-$/;"	m
CROSS_COMPILE	re-0.5.6/mk/re.mk	/^	CROSS_COMPILE :=$/;"	m
CRV	rem-0.5.2/src/vidconv/vconv.c	/^static const int16_t CRV[256] = {$/;"	v	file:
CUTOFF	rem-0.5.2/util/genfir.py	/^CUTOFF = 8000.0   # Hz$/;"	v
DBG_ALERT	re-0.5.6/include/re_dbg.h	/^	DBG_ALERT       = 1,       \/**< Action must be taken immediately *\/$/;"	e	enum:__anon166
DBG_ALL	re-0.5.6/include/re_dbg.h	/^	DBG_ALL  = DBG_TIME|DBG_ANSI  \/**< All flags enabled      *\/$/;"	e	enum:dbg_flags
DBG_ANSI	re-0.5.6/include/re_dbg.h	/^	DBG_ANSI = 1<<1,              \/**< Print ANSI color codes *\/$/;"	e	enum:dbg_flags
DBG_CRIT	re-0.5.6/include/re_dbg.h	/^	DBG_CRIT        = 2,       \/**< Critical conditions              *\/$/;"	e	enum:__anon166
DBG_DEBUG	re-0.5.6/include/re_dbg.h	/^	DBG_DEBUG       = 7        \/**< Debug-level messages             *\/$/;"	e	enum:__anon166
DBG_EMERG	re-0.5.6/include/re_dbg.h	/^	DBG_EMERG       = 0,       \/**< System is unusable               *\/$/;"	e	enum:__anon166
DBG_ERR	re-0.5.6/include/re_dbg.h	/^	DBG_ERR         = 3,       \/**< Error conditions                 *\/$/;"	e	enum:__anon166
DBG_INFO	re-0.5.6/include/re_dbg.h	/^	DBG_INFO        = 6,       \/**< Informational                    *\/$/;"	e	enum:__anon166
DBG_NONE	re-0.5.6/include/re_dbg.h	/^	DBG_NONE = 0,                 \/**< No debug flags         *\/$/;"	e	enum:dbg_flags
DBG_NOTICE	re-0.5.6/include/re_dbg.h	/^	DBG_NOTICE      = 5,       \/**< Normal but significant condition *\/$/;"	e	enum:__anon166
DBG_TIME	re-0.5.6/include/re_dbg.h	/^	DBG_TIME = 1<<0,              \/**< Print timestamp flag   *\/$/;"	e	enum:dbg_flags
DBG_WARNING	re-0.5.6/include/re_dbg.h	/^	DBG_WARNING     = 4,       \/**< Warning conditions               *\/$/;"	e	enum:__anon166
DEBUG	baresip/modules/mpa/mpa.h	12;"	d
DEBUG_INFO	re-0.5.6/include/re_dbg.h	119;"	d
DEBUG_INFO	re-0.5.6/include/re_dbg.h	121;"	d
DEBUG_INFO	re-0.5.6/include/re_dbg.h	146;"	d
DEBUG_INFO	re-0.5.6/include/re_dbg.h	148;"	d
DEBUG_INFO	re-0.5.6/include/re_dbg.h	90;"	d
DEBUG_INFO	re-0.5.6/include/re_dbg.h	93;"	d
DEBUG_LEVEL	baresip/modules/syslog/syslog.c	20;"	d	file:
DEBUG_LEVEL	baresip/src/conf.c	24;"	d	file:
DEBUG_LEVEL	baresip/test/account.c	13;"	d	file:
DEBUG_LEVEL	baresip/test/aulevel.c	13;"	d	file:
DEBUG_LEVEL	baresip/test/mock/dnssrv.c	12;"	d	file:
DEBUG_LEVEL	baresip/test/mos.c	12;"	d	file:
DEBUG_LEVEL	baresip/test/sip/domain.c	11;"	d	file:
DEBUG_LEVEL	baresip/test/sip/sipsrv.c	15;"	d	file:
DEBUG_LEVEL	baresip/test/video.c	13;"	d	file:
DEBUG_LEVEL	re-0.5.6/include/re_dbg.h	43;"	d
DEBUG_LEVEL	re-0.5.6/src/dbg/dbg.c	22;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/dns/client.c	22;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/dns/ns.c	20;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/dns/win32/srv.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/cand.c	22;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/candpair.c	20;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/chklist.c	20;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/comp.c	23;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/connchk.c	20;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/icem.c	20;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/icesdp.c	21;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/stunsrv.c	21;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/ice/util.c	27;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/jbuf/jbuf.c	16;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/list/list.c	12;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/lock/lock.c	15;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/lock/rwlock.c	14;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/main/epoll.c	15;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/main/main.c	53;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/mbuf/mbuf.c	14;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/mem/mem.c	20;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/mod/dl.c	13;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/mod/mod.c	18;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/mod/win32/dll.c	12;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/natbd/filtering.c	17;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/natbd/genalg.c	17;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/natbd/hairpinning.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/natbd/lifetime.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/natbd/mapping.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/if.c	14;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/ifaddrs.c	18;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/linux/rt.c	26;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/net.c	23;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/posix/pif.c	28;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/sock.c	13;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/sockopt.c	16;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/net/win32/wif.c	15;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/rtp/fb.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/rtp/pkt.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/rtp/rtp.c	21;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/rtp/sdes.c	18;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/rtp/sess.c	28;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/sa/ntop.c	34;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/sa/pton.c	30;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/sa/sa.c	17;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/stun/dnsdisc.c	18;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/stun/keepalive.c	17;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/sys/rand.c	19;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/tcp/tcp.c	35;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/tls/openssl/tls.c	34;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/tls/openssl/tls_tcp.c	23;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/tls/openssl/tls_udp.c	25;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/tmr/tmr.c	27;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/turn/turnc.c	25;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/udp/udp.c	37;"	d	file:
DEBUG_LEVEL	re-0.5.6/src/uri/uric.c	13;"	d	file:
DEBUG_MODULE	baresip/modules/syslog/syslog.c	19;"	d	file:
DEBUG_MODULE	baresip/src/conf.c	23;"	d	file:
DEBUG_MODULE	baresip/test/account.c	12;"	d	file:
DEBUG_MODULE	baresip/test/aulevel.c	12;"	d	file:
DEBUG_MODULE	baresip/test/mock/dnssrv.c	11;"	d	file:
DEBUG_MODULE	baresip/test/mos.c	11;"	d	file:
DEBUG_MODULE	baresip/test/sip/domain.c	10;"	d	file:
DEBUG_MODULE	baresip/test/sip/sipsrv.c	14;"	d	file:
DEBUG_MODULE	baresip/test/video.c	12;"	d	file:
DEBUG_MODULE	re-0.5.6/include/re_dbg.h	38;"	d
DEBUG_MODULE	re-0.5.6/src/dbg/dbg.c	21;"	d	file:
DEBUG_MODULE	re-0.5.6/src/dns/client.c	21;"	d	file:
DEBUG_MODULE	re-0.5.6/src/dns/ns.c	19;"	d	file:
DEBUG_MODULE	re-0.5.6/src/dns/win32/srv.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/cand.c	21;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/candpair.c	19;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/chklist.c	19;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/comp.c	22;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/connchk.c	19;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/icem.c	19;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/icesdp.c	20;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/stunsrv.c	20;"	d	file:
DEBUG_MODULE	re-0.5.6/src/ice/util.c	26;"	d	file:
DEBUG_MODULE	re-0.5.6/src/jbuf/jbuf.c	15;"	d	file:
DEBUG_MODULE	re-0.5.6/src/list/list.c	11;"	d	file:
DEBUG_MODULE	re-0.5.6/src/lock/lock.c	14;"	d	file:
DEBUG_MODULE	re-0.5.6/src/lock/rwlock.c	13;"	d	file:
DEBUG_MODULE	re-0.5.6/src/main/epoll.c	14;"	d	file:
DEBUG_MODULE	re-0.5.6/src/main/main.c	52;"	d	file:
DEBUG_MODULE	re-0.5.6/src/mbuf/mbuf.c	13;"	d	file:
DEBUG_MODULE	re-0.5.6/src/mem/mem.c	19;"	d	file:
DEBUG_MODULE	re-0.5.6/src/mod/dl.c	12;"	d	file:
DEBUG_MODULE	re-0.5.6/src/mod/mod.c	17;"	d	file:
DEBUG_MODULE	re-0.5.6/src/mod/win32/dll.c	11;"	d	file:
DEBUG_MODULE	re-0.5.6/src/natbd/filtering.c	16;"	d	file:
DEBUG_MODULE	re-0.5.6/src/natbd/genalg.c	16;"	d	file:
DEBUG_MODULE	re-0.5.6/src/natbd/hairpinning.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/natbd/lifetime.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/natbd/mapping.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/if.c	13;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/ifaddrs.c	17;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/linux/rt.c	25;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/net.c	22;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/posix/pif.c	27;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/sock.c	12;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/sockopt.c	15;"	d	file:
DEBUG_MODULE	re-0.5.6/src/net/win32/wif.c	14;"	d	file:
DEBUG_MODULE	re-0.5.6/src/rtp/fb.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/rtp/pkt.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/rtp/rtp.c	20;"	d	file:
DEBUG_MODULE	re-0.5.6/src/rtp/sdes.c	17;"	d	file:
DEBUG_MODULE	re-0.5.6/src/rtp/sess.c	27;"	d	file:
DEBUG_MODULE	re-0.5.6/src/sa/ntop.c	33;"	d	file:
DEBUG_MODULE	re-0.5.6/src/sa/pton.c	29;"	d	file:
DEBUG_MODULE	re-0.5.6/src/sa/sa.c	16;"	d	file:
DEBUG_MODULE	re-0.5.6/src/stun/dnsdisc.c	17;"	d	file:
DEBUG_MODULE	re-0.5.6/src/stun/keepalive.c	16;"	d	file:
DEBUG_MODULE	re-0.5.6/src/sys/rand.c	18;"	d	file:
DEBUG_MODULE	re-0.5.6/src/tcp/tcp.c	34;"	d	file:
DEBUG_MODULE	re-0.5.6/src/tls/openssl/tls.c	33;"	d	file:
DEBUG_MODULE	re-0.5.6/src/tls/openssl/tls_tcp.c	22;"	d	file:
DEBUG_MODULE	re-0.5.6/src/tls/openssl/tls_udp.c	24;"	d	file:
DEBUG_MODULE	re-0.5.6/src/tmr/tmr.c	26;"	d	file:
DEBUG_MODULE	re-0.5.6/src/turn/turnc.c	24;"	d	file:
DEBUG_MODULE	re-0.5.6/src/udp/udp.c	36;"	d	file:
DEBUG_MODULE	re-0.5.6/src/uri/uric.c	12;"	d	file:
DEBUG_NOTICE	re-0.5.6/include/re_dbg.h	113;"	d
DEBUG_NOTICE	re-0.5.6/include/re_dbg.h	115;"	d
DEBUG_NOTICE	re-0.5.6/include/re_dbg.h	140;"	d
DEBUG_NOTICE	re-0.5.6/include/re_dbg.h	142;"	d
DEBUG_NOTICE	re-0.5.6/include/re_dbg.h	83;"	d
DEBUG_NOTICE	re-0.5.6/include/re_dbg.h	86;"	d
DEBUG_PRINTF	re-0.5.6/include/re_dbg.h	100;"	d
DEBUG_PRINTF	re-0.5.6/include/re_dbg.h	125;"	d
DEBUG_PRINTF	re-0.5.6/include/re_dbg.h	127;"	d
DEBUG_PRINTF	re-0.5.6/include/re_dbg.h	152;"	d
DEBUG_PRINTF	re-0.5.6/include/re_dbg.h	154;"	d
DEBUG_PRINTF	re-0.5.6/include/re_dbg.h	97;"	d
DEBUG_WARNING	re-0.5.6/include/re_dbg.h	107;"	d
DEBUG_WARNING	re-0.5.6/include/re_dbg.h	109;"	d
DEBUG_WARNING	re-0.5.6/include/re_dbg.h	134;"	d
DEBUG_WARNING	re-0.5.6/include/re_dbg.h	136;"	d
DEBUG_WARNING	re-0.5.6/include/re_dbg.h	76;"	d
DEBUG_WARNING	re-0.5.6/include/re_dbg.h	79;"	d
DECL_EXPORTS	baresip/include/baresip.h	1155;"	d
DECL_EXPORTS	baresip/include/baresip.h	1157;"	d
DECODE_MAXSZ	baresip/modules/av1/decode.c	/^	DECODE_MAXSZ = 524288,$/;"	e	enum:__anon40	file:
DECODE_MAXSZ	baresip/modules/avcodec/decode.c	/^	DECODE_MAXSZ = 524288,$/;"	e	enum:__anon34	file:
DECODE_MAXSZ	baresip/modules/h265/decode.c	/^	DECODE_MAXSZ = 524288,$/;"	e	enum:__anon62	file:
DECODE_MAXSZ	baresip/modules/vp8/decode.c	/^	DECODE_MAXSZ = 524288,$/;"	e	enum:__anon46	file:
DECODE_MAXSZ	baresip/modules/vp9/decode.c	/^	DECODE_MAXSZ = 524288,$/;"	e	enum:__anon52	file:
DEC_SIZE	re-0.5.6/src/fmt/print.c	/^	DEC_SIZE = 42,$/;"	e	enum:__anon132	file:
DEFAULT_EXPIRES	re-0.5.6/src/sipevent/subscribe.c	/^	DEFAULT_EXPIRES = 3600,$/;"	e	enum:__anon102	file:
DEFAULT_EXPIRES	re-0.5.6/src/sipreg/reg.c	/^	DEFAULT_EXPIRES = 3600,$/;"	e	enum:__anon148	file:
DEFAULT_GOP_SIZE	baresip/modules/avcodec/encode.c	/^	DEFAULT_GOP_SIZE =   10,$/;"	e	enum:__anon36	file:
DEFAULT_MAXFDS	re-0.5.6/src/main/main.c	/^	DEFAULT_MAXFDS = FD_SETSIZE$/;"	e	enum:__anon139	file:
DEFAULT_MODE	baresip/modules/ilbc/ilbc.c	/^	DEFAULT_MODE = 20, \/* 20ms or 30ms *\/$/;"	e	enum:__anon55	file:
DEFAULT_SIZE	re-0.5.6/src/mbuf/mbuf.c	/^enum {DEFAULT_SIZE=512};$/;"	e	enum:__anon108	file:
DESCR	baresip/Makefile	/^DESCR     := "Baresip is a modular SIP User-Agent with audio and video support"$/;"	m
DFLAGS	re-0.5.6/mk/re.mk	/^	DFLAGS		:= -MD$/;"	m
DFLAGS	re-0.5.6/mk/re.mk	/^	DFLAGS		= -MD -MF $(@:.o=.d) -MT $@$/;"	m
DFLAGS	re-0.5.6/mk/re.mk	/^	DFLAGS		= -MD$/;"	m
DIR_SEP	baresip/src/conf.c	36;"	d	file:
DIR_SEP	baresip/src/conf.c	38;"	d	file:
DNS_CLASS_IN	re-0.5.6/include/re_dns.h	/^	DNS_CLASS_IN   = 0x0001,$/;"	e	enum:__anon153
DNS_HEADER_SIZE	re-0.5.6/include/re_dns.h	/^	DNS_HEADER_SIZE = 12$/;"	e	enum:__anon149
DNS_OPCODE_IQUERY	re-0.5.6/include/re_dns.h	/^	DNS_OPCODE_IQUERY = 1,$/;"	e	enum:__anon150
DNS_OPCODE_NOTIFY	re-0.5.6/include/re_dns.h	/^	DNS_OPCODE_NOTIFY = 4$/;"	e	enum:__anon150
DNS_OPCODE_QUERY	re-0.5.6/include/re_dns.h	/^	DNS_OPCODE_QUERY  = 0,$/;"	e	enum:__anon150
DNS_OPCODE_STATUS	re-0.5.6/include/re_dns.h	/^	DNS_OPCODE_STATUS = 2,$/;"	e	enum:__anon150
DNS_PORT	re-0.5.6/include/re_dns.h	/^	DNS_PORT = 53,$/;"	e	enum:__anon149
DNS_QCLASS_ANY	re-0.5.6/include/re_dns.h	/^	DNS_QCLASS_ANY = 0x00ff$/;"	e	enum:__anon153
DNS_QTYPE_ANY	re-0.5.6/include/re_dns.h	/^	DNS_QTYPE_ANY  = 0x00ff$/;"	e	enum:__anon152
DNS_QTYPE_AXFR	re-0.5.6/include/re_dns.h	/^	DNS_QTYPE_AXFR = 0x00fc,$/;"	e	enum:__anon152
DNS_QTYPE_IXFR	re-0.5.6/include/re_dns.h	/^	DNS_QTYPE_IXFR = 0x00fb,$/;"	e	enum:__anon152
DNS_RCODE_FMT_ERR	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_FMT_ERR  = 1,$/;"	e	enum:__anon151
DNS_RCODE_NAME_ERR	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_NAME_ERR = 3,$/;"	e	enum:__anon151
DNS_RCODE_NOT_AUTH	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_NOT_AUTH = 9$/;"	e	enum:__anon151
DNS_RCODE_NOT_IMPL	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_NOT_IMPL = 4,$/;"	e	enum:__anon151
DNS_RCODE_OK	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_OK       = 0,$/;"	e	enum:__anon151
DNS_RCODE_REFUSED	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_REFUSED  = 5,$/;"	e	enum:__anon151
DNS_RCODE_SRV_FAIL	re-0.5.6/include/re_dns.h	/^	DNS_RCODE_SRV_FAIL = 2,$/;"	e	enum:__anon151
DNS_TYPE_A	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_A     = 0x0001,$/;"	e	enum:__anon152
DNS_TYPE_AAAA	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_AAAA  = 0x001c,$/;"	e	enum:__anon152
DNS_TYPE_CNAME	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_CNAME = 0x0005,$/;"	e	enum:__anon152
DNS_TYPE_MX	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_MX    = 0x000f,$/;"	e	enum:__anon152
DNS_TYPE_NAPTR	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_NAPTR = 0x0023,$/;"	e	enum:__anon152
DNS_TYPE_NS	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_NS    = 0x0002,$/;"	e	enum:__anon152
DNS_TYPE_PTR	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_PTR   = 0x000c,$/;"	e	enum:__anon152
DNS_TYPE_SOA	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_SOA   = 0x0006,$/;"	e	enum:__anon152
DNS_TYPE_SRV	re-0.5.6/include/re_dns.h	/^	DNS_TYPE_SRV   = 0x0021,$/;"	e	enum:__anon152
DOMAIN	baresip/test/ua.c	366;"	d	file:
DOX_DIR	re-0.5.6/mk/re.mk	/^DOX_DIR=..\/$(PROJECT)-dox$/;"	m
DOX_TAR	re-0.5.6/mk/re.mk	/^DOX_TAR=$(PROJECT)-dox-$(VERSION)$/;"	m
DO_REDIRECT	baresip/modules/x11/x11.c	26;"	d	file:
DTMF_AMP	rem-0.5.2/src/autone/tone.c	13;"	d	file:
DTMF_OUT	baresip/modules/dtmfio/dtmfio.c	/^static const char *DTMF_OUT = "\/tmp\/dtmf.out";$/;"	v	file:
DUAL_CHANNEL	baresip/modules/mpa/mpa.h	/^	enum { AUTO=0, STEREO, JOINT_STEREO, SINGLE_CHANNEL, DUAL_CHANNEL }$/;"	e	enum:mpa_param::__anon28
EADDRNOTAVAIL	re-0.5.6/include/re_types.h	197;"	d
EAFNOSUPPORT	re-0.5.6/include/re_types.h	192;"	d
EALREADY	re-0.5.6/include/re_types.h	227;"	d
EAUTH	re-0.5.6/include/re_types.h	237;"	d
EBADMSG	re-0.5.6/include/re_types.h	162;"	d
ECONNABORTED	re-0.5.6/include/re_types.h	202;"	d
ECONNREFUSED	re-0.5.6/include/re_types.h	222;"	d
ECONNRESET	re-0.5.6/include/re_types.h	207;"	d
EDESTADDRREQ	re-0.5.6/include/re_types.h	177;"	d
EINPROGRESS	re-0.5.6/include/re_types.h	232;"	d
ELIBBAD	re-0.5.6/include/re_types.h	172;"	d
ENCODE_TIME	baresip/modules/coreaudio/recorder.c	84;"	d	file:
ENDING	re-0.5.6/src/telev/telev.c	/^	ENDING,$/;"	e	enum:state	file:
ENODATA	re-0.5.6/include/re_types.h	152;"	d
ENOSR	re-0.5.6/include/re_types.h	242;"	d
ENOTCONN	re-0.5.6/include/re_types.h	212;"	d
ENOTSUP	re-0.5.6/include/re_types.h	187;"	d
EOVERFLOW	re-0.5.6/include/re_types.h	167;"	d
EPROTO	re-0.5.6/include/re_types.h	157;"	d
EPROTONOSUPPORT	re-0.5.6/include/re_types.h	182;"	d
ETIMEDOUT	re-0.5.6/include/re_types.h	217;"	d
EVENT_END	re-0.5.6/src/telev/telev.c	/^	EVENT_END     = 0xff,$/;"	e	enum:__anon137	file:
EXPIRES_MAX	baresip/test/sip/sipsrv.c	22;"	d	file:
EXPIRES_MIN	baresip/test/sip/sipsrv.c	21;"	d	file:
EXPORT_SYM	re-0.5.6/include/re_mod.h	28;"	d
EXPORT_SYM	re-0.5.6/include/re_mod.h	30;"	d
EXTRA_CFLAGS	baresip/debian/rules	/^EXTRA_CFLAGS:="$(shell dpkg-buildflags --get CFLAGS)"$/;"	m
EXTRA_CFLAGS	re-0.5.6/debian/rules	/^EXTRA_CFLAGS:="$(shell dpkg-buildflags --get CFLAGS | sed -e 's\/-O2\/\/')"$/;"	m
EXTRA_CFLAGS	rem-0.5.2/debian/rules	/^EXTRA_CFLAGS:="$(shell dpkg-buildflags --get CFLAGS | sed -e 's\/-O2\/\/')"$/;"	m
EXTRA_LFLAGS	baresip/debian/rules	/^EXTRA_LFLAGS:="$(shell dpkg-buildflags --get LDFLAGS)"$/;"	m
EXTRA_LFLAGS	re-0.5.6/debian/rules	/^EXTRA_LFLAGS:="$(shell dpkg-buildflags --get LDFLAGS) -Wl,-soname,libre.so"$/;"	m
EXTRA_LFLAGS	rem-0.5.2/debian/rules	/^EXTRA_LFLAGS:="$(shell dpkg-buildflags --get LDFLAGS) -Wl,-soname,librem.so"$/;"	m
EmptyBufferDone	baresip/modules/omx/omx.c	/^static OMX_ERRORTYPE EmptyBufferDone(OMX_HANDLETYPE hComponent,$/;"	f	file:
EventHandler	baresip/modules/omx/omx.c	/^static OMX_ERRORTYPE EventHandler(OMX_HANDLETYPE hComponent, OMX_PTR pAppData,$/;"	f	file:
F	re-0.5.6/src/md5/md5.c	205;"	d	file:
FAILC_MAX	re-0.5.6/src/turn/turnc.c	/^	FAILC_MAX = 16, \/**< Maximum number of request errors for loopcheck. *\/$/;"	e	enum:__anon121	file:
FD_EXCEPT	re-0.5.6/include/re_main.h	/^	FD_EXCEPT = 1<<2$/;"	e	enum:__anon165
FD_READ	re-0.5.6/include/re_main.h	/^	FD_READ   = 1<<0,$/;"	e	enum:__anon165
FD_WRITE	re-0.5.6/include/re_main.h	/^	FD_WRITE  = 1<<1,$/;"	e	enum:__anon165
FF_API_OLD_METADATA	baresip/modules/avformat/avformat.c	14;"	d	file:
FONT_SIZE	baresip/modules/cairo/cairo.c	/^	FONT_SIZE = 18$/;"	e	enum:__anon43	file:
FOREACH_STREAM	baresip/src/call.c	21;"	d	file:
FP_SIZE	re-0.5.6/src/stun/msg.c	/^	FP_SIZE = 8$/;"	e	enum:__anon116	file:
FRAMESIZE_NB	baresip/modules/amr/amr.c	/^	FRAMESIZE_NB = 160$/;"	e	enum:__anon30	file:
FRAME_SIZE	baresip/modules/gsm/gsm.c	/^	FRAME_SIZE = 160$/;"	e	enum:__anon31	file:
FS_PATH_MAX	baresip/src/core.h	13;"	d
FS_PATH_MAX	baresip/src/core.h	15;"	d
FS_PATH_MAX	baresip/src/core.h	17;"	d
FU_HDR_SIZE	baresip/modules/h265/decode.c	/^	FU_HDR_SIZE = 1$/;"	e	enum:__anon61	file:
FillBufferDone	baresip/modules/omx/omx.c	/^static OMX_ERRORTYPE FillBufferDone(OMX_HANDLETYPE hComponent,$/;"	f	file:
G	re-0.5.6/src/md5/md5.c	231;"	d	file:
G722_1_EXPOSE_INTERNAL_STRUCTURES	baresip/modules/g7221/decode.c	10;"	d	file:
G722_1_EXPOSE_INTERNAL_STRUCTURES	baresip/modules/g7221/encode.c	10;"	d	file:
G722_BITRATE_48k	baresip/modules/g722/g722.c	/^	G722_BITRATE_48k = 48000,$/;"	e	enum:__anon49	file:
G722_BITRATE_56k	baresip/modules/g722/g722.c	/^	G722_BITRATE_56k = 56000,$/;"	e	enum:__anon49	file:
G722_BITRATE_64k	baresip/modules/g722/g722.c	/^	G722_BITRATE_64k = 64000$/;"	e	enum:__anon49	file:
G722_SAMPLE_RATE	baresip/modules/g722/g722.c	/^	G722_SAMPLE_RATE = 16000,$/;"	e	enum:__anon49	file:
GNACK_SIZE	re-0.5.6/src/rtp/fb.c	/^	GNACK_SIZE = 4,$/;"	e	enum:__anon142	file:
Grabber	baresip/modules/dshow/dshow.cpp	/^	Grabber(struct vidsrc_st *st) : src(st) { }$/;"	f	class:Grabber
Grabber	baresip/modules/dshow/dshow.cpp	/^class Grabber : public ISampleGrabberCB {$/;"	c	file:
GstFakeSink	baresip/modules/gst/gst.c	/^typedef struct _GstFakeSink GstFakeSink;$/;"	t	typeref:struct:_GstFakeSink	file:
GstFakeSink	baresip/modules/gst1/gst.c	/^typedef struct _GstFakeSink GstFakeSink;$/;"	t	typeref:struct:_GstFakeSink	file:
H	re-0.5.6/src/md5/md5.c	257;"	d	file:
H263_FMT_16CIF	baresip/modules/avcodec/h26x.h	/^	H263_FMT_16CIF = 5, \/**< 1408 x 1152 *\/$/;"	e	enum:h263_fmt
H263_FMT_4CIF	baresip/modules/avcodec/h26x.h	/^	H263_FMT_4CIF  = 4, \/**<  704 x 576  *\/$/;"	e	enum:h263_fmt
H263_FMT_CIF	baresip/modules/avcodec/h26x.h	/^	H263_FMT_CIF   = 3, \/**<  352 x 288  *\/$/;"	e	enum:h263_fmt
H263_FMT_OTHER	baresip/modules/avcodec/h26x.h	/^	H263_FMT_OTHER = 7,$/;"	e	enum:h263_fmt
H263_FMT_QCIF	baresip/modules/avcodec/h26x.h	/^	H263_FMT_QCIF  = 2, \/**<  176 x 144  *\/$/;"	e	enum:h263_fmt
H263_FMT_SQCIF	baresip/modules/avcodec/h26x.h	/^	H263_FMT_SQCIF = 1, \/**<  128 x 96   *\/$/;"	e	enum:h263_fmt
H263_HDR_SIZE_MODEA	baresip/modules/avcodec/h26x.h	/^	H263_HDR_SIZE_MODEA = 4,$/;"	e	enum:__anon32
H263_HDR_SIZE_MODEB	baresip/modules/avcodec/h26x.h	/^	H263_HDR_SIZE_MODEB = 8,$/;"	e	enum:__anon32
H263_HDR_SIZE_MODEC	baresip/modules/avcodec/h26x.h	/^	H263_HDR_SIZE_MODEC = 12$/;"	e	enum:__anon32
H263_MODE_A	baresip/modules/avcodec/h26x.h	/^	H263_MODE_A,$/;"	e	enum:h263_mode
H263_MODE_B	baresip/modules/avcodec/h26x.h	/^	H263_MODE_B,$/;"	e	enum:h263_mode
H263_MODE_C	baresip/modules/avcodec/h26x.h	/^	H263_MODE_C$/;"	e	enum:h263_mode
H264_NAL_AUD	baresip/include/baresip.h	/^	H264_NAL_AUD          = 9,$/;"	e	enum:__anon26
H264_NAL_AUX_SLICE	baresip/include/baresip.h	/^	H264_NAL_AUX_SLICE    = 19,$/;"	e	enum:__anon26
H264_NAL_DPA	baresip/include/baresip.h	/^	H264_NAL_DPA          = 2,$/;"	e	enum:__anon26
H264_NAL_DPB	baresip/include/baresip.h	/^	H264_NAL_DPB          = 3,$/;"	e	enum:__anon26
H264_NAL_DPC	baresip/include/baresip.h	/^	H264_NAL_DPC          = 4,$/;"	e	enum:__anon26
H264_NAL_END_SEQUENCE	baresip/include/baresip.h	/^	H264_NAL_END_SEQUENCE = 10,$/;"	e	enum:__anon26
H264_NAL_END_STREAM	baresip/include/baresip.h	/^	H264_NAL_END_STREAM   = 11,$/;"	e	enum:__anon26
H264_NAL_FILLER_DATA	baresip/include/baresip.h	/^	H264_NAL_FILLER_DATA  = 12,$/;"	e	enum:__anon26
H264_NAL_FU_A	baresip/include/baresip.h	/^	H264_NAL_FU_A         = 28,  \/**< Fragmentation unit             *\/$/;"	e	enum:__anon26
H264_NAL_FU_B	baresip/include/baresip.h	/^	H264_NAL_FU_B         = 29,  \/**< Fragmentation unit             *\/$/;"	e	enum:__anon26
H264_NAL_IDR_SLICE	baresip/include/baresip.h	/^	H264_NAL_IDR_SLICE    = 5,$/;"	e	enum:__anon26
H264_NAL_MTAP16	baresip/include/baresip.h	/^	H264_NAL_MTAP16       = 26,  \/**< Multi-time aggregation packet  *\/$/;"	e	enum:__anon26
H264_NAL_MTAP24	baresip/include/baresip.h	/^	H264_NAL_MTAP24       = 27,  \/**< Multi-time aggregation packet  *\/$/;"	e	enum:__anon26
H264_NAL_PPS	baresip/include/baresip.h	/^	H264_NAL_PPS          = 8,$/;"	e	enum:__anon26
H264_NAL_SEI	baresip/include/baresip.h	/^	H264_NAL_SEI          = 6,$/;"	e	enum:__anon26
H264_NAL_SLICE	baresip/include/baresip.h	/^	H264_NAL_SLICE        = 1,$/;"	e	enum:__anon26
H264_NAL_SPS	baresip/include/baresip.h	/^	H264_NAL_SPS          = 7,$/;"	e	enum:__anon26
H264_NAL_SPS_EXT	baresip/include/baresip.h	/^	H264_NAL_SPS_EXT      = 13,$/;"	e	enum:__anon26
H264_NAL_STAP_A	baresip/include/baresip.h	/^	H264_NAL_STAP_A       = 24,  \/**< Single-time aggregation packet *\/$/;"	e	enum:__anon26
H264_NAL_STAP_B	baresip/include/baresip.h	/^	H264_NAL_STAP_B       = 25,  \/**< Single-time aggregation packet *\/$/;"	e	enum:__anon26
H264_NAL_UNKNOWN	baresip/include/baresip.h	/^	H264_NAL_UNKNOWN      = 0,$/;"	e	enum:__anon26
H265_HDR_SIZE	baresip/modules/h265/h265.h	/^	H265_HDR_SIZE = 2$/;"	e	enum:__anon63
H265_NAL_AP	baresip/modules/h265/h265.h	/^	H265_NAL_AP              = 48,    \/* Aggregation Packets *\/$/;"	e	enum:h265_naltype
H265_NAL_BLA_N_LP	baresip/modules/h265/h265.h	/^	H265_NAL_BLA_N_LP        = 18,$/;"	e	enum:h265_naltype
H265_NAL_BLA_W_LP	baresip/modules/h265/h265.h	/^	H265_NAL_BLA_W_LP        = 16,$/;"	e	enum:h265_naltype
H265_NAL_BLA_W_RADL	baresip/modules/h265/h265.h	/^	H265_NAL_BLA_W_RADL      = 17,$/;"	e	enum:h265_naltype
H265_NAL_CRA_NUT	baresip/modules/h265/h265.h	/^	H265_NAL_CRA_NUT         = 21,$/;"	e	enum:h265_naltype
H265_NAL_FU	baresip/modules/h265/h265.h	/^	H265_NAL_FU              = 49,$/;"	e	enum:h265_naltype
H265_NAL_IDR_N_LP	baresip/modules/h265/h265.h	/^	H265_NAL_IDR_N_LP        = 20,$/;"	e	enum:h265_naltype
H265_NAL_IDR_W_RADL	baresip/modules/h265/h265.h	/^	H265_NAL_IDR_W_RADL      = 19,$/;"	e	enum:h265_naltype
H265_NAL_PPS_NUT	baresip/modules/h265/h265.h	/^	H265_NAL_PPS_NUT         = 34,$/;"	e	enum:h265_naltype
H265_NAL_PREFIX_SEI_NUT	baresip/modules/h265/h265.h	/^	H265_NAL_PREFIX_SEI_NUT  = 39,$/;"	e	enum:h265_naltype
H265_NAL_RASL_N	baresip/modules/h265/h265.h	/^	H265_NAL_RASL_N          = 8,$/;"	e	enum:h265_naltype
H265_NAL_RASL_R	baresip/modules/h265/h265.h	/^	H265_NAL_RASL_R          = 9,$/;"	e	enum:h265_naltype
H265_NAL_SPS_NUT	baresip/modules/h265/h265.h	/^	H265_NAL_SPS_NUT         = 33,$/;"	e	enum:h265_naltype
H265_NAL_SUFFIX_SEI_NUT	baresip/modules/h265/h265.h	/^	H265_NAL_SUFFIX_SEI_NUT  = 40,$/;"	e	enum:h265_naltype
H265_NAL_TRAIL_N	baresip/modules/h265/h265.h	/^	H265_NAL_TRAIL_N         = 0,$/;"	e	enum:h265_naltype
H265_NAL_TRAIL_R	baresip/modules/h265/h265.h	/^	H265_NAL_TRAIL_R         = 1,$/;"	e	enum:h265_naltype
H265_NAL_VPS_NUT	baresip/modules/h265/h265.h	/^	H265_NAL_VPS_NUT         = 32,$/;"	e	enum:h265_naltype
HASH_BIG_ENDIAN	re-0.5.6/src/hash/func.c	149;"	d	file:
HASH_BIG_ENDIAN	re-0.5.6/src/hash/func.c	155;"	d	file:
HASH_BIG_ENDIAN	re-0.5.6/src/hash/func.c	158;"	d	file:
HASH_LITTLE_ENDIAN	re-0.5.6/src/hash/func.c	148;"	d	file:
HASH_LITTLE_ENDIAN	re-0.5.6/src/hash/func.c	154;"	d	file:
HASH_LITTLE_ENDIAN	re-0.5.6/src/hash/func.c	157;"	d	file:
HAVE_ARC4RANDOM	re-0.5.6/mk/re.mk	/^	HAVE_ARC4RANDOM	:= 1$/;"	m
HAVE_DLFCN_H	re-0.5.6/mk/re.mk	/^HAVE_DLFCN_H := $(shell [ -f $(SYSROOT)\/include\/dlfcn.h ] && echo "1")$/;"	m
HAVE_EPOLL	re-0.5.6/mk/re.mk	/^HAVE_EPOLL   := $(shell [ -f $(SYSROOT)\/include\/sys\/epoll.h ] || \\$/;"	m
HAVE_GETIFADDRS	re-0.5.6/mk/re.mk	/^HAVE_GETIFADDRS := $(shell [ -f $(SYSROOT)\/include\/ifaddrs.h ] && echo "1")$/;"	m
HAVE_GETOPT	re-0.5.6/mk/re.mk	/^HAVE_GETOPT     := $(shell [ -f $(SYSROOT)\/include\/getopt.h ] && echo "1")$/;"	m
HAVE_INET6	re-0.5.6/mk/re.mk	/^HAVE_INET6      := 1$/;"	m
HAVE_INET_NTOP	re-0.5.6/mk/re.mk	/^HAVE_INET_NTOP := 1$/;"	m
HAVE_INET_PTON	re-0.5.6/mk/re.mk	/^HAVE_INET_PTON := 1$/;"	m
HAVE_INTTYPES_H	re-0.5.6/mk/re.mk	/^HAVE_INTTYPES_H := $(shell [ -f $(SYSROOT)\/include\/inttypes.h ] && echo "1")$/;"	m
HAVE_KQUEUE	re-0.5.6/mk/re.mk	/^	HAVE_KQUEUE	:= 1$/;"	m
HAVE_LIBMQTT	baresip/mk/modules.mk	/^HAVE_LIBMQTT := $(shell [ -f $(SYSROOT)\/include\/mosquitto.h ] || \\$/;"	m
HAVE_LIBPTHREAD	re-0.5.6/mk/re.mk	/^HAVE_LIBPTHREAD := 1$/;"	m
HAVE_LIBV4L2	baresip/mk/modules.mk	/^HAVE_LIBV4L2 := $(shell [ -f $(SYSROOT)\/include\/libv4l2.h ] || \\$/;"	m
HAVE_NET_ROUTE_H	re-0.5.6/mk/re.mk	/^HAVE_NET_ROUTE_H := $(shell [ -f $(SYSROOT)\/include\/net\/route.h ] && echo "1")$/;"	m
HAVE_PTHREAD	re-0.5.6/mk/re.mk	/^HAVE_PTHREAD    := $(shell [ -f $(SYSROOT)\/include\/pthread.h ] && echo "1")$/;"	m
HAVE_PTHREAD_RWLOCK	re-0.5.6/mk/re.mk	/^HAVE_PTHREAD_RWLOCK := 1$/;"	m
HAVE_RESOLV	re-0.5.6/mk/re.mk	/^HAVE_RESOLV := $(shell [ -f $(SYSROOT)\/include\/resolv.h ] && echo "1")$/;"	m
HAVE_SPEEXDSP	baresip/mk/modules.mk	/^HAVE_SPEEXDSP := $(shell \\$/;"	m
HAVE_SPEEXDSP	baresip/mk/modules.mk	/^HAVE_SPEEXDSP := \\$/;"	m
HAVE_STRERROR_R	re-0.5.6/mk/re.mk	/^HAVE_STRERROR_R	:= 1$/;"	m
HAVE_SYSLOG	re-0.5.6/mk/re.mk	/^HAVE_SYSLOG  := $(shell [ -f $(SYSROOT)\/include\/syslog.h ] && echo "1")$/;"	m
HAVE_SYS_SYSCTL_H	re-0.5.6/mk/re.mk	/^HAVE_SYS_SYSCTL_H := \\$/;"	m
HDR_HASH_SIZE	re-0.5.6/src/sip/msg.c	/^	HDR_HASH_SIZE = 32,$/;"	e	enum:__anon125	file:
HDR_SIZE	baresip/modules/av1/encode.c	/^	HDR_SIZE = 4,$/;"	e	enum:__anon41	file:
HDR_SIZE	baresip/modules/vp8/encode.c	/^	HDR_SIZE = 4,$/;"	e	enum:__anon47	file:
HDR_SIZE	baresip/modules/vp9/encode.c	/^	HDR_SIZE = 3,$/;"	e	enum:__anon53	file:
HDR_SIZE	baresip/test/mock/mock_vidcodec.c	14;"	d	file:
HIDE	baresip/Makefile	/^HIDE=@$/;"	m
HMAC_HASH_SHA1	re-0.5.6/include/re_hmac.h	/^	HMAC_HASH_SHA1,$/;"	e	enum:hmac_hash
HMAC_HASH_SHA256	re-0.5.6/include/re_hmac.h	/^	HMAC_HASH_SHA256$/;"	e	enum:hmac_hash
HTTP_HDR_ACCEPT	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ACCEPT                   = 3186,$/;"	e	enum:http_hdrid
HTTP_HDR_ACCEPT_CHARSET	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ACCEPT_CHARSET           =   24,$/;"	e	enum:http_hdrid
HTTP_HDR_ACCEPT_ENCODING	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ACCEPT_ENCODING          =  708,$/;"	e	enum:http_hdrid
HTTP_HDR_ACCEPT_LANGUAGE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ACCEPT_LANGUAGE          = 2867,$/;"	e	enum:http_hdrid
HTTP_HDR_ACCEPT_RANGES	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ACCEPT_RANGES            = 3027,$/;"	e	enum:http_hdrid
HTTP_HDR_AGE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_AGE                      =  742,$/;"	e	enum:http_hdrid
HTTP_HDR_ALLOW	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ALLOW                    = 2429,$/;"	e	enum:http_hdrid
HTTP_HDR_AUTHORIZATION	re-0.5.6/include/re_http.h	/^	HTTP_HDR_AUTHORIZATION            = 2503,$/;"	e	enum:http_hdrid
HTTP_HDR_CACHE_CONTROL	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CACHE_CONTROL            = 2530,$/;"	e	enum:http_hdrid
HTTP_HDR_CONNECTION	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONNECTION               =  865,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_ENCODING	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_ENCODING         =  580,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_LANGUAGE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_LANGUAGE         = 3371,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_LENGTH	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_LENGTH           = 3861,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_LOCATION	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_LOCATION         = 3927,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_MD5	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_MD5              =  406,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_RANGE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_RANGE            = 2846,$/;"	e	enum:http_hdrid
HTTP_HDR_CONTENT_TYPE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_CONTENT_TYPE             =  809,$/;"	e	enum:http_hdrid
HTTP_HDR_DATE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_DATE                     = 1027,$/;"	e	enum:http_hdrid
HTTP_HDR_ETAG	re-0.5.6/include/re_http.h	/^	HTTP_HDR_ETAG                     = 2392,$/;"	e	enum:http_hdrid
HTTP_HDR_EXPECT	re-0.5.6/include/re_http.h	/^	HTTP_HDR_EXPECT                   = 1550,$/;"	e	enum:http_hdrid
HTTP_HDR_EXPIRES	re-0.5.6/include/re_http.h	/^	HTTP_HDR_EXPIRES                  = 1983,$/;"	e	enum:http_hdrid
HTTP_HDR_FROM	re-0.5.6/include/re_http.h	/^	HTTP_HDR_FROM                     = 1963,$/;"	e	enum:http_hdrid
HTTP_HDR_HOST	re-0.5.6/include/re_http.h	/^	HTTP_HDR_HOST                     = 3191,$/;"	e	enum:http_hdrid
HTTP_HDR_IF_MATCH	re-0.5.6/include/re_http.h	/^	HTTP_HDR_IF_MATCH                 = 2684,$/;"	e	enum:http_hdrid
HTTP_HDR_IF_MODIFIED_SINCE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_IF_MODIFIED_SINCE        = 2187,$/;"	e	enum:http_hdrid
HTTP_HDR_IF_NONE_MATCH	re-0.5.6/include/re_http.h	/^	HTTP_HDR_IF_NONE_MATCH            = 4030,$/;"	e	enum:http_hdrid
HTTP_HDR_IF_RANGE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_IF_RANGE                 = 2220,$/;"	e	enum:http_hdrid
HTTP_HDR_IF_UNMODIFIED_SINCE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_IF_UNMODIFIED_SINCE      =  962,$/;"	e	enum:http_hdrid
HTTP_HDR_LAST_MODIFIED	re-0.5.6/include/re_http.h	/^	HTTP_HDR_LAST_MODIFIED            = 2946,$/;"	e	enum:http_hdrid
HTTP_HDR_LOCATION	re-0.5.6/include/re_http.h	/^	HTTP_HDR_LOCATION                 = 2514,$/;"	e	enum:http_hdrid
HTTP_HDR_MAX_FORWARDS	re-0.5.6/include/re_http.h	/^	HTTP_HDR_MAX_FORWARDS             = 3549,$/;"	e	enum:http_hdrid
HTTP_HDR_NONE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_NONE = -1$/;"	e	enum:http_hdrid
HTTP_HDR_PRAGMA	re-0.5.6/include/re_http.h	/^	HTTP_HDR_PRAGMA                   = 1673,$/;"	e	enum:http_hdrid
HTTP_HDR_PROXY_AUTHENTICATE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_PROXY_AUTHENTICATE       =  116,$/;"	e	enum:http_hdrid
HTTP_HDR_PROXY_AUTHORIZATION	re-0.5.6/include/re_http.h	/^	HTTP_HDR_PROXY_AUTHORIZATION      = 2363,$/;"	e	enum:http_hdrid
HTTP_HDR_RANGE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_RANGE                    = 4004,$/;"	e	enum:http_hdrid
HTTP_HDR_REFERER	re-0.5.6/include/re_http.h	/^	HTTP_HDR_REFERER                  = 2991,$/;"	e	enum:http_hdrid
HTTP_HDR_RETRY_AFTER	re-0.5.6/include/re_http.h	/^	HTTP_HDR_RETRY_AFTER              =  409,$/;"	e	enum:http_hdrid
HTTP_HDR_SEC_WEBSOCKET_ACCEPT	re-0.5.6/include/re_http.h	/^	HTTP_HDR_SEC_WEBSOCKET_ACCEPT     = 2959,$/;"	e	enum:http_hdrid
HTTP_HDR_SEC_WEBSOCKET_EXTENSIONS	re-0.5.6/include/re_http.h	/^	HTTP_HDR_SEC_WEBSOCKET_EXTENSIONS = 2937,$/;"	e	enum:http_hdrid
HTTP_HDR_SEC_WEBSOCKET_KEY	re-0.5.6/include/re_http.h	/^	HTTP_HDR_SEC_WEBSOCKET_KEY        =  746,$/;"	e	enum:http_hdrid
HTTP_HDR_SEC_WEBSOCKET_PROTOCOL	re-0.5.6/include/re_http.h	/^	HTTP_HDR_SEC_WEBSOCKET_PROTOCOL   = 2076,$/;"	e	enum:http_hdrid
HTTP_HDR_SEC_WEBSOCKET_VERSION	re-0.5.6/include/re_http.h	/^	HTTP_HDR_SEC_WEBSOCKET_VERSION    = 3158,$/;"	e	enum:http_hdrid
HTTP_HDR_SERVER	re-0.5.6/include/re_http.h	/^	HTTP_HDR_SERVER                   =  973,$/;"	e	enum:http_hdrid
HTTP_HDR_TE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_TE                       = 2035,$/;"	e	enum:http_hdrid
HTTP_HDR_TRAILER	re-0.5.6/include/re_http.h	/^	HTTP_HDR_TRAILER                  = 2577,$/;"	e	enum:http_hdrid
HTTP_HDR_TRANSFER_ENCODING	re-0.5.6/include/re_http.h	/^	HTTP_HDR_TRANSFER_ENCODING        = 2115,$/;"	e	enum:http_hdrid
HTTP_HDR_UPGRADE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_UPGRADE                  =  717,$/;"	e	enum:http_hdrid
HTTP_HDR_USER_AGENT	re-0.5.6/include/re_http.h	/^	HTTP_HDR_USER_AGENT               = 4064,$/;"	e	enum:http_hdrid
HTTP_HDR_VARY	re-0.5.6/include/re_http.h	/^	HTTP_HDR_VARY                     = 3076,$/;"	e	enum:http_hdrid
HTTP_HDR_VIA	re-0.5.6/include/re_http.h	/^	HTTP_HDR_VIA                      = 3961,$/;"	e	enum:http_hdrid
HTTP_HDR_WARNING	re-0.5.6/include/re_http.h	/^	HTTP_HDR_WARNING                  = 2108,$/;"	e	enum:http_hdrid
HTTP_HDR_WWW_AUTHENTICATE	re-0.5.6/include/re_http.h	/^	HTTP_HDR_WWW_AUTHENTICATE         = 2763,$/;"	e	enum:http_hdrid
I	re-0.5.6/src/md5/md5.c	283;"	d	file:
ICE_CANDPAIR_FAILED	re-0.5.6/include/re_ice.h	/^	ICE_CANDPAIR_FAILED      \/**< Failed state; check failed             *\/$/;"	e	enum:ice_candpair_state
ICE_CANDPAIR_FROZEN	re-0.5.6/include/re_ice.h	/^	ICE_CANDPAIR_FROZEN = 0, \/**< Frozen state (default)                 *\/$/;"	e	enum:ice_candpair_state
ICE_CANDPAIR_INPROGRESS	re-0.5.6/include/re_ice.h	/^	ICE_CANDPAIR_INPROGRESS, \/**< In-Progress state;transac. in progress *\/$/;"	e	enum:ice_candpair_state
ICE_CANDPAIR_SUCCEEDED	re-0.5.6/include/re_ice.h	/^	ICE_CANDPAIR_SUCCEEDED,  \/**< Succeeded state; successful result     *\/$/;"	e	enum:ice_candpair_state
ICE_CANDPAIR_WAITING	re-0.5.6/include/re_ice.h	/^	ICE_CANDPAIR_WAITING,    \/**< Waiting to become highest on list      *\/$/;"	e	enum:ice_candpair_state
ICE_CAND_TYPE_HOST	re-0.5.6/include/re_ice.h	/^	ICE_CAND_TYPE_HOST,   \/**< Host candidate             *\/$/;"	e	enum:ice_cand_type
ICE_CAND_TYPE_PRFLX	re-0.5.6/include/re_ice.h	/^	ICE_CAND_TYPE_PRFLX,  \/**< Peer Reflexive candidate   *\/$/;"	e	enum:ice_cand_type
ICE_CAND_TYPE_RELAY	re-0.5.6/include/re_ice.h	/^	ICE_CAND_TYPE_RELAY   \/**< Relayed candidate          *\/$/;"	e	enum:ice_cand_type
ICE_CAND_TYPE_SRFLX	re-0.5.6/include/re_ice.h	/^	ICE_CAND_TYPE_SRFLX,  \/**< Server Reflexive candidate *\/$/;"	e	enum:ice_cand_type
ICE_CHECKLIST_COMPLETED	re-0.5.6/src/ice/ice.h	/^	ICE_CHECKLIST_COMPLETED,$/;"	e	enum:ice_checkl_state
ICE_CHECKLIST_FAILED	re-0.5.6/src/ice/ice.h	/^	ICE_CHECKLIST_FAILED$/;"	e	enum:ice_checkl_state
ICE_CHECKLIST_NULL	re-0.5.6/src/ice/ice.h	/^	ICE_CHECKLIST_NULL = -1,$/;"	e	enum:ice_checkl_state
ICE_CHECKLIST_RUNNING	re-0.5.6/src/ice/ice.h	/^	ICE_CHECKLIST_RUNNING,$/;"	e	enum:ice_checkl_state
ICE_COMPID_RTCP	re-0.5.6/include/re_ice.h	/^	ICE_COMPID_RTCP = 2$/;"	e	enum:ice_compid
ICE_COMPID_RTP	re-0.5.6/include/re_ice.h	/^	ICE_COMPID_RTP  = 1,$/;"	e	enum:ice_compid
ICE_DEFAULT_RC	re-0.5.6/src/ice/ice.h	/^	ICE_DEFAULT_RC          =   7  \/**< Retransmission count            *\/$/;"	e	enum:__anon112
ICE_DEFAULT_RTO_NONRTP	re-0.5.6/src/ice/ice.h	/^	ICE_DEFAULT_RTO_NONRTP  = 500, \/**< Retransmission TimeOut [ms]     *\/$/;"	e	enum:__anon112
ICE_DEFAULT_RTO_RTP	re-0.5.6/src/ice/ice.h	/^	ICE_DEFAULT_RTO_RTP     = 100, \/**< Retransmission TimeOut RTP [ms] *\/$/;"	e	enum:__anon112
ICE_DEFAULT_Ta_NON_RTP	re-0.5.6/src/ice/ice.h	/^	ICE_DEFAULT_Ta_NON_RTP  = 500, \/**< Pacing interval [ms]            *\/$/;"	e	enum:__anon112
ICE_DEFAULT_Ta_RTP	re-0.5.6/src/ice/ice.h	/^	ICE_DEFAULT_Ta_RTP      =  20, \/**< Pacing interval RTP [ms]        *\/$/;"	e	enum:__anon112
ICE_DEFAULT_Tr	re-0.5.6/src/ice/ice.h	/^	ICE_DEFAULT_Tr          =  15, \/**< Keepalive interval [s]          *\/$/;"	e	enum:__anon112
ICE_LAYER	baresip/modules/ice/ice.c	/^	ICE_LAYER = 0$/;"	e	enum:__anon44	file:
ICE_MODE_FULL	re-0.5.6/include/re_ice.h	/^	ICE_MODE_FULL,$/;"	e	enum:ice_mode
ICE_MODE_LITE	re-0.5.6/include/re_ice.h	/^	ICE_MODE_LITE$/;"	e	enum:ice_mode
ICE_NOMINATION_AGGRESSIVE	re-0.5.6/include/re_ice.h	/^	ICE_NOMINATION_AGGRESSIVE$/;"	e	enum:ice_nomination
ICE_NOMINATION_REGULAR	re-0.5.6/include/re_ice.h	/^	ICE_NOMINATION_REGULAR = 0,$/;"	e	enum:ice_nomination
ICE_ROLE_CONTROLLED	re-0.5.6/include/re_ice.h	/^	ICE_ROLE_CONTROLLED$/;"	e	enum:ice_role
ICE_ROLE_CONTROLLING	re-0.5.6/include/re_ice.h	/^	ICE_ROLE_CONTROLLING,$/;"	e	enum:ice_role
ICE_ROLE_UNKNOWN	re-0.5.6/include/re_ice.h	/^	ICE_ROLE_UNKNOWN = 0,$/;"	e	enum:ice_role
ICE_TCP_ACTIVE	re-0.5.6/include/re_ice.h	/^	ICE_TCP_ACTIVE,   \/**< Active TCP client                   *\/$/;"	e	enum:ice_tcptype
ICE_TCP_PASSIVE	re-0.5.6/include/re_ice.h	/^	ICE_TCP_PASSIVE,  \/**< Passive TCP server                  *\/$/;"	e	enum:ice_tcptype
ICE_TCP_SO	re-0.5.6/include/re_ice.h	/^	ICE_TCP_SO        \/**< Simultaneous-open TCP client\/server *\/$/;"	e	enum:ice_tcptype
ICE_TRACE	re-0.5.6/src/ice/ice.h	9;"	d
ICE_TRANSP_NONE	re-0.5.6/src/ice/ice.h	/^	ICE_TRANSP_NONE = -1,$/;"	e	enum:ice_transp
ICE_TRANSP_UDP	re-0.5.6/src/ice/ice.h	/^	ICE_TRANSP_UDP  = IPPROTO_UDP$/;"	e	enum:ice_transp
IDLE	re-0.5.6/src/telev/telev.c	/^	IDLE,$/;"	e	enum:state	file:
IDLE_TIMEOUT	re-0.5.6/src/dns/client.c	/^	IDLE_TIMEOUT = 30 * 1000,$/;"	e	enum:__anon101	file:
IDLE_TIMEOUT	re-0.5.6/src/http/client.c	/^	IDLE_TIMEOUT = 900000,$/;"	e	enum:__anon107	file:
IF2D_IF_decode	baresip/modules/amr/amr.c	25;"	d	file:
IF2E_IF_encode	baresip/modules/amr/amr.c	24;"	d	file:
IID_ISampleGrabber	baresip/modules/dshow/dshow.cpp	/^IID IID_ISampleGrabber = {$/;"	v	file:
IID_ISampleGrabberCB	baresip/modules/dshow/dshow.cpp	/^IID IID_ISampleGrabberCB = {$/;"	v	file:
INCDIR	baresip/Makefile	/^INCDIR  := $(PREFIX)\/include$/;"	m
INCDIR	re-0.5.6/Makefile	/^INCDIR  := $(PREFIX)\/include\/re$/;"	m
INCDIR	rem-0.5.2/Makefile	/^INCDIR  := $(PREFIX)\/include\/rem$/;"	m
INC_RPOS	baresip/modules/winwave/src.c	15;"	d	file:
INC_WPOS	baresip/modules/winwave/play.c	15;"	d	file:
INET6_ADDRSTRLEN	re-0.5.6/include/re_net.h	37;"	d
INET_ADDRSTRLEN	re-0.5.6/include/re_net.h	32;"	d
INSTALL	baresip/Makefile	/^INSTALL := install$/;"	m
INSTALL	re-0.5.6/Makefile	/^INSTALL := install$/;"	m
INSTALL	rem-0.5.2/Makefile	/^INSTALL := install$/;"	m
INT15_MAX	rem-0.5.2/include/rem_dsp.h	12;"	d
INT15_MIN	rem-0.5.2/include/rem_dsp.h	13;"	d
INT16_MAX	rem-0.5.2/include/rem_dsp.h	16;"	d
INT16_MIN	rem-0.5.2/include/rem_dsp.h	20;"	d
INTERVAL	baresip/modules/stun/stun.c	/^enum {LAYER = 0, INTERVAL = 30};$/;"	e	enum:__anon51	file:
IN_IS_ADDR_LINKLOCAL	re-0.5.6/src/sa/sa.c	508;"	d	file:
I_FRAME	baresip/modules/avcodec/h26x.h	/^enum {I_FRAME=0, P_FRAME=1};$/;"	e	enum:__anon33
JBUF_STAT	re-0.5.6/src/jbuf/jbuf.c	21;"	d	file:
JOINT_STEREO	baresip/modules/mpa/mpa.h	/^	enum { AUTO=0, STEREO, JOINT_STEREO, SINGLE_CHANNEL, DUAL_CHANNEL }$/;"	e	enum:mpa_param::__anon28
JSON_BOOL	re-0.5.6/include/re_json.h	/^	JSON_BOOL,$/;"	e	enum:json_typ
JSON_DOUBLE	re-0.5.6/include/re_json.h	/^	JSON_DOUBLE,$/;"	e	enum:json_typ
JSON_INT	re-0.5.6/include/re_json.h	/^	JSON_INT,$/;"	e	enum:json_typ
JSON_NULL	re-0.5.6/include/re_json.h	/^	JSON_NULL,$/;"	e	enum:json_typ
JSON_STRING	re-0.5.6/include/re_json.h	/^	JSON_STRING,$/;"	e	enum:json_typ
KEYCODE_DEL	baresip/src/cmd.c	/^	KEYCODE_DEL = 0x7f,$/;"	e	enum:__anon20	file:
KEYCODE_ESC	baresip/include/baresip.h	702;"	d
KEYCODE_NONE	baresip/include/baresip.h	700;"	d
KEYCODE_REL	baresip/include/baresip.h	701;"	d
KEY_RELEASE_VAL	baresip/modules/sdl/sdl.c	/^	KEY_RELEASE_VAL = 250  \/**< Key release value in [ms] *\/$/;"	e	enum:__anon59	file:
KEY_SIZE	re-0.5.6/src/hmac/apple/hmac.c	/^enum { KEY_SIZE = 256 };$/;"	e	enum:__anon128	file:
L16_HEADER	baresip/test/mock/mock_aucodec.c	15;"	d	file:
LAYER	baresip/modules/stun/stun.c	/^enum {LAYER = 0, INTERVAL = 30};$/;"	e	enum:__anon51	file:
LAYER	baresip/modules/turn/turn.c	/^enum {LAYER = 0};$/;"	e	enum:__anon54	file:
LAYER_DTLS	baresip/modules/dtls_srtp/dtls_srtp.h	/^	LAYER_DTLS = 20, \/* must be above zero *\/$/;"	e	enum:__anon79
LAYER_SRTP	baresip/modules/dtls_srtp/dtls_srtp.h	/^	LAYER_SRTP = 20,$/;"	e	enum:__anon79
LD	re-0.5.6/mk/re.mk	/^LD := $(CC)$/;"	m
LENMOD_LONG	re-0.5.6/src/fmt/print.c	/^	LENMOD_LONG      = 1,$/;"	e	enum:length_modifier	file:
LENMOD_LONG_LONG	re-0.5.6/src/fmt/print.c	/^	LENMOD_LONG_LONG = 2,$/;"	e	enum:length_modifier	file:
LENMOD_NONE	re-0.5.6/src/fmt/print.c	/^	LENMOD_NONE      = 0,$/;"	e	enum:length_modifier	file:
LENMOD_SIZE	re-0.5.6/src/fmt/print.c	/^	LENMOD_SIZE      = 42,$/;"	e	enum:length_modifier	file:
LEVEL_DEBUG	baresip/include/baresip.h	/^	LEVEL_DEBUG = 0,$/;"	e	enum:log_level
LEVEL_ERROR	baresip/include/baresip.h	/^	LEVEL_ERROR,$/;"	e	enum:log_level
LEVEL_INFO	baresip/include/baresip.h	/^	LEVEL_INFO,$/;"	e	enum:log_level
LEVEL_WARN	baresip/include/baresip.h	/^	LEVEL_WARN,$/;"	e	enum:log_level
LE_INIT	re-0.5.6/include/re_list.h	17;"	d
LIBAVCODEC_HAVE_AVMEDIA_TYPES	baresip/modules/avformat/avformat.c	38;"	d	file:
LIBDIR	baresip/Makefile	/^LIBDIR     := $(PREFIX)\/lib$/;"	m
LIBDIR	re-0.5.6/Makefile	/^LIBDIR  := $(PREFIX)\/lib$/;"	m
LIBDIR	rem-0.5.2/Makefile	/^LIBDIR  := $(PREFIX)\/lib$/;"	m
LIBREM_PATH	baresip/Makefile	/^LIBREM_PATH	:= $(shell [ -d ..\/rem ] && echo "..\/rem")$/;"	m
LIBRE_INC	re-0.5.6/mk/re.mk	/^LIBRE_INC := $(shell [ -f $(LIBRE_PATH)\/include\/re.h ] && \\$/;"	m
LIBRE_INC	re-0.5.6/mk/re.mk	/^LIBRE_INC := $(shell [ -f \/usr\/include\/re\/re.h ] && echo "\/usr\/include\/re")$/;"	m
LIBRE_INC	re-0.5.6/mk/re.mk	/^LIBRE_INC := $(shell [ -f \/usr\/local\/include\/re\/re.h ] && \\$/;"	m
LIBRE_MK	baresip/Makefile	/^LIBRE_MK  := $(shell [ -f ..\/re-$(VERSION)\/mk\/re.mk ] && \\$/;"	m
LIBRE_MK	baresip/Makefile	/^LIBRE_MK  := $(shell [ -f ..\/re\/mk\/re.mk ] && \\$/;"	m
LIBRE_MK	baresip/Makefile	/^LIBRE_MK  := $(shell [ -f \/usr\/local\/share\/re\/re.mk ] && \\$/;"	m
LIBRE_MK	baresip/Makefile	/^LIBRE_MK  := $(shell [ -f \/usr\/share\/re\/re.mk ] && \\$/;"	m
LIBRE_MK	rem-0.5.2/Makefile	/^LIBRE_MK  := $(shell [ -f ..\/re\/mk\/re.mk ] && \\$/;"	m
LIBRE_MK	rem-0.5.2/Makefile	/^LIBRE_MK  := $(shell [ -f \/usr\/local\/share\/re\/re.mk ] && \\$/;"	m
LIBRE_MK	rem-0.5.2/Makefile	/^LIBRE_MK  := $(shell [ -f \/usr\/share\/re\/re.mk ] && \\$/;"	m
LIBRE_PATH	re-0.5.6/mk/re.mk	/^LIBRE_PATH := ..\/re$/;"	m
LIBRE_SO	re-0.5.6/mk/re.mk	/^LIBRE_SO  := $(shell [ -f $(LIBRE_PATH)\/libre$(LIB_SUFFIX) ] \\$/;"	m
LIBRE_SO	re-0.5.6/mk/re.mk	/^LIBRE_SO  := $(shell [ -f \/usr\/lib64\/libre$(LIB_SUFFIX) ] && echo "\/usr\/lib64")$/;"	m
LIBRE_SO	re-0.5.6/mk/re.mk	/^LIBRE_SO  := $(shell [ -f \/usr\/lib\/libre$(LIB_SUFFIX) ] && echo "\/usr\/lib")$/;"	m
LIBRE_SO	re-0.5.6/mk/re.mk	/^LIBRE_SO  := $(shell [ -f \/usr\/local\/lib\/libre$(LIB_SUFFIX) ] \\$/;"	m
LIB_OBJS	baresip/Makefile	/^LIB_OBJS  := $(OBJS) $(MOD_OBJS)$/;"	m
LIB_SUFFIX	re-0.5.6/mk/re.mk	/^	LIB_SUFFIX	:= .dll$/;"	m
LIB_SUFFIX	re-0.5.6/mk/re.mk	/^	LIB_SUFFIX	:= .dylib$/;"	m
LIB_SUFFIX	re-0.5.6/mk/re.mk	/^LIB_SUFFIX	:= .so$/;"	m
LICENSE	baresip/modules/gtk/gtk_mod.c	27;"	d	file:
LIFETIME	baresip/modules/natpmp/natpmp.c	/^	LIFETIME = 300 \/* seconds *\/$/;"	e	enum:__anon67	file:
LIFETIME	baresip/modules/pcp/pcp.c	/^	LIFETIME = 120 \/* seconds *\/$/;"	e	enum:__anon88	file:
LIST_FOREACH	re-0.5.6/include/re_list.h	95;"	d
LIST_FOREACH	re-0.5.6/src/main/main.c	35;"	d	file:
LIST_INIT	re-0.5.6/include/re_list.h	27;"	d
LIST_INIT	re-0.5.6/src/main/main.c	34;"	d	file:
LOCAL_PORT	baresip/test/mock/dnssrv.c	16;"	d	file:
LOCAL_PORT	baresip/test/sip/sipsrv.c	19;"	d	file:
LOCAL_SECURE_PORT	baresip/test/sip/sipsrv.c	20;"	d	file:
LOCK_DEBUG	re-0.5.6/src/lock/lock.c	20;"	d	file:
LONG_PREFIX	baresip/src/cmd.c	/^	LONG_PREFIX = '\/'$/;"	e	enum:__anon20	file:
LOWER	re-0.5.6/src/fmt/pl.c	413;"	d	file:
L_FRAME16k	baresip/modules/amr/amr.c	47;"	d	file:
MACHINE	re-0.5.6/mk/re.mk	/^MACHINE   := $(shell $(CC) -dumpmachine)$/;"	m
MAGIC	baresip/src/audio.c	24;"	d	file:
MAGIC	baresip/src/call.c	17;"	d	file:
MAGIC	baresip/src/ua.c	14;"	d	file:
MAGIC	baresip/src/video.c	17;"	d	file:
MAGIC	baresip/test/call.c	13;"	d	file:
MAGIC	baresip/test/ua.c	13;"	d	file:
MAGIC	re-0.5.6/src/mqueue/mqueue.c	15;"	d	file:
MAGIC_CHECK	baresip/src/magic.h	28;"	d
MAGIC_CHECK	baresip/src/magic.h	37;"	d
MAGIC_CHECK	re-0.5.6/src/mem/mem.c	104;"	d	file:
MAGIC_CHECK	re-0.5.6/src/mem/mem.c	114;"	d	file:
MAGIC_DECL	baresip/src/magic.h	26;"	d
MAGIC_DECL	baresip/src/magic.h	35;"	d
MAGIC_INIT	baresip/src/magic.h	27;"	d
MAGIC_INIT	baresip/src/magic.h	36;"	d
MAIN_DEBUG	re-0.5.6/src/main/main.c	72;"	d	file:
MAX	re-0.5.6/include/re_types.h	122;"	d
MAX	re-0.5.6/include/re_types.h	123;"	d
MAX_BLOCKING	re-0.5.6/src/main/main.c	/^	MAX_BLOCKING = 100,    \/**< Maximum time spent in handler in [ms] *\/$/;"	e	enum:__anon139	file:
MAX_BLOCKING	re-0.5.6/src/tmr/tmr.c	/^	MAX_BLOCKING = 100   \/**< Maximum time spent in handler [ms] *\/$/;"	e	enum:__anon122	file:
MAX_BYTES_PER_FRAME	baresip/modules/silk/silk.c	/^	MAX_BYTES_PER_FRAME = 250,$/;"	e	enum:__anon65	file:
MAX_DST	rem-0.5.2/src/vidconv/vconv.c	742;"	d	file:
MAX_FRAME_SIZE	baresip/modules/silk/silk.c	/^	MAX_FRAME_SIZE      = 2*480,$/;"	e	enum:__anon65	file:
MAX_HEIGHT	baresip/test/mock/mock_vidisp.c	13;"	d	file:
MAX_KEYLEN	re-0.5.6/src/srtp/srtp.c	/^	MAX_KEYLEN  = 32,  \/**< Maximum keylength in bytes     *\/$/;"	e	enum:__anon110	file:
MAX_MEMBERS	re-0.5.6/src/rtp/sess.c	/^	MAX_MEMBERS   = 8,$/;"	e	enum:__anon145	file:
MAX_MUTED_FRAMES	baresip/src/video.c	/^	MAX_MUTED_FRAMES = 3,$/;"	e	enum:__anon15	file:
MAX_PACKET	baresip/modules/g726/g726.c	/^enum { MAX_PACKET = 100 };$/;"	e	enum:__anon50	file:
MAX_SRC	rem-0.5.2/src/vidconv/vconv.c	741;"	d	file:
MAX_WIDTH	baresip/test/mock/mock_vidisp.c	12;"	d	file:
MBUF_CHECK_END	re-0.5.6/include/re_mbuf.h	22;"	d
MBUF_CHECK_END	re-0.5.6/include/re_mbuf.h	28;"	d
MBUF_CHECK_POS	re-0.5.6/include/re_mbuf.h	17;"	d
MBUF_CHECK_POS	re-0.5.6/include/re_mbuf.h	27;"	d
MBUF_DEBUG	re-0.5.6/include/re_mbuf.h	12;"	d
MD5_SIZE	re-0.5.6/include/re_md5.h	/^	MD5_SIZE     = 16,             \/**< Number of bytes in MD5 hash   *\/$/;"	e	enum:__anon170
MD5_STR_SIZE	re-0.5.6/include/re_md5.h	/^	MD5_STR_SIZE = 2*MD5_SIZE + 1  \/**< Number of bytes in MD5 string *\/$/;"	e	enum:__anon170
MEDIA_POLL_RATE	baresip/src/video.c	/^	MEDIA_POLL_RATE = 250,                 \/**< in [Hz]             *\/$/;"	e	enum:__anon16	file:
MEM_DEBUG	re-0.5.6/src/mem/mem.c	25;"	d	file:
METHOD_EPOLL	re-0.5.6/include/re_main.h	/^	METHOD_EPOLL,$/;"	e	enum:poll_method
METHOD_KQUEUE	re-0.5.6/include/re_main.h	/^	METHOD_KQUEUE,$/;"	e	enum:poll_method
METHOD_MAX	re-0.5.6/include/re_main.h	/^	METHOD_MAX$/;"	e	enum:poll_method
METHOD_NULL	re-0.5.6/include/re_main.h	/^	METHOD_NULL = 0,$/;"	e	enum:poll_method
METHOD_POLL	re-0.5.6/include/re_main.h	/^	METHOD_POLL,$/;"	e	enum:poll_method
METHOD_SELECT	re-0.5.6/include/re_main.h	/^	METHOD_SELECT,$/;"	e	enum:poll_method
MIN	re-0.5.6/include/re_types.h	118;"	d
MIN	re-0.5.6/include/re_types.h	119;"	d
MIN_FRAME_SIZE	baresip/modules/speex/speex.c	/^	MIN_FRAME_SIZE = 43,$/;"	e	enum:__anon82	file:
MI_SIZE	re-0.5.6/src/stun/msg.c	/^	MI_SIZE = 24,$/;"	e	enum:__anon116	file:
MK	re-0.5.6/Makefile	/^MK	:= mk\/re.mk$/;"	m
MKDEP	re-0.5.6/mk/re.mk	/^	MKDEP       := gcc -MM$/;"	m
MKDEP	re-0.5.6/mk/re.mk	/^	MKDEP  := $(CC) -MM$/;"	m
MKDEP	re-0.5.6/mk/re.mk	/^	MKDEP  := $(CC) -xM1$/;"	m
MKDEP	re-0.5.6/mk/re.mk	/^	MKDEP := $(CC) -MM$/;"	m
MKDIR	re-0.5.6/Makefile	/^MKDIR   := $(PREFIX)\/share\/re$/;"	m
MOD	baresip/modules/account/module.mk	/^MOD		:= account$/;"	m
MOD	baresip/modules/alsa/module.mk	/^MOD		:= alsa$/;"	m
MOD	baresip/modules/amr/module.mk	/^MOD		:= amr$/;"	m
MOD	baresip/modules/aubridge/module.mk	/^MOD		:= aubridge$/;"	m
MOD	baresip/modules/audiounit/module.mk	/^MOD		:= audiounit$/;"	m
MOD	baresip/modules/aufile/module.mk	/^MOD		:= aufile$/;"	m
MOD	baresip/modules/auloop/module.mk	/^MOD		:= auloop$/;"	m
MOD	baresip/modules/av1/module.mk	/^MOD		:= av1$/;"	m
MOD	baresip/modules/avahi/module.mk	/^MOD		:= avahi$/;"	m
MOD	baresip/modules/avcapture/module.mk	/^MOD		:= avcapture$/;"	m
MOD	baresip/modules/avcodec/module.mk	/^MOD		:= avcodec$/;"	m
MOD	baresip/modules/avformat/module.mk	/^MOD		:= avformat$/;"	m
MOD	baresip/modules/b2bua/module.mk	/^MOD		:= b2bua$/;"	m
MOD	baresip/modules/bv32/module.mk	/^MOD		:= bv32$/;"	m
MOD	baresip/modules/cairo/module.mk	/^MOD		:= cairo$/;"	m
MOD	baresip/modules/codec2/module.mk	/^MOD		:= codec2$/;"	m
MOD	baresip/modules/cons/module.mk	/^MOD		:= cons$/;"	m
MOD	baresip/modules/contact/module.mk	/^MOD		:= contact$/;"	m
MOD	baresip/modules/coreaudio/module.mk	/^MOD		:= coreaudio$/;"	m
MOD	baresip/modules/daala/module.mk	/^MOD		:= daala$/;"	m
MOD	baresip/modules/debug_cmd/module.mk	/^MOD		:= debug_cmd$/;"	m
MOD	baresip/modules/directfb/module.mk	/^MOD                := directfb$/;"	m
MOD	baresip/modules/dshow/module.mk	/^MOD		:= dshow$/;"	m
MOD	baresip/modules/dtls_srtp/module.mk	/^MOD		:= dtls_srtp$/;"	m
MOD	baresip/modules/dtmfio/module.mk	/^MOD		:= dtmfio$/;"	m
MOD	baresip/modules/echo/module.mk	/^MOD		:= echo$/;"	m
MOD	baresip/modules/evdev/module.mk	/^MOD		:= evdev$/;"	m
MOD	baresip/modules/fakevideo/module.mk	/^MOD		:= fakevideo$/;"	m
MOD	baresip/modules/g711/module.mk	/^MOD		:= g711$/;"	m
MOD	baresip/modules/g722/module.mk	/^MOD		:= g722$/;"	m
MOD	baresip/modules/g7221/module.mk	/^MOD		:= g7221$/;"	m
MOD	baresip/modules/g726/module.mk	/^MOD		:= g726$/;"	m
MOD	baresip/modules/gsm/module.mk	/^MOD		:= gsm$/;"	m
MOD	baresip/modules/gst/module.mk	/^MOD		:= gst$/;"	m
MOD	baresip/modules/gst1/module.mk	/^MOD		:= gst1$/;"	m
MOD	baresip/modules/gst_video/module.mk	/^MOD		:= gst_video$/;"	m
MOD	baresip/modules/gst_video1/module.mk	/^MOD		:= gst_video1$/;"	m
MOD	baresip/modules/gtk/module.mk	/^MOD		:= gtk$/;"	m
MOD	baresip/modules/gzrtp/module.mk	/^MOD		:= gzrtp$/;"	m
MOD	baresip/modules/h265/module.mk	/^MOD		:= h265$/;"	m
MOD	baresip/modules/httpd/module.mk	/^MOD		:= httpd$/;"	m
MOD	baresip/modules/ice/module.mk	/^MOD		:= ice$/;"	m
MOD	baresip/modules/ilbc/module.mk	/^MOD		:= ilbc$/;"	m
MOD	baresip/modules/isac/module.mk	/^MOD		:= isac$/;"	m
MOD	baresip/modules/jack/module.mk	/^MOD		:= jack$/;"	m
MOD	baresip/modules/l16/module.mk	/^MOD		:= l16$/;"	m
MOD	baresip/modules/libsrtp/module.mk	/^MOD		:= libsrtp$/;"	m
MOD	baresip/modules/menu/module.mk	/^MOD		:= menu$/;"	m
MOD	baresip/modules/mpa/module.mk	/^MOD		:= mpa$/;"	m
MOD	baresip/modules/mqtt/module.mk	/^MOD		:= mqtt$/;"	m
MOD	baresip/modules/mwi/module.mk	/^MOD		:= mwi$/;"	m
MOD	baresip/modules/natbd/module.mk	/^MOD		:= natbd$/;"	m
MOD	baresip/modules/natpmp/module.mk	/^MOD		:= natpmp$/;"	m
MOD	baresip/modules/omx/module.mk	/^MOD		:= omx$/;"	m
MOD	baresip/modules/opengl/module.mk	/^MOD		:= opengl$/;"	m
MOD	baresip/modules/opengles/module.mk	/^MOD		:= opengles$/;"	m
MOD	baresip/modules/opensles/module.mk	/^MOD		:= opensles$/;"	m
MOD	baresip/modules/opus/module.mk	/^MOD		:= opus$/;"	m
MOD	baresip/modules/oss/module.mk	/^MOD		:= oss$/;"	m
MOD	baresip/modules/pcp/module.mk	/^MOD		:= pcp$/;"	m
MOD	baresip/modules/plc/module.mk	/^MOD		:= plc$/;"	m
MOD	baresip/modules/portaudio/module.mk	/^MOD		:= portaudio$/;"	m
MOD	baresip/modules/presence/module.mk	/^MOD		:= presence$/;"	m
MOD	baresip/modules/pulse/module.mk	/^MOD		:= pulse$/;"	m
MOD	baresip/modules/qtcapture/module.mk	/^MOD		:= qtcapture$/;"	m
MOD	baresip/modules/rst/module.mk	/^MOD		:= rst$/;"	m
MOD	baresip/modules/sdl/module.mk	/^MOD		:= sdl$/;"	m
MOD	baresip/modules/sdl2/module.mk	/^MOD		:= sdl2$/;"	m
MOD	baresip/modules/selfview/module.mk	/^MOD		:= selfview$/;"	m
MOD	baresip/modules/silk/module.mk	/^MOD		:= silk$/;"	m
MOD	baresip/modules/snapshot/module.mk	/^MOD		:= snapshot$/;"	m
MOD	baresip/modules/sndfile/module.mk	/^MOD		:= sndfile$/;"	m
MOD	baresip/modules/sndio/module.mk	/^MOD		:= sndio$/;"	m
MOD	baresip/modules/speex/module.mk	/^MOD		:= speex$/;"	m
MOD	baresip/modules/speex_aec/module.mk	/^MOD		:= speex_aec$/;"	m
MOD	baresip/modules/speex_pp/module.mk	/^MOD		:= speex_pp$/;"	m
MOD	baresip/modules/srtp/module.mk	/^MOD		:= srtp$/;"	m
MOD	baresip/modules/stdio/module.mk	/^MOD		:= stdio$/;"	m
MOD	baresip/modules/stun/module.mk	/^MOD		:= stun$/;"	m
MOD	baresip/modules/swscale/module.mk	/^MOD		:= swscale$/;"	m
MOD	baresip/modules/syslog/module.mk	/^MOD		:= syslog$/;"	m
MOD	baresip/modules/turn/module.mk	/^MOD		:= turn$/;"	m
MOD	baresip/modules/uuid/module.mk	/^MOD		:= uuid$/;"	m
MOD	baresip/modules/v4l/module.mk	/^MOD		:= v4l$/;"	m
MOD	baresip/modules/v4l2/module.mk	/^MOD		:= v4l2$/;"	m
MOD	baresip/modules/v4l2_codec/module.mk	/^MOD		:= v4l2_codec$/;"	m
MOD	baresip/modules/vidbridge/module.mk	/^MOD		:= vidbridge$/;"	m
MOD	baresip/modules/vidinfo/module.mk	/^MOD		:= vidinfo$/;"	m
MOD	baresip/modules/vidloop/module.mk	/^MOD		:= vidloop$/;"	m
MOD	baresip/modules/vp8/module.mk	/^MOD		:= vp8$/;"	m
MOD	baresip/modules/vp9/module.mk	/^MOD		:= vp9$/;"	m
MOD	baresip/modules/vumeter/module.mk	/^MOD		:= vumeter$/;"	m
MOD	baresip/modules/wincons/module.mk	/^MOD		:= wincons$/;"	m
MOD	baresip/modules/winwave/module.mk	/^MOD		:= winwave$/;"	m
MOD	baresip/modules/x11/module.mk	/^MOD		:= x11$/;"	m
MOD	baresip/modules/x11grab/module.mk	/^MOD		:= x11grab$/;"	m
MOD	baresip/modules/zrtp/module.mk	/^MOD		:= zrtp$/;"	m
MODMKS	re-0.5.6/Makefile	/^MODMKS	:= $(patsubst %,src\/%\/mod.mk,$(MODULES))$/;"	m
MODMKS	rem-0.5.2/Makefile	/^MODMKS	:= $(patsubst %,src\/%\/mod.mk,$(MODULES))$/;"	m
MOD_AUTODETECT	baresip/mk/modules.mk	/^MOD_AUTODETECT := 1$/;"	m
MOD_BINS	baresip/Makefile	/^MOD_BINS:= $(patsubst %,%$(MOD_SUFFIX),$(MODULES))$/;"	m
MOD_BLD	baresip/Makefile	/^MOD_BLD	:= $(patsubst %,$(BUILD)\/modules\/%,$(MODULES))$/;"	m
MOD_EXT	re-0.5.6/include/re_mod.h	19;"	d
MOD_EXT	re-0.5.6/include/re_mod.h	22;"	d
MOD_LFLAGS	baresip/mk/mod.mk	/^MOD_LFLAGS      := $(MOD_LFLAGS) $($(MOD)_LFLAGS)$/;"	m
MOD_MK	baresip/Makefile	/^MOD_MK	:= $(patsubst %,modules\/%\/module.mk,$(MODULES))$/;"	m
MOD_OBJS	baresip/mk/mod.mk	/^MOD_OBJS        := $(MOD_OBJS) $($(MOD)_OBJS)$/;"	m
MOD_PATH	baresip/Makefile	/^MOD_PATH   := $(LIBDIR)\/$(PROJECT)\/modules$/;"	m
MOD_PRE	baresip/src/config.c	14;"	d	file:
MOD_PRE	baresip/src/config.c	15;"	d	file:
MOD_PRE	re-0.5.6/include/re_mod.h	18;"	d
MOD_PRE	re-0.5.6/include/re_mod.h	21;"	d
MOD_SUFFIX	re-0.5.6/mk/re.mk	/^	MOD_SUFFIX	:= .dll$/;"	m
MOD_SUFFIX	re-0.5.6/mk/re.mk	/^MOD_SUFFIX	:= .so$/;"	m
MPA_FRAMESIZE	baresip/modules/mpa/mpa.h	7;"	d
MPA_IORATE	baresip/modules/mpa/mpa.h	8;"	d
MPA_RTPRATE	baresip/modules/mpa/mpa.h	9;"	d
MQ_ANSWER	baresip/modules/gtk/gtk_mod.c	/^	MQ_ANSWER,$/;"	e	enum:gtk_mod_events	file:
MQ_CLOSE	baresip/modules/gtk/call_window.c	/^	MQ_CLOSE,$/;"	e	enum:call_window_events	file:
MQ_CONNECT	baresip/modules/gtk/gtk_mod.c	/^	MQ_CONNECT,$/;"	e	enum:gtk_mod_events	file:
MQ_HANGUP	baresip/modules/gtk/call_window.c	/^	MQ_HANGUP,$/;"	e	enum:call_window_events	file:
MQ_HANGUP	baresip/modules/gtk/gtk_mod.c	/^	MQ_HANGUP,$/;"	e	enum:gtk_mod_events	file:
MQ_HOLD	baresip/modules/gtk/call_window.c	/^	MQ_HOLD,$/;"	e	enum:call_window_events	file:
MQ_MUTE	baresip/modules/gtk/call_window.c	/^	MQ_MUTE,$/;"	e	enum:call_window_events	file:
MQ_POPUP	baresip/modules/gtk/gtk_mod.c	/^	MQ_POPUP,$/;"	e	enum:gtk_mod_events	file:
MQ_QUIT	baresip/modules/gtk/gtk_mod.c	/^	MQ_QUIT,$/;"	e	enum:gtk_mod_events	file:
MQ_SELECT_UA	baresip/modules/gtk/gtk_mod.c	/^	MQ_SELECT_UA,$/;"	e	enum:gtk_mod_events	file:
MQ_TRANSFER	baresip/modules/gtk/call_window.c	/^	MQ_TRANSFER,$/;"	e	enum:call_window_events	file:
MTU_DEFAULT	re-0.5.6/src/tls/openssl/tls_udp.c	/^	MTU_DEFAULT  = 1400,$/;"	e	enum:__anon131	file:
MTU_FALLBACK	re-0.5.6/src/tls/openssl/tls_udp.c	/^	MTU_FALLBACK = 548,$/;"	e	enum:__anon131	file:
MT_APPLICATION	baresip/modules/gzrtp/stream.h	/^	MT_APPLICATION,$/;"	e	enum:StreamMediaType
MT_AUDIO	baresip/modules/gzrtp/stream.h	/^	MT_AUDIO,$/;"	e	enum:StreamMediaType
MT_MESSAGE	baresip/modules/gzrtp/stream.h	/^	MT_MESSAGE$/;"	e	enum:StreamMediaType
MT_TEXT	baresip/modules/gzrtp/stream.h	/^	MT_TEXT,$/;"	e	enum:StreamMediaType
MT_UNKNOWN	baresip/modules/gzrtp/stream.h	/^	MT_UNKNOWN = 0,$/;"	e	enum:StreamMediaType
MT_VIDEO	baresip/modules/gzrtp/stream.h	/^	MT_VIDEO,$/;"	e	enum:StreamMediaType
M_PI	baresip/modules/cairo/cairo.c	18;"	d	file:
M_PI	rem-0.5.2/src/autone/tone.c	16;"	d	file:
NATPMP_DELAY	baresip/modules/natpmp/libnatpmp.c	/^	NATPMP_DELAY   =  250,$/;"	e	enum:__anon68	file:
NATPMP_MAXTX	baresip/modules/natpmp/libnatpmp.c	/^	NATPMP_MAXTX   =    9,$/;"	e	enum:__anon68	file:
NATPMP_NETWORK_FAILURE	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_NETWORK_FAILURE  = 3,$/;"	e	enum:natpmp_result
NATPMP_OP_EXTERNAL	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_OP_EXTERNAL    = 0,$/;"	e	enum:natpmp_op
NATPMP_OP_MAPPING_TCP	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_OP_MAPPING_TCP = 2,$/;"	e	enum:natpmp_op
NATPMP_OP_MAPPING_UDP	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_OP_MAPPING_UDP = 1,$/;"	e	enum:natpmp_op
NATPMP_OUT_OF_RESOURCES	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_OUT_OF_RESOURCES = 4,$/;"	e	enum:natpmp_result
NATPMP_PORT	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_PORT    = 5351,$/;"	e	enum:__anon69
NATPMP_REFUSED	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_REFUSED          = 2,$/;"	e	enum:natpmp_result
NATPMP_SUCCESS	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_SUCCESS          = 0,$/;"	e	enum:natpmp_result
NATPMP_UNSUP_OPCODE	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_UNSUP_OPCODE     = 5$/;"	e	enum:natpmp_result
NATPMP_UNSUP_VERSION	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_UNSUP_VERSION    = 1,$/;"	e	enum:natpmp_result
NATPMP_VERSION	baresip/modules/natpmp/libnatpmp.h	/^	NATPMP_VERSION =    0,$/;"	e	enum:__anon69
NAT_TYPE_ADDR_DEP	re-0.5.6/include/re_natbd.h	/^	NAT_TYPE_ADDR_DEP      = 2,  \/**< Address-Dependent          *\/$/;"	e	enum:nat_type
NAT_TYPE_ADDR_PORT_DEP	re-0.5.6/include/re_natbd.h	/^	NAT_TYPE_ADDR_PORT_DEP = 3   \/**< Address and Port-Dependent *\/$/;"	e	enum:nat_type
NAT_TYPE_ENDP_INDEP	re-0.5.6/include/re_natbd.h	/^	NAT_TYPE_ENDP_INDEP    = 1,  \/**< Endpoint-Independent       *\/$/;"	e	enum:nat_type
NAT_TYPE_UNKNOWN	re-0.5.6/include/re_natbd.h	/^	NAT_TYPE_UNKNOWN       = 0,  \/**< Unknown type               *\/$/;"	e	enum:nat_type
NB_SERIAL_MAX	baresip/modules/amr/amr.c	51;"	d	file:
NET_ADDRSTRLEN	re-0.5.6/include/re_net.h	42;"	d
NET_ADDRSTRLEN	re-0.5.6/include/re_net.h	44;"	d
NET_MAX_NS	baresip/include/baresip.h	20;"	d
NLMSG_NEXT	re-0.5.6/src/net/linux/rt.c	36;"	d	file:
NLMSG_NEXT	re-0.5.6/src/net/linux/rt.c	37;"	d	file:
NONCE_EXPIRES	baresip/test/sip/domain.c	/^	NONCE_EXPIRES = 300,$/;"	e	enum:__anon96	file:
NONCE_EXPIRES	re-0.5.6/src/http/auth.c	/^	NONCE_EXPIRES  = 300,$/;"	e	enum:__anon106	file:
NONCE_MIN_SIZE	baresip/test/sip/auth.c	/^	NONCE_MIN_SIZE = 33,$/;"	e	enum:__anon97	file:
NONCE_MIN_SIZE	re-0.5.6/src/http/auth.c	/^	NONCE_MIN_SIZE = 33,$/;"	e	enum:__anon106	file:
NORMAL_TWIST	rem-0.5.2/src/dtmf/dec.c	14;"	d	file:
NOTIFY_TIMEOUT	re-0.5.6/src/sipevent/subscribe.c	/^	NOTIFY_TIMEOUT  = 10000,$/;"	e	enum:__anon102	file:
NO_MESSAGE	baresip/modules/gzrtp/messages.cpp	19;"	d	file:
NR_CODECS	baresip/modules/l16/l16.c	/^enum {NR_CODECS = 8};$/;"	e	enum:__anon66	file:
NSAMP	baresip/modules/bv32/bv32.c	/^	NSAMP        = 80,$/;"	e	enum:__anon73	file:
NS_IN6ADDRSZ	re-0.5.6/src/sa/ntop.c	41;"	d	file:
NS_IN6ADDRSZ	re-0.5.6/src/sa/pton.c	38;"	d	file:
NS_INADDRSZ	re-0.5.6/src/sa/pton.c	37;"	d	file:
NS_INT16SZ	re-0.5.6/src/sa/ntop.c	42;"	d	file:
NS_INT16SZ	re-0.5.6/src/sa/pton.c	39;"	d	file:
NTX_MAX	re-0.5.6/src/dns/client.c	/^	NTX_MAX = 20,$/;"	e	enum:__anon101	file:
NULL	re-0.5.6/include/re_types.h	106;"	d
NUM_SAMPLES	baresip/test/play.c	12;"	d	file:
NUM_SIZE	re-0.5.6/src/fmt/print.c	/^	NUM_SIZE = 64$/;"	e	enum:__anon132	file:
N_PLAY_QUEUE_BUFFERS	baresip/modules/opensles/player.c	14;"	d	file:
N_REC_QUEUE_BUFFERS	baresip/modules/opensles/recorder.c	15;"	d	file:
OBJS	baresip/Makefile	/^OBJS      := $(patsubst %.c,$(BUILD)\/src\/%.o,$(filter %.c,$(SRCS)))$/;"	m
OBJS	re-0.5.6/Makefile	/^OBJS	?= $(patsubst %.c,$(BUILD)\/%.o,$(SRCS))$/;"	m
OBJS	rem-0.5.2/Makefile	/^OBJS	?= $(patsubst %.c,$(BUILD)\/%.o,$(filter %.c,$(SRCS)))$/;"	m
ODICT_ARRAY	re-0.5.6/include/re_odict.h	/^	ODICT_ARRAY,$/;"	e	enum:odict_type
ODICT_BOOL	re-0.5.6/include/re_odict.h	/^	ODICT_BOOL,$/;"	e	enum:odict_type
ODICT_DOUBLE	re-0.5.6/include/re_odict.h	/^	ODICT_DOUBLE,$/;"	e	enum:odict_type
ODICT_INT	re-0.5.6/include/re_odict.h	/^	ODICT_INT,$/;"	e	enum:odict_type
ODICT_NULL	re-0.5.6/include/re_odict.h	/^	ODICT_NULL,$/;"	e	enum:odict_type
ODICT_OBJECT	re-0.5.6/include/re_odict.h	/^	ODICT_OBJECT,$/;"	e	enum:odict_type
ODICT_STRING	re-0.5.6/include/re_odict.h	/^	ODICT_STRING,$/;"	e	enum:odict_type
OFFSET_MASK	re-0.5.6/src/dns/dname.c	17;"	d	file:
OMX_ERROR_NONE	baresip/modules/omx/omx.h	19;"	d
OMX_VERSION	baresip/modules/omx/omx.h	17;"	d
OMX_VERSION	baresip/modules/omx/omx.h	18;"	d
OPCODE	re-0.5.6/src/dns/hdr.c	/^	OPCODE              = 11,$/;"	e	enum:__anon99	file:
OPEN	re-0.5.6/src/websock/websock.c	/^	OPEN,$/;"	e	enum:websock_state	file:
OPTIMIZE	re-0.5.6/mk/re.mk	/^OPTIMIZE := 1$/;"	m
OPT_SPEED	re-0.5.6/mk/re.mk	/^OPT_SPEED=1$/;"	m
OPT_SPEED	rem-0.5.2/Makefile	/^OPT_SPEED := 1$/;"	m
OS	re-0.5.6/include/re_sys.h	28;"	d
OS	re-0.5.6/include/re_sys.h	30;"	d
OS	re-0.5.6/mk/re.mk	/^	OS   := win32$/;"	m
OS	re-0.5.6/mk/re.mk	/^OS        := $(shell uname -s | sed -e s\/SunOS\/solaris\/ | tr "[A-Z]" "[a-z]")$/;"	m
PANEL_HEIGHT	baresip/modules/vidinfo/vidinfo.h	11;"	d
PASS	baresip/test/ua.c	365;"	d	file:
PAYLOAD_SIZE	re-0.5.6/src/telev/telev.c	/^	PAYLOAD_SIZE  = 4,$/;"	e	enum:__anon137	file:
PEDANTIC	re-0.5.6/mk/re.mk	/^PEDANTIC := 1$/;"	m
PERM_HASH_SIZE	re-0.5.6/src/turn/turnc.c	/^	PERM_HASH_SIZE = 16,$/;"	e	enum:__anon121	file:
PERM_LIFETIME	re-0.5.6/src/turn/perm.c	/^	PERM_LIFETIME = 300,$/;"	e	enum:__anon118	file:
PERM_REFRESH	re-0.5.6/src/turn/perm.c	/^	PERM_REFRESH = 250,$/;"	e	enum:__anon118	file:
PI	rem-0.5.2/src/goertzel/goertzel.c	12;"	d	file:
PICUP_INTERVAL	baresip/src/video.c	/^	PICUP_INTERVAL  = 500,$/;"	e	enum:__anon16	file:
PKT_TYPE_RTCP	baresip/modules/gzrtp/stream.cpp	/^	PKT_TYPE_RTCP = 2,$/;"	e	enum:pkt_type	file:
PKT_TYPE_RTCP	baresip/modules/zrtp/zrtp.c	/^	PKT_TYPE_RTCP = 2,$/;"	e	enum:pkt_type	file:
PKT_TYPE_RTP	baresip/modules/gzrtp/stream.cpp	/^	PKT_TYPE_RTP = 1,$/;"	e	enum:pkt_type	file:
PKT_TYPE_RTP	baresip/modules/zrtp/zrtp.c	/^	PKT_TYPE_RTP = 1,$/;"	e	enum:pkt_type	file:
PKT_TYPE_UNKNOWN	baresip/modules/gzrtp/stream.cpp	/^	PKT_TYPE_UNKNOWN = 0,$/;"	e	enum:pkt_type	file:
PKT_TYPE_UNKNOWN	baresip/modules/zrtp/zrtp.c	/^	PKT_TYPE_UNKNOWN = 0,$/;"	e	enum:pkt_type	file:
PKT_TYPE_ZRTP	baresip/modules/gzrtp/stream.cpp	/^	PKT_TYPE_ZRTP = 4$/;"	e	enum:pkt_type	file:
PKT_TYPE_ZRTP	baresip/modules/zrtp/zrtp.c	/^	PKT_TYPE_ZRTP = 4$/;"	e	enum:pkt_type	file:
PL	re-0.5.6/include/re_fmt.h	22;"	d
PL_INIT	re-0.5.6/include/re_fmt.h	25;"	d
PREC	baresip/test/aulevel.c	17;"	d	file:
PRECISION	baresip/test/mos.c	18;"	d	file:
PREDEF	re-0.5.6/mk/re.mk	/^PREDEF	:= $(shell $(CC) -dM -E -x c $(EXTRA_CFLAGS) $(CFLAGS) \/dev\/null)$/;"	m
PREFIX	baresip/Makefile	/^PREFIX  := \/usr$/;"	m
PREFIX	baresip/Makefile	/^PREFIX  := \/usr\/local$/;"	m
PREFIX	baresip/src/config.c	23;"	d	file:
PREFIX	baresip/src/play.c	30;"	d	file:
PREFIX	re-0.5.6/Makefile	/^PREFIX  ?= \/usr$/;"	m
PREFIX	re-0.5.6/Makefile	/^PREFIX  ?= \/usr\/local$/;"	m
PREFIX	rem-0.5.2/Makefile	/^PREFIX  := \/usr$/;"	m
PREFIX	rem-0.5.2/Makefile	/^PREFIX  := \/usr\/local$/;"	m
PRESENCE_BUSY	baresip/include/baresip.h	/^	PRESENCE_BUSY$/;"	e	enum:presence_status
PRESENCE_CLOSED	baresip/include/baresip.h	/^	PRESENCE_CLOSED,$/;"	e	enum:presence_status
PRESENCE_OPEN	baresip/include/baresip.h	/^	PRESENCE_OPEN,$/;"	e	enum:presence_status
PRESENCE_UNKNOWN	baresip/include/baresip.h	/^	PRESENCE_UNKNOWN,$/;"	e	enum:presence_status
PRESZ	baresip/modules/gzrtp/stream.cpp	/^	PRESZ = 36  \/* Preamble size for TURN\/STUN header *\/$/;"	e	enum:__anon57	file:
PRESZ	baresip/modules/zrtp/zrtp.c	/^	PRESZ = 36  \/* Preamble size for TURN\/STUN header *\/$/;"	e	enum:__anon86	file:
PROCEEDING	re-0.5.6/src/sip/ctrans.c	/^	PROCEEDING,$/;"	e	enum:state	file:
PROCEEDING	re-0.5.6/src/sip/strans.c	/^	PROCEEDING,$/;"	e	enum:state	file:
PROJECT	baresip/Makefile	/^PROJECT	  := baresip$/;"	m
PROJECT	re-0.5.6/Makefile	/^PROJECT   := re$/;"	m
PROJECT	rem-0.5.2/Makefile	/^PROJECT   := rem$/;"	m
PTIME	baresip/modules/aubridge/device.c	/^enum {PTIME = 20};$/;"	e	enum:__anon58	file:
PTIME	baresip/modules/auloop/auloop.c	30;"	d	file:
PTIME	baresip/modules/opensles/player.c	15;"	d	file:
PTIME	baresip/modules/opensles/recorder.c	16;"	d	file:
PTIME	baresip/src/call.c	/^	PTIME           = 20,    \/**< Packet time for audio               *\/$/;"	e	enum:__anon8	file:
PTIME	baresip/src/play.c	/^enum {PTIME = 40};$/;"	e	enum:__anon19	file:
PT_CN	baresip/src/core.h	/^	PT_CN       = 13,$/;"	e	enum:__anon1
PT_DYN_MAX	baresip/src/core.h	/^	PT_DYN_MAX  = 127$/;"	e	enum:__anon1
PT_DYN_MIN	baresip/src/core.h	/^	PT_DYN_MIN  = 96,$/;"	e	enum:__anon1
PT_STAT_MAX	baresip/src/core.h	/^	PT_STAT_MAX = 95,$/;"	e	enum:__anon1
PT_STAT_MIN	baresip/src/core.h	/^	PT_STAT_MIN = 0,$/;"	e	enum:__anon1
P_FRAME	baresip/modules/avcodec/h26x.h	/^enum {I_FRAME=0, P_FRAME=1};$/;"	e	enum:__anon33
QUERY_HASH_SIZE	re-0.5.6/src/dns/client.c	/^	QUERY_HASH_SIZE = 16,$/;"	e	enum:__anon101	file:
QUERY_RESPONSE	re-0.5.6/src/dns/hdr.c	/^	QUERY_RESPONSE      = 15,$/;"	e	enum:__anon99	file:
QUEUE_SIZE	re-0.5.6/src/telev/telev.c	/^	QUEUE_SIZE    = 8192,$/;"	e	enum:__anon137	file:
QueryInterface	baresip/modules/dshow/dshow.cpp	/^	STDMETHOD(QueryInterface)(REFIID InterfaceIdentifier,$/;"	f	class:Grabber
R0	re-0.5.6/src/sha/sha1.c	118;"	d	file:
R1	re-0.5.6/src/sha/sha1.c	120;"	d	file:
R2	re-0.5.6/src/sha/sha1.c	122;"	d	file:
R3	re-0.5.6/src/sha/sha1.c	124;"	d	file:
R4	re-0.5.6/src/sha/sha1.c	126;"	d	file:
RAND_CHECK	re-0.5.6/src/sys/rand.c	35;"	d	file:
RAND_CHECK	re-0.5.6/src/sys/rand.c	40;"	d	file:
RAND_DEBUG	re-0.5.6/src/sys/rand.c	24;"	d	file:
RANLIB	re-0.5.6/mk/re.mk	/^	RANLIB		:= $(CROSS_COMPILE)ranlib$/;"	m
READ_BUFFERS	baresip/modules/winwave/src.c	14;"	d	file:
RECURSION_AVAILABLE	re-0.5.6/src/dns/hdr.c	/^	RECURSION_AVAILABLE =  7,$/;"	e	enum:__anon99	file:
RECURSION_DESIRED	re-0.5.6/src/dns/hdr.c	/^	RECURSION_DESIRED   =  8,$/;"	e	enum:__anon99	file:
RECV_TIMEOUT	re-0.5.6/src/http/client.c	/^	RECV_TIMEOUT = 60000,$/;"	e	enum:__anon107	file:
REG_INTERVAL	baresip/src/account.c	/^	REG_INTERVAL    = 3600,$/;"	e	enum:__anon9	file:
RELATIVE_KEY	rem-0.5.2/src/dtmf/dec.c	16;"	d	file:
RELATIVE_SUM	rem-0.5.2/src/dtmf/dec.c	17;"	d	file:
RELEASE_VAL	baresip/modules/stdio/stdio.c	/^	RELEASE_VAL = 250  \/**< Key release value in [ms] *\/$/;"	e	enum:__anon95	file:
RELEASE_VAL	baresip/modules/wincons/wincons.c	/^	RELEASE_VAL = 250  \/**< Key release value in [ms] *\/$/;"	e	enum:__anon27	file:
REM_H__	rem-0.5.2/include/rem.h	8;"	d
RESUB_FAILC_MAX	re-0.5.6/src/sipevent/subscribe.c	/^	RESUB_FAILC_MAX = 7,$/;"	e	enum:__anon102	file:
RESUB_FAIL_WAIT	re-0.5.6/src/sipevent/subscribe.c	/^	RESUB_FAIL_WAIT = 60000,$/;"	e	enum:__anon102	file:
RETRY_WAIT	baresip/modules/rst/rst.c	/^	RETRY_WAIT = 10000,$/;"	e	enum:__anon94	file:
REVERSE_TWIST	rem-0.5.2/src/dtmf/dec.c	15;"	d	file:
RE_H__	re-0.5.6/include/re.h	8;"	d
ROTATE_LEFT	re-0.5.6/src/md5/md5.c	200;"	d	file:
ROUNDUP	re-0.5.6/src/net/bsd/brt.c	26;"	d	file:
ROUTE_OFFSET	re-0.5.6/src/sip/dialog.c	/^	ROUTE_OFFSET = 7,$/;"	e	enum:__anon126	file:
RPM	re-0.5.6/mk/re.mk	/^RPM := $(shell [ -d \/usr\/src\/redhat ] 2>\/dev\/null && echo "redhat")$/;"	m
RPM	re-0.5.6/mk/re.mk	/^RPM := $(shell [ -d \/usr\/src\/rpm ] 2>\/dev\/null && echo "rpm")$/;"	m
RTA_NEXT	re-0.5.6/src/net/linux/rt.c	33;"	d	file:
RTA_NEXT	re-0.5.6/src/net/linux/rt.c	34;"	d	file:
RTCP_APP	re-0.5.6/include/re_rtp.h	/^	RTCP_APP   = 204,  \/**< Application-defined                    *\/$/;"	e	enum:rtcp_type
RTCP_APP_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_APP_SIZE  =   8,  \/**< Size of Application packet   *\/$/;"	e	enum:__anon146
RTCP_AVB	re-0.5.6/include/re_rtp.h	/^	RTCP_AVB   = 208,  \/**< AVB RTCP Packet (IEEE1733)             *\/$/;"	e	enum:rtcp_type
RTCP_BYE	re-0.5.6/include/re_rtp.h	/^	RTCP_BYE   = 203,  \/**< Goodbye                                *\/$/;"	e	enum:rtcp_type
RTCP_FB_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_FB_SIZE   =   8,  \/**< Size of Feedback packets     *\/$/;"	e	enum:__anon146
RTCP_FIR	re-0.5.6/include/re_rtp.h	/^	RTCP_FIR   = 192,  \/**< Full INTRA-frame Request (RFC 2032)    *\/$/;"	e	enum:rtcp_type
RTCP_FIR_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_FIR_SIZE  =   4,  \/**< Size of FIR packet           *\/$/;"	e	enum:__anon146
RTCP_HDR_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_HDR_SIZE  =   4,  \/**< Size of common RTCP header   *\/$/;"	e	enum:__anon146
RTCP_HEADROOM	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_HEADROOM  =   4,  \/**< Headroom in RTCP packets     *\/$/;"	e	enum:__anon146
RTCP_INTERVAL	re-0.5.6/src/rtp/sess.c	/^	RTCP_INTERVAL = 5000,  \/**< Interval in [ms] between sending reports *\/$/;"	e	enum:__anon145	file:
RTCP_MAX_SDES	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_MAX_SDES  = 255,  \/**< Maximum text length for SDES *\/$/;"	e	enum:__anon146
RTCP_NACK	re-0.5.6/include/re_rtp.h	/^	RTCP_NACK  = 193,  \/**< Negative Acknowledgement (RFC 2032)    *\/$/;"	e	enum:rtcp_type
RTCP_NACK_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_NACK_SIZE =   8,  \/**< Size of NACK packet          *\/$/;"	e	enum:__anon146
RTCP_PSFB	re-0.5.6/include/re_rtp.h	/^	RTCP_PSFB  = 206,  \/**< Payload-specific FB message (RFC 4585) *\/$/;"	e	enum:rtcp_type
RTCP_PSFB_AFB	re-0.5.6/include/re_rtp.h	/^	RTCP_PSFB_AFB  = 15,  \/**< Application layer Feedback Messages *\/$/;"	e	enum:rtcp_psfb
RTCP_PSFB_PLI	re-0.5.6/include/re_rtp.h	/^	RTCP_PSFB_PLI  = 1,   \/**< Picture Loss Indication (PLI) *\/$/;"	e	enum:rtcp_psfb
RTCP_PSFB_SLI	re-0.5.6/include/re_rtp.h	/^	RTCP_PSFB_SLI  = 2,   \/**< Slice Loss Indication (SLI)   *\/$/;"	e	enum:rtcp_psfb
RTCP_RR	re-0.5.6/include/re_rtp.h	/^	RTCP_RR    = 201,  \/**< Receiver Report                        *\/$/;"	e	enum:rtcp_type
RTCP_RR_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_RR_SIZE   =  24,  \/**< Size of Report Block         *\/$/;"	e	enum:__anon146
RTCP_RTPFB	re-0.5.6/include/re_rtp.h	/^	RTCP_RTPFB = 205,  \/**< Transport layer FB message (RFC 4585)  *\/$/;"	e	enum:rtcp_type
RTCP_RTPFB_GNACK	re-0.5.6/include/re_rtp.h	/^	RTCP_RTPFB_GNACK = 1  \/**< Generic NACK *\/$/;"	e	enum:rtcp_rtpfb
RTCP_SDES	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES  = 202,  \/**< Source Description                     *\/$/;"	e	enum:rtcp_type
RTCP_SDES_CNAME	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_CNAME = 1,  \/**< Canonical name                 *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_EMAIL	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_EMAIL = 3,  \/**< User's electronic mail address *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_END	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_END   = 0,  \/**< End of SDES list               *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_LOC	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_LOC   = 5,  \/**< Geographic user location       *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_MIN_SIZE	re-0.5.6/src/rtp/sdes.c	/^	RTCP_SDES_MIN_SIZE = 1,$/;"	e	enum:__anon144	file:
RTCP_SDES_NAME	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_NAME  = 2,  \/**< User name                      *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_NOTE	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_NOTE  = 7,  \/**< Notice about the source        *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_PHONE	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_PHONE = 4,  \/**< User's phone number            *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_PRIV	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_PRIV  = 8   \/**< Private extension              *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SDES_TOOL	re-0.5.6/include/re_rtp.h	/^	RTCP_SDES_TOOL  = 6,  \/**< Name of application or tool    *\/$/;"	e	enum:rtcp_sdes_type
RTCP_SR	re-0.5.6/include/re_rtp.h	/^	RTCP_SR    = 200,  \/**< Sender Report                          *\/$/;"	e	enum:rtcp_type
RTCP_SRC_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_SRC_SIZE  =   4,  \/**< Size of Source field         *\/$/;"	e	enum:__anon146
RTCP_SR_SIZE	re-0.5.6/src/rtp/rtcp.h	/^	RTCP_SR_SIZE   =  20,  \/**< Size of Sender Information   *\/$/;"	e	enum:__anon146
RTCP_VERSION	re-0.5.6/include/re_rtp.h	/^	RTCP_VERSION    =  2,  \/**< Supported RTCP Version             *\/$/;"	e	enum:__anon179
RTCP_XR	re-0.5.6/include/re_rtp.h	/^	RTCP_XR    = 207,  \/**< Extended Report (RFC 3611)             *\/$/;"	e	enum:rtcp_type
RTLD_LOCAL	re-0.5.6/src/mod/dl.c	17;"	d	file:
RTM_RTA	re-0.5.6/src/net/linux/rt.c	31;"	d	file:
RTM_RTA	re-0.5.6/src/net/linux/rt.c	32;"	d	file:
RTPEXT_HDR_SIZE	baresip/src/core.h	283;"	d
RTPEXT_ID_MAX	baresip/src/core.h	/^	RTPEXT_ID_MAX  = 14,$/;"	e	enum:__anon4
RTPEXT_ID_MIN	baresip/src/core.h	/^	RTPEXT_ID_MIN  =  1,$/;"	e	enum:__anon4
RTPEXT_LEN_MAX	baresip/src/core.h	/^	RTPEXT_LEN_MAX = 16,$/;"	e	enum:__anon5
RTPEXT_LEN_MIN	baresip/src/core.h	/^	RTPEXT_LEN_MIN =  1,$/;"	e	enum:__anon5
RTPEXT_TYPE_MAGIC	baresip/src/core.h	284;"	d
RTP_CHECK_INTERVAL	baresip/src/stream.c	/^	RTP_CHECK_INTERVAL = 1000  \/* how often to check for RTP [ms] *\/$/;"	e	enum:__anon21	file:
RTP_DYNPT_END	re-0.5.6/src/sdp/sdp.h	/^	RTP_DYNPT_END   = 127,$/;"	e	enum:__anon103
RTP_DYNPT_START	re-0.5.6/src/sdp/sdp.h	/^	RTP_DYNPT_START =  96,$/;"	e	enum:__anon103
RTP_HEADER_SIZE	re-0.5.6/include/re_rtp.h	/^	RTP_HEADER_SIZE = 12   \/**< Number of bytes in RTP Header      *\/$/;"	e	enum:__anon179
RTP_PRESZ	baresip/src/video.c	/^	RTP_PRESZ       = 4 + RTP_HEADER_SIZE, \/**< TURN and RTP header *\/$/;"	e	enum:__anon16	file:
RTP_RECV_SIZE	baresip/src/stream.c	/^	RTP_RECV_SIZE = 8192,$/;"	e	enum:__anon21	file:
RTP_SEQ_MOD	re-0.5.6/src/rtp/source.c	/^	RTP_SEQ_MOD = 1<<16,$/;"	e	enum:__anon147	file:
RTP_TIMEOUT_MS	baresip/test/call.c	411;"	d	file:
RTP_TRAILSZ	baresip/src/video.c	/^	RTP_TRAILSZ     = 12 + 4,              \/**< SRTP\/SRTCP trailer  *\/$/;"	e	enum:__anon16	file:
RTP_VERSION	re-0.5.6/include/re_rtp.h	/^	RTP_VERSION     =  2,  \/**< Defines the RTP version we support *\/$/;"	e	enum:__anon179
RT_MSGHDR_ALIGNMENT	re-0.5.6/src/net/bsd/brt.c	21;"	d	file:
RT_MSGHDR_ALIGNMENT	re-0.5.6/src/net/bsd/brt.c	23;"	d	file:
SA_ADDR	re-0.5.6/include/re_sa.h	/^	SA_ADDR      = 1<<0,$/;"	e	enum:sa_flag
SA_ALL	re-0.5.6/include/re_sa.h	/^	SA_ALL       = SA_ADDR | SA_PORT$/;"	e	enum:sa_flag
SA_INIT	baresip/src/config.c	18;"	d	file:
SA_INIT	baresip/src/config.c	19;"	d	file:
SA_PORT	re-0.5.6/include/re_sa.h	/^	SA_PORT      = 1<<1,$/;"	e	enum:sa_flag
SCALE	rem-0.5.2/src/autone/tone.c	12;"	d	file:
SDP_BANDWIDTH_AS	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_AS,      \/**< [kbit\/s] Application Specific     *\/$/;"	e	enum:sdp_bandwidth
SDP_BANDWIDTH_CT	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_CT = 0,  \/**< [kbit\/s] Conference Total         *\/$/;"	e	enum:sdp_bandwidth
SDP_BANDWIDTH_MAX	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_MAX,$/;"	e	enum:sdp_bandwidth
SDP_BANDWIDTH_MIN	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_MIN = 0,$/;"	e	enum:sdp_bandwidth
SDP_BANDWIDTH_RR	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_RR,      \/**< [bit\/s] RTCP Receivers (RFC 3556) *\/$/;"	e	enum:sdp_bandwidth
SDP_BANDWIDTH_RS	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_RS,      \/**< [bit\/s] RTCP Senders (RFC 3556)   *\/$/;"	e	enum:sdp_bandwidth
SDP_BANDWIDTH_TIAS	re-0.5.6/include/re_sdp.h	/^	SDP_BANDWIDTH_TIAS,    \/**< [bit\/s] Transport Independent Application$/;"	e	enum:sdp_bandwidth
SDP_INACTIVE	re-0.5.6/include/re_sdp.h	/^	SDP_INACTIVE = 0,$/;"	e	enum:sdp_dir
SDP_RECVONLY	re-0.5.6/include/re_sdp.h	/^	SDP_RECVONLY = 1,$/;"	e	enum:sdp_dir
SDP_SENDONLY	re-0.5.6/include/re_sdp.h	/^	SDP_SENDONLY = 2,$/;"	e	enum:sdp_dir
SDP_SENDRECV	re-0.5.6/include/re_sdp.h	/^	SDP_SENDRECV = 3,$/;"	e	enum:sdp_dir
SDP_VERSION	re-0.5.6/include/re_sdp.h	/^	SDP_VERSION = 0$/;"	e	enum:__anon175
SENDING	re-0.5.6/src/telev/telev.c	/^	SENDING,$/;"	e	enum:state	file:
SET	re-0.5.6/src/md5/md5.c	206;"	d	file:
SET	re-0.5.6/src/md5/md5.c	226;"	d	file:
SET	re-0.5.6/src/md5/md5.c	232;"	d	file:
SET	re-0.5.6/src/md5/md5.c	252;"	d	file:
SET	re-0.5.6/src/md5/md5.c	258;"	d	file:
SET	re-0.5.6/src/md5/md5.c	278;"	d	file:
SET	re-0.5.6/src/md5/md5.c	284;"	d	file:
SET	re-0.5.6/src/md5/md5.c	304;"	d	file:
SHA1HANDSOFF	re-0.5.6/src/sha/sha1.c	82;"	d	file:
SHA1_CTX	re-0.5.6/include/re_sha.h	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon168
SHA1_DIGEST_SIZE	re-0.5.6/include/re_sha.h	26;"	d
SHA1_Final	re-0.5.6/src/sha/sha1.c	/^void SHA1_Final(uint8_t digest[SHA1_DIGEST_SIZE], SHA1_CTX* context)$/;"	f
SHA1_Init	re-0.5.6/src/sha/sha1.c	/^void SHA1_Init(SHA1_CTX* context)$/;"	f
SHA1_Transform	re-0.5.6/src/sha/sha1.c	/^void SHA1_Transform(uint32_t state[5], const uint8_t buffer[64])$/;"	f
SHA1_Update	re-0.5.6/src/sha/sha1.c	/^void SHA1_Update(SHA1_CTX* context, const void *p, size_t len)$/;"	f
SHARED	baresip/Makefile	/^SHARED  := lib$(PROJECT)$(LIB_SUFFIX)$/;"	m
SHARED	re-0.5.6/Makefile	/^SHARED  := libre$(LIB_SUFFIX)$/;"	m
SHARED	rem-0.5.2/Makefile	/^SHARED  := librem$(LIB_SUFFIX)$/;"	m
SHARE_PATH	baresip/Makefile	/^SHARE_PATH := $(PREFIX)\/share\/$(PROJECT)$/;"	m
SHA_BLOCKSIZE	re-0.5.6/src/hmac/hmac_sha1.c	20;"	d	file:
SHA_CTX	re-0.5.6/include/re_sha.h	/^typedef SHA1_CTX SHA_CTX;$/;"	t
SHA_DIGEST_LENGTH	re-0.5.6/include/re_sha.h	28;"	d
SHUTDOWN_DELAY	baresip/modules/presence/subscriber.c	/^	SHUTDOWN_DELAY = 500  \/**< Delay before un-registering [ms] *\/$/;"	e	enum:__anon48	file:
SINGLE_CHANNEL	baresip/modules/mpa/mpa.h	/^	enum { AUTO=0, STEREO, JOINT_STEREO, SINGLE_CHANNEL, DUAL_CHANNEL }$/;"	e	enum:mpa_param::__anon28
SIPEVENT_ACTIVE	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_ACTIVE = 0,$/;"	e	enum:sipevent_subst
SIPEVENT_DEACTIVATED	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_DEACTIVATED = 0,$/;"	e	enum:sipevent_reason
SIPEVENT_GIVEUP	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_GIVEUP,$/;"	e	enum:sipevent_reason
SIPEVENT_NORESOURCE	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_NORESOURCE,$/;"	e	enum:sipevent_reason
SIPEVENT_PENDING	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_PENDING,$/;"	e	enum:sipevent_subst
SIPEVENT_PROBATION	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_PROBATION,$/;"	e	enum:sipevent_reason
SIPEVENT_REJECTED	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_REJECTED,$/;"	e	enum:sipevent_reason
SIPEVENT_TERMINATED	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_TERMINATED,$/;"	e	enum:sipevent_subst
SIPEVENT_TIMEOUT	re-0.5.6/include/re_sipevent.h	/^	SIPEVENT_TIMEOUT,$/;"	e	enum:sipevent_reason
SIP_HDR_ACCEPT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ACCEPT                        = 3186,$/;"	e	enum:sip_hdrid
SIP_HDR_ACCEPT_CONTACT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ACCEPT_CONTACT                =  232,$/;"	e	enum:sip_hdrid
SIP_HDR_ACCEPT_ENCODING	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ACCEPT_ENCODING               =  708,$/;"	e	enum:sip_hdrid
SIP_HDR_ACCEPT_LANGUAGE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ACCEPT_LANGUAGE               = 2867,$/;"	e	enum:sip_hdrid
SIP_HDR_ACCEPT_RESOURCE_PRIORITY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ACCEPT_RESOURCE_PRIORITY      = 1848,$/;"	e	enum:sip_hdrid
SIP_HDR_ALERT_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ALERT_INFO                    =  274,$/;"	e	enum:sip_hdrid
SIP_HDR_ALLOW	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ALLOW                         = 2429,$/;"	e	enum:sip_hdrid
SIP_HDR_ALLOW_EVENTS	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ALLOW_EVENTS                  =   66,$/;"	e	enum:sip_hdrid
SIP_HDR_ANSWER_MODE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ANSWER_MODE                   = 2905,$/;"	e	enum:sip_hdrid
SIP_HDR_AUTHENTICATION_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_AUTHENTICATION_INFO           = 3144,$/;"	e	enum:sip_hdrid
SIP_HDR_AUTHORIZATION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_AUTHORIZATION                 = 2503,$/;"	e	enum:sip_hdrid
SIP_HDR_CALL_ID	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CALL_ID                       = 3095,$/;"	e	enum:sip_hdrid
SIP_HDR_CALL_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CALL_INFO                     =  586,$/;"	e	enum:sip_hdrid
SIP_HDR_CONTACT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CONTACT                       =  229,$/;"	e	enum:sip_hdrid
SIP_HDR_CONTENT_DISPOSITION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CONTENT_DISPOSITION           = 1425,$/;"	e	enum:sip_hdrid
SIP_HDR_CONTENT_ENCODING	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CONTENT_ENCODING              =  580,$/;"	e	enum:sip_hdrid
SIP_HDR_CONTENT_LANGUAGE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CONTENT_LANGUAGE              = 3371,$/;"	e	enum:sip_hdrid
SIP_HDR_CONTENT_LENGTH	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CONTENT_LENGTH                = 3861,$/;"	e	enum:sip_hdrid
SIP_HDR_CONTENT_TYPE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CONTENT_TYPE                  =  809,$/;"	e	enum:sip_hdrid
SIP_HDR_CSEQ	re-0.5.6/include/re_sip.h	/^	SIP_HDR_CSEQ                          =  746,$/;"	e	enum:sip_hdrid
SIP_HDR_DATE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_DATE                          = 1027,$/;"	e	enum:sip_hdrid
SIP_HDR_ENCRYPTION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ENCRYPTION                    = 3125,$/;"	e	enum:sip_hdrid
SIP_HDR_ERROR_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ERROR_INFO                    =   21,$/;"	e	enum:sip_hdrid
SIP_HDR_EVENT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_EVENT                         = 3286,$/;"	e	enum:sip_hdrid
SIP_HDR_EXPIRES	re-0.5.6/include/re_sip.h	/^	SIP_HDR_EXPIRES                       = 1983,$/;"	e	enum:sip_hdrid
SIP_HDR_FLOW_TIMER	re-0.5.6/include/re_sip.h	/^	SIP_HDR_FLOW_TIMER                    =  584,$/;"	e	enum:sip_hdrid
SIP_HDR_FROM	re-0.5.6/include/re_sip.h	/^	SIP_HDR_FROM                          = 1963,$/;"	e	enum:sip_hdrid
SIP_HDR_HIDE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_HIDE                          =  283,$/;"	e	enum:sip_hdrid
SIP_HDR_HISTORY_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_HISTORY_INFO                  = 2582,$/;"	e	enum:sip_hdrid
SIP_HDR_IDENTITY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_IDENTITY                      = 2362,$/;"	e	enum:sip_hdrid
SIP_HDR_IDENTITY_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_IDENTITY_INFO                 =  980,$/;"	e	enum:sip_hdrid
SIP_HDR_IN_REPLY_TO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_IN_REPLY_TO                   = 1577,$/;"	e	enum:sip_hdrid
SIP_HDR_JOIN	re-0.5.6/include/re_sip.h	/^	SIP_HDR_JOIN                          = 3479,$/;"	e	enum:sip_hdrid
SIP_HDR_MAX_BREADTH	re-0.5.6/include/re_sip.h	/^	SIP_HDR_MAX_BREADTH                   = 3701,$/;"	e	enum:sip_hdrid
SIP_HDR_MAX_FORWARDS	re-0.5.6/include/re_sip.h	/^	SIP_HDR_MAX_FORWARDS                  = 3549,$/;"	e	enum:sip_hdrid
SIP_HDR_MIME_VERSION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_MIME_VERSION                  = 3659,$/;"	e	enum:sip_hdrid
SIP_HDR_MIN_EXPIRES	re-0.5.6/include/re_sip.h	/^	SIP_HDR_MIN_EXPIRES                   = 1121,$/;"	e	enum:sip_hdrid
SIP_HDR_MIN_SE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_MIN_SE                        = 2847,$/;"	e	enum:sip_hdrid
SIP_HDR_NONE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_NONE = -1$/;"	e	enum:sip_hdrid
SIP_HDR_ORGANIZATION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ORGANIZATION                  = 3247,$/;"	e	enum:sip_hdrid
SIP_HDR_PATH	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PATH                          = 2741,$/;"	e	enum:sip_hdrid
SIP_HDR_PERMISSION_MISSING	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PERMISSION_MISSING            = 1409,$/;"	e	enum:sip_hdrid
SIP_HDR_PRIORITY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PRIORITY                      = 3520,$/;"	e	enum:sip_hdrid
SIP_HDR_PRIVACY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PRIVACY                       = 3150,$/;"	e	enum:sip_hdrid
SIP_HDR_PRIV_ANSWER_MODE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PRIV_ANSWER_MODE              = 2476,$/;"	e	enum:sip_hdrid
SIP_HDR_PROXY_AUTHENTICATE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PROXY_AUTHENTICATE            =  116,$/;"	e	enum:sip_hdrid
SIP_HDR_PROXY_AUTHORIZATION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PROXY_AUTHORIZATION           = 2363,$/;"	e	enum:sip_hdrid
SIP_HDR_PROXY_REQUIRE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_PROXY_REQUIRE                 = 3562,$/;"	e	enum:sip_hdrid
SIP_HDR_P_ACCESS_NETWORK_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_ACCESS_NETWORK_INFO         = 1662,$/;"	e	enum:sip_hdrid
SIP_HDR_P_ANSWER_STATE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_ANSWER_STATE                =   42,$/;"	e	enum:sip_hdrid
SIP_HDR_P_ASSERTED_IDENTITY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_ASSERTED_IDENTITY           = 1233,$/;"	e	enum:sip_hdrid
SIP_HDR_P_ASSOCIATED_URI	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_ASSOCIATED_URI              =  900,$/;"	e	enum:sip_hdrid
SIP_HDR_P_CALLED_PARTY_ID	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_CALLED_PARTY_ID             = 3347,$/;"	e	enum:sip_hdrid
SIP_HDR_P_CHARGING_FUNCTION_ADDRESSES	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_CHARGING_FUNCTION_ADDRESSES = 2171,$/;"	e	enum:sip_hdrid
SIP_HDR_P_CHARGING_VECTOR	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_CHARGING_VECTOR             =   25,$/;"	e	enum:sip_hdrid
SIP_HDR_P_DCS_BILLING_INFO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_DCS_BILLING_INFO            = 2017,$/;"	e	enum:sip_hdrid
SIP_HDR_P_DCS_LAES	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_DCS_LAES                    =  693,$/;"	e	enum:sip_hdrid
SIP_HDR_P_DCS_OSPS	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_DCS_OSPS                    = 1788,$/;"	e	enum:sip_hdrid
SIP_HDR_P_DCS_REDIRECT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_DCS_REDIRECT                = 1872,$/;"	e	enum:sip_hdrid
SIP_HDR_P_DCS_TRACE_PARTY_ID	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_DCS_TRACE_PARTY_ID          = 3027,$/;"	e	enum:sip_hdrid
SIP_HDR_P_EARLY_MEDIA	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_EARLY_MEDIA                 = 2622,$/;"	e	enum:sip_hdrid
SIP_HDR_P_MEDIA_AUTHORIZATION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_MEDIA_AUTHORIZATION         = 1035,$/;"	e	enum:sip_hdrid
SIP_HDR_P_PREFERRED_IDENTITY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_PREFERRED_IDENTITY          = 1263,$/;"	e	enum:sip_hdrid
SIP_HDR_P_PROFILE_KEY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_PROFILE_KEY                 = 1904,$/;"	e	enum:sip_hdrid
SIP_HDR_P_REFUSED_URI_LIST	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_REFUSED_URI_LIST            = 1047,$/;"	e	enum:sip_hdrid
SIP_HDR_P_SERVED_USER	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_SERVED_USER                 = 1588,$/;"	e	enum:sip_hdrid
SIP_HDR_P_USER_DATABASE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_USER_DATABASE               = 2827,$/;"	e	enum:sip_hdrid
SIP_HDR_P_VISITED_NETWORK_ID	re-0.5.6/include/re_sip.h	/^	SIP_HDR_P_VISITED_NETWORK_ID          = 3867,$/;"	e	enum:sip_hdrid
SIP_HDR_RACK	re-0.5.6/include/re_sip.h	/^	SIP_HDR_RACK                          = 2523,$/;"	e	enum:sip_hdrid
SIP_HDR_REASON	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REASON                        = 3732,$/;"	e	enum:sip_hdrid
SIP_HDR_RECORD_ROUTE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_RECORD_ROUTE                  =  278,$/;"	e	enum:sip_hdrid
SIP_HDR_REFERRED_BY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REFERRED_BY                   = 3456,$/;"	e	enum:sip_hdrid
SIP_HDR_REFER_SUB	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REFER_SUB                     = 2458,$/;"	e	enum:sip_hdrid
SIP_HDR_REFER_TO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REFER_TO                      = 1521,$/;"	e	enum:sip_hdrid
SIP_HDR_REJECT_CONTACT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REJECT_CONTACT                =  285,$/;"	e	enum:sip_hdrid
SIP_HDR_REPLACES	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REPLACES                      = 2534,$/;"	e	enum:sip_hdrid
SIP_HDR_REPLY_TO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REPLY_TO                      = 2404,$/;"	e	enum:sip_hdrid
SIP_HDR_REQUEST_DISPOSITION	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REQUEST_DISPOSITION           = 3715,$/;"	e	enum:sip_hdrid
SIP_HDR_REQUIRE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_REQUIRE                       = 3905,$/;"	e	enum:sip_hdrid
SIP_HDR_RESOURCE_PRIORITY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_RESOURCE_PRIORITY             = 1643,$/;"	e	enum:sip_hdrid
SIP_HDR_RESPONSE_KEY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_RESPONSE_KEY                  = 1548,$/;"	e	enum:sip_hdrid
SIP_HDR_RETRY_AFTER	re-0.5.6/include/re_sip.h	/^	SIP_HDR_RETRY_AFTER                   =  409,$/;"	e	enum:sip_hdrid
SIP_HDR_ROUTE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_ROUTE                         =  661,$/;"	e	enum:sip_hdrid
SIP_HDR_RSEQ	re-0.5.6/include/re_sip.h	/^	SIP_HDR_RSEQ                          =  445,$/;"	e	enum:sip_hdrid
SIP_HDR_SECURITY_CLIENT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SECURITY_CLIENT               = 1358,$/;"	e	enum:sip_hdrid
SIP_HDR_SECURITY_SERVER	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SECURITY_SERVER               =  811,$/;"	e	enum:sip_hdrid
SIP_HDR_SECURITY_VERIFY	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SECURITY_VERIFY               =  519,$/;"	e	enum:sip_hdrid
SIP_HDR_SERVER	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SERVER                        =  973,$/;"	e	enum:sip_hdrid
SIP_HDR_SERVICE_ROUTE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SERVICE_ROUTE                 = 1655,$/;"	e	enum:sip_hdrid
SIP_HDR_SESSION_EXPIRES	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SESSION_EXPIRES               = 1979,$/;"	e	enum:sip_hdrid
SIP_HDR_SIP_ETAG	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SIP_ETAG                      = 1997,$/;"	e	enum:sip_hdrid
SIP_HDR_SIP_IF_MATCH	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SIP_IF_MATCH                  = 3056,$/;"	e	enum:sip_hdrid
SIP_HDR_SUBJECT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SUBJECT                       = 1043,$/;"	e	enum:sip_hdrid
SIP_HDR_SUBSCRIPTION_STATE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SUBSCRIPTION_STATE            = 2884,$/;"	e	enum:sip_hdrid
SIP_HDR_SUPPORTED	re-0.5.6/include/re_sip.h	/^	SIP_HDR_SUPPORTED                     =  119,$/;"	e	enum:sip_hdrid
SIP_HDR_TARGET_DIALOG	re-0.5.6/include/re_sip.h	/^	SIP_HDR_TARGET_DIALOG                 = 3450,$/;"	e	enum:sip_hdrid
SIP_HDR_TIMESTAMP	re-0.5.6/include/re_sip.h	/^	SIP_HDR_TIMESTAMP                     =  938,$/;"	e	enum:sip_hdrid
SIP_HDR_TO	re-0.5.6/include/re_sip.h	/^	SIP_HDR_TO                            = 1449,$/;"	e	enum:sip_hdrid
SIP_HDR_TRIGGER_CONSENT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_TRIGGER_CONSENT               = 3180,$/;"	e	enum:sip_hdrid
SIP_HDR_UNSUPPORTED	re-0.5.6/include/re_sip.h	/^	SIP_HDR_UNSUPPORTED                   =  982,$/;"	e	enum:sip_hdrid
SIP_HDR_USER_AGENT	re-0.5.6/include/re_sip.h	/^	SIP_HDR_USER_AGENT                    = 4064,$/;"	e	enum:sip_hdrid
SIP_HDR_VIA	re-0.5.6/include/re_sip.h	/^	SIP_HDR_VIA                           = 3961,$/;"	e	enum:sip_hdrid
SIP_HDR_WARNING	re-0.5.6/include/re_sip.h	/^	SIP_HDR_WARNING                       = 2108,$/;"	e	enum:sip_hdrid
SIP_HDR_WWW_AUTHENTICATE	re-0.5.6/include/re_sip.h	/^	SIP_HDR_WWW_AUTHENTICATE              = 2763,$/;"	e	enum:sip_hdrid
SIP_PORT	re-0.5.6/include/re_sip.h	/^	SIP_PORT     = 5060,$/;"	e	enum:__anon177
SIP_PORT_TLS	re-0.5.6/include/re_sip.h	/^	SIP_PORT_TLS = 5061,$/;"	e	enum:__anon177
SIP_T1	re-0.5.6/include/re_sip.h	/^	SIP_T1 =  500,$/;"	e	enum:__anon178
SIP_T2	re-0.5.6/include/re_sip.h	/^	SIP_T2 = 4000,$/;"	e	enum:__anon178
SIP_T4	re-0.5.6/include/re_sip.h	/^	SIP_T4 = 5000,$/;"	e	enum:__anon178
SIP_TRANSPC	re-0.5.6/include/re_sip.h	/^	SIP_TRANSPC,$/;"	e	enum:sip_transp
SIP_TRANSP_NONE	re-0.5.6/include/re_sip.h	/^	SIP_TRANSP_NONE = -1,$/;"	e	enum:sip_transp
SIP_TRANSP_TCP	re-0.5.6/include/re_sip.h	/^	SIP_TRANSP_TCP,$/;"	e	enum:sip_transp
SIP_TRANSP_TLS	re-0.5.6/include/re_sip.h	/^	SIP_TRANSP_TLS,$/;"	e	enum:sip_transp
SIP_TRANSP_UDP	re-0.5.6/include/re_sip.h	/^	SIP_TRANSP_UDP = 0,$/;"	e	enum:sip_transp
SIZE_MAX	re-0.5.6/src/mem/mem.c	236;"	d	file:
SIZ_CAST	re-0.5.6/src/tcp/tcp.c	43;"	d	file:
SIZ_CAST	re-0.5.6/src/tcp/tcp.c	48;"	d	file:
SIZ_CAST	re-0.5.6/src/udp/udp.c	45;"	d	file:
SIZ_CAST	re-0.5.6/src/udp/udp.c	50;"	d	file:
SLI_SIZE	re-0.5.6/src/rtp/fb.c	/^	SLI_SIZE   = 4$/;"	e	enum:__anon142	file:
SOK_CAST	re-0.5.6/src/tcp/tcp.c	42;"	d	file:
SOK_CAST	re-0.5.6/src/tcp/tcp.c	47;"	d	file:
SOK_CAST	re-0.5.6/src/udp/udp.c	44;"	d	file:
SOK_CAST	re-0.5.6/src/udp/udp.c	49;"	d	file:
SPANDSP_EXPOSE_INTERNAL_STRUCTURES	baresip/modules/g722/g722.c	11;"	d	file:
SPANDSP_EXPOSE_INTERNAL_STRUCTURES	baresip/modules/g726/g726.c	9;"	d	file:
SPANDSP_EXPOSE_INTERNAL_STRUCTURES	baresip/modules/plc/plc.c	7;"	d	file:
SPEEX_PTIME	baresip/modules/speex/speex.c	/^	SPEEX_PTIME    = 20,$/;"	e	enum:__anon82	file:
SPLINT_IGNORE	re-0.5.6/mk/re.mk	/^SPLINT_IGNORE  := src\/tls\/openssl\/tls.c src\/tls\/openssl\/tls_tcp.c$/;"	m
SRATE	rem-0.5.2/util/genfir.py	/^SRATE = 16000.0   # Hz$/;"	v
SRTPStat	baresip/modules/gzrtp/stream.cpp	/^SRTPStat::SRTPStat(const Stream *st, bool srtcp, uint64_t threshold)$/;"	f	class:SRTPStat
SRTPStat	baresip/modules/gzrtp/stream.h	/^class SRTPStat {$/;"	c
SRTP_AES_256_CM_HMAC_SHA1_32	re-0.5.6/include/re_srtp.h	/^	SRTP_AES_256_CM_HMAC_SHA1_32,$/;"	e	enum:srtp_suite
SRTP_AES_256_CM_HMAC_SHA1_80	re-0.5.6/include/re_srtp.h	/^	SRTP_AES_256_CM_HMAC_SHA1_80,$/;"	e	enum:srtp_suite
SRTP_AES_CM_128_HMAC_SHA1_32	re-0.5.6/include/re_srtp.h	/^	SRTP_AES_CM_128_HMAC_SHA1_32,$/;"	e	enum:srtp_suite
SRTP_AES_CM_128_HMAC_SHA1_80	re-0.5.6/include/re_srtp.h	/^	SRTP_AES_CM_128_HMAC_SHA1_80,$/;"	e	enum:srtp_suite
SRTP_ERR_BURST_THRESHOLD	baresip/modules/gzrtp/stream.cpp	22;"	d	file:
SRTP_MASTER_KEY_LEN	baresip/modules/srtp/srtp.c	28;"	d	file:
SRTP_MAX_STREAMS	re-0.5.6/src/srtp/stream.c	16;"	d	file:
SRTP_SALT_SIZE	re-0.5.6/src/srtp/srtp.h	/^	SRTP_SALT_SIZE = 14$/;"	e	enum:__anon109
SRTP_UNENCRYPTED_SRTCP	re-0.5.6/include/re_srtp.h	/^	SRTP_UNENCRYPTED_SRTCP = 1<<1,$/;"	e	enum:srtp_flags
SRTP_WINDOW_SIZE	re-0.5.6/src/srtp/replay.c	/^	SRTP_WINDOW_SIZE = 64$/;"	e	enum:__anon111	file:
SRVC_MAX	re-0.5.6/src/dns/client.c	/^	SRVC_MAX = 32,$/;"	e	enum:__anon101	file:
SSL_ST_OK	re-0.5.6/src/tls/openssl/tls.h	24;"	d
SSL_state	re-0.5.6/src/tls/openssl/tls.h	23;"	d
STARTLINE_MAX	re-0.5.6/src/http/msg.c	/^	STARTLINE_MAX = 8192,$/;"	e	enum:__anon104	file:
STARTLINE_MAX	re-0.5.6/src/sip/msg.c	/^	STARTLINE_MAX = 8192,$/;"	e	enum:__anon125	file:
STATE_EARLY	baresip/src/call.c	/^	STATE_EARLY,$/;"	e	enum:state	file:
STATE_ESTABLISHED	baresip/src/call.c	/^	STATE_ESTABLISHED,$/;"	e	enum:state	file:
STATE_IDLE	baresip/src/call.c	/^	STATE_IDLE = 0,$/;"	e	enum:state	file:
STATE_INCOMING	baresip/src/call.c	/^	STATE_INCOMING,$/;"	e	enum:state	file:
STATE_OUTGOING	baresip/src/call.c	/^	STATE_OUTGOING,$/;"	e	enum:state	file:
STATE_RINGING	baresip/src/call.c	/^	STATE_RINGING,$/;"	e	enum:state	file:
STATE_TERMINATED	baresip/src/call.c	/^	STATE_TERMINATED$/;"	e	enum:state	file:
STATIC	baresip/Makefile	/^STATIC    := yes$/;"	m
STATIC	re-0.5.6/Makefile	/^STATIC	:= libre.a$/;"	m
STATIC	rem-0.5.2/Makefile	/^STATIC	:= librem.a$/;"	m
STATICLIB	baresip/Makefile	/^STATICLIB  := libbaresip.a$/;"	m
STATMODE_CALL	baresip/modules/menu/menu.c	/^	STATMODE_CALL = 0,$/;"	e	enum:statmode	file:
STATMODE_OFF	baresip/modules/menu/menu.c	/^	STATMODE_OFF,$/;"	e	enum:statmode	file:
STAT_ADD	re-0.5.6/src/jbuf/jbuf.c	26;"	d	file:
STAT_ADD	re-0.5.6/src/jbuf/jbuf.c	29;"	d	file:
STAT_ALLOC	re-0.5.6/src/mem/mem.c	111;"	d	file:
STAT_ALLOC	re-0.5.6/src/mem/mem.c	73;"	d	file:
STAT_DEREF	re-0.5.6/src/mem/mem.c	113;"	d	file:
STAT_DEREF	re-0.5.6/src/mem/mem.c	96;"	d	file:
STAT_INC	re-0.5.6/src/jbuf/jbuf.c	27;"	d	file:
STAT_INC	re-0.5.6/src/jbuf/jbuf.c	30;"	d	file:
STAT_REALLOC	re-0.5.6/src/mem/mem.c	112;"	d	file:
STAT_REALLOC	re-0.5.6/src/mem/mem.c	86;"	d	file:
STDMETHOD_	baresip/modules/dshow/dshow.cpp	/^	STDMETHOD_(ULONG, AddRef)() throw()$/;"	f	class:Grabber
STDMETHOD_	baresip/modules/dshow/dshow.cpp	/^	STDMETHOD_(ULONG, Release)() throw()$/;"	f	class:Grabber
STEREO	baresip/modules/mpa/mpa.h	/^	enum { AUTO=0, STEREO, JOINT_STEREO, SINGLE_CHANNEL, DUAL_CHANNEL }$/;"	e	enum:mpa_param::__anon28
STREAM_PRESZ	baresip/src/core.h	/^enum {STREAM_PRESZ = 4+12}; \/* same as RTP_HEADER_SIZE *\/$/;"	e	enum:__anon6
STUNS_PORT	re-0.5.6/include/re_stun.h	/^	STUNS_PORT       = 5349,   \/**< STUNS Port number                    *\/$/;"	e	enum:__anon173
STUN_AF_IPv4	re-0.5.6/include/re_stun.h	/^	STUN_AF_IPv4 = 0x01,  \/**< IPv4 Address Family *\/$/;"	e	enum:stun_af
STUN_AF_IPv6	re-0.5.6/include/re_stun.h	/^	STUN_AF_IPv6 = 0x02   \/**< IPv6 Address Family *\/$/;"	e	enum:stun_af
STUN_ATTR_ADDR4_SIZE	re-0.5.6/src/turn/turnc.c	/^	STUN_ATTR_ADDR4_SIZE = 8,$/;"	e	enum:__anon121	file:
STUN_ATTR_ADDR6_SIZE	re-0.5.6/src/turn/turnc.c	/^	STUN_ATTR_ADDR6_SIZE = 20,$/;"	e	enum:__anon121	file:
STUN_ATTR_ALT_SERVER	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_ALT_SERVER         = 0x8023,$/;"	e	enum:stun_attrib
STUN_ATTR_CHANGE_REQ	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_CHANGE_REQ         = 0x0003,$/;"	e	enum:stun_attrib
STUN_ATTR_CHANNEL_NUMBER	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_CHANNEL_NUMBER     = 0x000c,$/;"	e	enum:stun_attrib
STUN_ATTR_CONTROLLED	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_CONTROLLED         = 0x8029,$/;"	e	enum:stun_attrib
STUN_ATTR_CONTROLLING	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_CONTROLLING        = 0x802a,$/;"	e	enum:stun_attrib
STUN_ATTR_DATA	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_DATA               = 0x0013,$/;"	e	enum:stun_attrib
STUN_ATTR_DONT_FRAGMENT	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_DONT_FRAGMENT      = 0x001a,$/;"	e	enum:stun_attrib
STUN_ATTR_ERR_CODE	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_ERR_CODE           = 0x0009,$/;"	e	enum:stun_attrib
STUN_ATTR_EVEN_PORT	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_EVEN_PORT          = 0x0018,$/;"	e	enum:stun_attrib
STUN_ATTR_FINGERPRINT	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_FINGERPRINT        = 0x8028,$/;"	e	enum:stun_attrib
STUN_ATTR_HEADER_SIZE	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_HEADER_SIZE = 4, \/**< Size of attribute header             *\/$/;"	e	enum:__anon173
STUN_ATTR_LIFETIME	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_LIFETIME           = 0x000d,$/;"	e	enum:stun_attrib
STUN_ATTR_MAPPED_ADDR	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_MAPPED_ADDR        = 0x0001,$/;"	e	enum:stun_attrib
STUN_ATTR_MSG_INTEGRITY	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_MSG_INTEGRITY      = 0x0008,$/;"	e	enum:stun_attrib
STUN_ATTR_NONCE	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_NONCE              = 0x0015,$/;"	e	enum:stun_attrib
STUN_ATTR_OTHER_ADDR	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_OTHER_ADDR         = 0x802c,$/;"	e	enum:stun_attrib
STUN_ATTR_PADDING	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_PADDING            = 0x0026,$/;"	e	enum:stun_attrib
STUN_ATTR_PRIORITY	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_PRIORITY           = 0x0024,$/;"	e	enum:stun_attrib
STUN_ATTR_REALM	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_REALM              = 0x0014,$/;"	e	enum:stun_attrib
STUN_ATTR_REQ_ADDR_FAMILY	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_REQ_ADDR_FAMILY    = 0x0017,$/;"	e	enum:stun_attrib
STUN_ATTR_REQ_TRANSPORT	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_REQ_TRANSPORT      = 0x0019,$/;"	e	enum:stun_attrib
STUN_ATTR_RESP_ORIGIN	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_RESP_ORIGIN        = 0x802b,$/;"	e	enum:stun_attrib
STUN_ATTR_RESP_PORT	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_RESP_PORT          = 0x0027,$/;"	e	enum:stun_attrib
STUN_ATTR_RSV_TOKEN	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_RSV_TOKEN          = 0x0022,$/;"	e	enum:stun_attrib
STUN_ATTR_SOFTWARE	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_SOFTWARE           = 0x8022,$/;"	e	enum:stun_attrib
STUN_ATTR_UNKNOWN_ATTR	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_UNKNOWN_ATTR       = 0x000a,$/;"	e	enum:stun_attrib
STUN_ATTR_USERNAME	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_USERNAME           = 0x0006,$/;"	e	enum:stun_attrib
STUN_ATTR_USE_CAND	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_USE_CAND           = 0x0025,$/;"	e	enum:stun_attrib
STUN_ATTR_XOR_MAPPED_ADDR	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_XOR_MAPPED_ADDR    = 0x0020,$/;"	e	enum:stun_attrib
STUN_ATTR_XOR_PEER_ADDR	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_XOR_PEER_ADDR      = 0x0012,$/;"	e	enum:stun_attrib
STUN_ATTR_XOR_RELAY_ADDR	re-0.5.6/include/re_stun.h	/^	STUN_ATTR_XOR_RELAY_ADDR     = 0x0016,$/;"	e	enum:stun_attrib
STUN_CLASS	re-0.5.6/src/stun/stun.h	23;"	d
STUN_CLASS_ERROR_RESP	re-0.5.6/include/re_stun.h	/^	STUN_CLASS_ERROR_RESP   = 0x3   \/**< STUN Error Response   *\/$/;"	e	enum:stun_msg_class
STUN_CLASS_INDICATION	re-0.5.6/include/re_stun.h	/^	STUN_CLASS_INDICATION   = 0x1,  \/**< STUN Indication       *\/$/;"	e	enum:stun_msg_class
STUN_CLASS_REQUEST	re-0.5.6/include/re_stun.h	/^	STUN_CLASS_REQUEST      = 0x0,  \/**< STUN Request          *\/$/;"	e	enum:stun_msg_class
STUN_CLASS_SUCCESS_RESP	re-0.5.6/include/re_stun.h	/^	STUN_CLASS_SUCCESS_RESP = 0x2,  \/**< STUN Success Response *\/$/;"	e	enum:stun_msg_class
STUN_DEFAULT_RC	re-0.5.6/include/re_stun.h	/^	STUN_DEFAULT_RC  = 7,      \/**< Default number of retransmits        *\/$/;"	e	enum:__anon173
STUN_DEFAULT_RM	re-0.5.6/include/re_stun.h	/^	STUN_DEFAULT_RM  = 16,     \/**< Wait time after last request is sent *\/$/;"	e	enum:__anon173
STUN_DEFAULT_RTO	re-0.5.6/include/re_stun.h	/^	STUN_DEFAULT_RTO = 500,    \/**< Default Retrans Timeout in [ms]      *\/$/;"	e	enum:__anon173
STUN_DEFAULT_TI	re-0.5.6/include/re_stun.h	/^	STUN_DEFAULT_TI  = 39500   \/**< Reliable timeout *\/$/;"	e	enum:__anon173
STUN_HEADER_SIZE	re-0.5.6/include/re_stun.h	/^	STUN_HEADER_SIZE = 20,     \/**< Number of bytes in header            *\/$/;"	e	enum:__anon173
STUN_MAGIC_COOKIE	re-0.5.6/src/stun/stun.h	/^	STUN_MAGIC_COOKIE = 0x2112a442 \/**< Magic Cookie for 3489bis        *\/$/;"	e	enum:__anon117
STUN_METHOD	re-0.5.6/src/stun/stun.h	27;"	d
STUN_METHOD_ALLOCATE	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_ALLOCATE   = 0x003,$/;"	e	enum:stun_method
STUN_METHOD_BINDING	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_BINDING    = 0x001,$/;"	e	enum:stun_method
STUN_METHOD_CHANBIND	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_CHANBIND   = 0x009,$/;"	e	enum:stun_method
STUN_METHOD_CREATEPERM	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_CREATEPERM = 0x008,$/;"	e	enum:stun_method
STUN_METHOD_DATA	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_DATA       = 0x007,$/;"	e	enum:stun_method
STUN_METHOD_REFRESH	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_REFRESH    = 0x004,$/;"	e	enum:stun_method
STUN_METHOD_SEND	re-0.5.6/include/re_stun.h	/^	STUN_METHOD_SEND       = 0x006,$/;"	e	enum:stun_method
STUN_PORT	re-0.5.6/include/re_stun.h	/^	STUN_PORT        = 3478,   \/**< STUN Port number *\/$/;"	e	enum:__anon173
STUN_TID_SIZE	re-0.5.6/include/re_stun.h	/^	STUN_TID_SIZE    = 12,     \/**< Number of bytes in transaction ID    *\/$/;"	e	enum:__anon173
STUN_TRANSP_DTLS	re-0.5.6/include/re_stun.h	/^	STUN_TRANSP_DTLS,              \/**< DTLS-transport (struct tls_conn) *\/$/;"	e	enum:stun_transp
STUN_TRANSP_TCP	re-0.5.6/include/re_stun.h	/^	STUN_TRANSP_TCP = IPPROTO_TCP, \/**< TCP-transport (struct tcp_conn)  *\/$/;"	e	enum:stun_transp
STUN_TRANSP_UDP	re-0.5.6/include/re_stun.h	/^	STUN_TRANSP_UDP = IPPROTO_UDP, \/**< UDP-transport (struct udp_sock)  *\/$/;"	e	enum:stun_transp
STUN_TYPE	re-0.5.6/src/stun/stun.h	15;"	d
SYSROOT	re-0.5.6/mk/re.mk	/^	SYSROOT		:= \/usr\/$(MACHINE)\/$/;"	m
SYSROOT	re-0.5.6/mk/re.mk	/^SYSROOT := \/usr$/;"	m
SYSROOT_ALT	re-0.5.6/mk/re.mk	/^SYSROOT_ALT := $(shell [ -d \/opt\/local\/include ] && echo "\/opt\/local")$/;"	m
SYSROOT_ALT	re-0.5.6/mk/re.mk	/^SYSROOT_ALT := $(shell [ -d \/sw\/include ] && echo "\/sw")$/;"	m
SampleCB	baresip/modules/dshow/dshow.cpp	/^	STDMETHOD(SampleCB) (double sample_time, IMediaSample *samp)$/;"	f	class:Grabber
Session	baresip/modules/gzrtp/session.cpp	/^Session::Session(const ZRTPConfig& config)$/;"	f	class:Session
Session	baresip/modules/gzrtp/session.h	/^class Session {$/;"	c
Srtp	baresip/modules/gzrtp/srtp.cpp	/^Srtp::Srtp(int& err, const SrtpSecret_t *secrets, EnableSecurity part)$/;"	f	class:Srtp
Srtp	baresip/modules/gzrtp/srtp.h	/^class Srtp {$/;"	c
Stream	baresip/modules/gzrtp/stream.cpp	/^Stream::Stream(int& err, const ZRTPConfig& config, Session *session,$/;"	f	class:Stream
Stream	baresip/modules/gzrtp/stream.h	/^class Stream : public ZrtpCallback {$/;"	c
StreamMediaType	baresip/modules/gzrtp/stream.h	/^enum StreamMediaType {$/;"	g
T1	re-0.5.6/src/md5/md5.c	65;"	d	file:
T10	re-0.5.6/src/md5/md5.c	74;"	d	file:
T11	re-0.5.6/src/md5/md5.c	75;"	d	file:
T12	re-0.5.6/src/md5/md5.c	76;"	d	file:
T13	re-0.5.6/src/md5/md5.c	77;"	d	file:
T14	re-0.5.6/src/md5/md5.c	78;"	d	file:
T15	re-0.5.6/src/md5/md5.c	79;"	d	file:
T16	re-0.5.6/src/md5/md5.c	80;"	d	file:
T17	re-0.5.6/src/md5/md5.c	81;"	d	file:
T18	re-0.5.6/src/md5/md5.c	82;"	d	file:
T19	re-0.5.6/src/md5/md5.c	83;"	d	file:
T2	re-0.5.6/src/md5/md5.c	66;"	d	file:
T20	re-0.5.6/src/md5/md5.c	84;"	d	file:
T21	re-0.5.6/src/md5/md5.c	85;"	d	file:
T22	re-0.5.6/src/md5/md5.c	86;"	d	file:
T23	re-0.5.6/src/md5/md5.c	87;"	d	file:
T24	re-0.5.6/src/md5/md5.c	88;"	d	file:
T25	re-0.5.6/src/md5/md5.c	89;"	d	file:
T26	re-0.5.6/src/md5/md5.c	90;"	d	file:
T27	re-0.5.6/src/md5/md5.c	91;"	d	file:
T28	re-0.5.6/src/md5/md5.c	92;"	d	file:
T29	re-0.5.6/src/md5/md5.c	93;"	d	file:
T3	re-0.5.6/src/md5/md5.c	67;"	d	file:
T30	re-0.5.6/src/md5/md5.c	94;"	d	file:
T31	re-0.5.6/src/md5/md5.c	95;"	d	file:
T32	re-0.5.6/src/md5/md5.c	96;"	d	file:
T33	re-0.5.6/src/md5/md5.c	97;"	d	file:
T34	re-0.5.6/src/md5/md5.c	98;"	d	file:
T35	re-0.5.6/src/md5/md5.c	99;"	d	file:
T36	re-0.5.6/src/md5/md5.c	100;"	d	file:
T37	re-0.5.6/src/md5/md5.c	101;"	d	file:
T38	re-0.5.6/src/md5/md5.c	102;"	d	file:
T39	re-0.5.6/src/md5/md5.c	103;"	d	file:
T4	re-0.5.6/src/md5/md5.c	68;"	d	file:
T40	re-0.5.6/src/md5/md5.c	104;"	d	file:
T41	re-0.5.6/src/md5/md5.c	105;"	d	file:
T42	re-0.5.6/src/md5/md5.c	106;"	d	file:
T43	re-0.5.6/src/md5/md5.c	107;"	d	file:
T44	re-0.5.6/src/md5/md5.c	108;"	d	file:
T45	re-0.5.6/src/md5/md5.c	109;"	d	file:
T46	re-0.5.6/src/md5/md5.c	110;"	d	file:
T47	re-0.5.6/src/md5/md5.c	111;"	d	file:
T48	re-0.5.6/src/md5/md5.c	112;"	d	file:
T49	re-0.5.6/src/md5/md5.c	113;"	d	file:
T5	re-0.5.6/src/md5/md5.c	69;"	d	file:
T50	re-0.5.6/src/md5/md5.c	114;"	d	file:
T51	re-0.5.6/src/md5/md5.c	115;"	d	file:
T52	re-0.5.6/src/md5/md5.c	116;"	d	file:
T53	re-0.5.6/src/md5/md5.c	117;"	d	file:
T54	re-0.5.6/src/md5/md5.c	118;"	d	file:
T55	re-0.5.6/src/md5/md5.c	119;"	d	file:
T56	re-0.5.6/src/md5/md5.c	120;"	d	file:
T57	re-0.5.6/src/md5/md5.c	121;"	d	file:
T58	re-0.5.6/src/md5/md5.c	122;"	d	file:
T59	re-0.5.6/src/md5/md5.c	123;"	d	file:
T6	re-0.5.6/src/md5/md5.c	70;"	d	file:
T60	re-0.5.6/src/md5/md5.c	124;"	d	file:
T61	re-0.5.6/src/md5/md5.c	125;"	d	file:
T62	re-0.5.6/src/md5/md5.c	126;"	d	file:
T63	re-0.5.6/src/md5/md5.c	127;"	d	file:
T64	re-0.5.6/src/md5/md5.c	128;"	d	file:
T7	re-0.5.6/src/md5/md5.c	71;"	d	file:
T8	re-0.5.6/src/md5/md5.c	72;"	d	file:
T9	re-0.5.6/src/md5/md5.c	73;"	d	file:
TAPS	rem-0.5.2/util/genfir.py	/^TAPS = 31$/;"	v
TAR_SRC	re-0.5.6/mk/re.mk	/^TAR_SRC   := $(PROJECT)-$(VERSION)$/;"	m
TCP_ACCEPT_TIMEOUT	re-0.5.6/src/sip/transp.c	/^	TCP_ACCEPT_TIMEOUT    = 32,$/;"	e	enum:__anon124	file:
TCP_BUFSIZE_MAX	re-0.5.6/src/sip/transp.c	/^	TCP_BUFSIZE_MAX       = 65536,$/;"	e	enum:__anon124	file:
TCP_HASH_SIZE	re-0.5.6/src/dns/client.c	/^	TCP_HASH_SIZE = 2,$/;"	e	enum:__anon101	file:
TCP_IDLE_TIMEOUT	re-0.5.6/src/sip/transp.c	/^	TCP_IDLE_TIMEOUT      = 900,$/;"	e	enum:__anon124	file:
TCP_KEEPALIVE_INTVAL	re-0.5.6/src/sip/transp.c	/^	TCP_KEEPALIVE_INTVAL  = 120,$/;"	e	enum:__anon124	file:
TCP_KEEPALIVE_TIMEOUT	re-0.5.6/src/sip/transp.c	/^	TCP_KEEPALIVE_TIMEOUT = 10,$/;"	e	enum:__anon124	file:
TCP_RXSZ_DEFAULT	re-0.5.6/src/tcp/tcp.c	/^	TCP_RXSZ_DEFAULT  = 8192$/;"	e	enum:__anon129	file:
TCP_TXQSZ_DEFAULT	re-0.5.6/src/tcp/tcp.c	/^	TCP_TXQSZ_DEFAULT = 524288,$/;"	e	enum:__anon129	file:
TELEV_PTIME	re-0.5.6/include/re_telev.h	/^	TELEV_PTIME = 50,$/;"	e	enum:__anon167
TELEV_SRATE	re-0.5.6/include/re_telev.h	/^	TELEV_SRATE = 8000$/;"	e	enum:__anon167
TEST	baresip/test/main.c	22;"	d	file:
TEST_BIN	baresip/Makefile	/^TEST_BIN	:= selftest$(BIN_SUFFIX)$/;"	m
TEST_ERR	baresip/test/test.h	46;"	d
TEST_MEMCMP	baresip/test/test.h	56;"	d
TEST_MK	baresip/Makefile	/^TEST_MK	:= test\/srcs.mk$/;"	m
TEST_OBJS	baresip/Makefile	/^TEST_OBJS := $(patsubst %.c,$(BUILD)\/test\/%.o,$(filter %.c,$(TEST_SRCS)))$/;"	m
TEST_STRCMP	baresip/test/test.h	70;"	d
TEXT_WIDTH	baresip/modules/vidinfo/vidinfo.h	12;"	d
THRESHOLD	rem-0.5.2/src/dtmf/dec.c	13;"	d	file:
TIMEOUT_CLOSE	re-0.5.6/src/websock/websock.c	/^	TIMEOUT_CLOSE = 10000,$/;"	e	enum:__anon130	file:
TIMEOUT_IDLE	re-0.5.6/src/http/server.c	/^	TIMEOUT_IDLE = 600000,$/;"	e	enum:__anon105	file:
TIMEOUT_INIT	re-0.5.6/src/http/server.c	/^	TIMEOUT_INIT = 10000,$/;"	e	enum:__anon105	file:
TLS_BIO_OPAQUE	re-0.5.6/src/tls/openssl/tls.h	13;"	d
TLS_BIO_OPAQUE	re-0.5.6/src/tls/openssl/tls.h	17;"	d
TLS_FINGERPRINT_SHA1	re-0.5.6/include/re_tls.h	/^	TLS_FINGERPRINT_SHA1,$/;"	e	enum:tls_fingerprint
TLS_FINGERPRINT_SHA256	re-0.5.6/include/re_tls.h	/^	TLS_FINGERPRINT_SHA256,$/;"	e	enum:tls_fingerprint
TLS_KEYTYPE_EC	re-0.5.6/include/re_tls.h	/^	TLS_KEYTYPE_EC,$/;"	e	enum:tls_keytype
TLS_KEYTYPE_RSA	re-0.5.6/include/re_tls.h	/^	TLS_KEYTYPE_RSA,$/;"	e	enum:tls_keytype
TLS_METHOD_DTLS	re-0.5.6/include/re_tls.h	/^	TLS_METHOD_DTLS,      \/* DTLS 1.0 and 1.2 *\/$/;"	e	enum:tls_method
TLS_METHOD_DTLSV1	re-0.5.6/include/re_tls.h	/^	TLS_METHOD_DTLSV1,$/;"	e	enum:tls_method
TLS_METHOD_DTLSV1_2	re-0.5.6/include/re_tls.h	/^	TLS_METHOD_DTLSV1_2,  \/* DTLS 1.2 *\/$/;"	e	enum:tls_method
TLS_METHOD_SSLV23	re-0.5.6/include/re_tls.h	/^	TLS_METHOD_SSLV23,$/;"	e	enum:tls_method
TMR_DEBUG	re-0.5.6/src/tmr/tmr.c	32;"	d	file:
TMR_INTERVAL	baresip/src/metric.c	/^enum {TMR_INTERVAL = 3};$/;"	e	enum:__anon18	file:
TMR_INTERVAL	baresip/src/video.c	/^enum {TMR_INTERVAL = 5};$/;"	e	enum:__anon17	file:
TRUNCATED	re-0.5.6/src/dns/hdr.c	/^	TRUNCATED           =  9,$/;"	e	enum:__anon99	file:
TRYING	re-0.5.6/src/sip/ctrans.c	/^	TRYING,$/;"	e	enum:state	file:
TRYING	re-0.5.6/src/sip/strans.c	/^	TRYING,$/;"	e	enum:state	file:
TURN_DEFAULT_LIFETIME	re-0.5.6/include/re_turn.h	/^	TURN_DEFAULT_LIFETIME = 600,  \/**< Default lifetime is 10 minutes *\/$/;"	e	enum:__anon171
TURN_MAX_LIFETIME	re-0.5.6/include/re_turn.h	/^	TURN_MAX_LIFETIME     = 3600  \/**< Maximum lifetime is 1 hour     *\/$/;"	e	enum:__anon171
TXC_DIGIT_MIN	re-0.5.6/src/telev/telev.c	/^	TXC_DIGIT_MIN = 9,$/;"	e	enum:__anon137	file:
TXC_END	re-0.5.6/src/telev/telev.c	/^	TXC_END       = 3,$/;"	e	enum:__anon137	file:
T_MASK	re-0.5.6/src/md5/md5.c	64;"	d	file:
Tr_TCP	baresip/src/rtpkeep.c	/^	Tr_TCP = 7200$/;"	e	enum:__anon23	file:
Tr_UDP	baresip/src/rtpkeep.c	/^	Tr_UDP =   15,$/;"	e	enum:__anon23	file:
UA_EVENT_CALL_CLOSED	baresip/include/baresip.h	/^	UA_EVENT_CALL_CLOSED,$/;"	e	enum:ua_event
UA_EVENT_CALL_DTMF_END	baresip/include/baresip.h	/^	UA_EVENT_CALL_DTMF_END,$/;"	e	enum:ua_event
UA_EVENT_CALL_DTMF_START	baresip/include/baresip.h	/^	UA_EVENT_CALL_DTMF_START,$/;"	e	enum:ua_event
UA_EVENT_CALL_ESTABLISHED	baresip/include/baresip.h	/^	UA_EVENT_CALL_ESTABLISHED,$/;"	e	enum:ua_event
UA_EVENT_CALL_INCOMING	baresip/include/baresip.h	/^	UA_EVENT_CALL_INCOMING,$/;"	e	enum:ua_event
UA_EVENT_CALL_PROGRESS	baresip/include/baresip.h	/^	UA_EVENT_CALL_PROGRESS,$/;"	e	enum:ua_event
UA_EVENT_CALL_RINGING	baresip/include/baresip.h	/^	UA_EVENT_CALL_RINGING,$/;"	e	enum:ua_event
UA_EVENT_CALL_RTCP	baresip/include/baresip.h	/^	UA_EVENT_CALL_RTCP,$/;"	e	enum:ua_event
UA_EVENT_CALL_TRANSFER_FAILED	baresip/include/baresip.h	/^	UA_EVENT_CALL_TRANSFER_FAILED,$/;"	e	enum:ua_event
UA_EVENT_EXIT	baresip/include/baresip.h	/^	UA_EVENT_EXIT,$/;"	e	enum:ua_event
UA_EVENT_MAX	baresip/include/baresip.h	/^	UA_EVENT_MAX,$/;"	e	enum:ua_event
UA_EVENT_REGISTERING	baresip/include/baresip.h	/^	UA_EVENT_REGISTERING = 0,$/;"	e	enum:ua_event
UA_EVENT_REGISTER_FAIL	baresip/include/baresip.h	/^	UA_EVENT_REGISTER_FAIL,$/;"	e	enum:ua_event
UA_EVENT_REGISTER_OK	baresip/include/baresip.h	/^	UA_EVENT_REGISTER_OK,$/;"	e	enum:ua_event
UA_EVENT_SHUTDOWN	baresip/include/baresip.h	/^	UA_EVENT_SHUTDOWN,$/;"	e	enum:ua_event
UA_EVENT_UNREGISTERING	baresip/include/baresip.h	/^	UA_EVENT_UNREGISTERING,$/;"	e	enum:ua_event
UDP_KEEPALIVE_INTVAL	re-0.5.6/src/sip/keepalive_udp.c	/^	UDP_KEEPALIVE_INTVAL = 29,$/;"	e	enum:__anon127	file:
UDP_RXSZ_DEFAULT	re-0.5.6/src/udp/udp.c	/^	UDP_RXSZ_DEFAULT = 8192$/;"	e	enum:__anon138	file:
UINT8_MAX	rem-0.5.2/include/rem_dsp.h	9;"	d
UNIX_NTP_OFFSET	re-0.5.6/src/rtp/ntp.c	26;"	d	file:
USER	baresip/test/ua.c	364;"	d	file:
USE_ALSA	baresip/mk/modules.mk	/^USE_ALSA  := $(shell [ -f $(SYSROOT)\/include\/alsa\/asoundlib.h ] || \\$/;"	m
USE_AMR	baresip/mk/modules.mk	/^USE_AMR   := $(shell [ -d $(SYSROOT)\/include\/opencore-amrnb ] || \\$/;"	m
USE_AUDIOUNIT	baresip/mk/modules.mk	/^USE_AUDIOUNIT := \\$/;"	m
USE_AVAHI	baresip/mk/modules.mk	/^USE_AVAHI := $(shell pkg-config --exists avahi-client && echo "yes")$/;"	m
USE_AVCAPTURE	baresip/mk/modules.mk	/^USE_AVCAPTURE := yes$/;"	m
USE_AVCODEC	baresip/mk/modules.mk	/^USE_AVCODEC := $(shell [ -f $(SYSROOT)\/include\/libavcodec\/avcodec.h ] || \\$/;"	m
USE_AVFORMAT	baresip/mk/modules.mk	/^USE_AVFORMAT := $(shell [ -f $(SYSROOT)\/include\/libavformat\/avformat.h ] || \\$/;"	m
USE_AVFOUNDATION	baresip/mk/modules.mk	/^USE_AVFOUNDATION := \\$/;"	m
USE_BV32	baresip/mk/modules.mk	/^USE_BV32  := $(shell [ -f $(SYSROOT)\/include\/bv32\/bv32.h ] || \\$/;"	m
USE_CAIRO	baresip/mk/modules.mk	/^USE_CAIRO  := $(shell [ -f $(SYSROOT)\/include\/cairo\/cairo.h ] || \\$/;"	m
USE_CONS	baresip/mk/modules.mk	/^USE_CONS  := 1$/;"	m
USE_COREAUDIO	baresip/mk/modules.mk	/^USE_COREAUDIO := yes$/;"	m
USE_DSHOW	baresip/mk/modules.mk	/^USE_DSHOW := $(shell [ -f \/winsdk\/Include\/um\/dshow.h ] && echo "yes")$/;"	m
USE_DTLS	baresip/mk/modules.mk	/^USE_DTLS := $(shell [ -f $(SYSROOT)\/include\/openssl\/dtls1.h ] || \\$/;"	m
USE_DTLS	re-0.5.6/mk/re.mk	/^USE_DTLS := yes$/;"	m
USE_DTLS_SRTP	baresip/mk/modules.mk	/^USE_DTLS_SRTP := $(shell [ -f $(SYSROOT)\/include\/openssl\/srtp.h ] || \\$/;"	m
USE_DTLS_SRTP	re-0.5.6/mk/re.mk	/^USE_DTLS_SRTP := yes$/;"	m
USE_ENHANCER	baresip/modules/ilbc/ilbc.c	/^	USE_ENHANCER = 1$/;"	e	enum:__anon55	file:
USE_EVDEV	baresip/mk/modules.mk	/^USE_EVDEV := $(shell [ -f $(SYSROOT)\/include\/linux\/input.h ] && echo "yes")$/;"	m
USE_G711	baresip/mk/modules.mk	/^USE_G711  := 1$/;"	m
USE_G722	baresip/mk/modules.mk	/^USE_G722 := $(shell [ -f $(SYSROOT)\/include\/spandsp\/g722.h ] || \\$/;"	m
USE_G722_1	baresip/mk/modules.mk	/^USE_G722_1 := $(shell [ -f $(SYSROOT)\/include\/g722_1.h ] || \\$/;"	m
USE_G726	baresip/mk/modules.mk	/^USE_G726 := $(shell [ -f $(SYSROOT)\/include\/spandsp\/g726.h ] || \\$/;"	m
USE_GSM	baresip/mk/modules.mk	/^USE_GSM := $(shell [ -f $(SYSROOT)\/include\/gsm.h ] || \\$/;"	m
USE_GST	baresip/mk/modules.mk	/^USE_GST := $(shell pkg-config --exists gstreamer-0.10 && echo "yes")$/;"	m
USE_GST1	baresip/mk/modules.mk	/^USE_GST1 := $(shell pkg-config --exists gstreamer-1.0 && echo "yes")$/;"	m
USE_GST_VIDEO	baresip/mk/modules.mk	/^USE_GST_VIDEO := \\$/;"	m
USE_GST_VIDEO1	baresip/mk/modules.mk	/^USE_GST_VIDEO1 := $(shell pkg-config --exists gstreamer-1.0 gstreamer-app-1.0 \\$/;"	m
USE_GTK	baresip/mk/modules.mk	/^USE_GTK := $(shell pkg-config 'gtk+-2.0 >= 2.22' && \\$/;"	m
USE_H265	baresip/mk/modules.mk	/^USE_H265  := $(shell [ -f $(SYSROOT)\/include\/x265.h ] || \\$/;"	m
USE_ILBC	baresip/mk/modules.mk	/^USE_ILBC := $(shell [ -f $(SYSROOT)\/include\/iLBC_define.h ] || \\$/;"	m
USE_ISAC	baresip/mk/modules.mk	/^USE_ISAC := $(shell [ -f $(SYSROOT)\/include\/isac.h ] || \\$/;"	m
USE_JACK	baresip/mk/modules.mk	/^USE_JACK := $(shell [ -f $(SYSROOT)\/include\/jack\/jack.h ] || \\$/;"	m
USE_L16	baresip/mk/modules.mk	/^USE_L16   := 1$/;"	m
USE_LIBNOTIFY	baresip/mk/modules.mk	/^USE_LIBNOTIFY := $(shell pkg-config 'libnotify glib-2.0 < 2.40' && echo "yes")$/;"	m
USE_MPA	baresip/mk/modules.mk	/^USE_MPA  := $(shell [ -f $(SYSROOT)\/include\/twolame.h ] || \\$/;"	m
USE_MPG123	baresip/mk/modules.mk	/^USE_MPG123  := $(shell [ -f $(SYSROOT)\/include\/mpg123.h ] || \\$/;"	m
USE_NOTIFICATIONS	baresip/modules/gtk/gtk_mod.c	20;"	d	file:
USE_OMX_BELLAGIO	baresip/mk/modules.mk	/^USE_OMX_BELLAGIO := $(shell [ -f \/usr\/include\/OMX_Core.h ] \\$/;"	m
USE_OMX_RPI	baresip/mk/modules.mk	/^USE_OMX_RPI := $(shell [ -f \/opt\/vc\/include\/bcm_host.h ] || \\$/;"	m
USE_OPENGL	baresip/mk/modules.mk	/^USE_OPENGL    := yes$/;"	m
USE_OPENSSL	re-0.5.6/mk/re.mk	/^USE_OPENSSL := $(shell [ -f $(SYSROOT)\/include\/openssl\/ssl.h ] || \\$/;"	m
USE_OPENSSL_AES	re-0.5.6/mk/re.mk	/^USE_OPENSSL_AES		:= yes$/;"	m
USE_OPENSSL_DTLS	re-0.5.6/mk/re.mk	/^USE_OPENSSL_DTLS := $(shell [ -f $(SYSROOT)\/include\/openssl\/dtls1.h ] || \\$/;"	m
USE_OPENSSL_HMAC	re-0.5.6/mk/re.mk	/^USE_OPENSSL_HMAC	:= yes$/;"	m
USE_OPENSSL_SRTP	re-0.5.6/mk/re.mk	/^USE_OPENSSL_SRTP := $(shell [ -f $(SYSROOT)\/include\/openssl\/srtp.h ] || \\$/;"	m
USE_OPUS	baresip/mk/modules.mk	/^USE_OPUS := $(shell [ -f $(SYSROOT)\/include\/opus\/opus.h ] || \\$/;"	m
USE_OSS	baresip/mk/modules.mk	/^USE_OSS := $(shell [ -f $(SYSROOT)\/include\/soundcard.h ] || \\$/;"	m
USE_PLC	baresip/mk/modules.mk	/^USE_PLC := $(shell [ -f $(SYSROOT)\/include\/spandsp\/plc.h ] || \\$/;"	m
USE_PORTAUDIO	baresip/mk/modules.mk	/^USE_PORTAUDIO := $(shell [ -f $(SYSROOT)\/local\/include\/portaudio.h ] || \\$/;"	m
USE_PULSE	baresip/mk/modules.mk	/^USE_PULSE := $(shell pkg-config --exists libpulse && echo "yes")$/;"	m
USE_QTCAPTURE	baresip/mk/modules.mk	/^USE_QTCAPTURE := yes$/;"	m
USE_SDL	baresip/mk/modules.mk	/^USE_SDL  := $(shell [ -f $(SYSROOT)\/include\/SDL\/SDL.h ] || \\$/;"	m
USE_SDL2	baresip/mk/modules.mk	/^USE_SDL2  := $(shell [ -f $(SYSROOT)\/include\/SDL2\/SDL.h ] || \\$/;"	m
USE_SILK	baresip/mk/modules.mk	/^USE_SILK := $(shell [ -f $(SYSROOT)\/include\/silk\/SKP_Silk_SDK_API.h ] || \\$/;"	m
USE_SNDFILE	baresip/mk/modules.mk	/^USE_SNDFILE := $(shell [ -f $(SYSROOT)\/include\/sndfile.h ] || \\$/;"	m
USE_SPEEX	baresip/mk/modules.mk	/^USE_SPEEX := $(shell [ -f $(SYSROOT)\/include\/speex.h ] || \\$/;"	m
USE_SPEEX_AEC	baresip/mk/modules.mk	/^USE_SPEEX_AEC := $(shell [ -f $(SYSROOT)\/include\/speex\/speex_echo.h ] || \\$/;"	m
USE_SPEEX_PP	baresip/mk/modules.mk	/^USE_SPEEX_PP := $(shell [ -f $(SYSROOT)\/include\/speex_preprocess.h ] || \\$/;"	m
USE_STDIO	baresip/mk/modules.mk	/^USE_STDIO := $(shell [ -f $(SYSROOT)\/include\/termios.h ] && echo "yes")$/;"	m
USE_SYSLOG	baresip/mk/modules.mk	/^USE_SYSLOG := $(shell [ -f $(SYSROOT)\/include\/syslog.h ] || \\$/;"	m
USE_TLS	re-0.5.6/mk/re.mk	/^USE_TLS := yes$/;"	m
USE_V4L	baresip/mk/modules.mk	/^USE_V4L  := $(shell [ -f $(SYSROOT)\/include\/libv4l1.h ] || \\$/;"	m
USE_V4L2	baresip/mk/modules.mk	/^USE_V4L2 := $(shell [ -f $(SYSROOT)\/include\/linux\/videodev2.h ] || \\$/;"	m
USE_VIDEO	baresip/Makefile	/^USE_VIDEO := 1$/;"	m
USE_VPX	baresip/mk/modules.mk	/^USE_VPX  := $(shell [ -f $(SYSROOT)\/include\/vpx\/vp8.h ] \\$/;"	m
USE_WINWAVE	baresip/mk/modules.mk	/^USE_WINWAVE := yes$/;"	m
USE_X11	baresip/mk/modules.mk	/^USE_X11 := $(shell [ -f $(SYSROOT)\/include\/X11\/Xlib.h ] || \\$/;"	m
USE_X264	baresip/modules/avcodec/module.mk	/^USE_X264 := $(shell [ -f $(SYSROOT)\/include\/x264.h ] || \\$/;"	m
USE_ZLIB	re-0.5.6/mk/re.mk	/^USE_ZLIB    := $(shell [ -f $(SYSROOT)\/include\/zlib.h ] || \\$/;"	m
USE_ZRTP	baresip/mk/modules.mk	/^USE_ZRTP := $(shell [ -f $(SYSROOT)\/include\/libzrtp\/zrtp.h ] || \\$/;"	m
UUID_LEN	baresip/modules/uuid/uuid.c	/^enum { UUID_LEN = 36 };$/;"	e	enum:__anon74	file:
VERSION	baresip/Makefile	/^VERSION   := 0.5.7$/;"	m
VERSION	re-0.5.6/Makefile	/^VERSION   := 0.5.6$/;"	m
VERSION	re-0.5.6/include/re_sys.h	9;"	d
VERSION	rem-0.5.2/Makefile	/^VERSION   := 0.5.2$/;"	m
VER_MAJOR	re-0.5.6/Makefile	/^VER_MAJOR := 0$/;"	m
VER_MAJOR	rem-0.5.2/Makefile	/^VER_MAJOR := 0$/;"	m
VER_MINOR	re-0.5.6/Makefile	/^VER_MINOR := 5$/;"	m
VER_MINOR	rem-0.5.2/Makefile	/^VER_MINOR := 5$/;"	m
VER_PATCH	re-0.5.6/Makefile	/^VER_PATCH := 6$/;"	m
VER_PATCH	rem-0.5.2/Makefile	/^VER_PATCH := 2$/;"	m
VIDENC_INTERNAL_FMT	baresip/src/video.c	23;"	d	file:
VIDEO_RENDER_PORT	baresip/modules/omx/omx.c	/^static const int VIDEO_RENDER_PORT = 0;$/;"	v	file:
VIDEO_RENDER_PORT	baresip/modules/omx/omx.c	/^static const int VIDEO_RENDER_PORT = 90;$/;"	v	file:
VIDEO_SRATE	baresip/src/core.h	/^	VIDEO_SRATE     =  90000,  \/**< Sampling rate for video            *\/$/;"	e	enum:__anon2
VIDLOOP_INTERNAL_FMT	baresip/modules/vidloop/vidloop.c	37;"	d	file:
VIDMODE_OFF	baresip/include/baresip.h	/^	VIDMODE_OFF = 0,    \/**< Video disabled                *\/$/;"	e	enum:vidmode
VIDMODE_ON	baresip/include/baresip.h	/^	VIDMODE_ON,         \/**< Video enabled                 *\/$/;"	e	enum:vidmode
VIDORIENT_LANDSCAPE_LEFT	rem-0.5.2/include/rem_vid.h	/^	VIDORIENT_LANDSCAPE_LEFT,$/;"	e	enum:vidorient
VIDORIENT_LANDSCAPE_RIGHT	rem-0.5.2/include/rem_vid.h	/^	VIDORIENT_LANDSCAPE_RIGHT,$/;"	e	enum:vidorient
VIDORIENT_PORTRAIT	rem-0.5.2/include/rem_vid.h	/^	VIDORIENT_PORTRAIT,$/;"	e	enum:vidorient
VIDORIENT_PORTRAIT_UPSIDEDOWN	rem-0.5.2/include/rem_vid.h	/^	VIDORIENT_PORTRAIT_UPSIDEDOWN,$/;"	e	enum:vidorient
VID_FMT_ARGB	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_ARGB,         \/* packed RGBA 8:8:8:8 32bpp (big endian)    *\/$/;"	e	enum:vidfmt
VID_FMT_N	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_N$/;"	e	enum:vidfmt
VID_FMT_NV12	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_NV12,         \/* planar YUV  4:2:0   12bpp UV interleaved  *\/$/;"	e	enum:vidfmt
VID_FMT_NV21	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_NV21,         \/* planar YUV  4:2:0   12bpp VU interleaved  *\/$/;"	e	enum:vidfmt
VID_FMT_RGB32	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_RGB32,        \/* packed RGBA 8:8:8:8 32bpp (native endian) *\/$/;"	e	enum:vidfmt
VID_FMT_RGB555	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_RGB555,       \/* packed RGB  5:5:5   16bpp (native endian) *\/$/;"	e	enum:vidfmt
VID_FMT_RGB565	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_RGB565,       \/* packed RGB  5:6:5   16bpp (native endian) *\/$/;"	e	enum:vidfmt
VID_FMT_UYVY422	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_UYVY422,      \/* packed YUV  4:2:2   16bpp                 *\/$/;"	e	enum:vidfmt
VID_FMT_YUV420P	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_YUV420P =  0, \/* planar YUV  4:2:0   12bpp                 *\/$/;"	e	enum:vidfmt
VID_FMT_YUV444P	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_YUV444P,      \/* planar YUV  4:4:4   24bpp                 *\/$/;"	e	enum:vidfmt
VID_FMT_YUYV422	rem-0.5.2/include/rem_vid.h	/^	VID_FMT_YUYV422,      \/* packed YUV  4:2:2   16bpp                 *\/$/;"	e	enum:vidfmt
VOLUME	re-0.5.6/src/telev/telev.c	/^	VOLUME        = 10,$/;"	e	enum:__anon137	file:
WAIT_TIME_SECONDS	baresip/modules/gst_video/encode.c	304;"	d	file:
WAVE_FMT_ALAW	rem-0.5.2/src/aufile/aufile.h	/^	WAVE_FMT_ALAW   = 0x0006,$/;"	e	enum:wavfmt
WAVE_FMT_PCM	rem-0.5.2/src/aufile/aufile.h	/^	WAVE_FMT_PCM    = 0x0001,$/;"	e	enum:wavfmt
WAVE_FMT_SIZE	rem-0.5.2/src/aufile/wave.c	/^	WAVE_FMT_SIZE = 16$/;"	e	enum:__anon195	file:
WAVE_FMT_ULAW	rem-0.5.2/src/aufile/aufile.h	/^	WAVE_FMT_ULAW   = 0x0007,$/;"	e	enum:wavfmt
WEBSITE	baresip/modules/gtk/gtk_mod.c	26;"	d	file:
WEBSOCK_BIN	re-0.5.6/include/re_websock.h	/^	WEBSOCK_BIN   = 0x2,$/;"	e	enum:websock_opcode
WEBSOCK_CLOSE	re-0.5.6/include/re_websock.h	/^	WEBSOCK_CLOSE = 0x8,$/;"	e	enum:websock_opcode
WEBSOCK_CONT	re-0.5.6/include/re_websock.h	/^	WEBSOCK_CONT  = 0x0,$/;"	e	enum:websock_opcode
WEBSOCK_EXTENSION_ERROR	re-0.5.6/include/re_websock.h	/^	WEBSOCK_EXTENSION_ERROR  = 1010,$/;"	e	enum:websock_scode
WEBSOCK_GOING_AWAY	re-0.5.6/include/re_websock.h	/^	WEBSOCK_GOING_AWAY       = 1001,$/;"	e	enum:websock_scode
WEBSOCK_INTERNAL_ERROR	re-0.5.6/include/re_websock.h	/^	WEBSOCK_INTERNAL_ERROR   = 1011,$/;"	e	enum:websock_scode
WEBSOCK_INVALID_PAYLOAD	re-0.5.6/include/re_websock.h	/^	WEBSOCK_INVALID_PAYLOAD  = 1007,$/;"	e	enum:websock_scode
WEBSOCK_MESSAGE_TOO_BIG	re-0.5.6/include/re_websock.h	/^	WEBSOCK_MESSAGE_TOO_BIG  = 1009,$/;"	e	enum:websock_scode
WEBSOCK_NORMAL_CLOSURE	re-0.5.6/include/re_websock.h	/^	WEBSOCK_NORMAL_CLOSURE   = 1000,$/;"	e	enum:websock_scode
WEBSOCK_PING	re-0.5.6/include/re_websock.h	/^	WEBSOCK_PING  = 0x9,$/;"	e	enum:websock_opcode
WEBSOCK_POLICY_VIOLATION	re-0.5.6/include/re_websock.h	/^	WEBSOCK_POLICY_VIOLATION = 1008,$/;"	e	enum:websock_scode
WEBSOCK_PONG	re-0.5.6/include/re_websock.h	/^	WEBSOCK_PONG  = 0xa,$/;"	e	enum:websock_opcode
WEBSOCK_PROTOCOL_ERROR	re-0.5.6/include/re_websock.h	/^	WEBSOCK_PROTOCOL_ERROR   = 1002,$/;"	e	enum:websock_scode
WEBSOCK_TEXT	re-0.5.6/include/re_websock.h	/^	WEBSOCK_TEXT  = 0x1,$/;"	e	enum:websock_opcode
WEBSOCK_UNSUPPORTED_DATA	re-0.5.6/include/re_websock.h	/^	WEBSOCK_UNSUPPORTED_DATA = 1003,$/;"	e	enum:websock_scode
WEBSOCK_VERSION	re-0.5.6/include/re_websock.h	/^	WEBSOCK_VERSION = 13,$/;"	e	enum:__anon193
WIDTH	baresip/test/test.c	54;"	d	file:
WORDS_BIGENDIAN	re-0.5.6/src/sha/sha1.c	101;"	d	file:
WORDS_BIGENDIAN	re-0.5.6/src/sha/sha1.c	98;"	d	file:
WRITE_BUFFERS	baresip/modules/winwave/play.c	14;"	d	file:
X509_NAME	re-0.5.6/src/tls/openssl/tls.c	29;"	d	file:
X64_STRSIZE	re-0.5.6/src/sip/dialog.c	/^	X64_STRSIZE = 17,$/;"	e	enum:__anon126	file:
XwinDeleted	baresip/modules/x11/x11.c	/^	Atom XwinDeleted;$/;"	m	struct:vidisp_st	file:
ZERO	re-0.5.6/src/dns/hdr.c	/^	ZERO                =  4$/;"	e	enum:__anon99	file:
ZRTPConfig	baresip/modules/gzrtp/stream.cpp	/^ZRTPConfig::ZRTPConfig(const struct conf *conf, const char *conf_dir)$/;"	f	class:ZRTPConfig
ZRTPConfig	baresip/modules/gzrtp/stream.h	/^class ZRTPConfig {$/;"	c
ZRTP_LIB	baresip/modules/gzrtp/module.mk	/^ZRTP_LIB := $(shell find $(ZRTP_PATH) -name libzrtpcppcore.a)$/;"	m
ZRTP_MIN_PACKET_LENGTH	baresip/modules/gzrtp/stream.cpp	444;"	d	file:
ZRTP_PATH	baresip/modules/gzrtp/module.mk	/^ZRTP_PATH ?= ..\/ZRTPCPP$/;"	m
_BSD_SOCKLEN_T_	re-0.5.6/include/re_net.h	15;"	d
_BSD_SOURCE	baresip/modules/aufile/aufile.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/avformat/avformat.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/cairo/cairo.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/fakevideo/fakevideo.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/gst_video/encode.c	9;"	d	file:
_BSD_SOURCE	baresip/modules/omx/omx.h	27;"	d
_BSD_SOURCE	baresip/modules/rst/audio.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/rst/video.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/snapshot/png_vf.c	8;"	d	file:
_BSD_SOURCE	baresip/modules/v4l/v4l.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/v4l2/v4l2.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/vidloop/vidloop.c	7;"	d	file:
_BSD_SOURCE	baresip/modules/x11grab/x11grab.c	7;"	d	file:
_BSD_SOURCE	baresip/src/audio.c	8;"	d	file:
_BSD_SOURCE	baresip/src/conf.c	7;"	d	file:
_BSD_SOURCE	re-0.5.6/src/dns/res.c	6;"	d	file:
_BSD_SOURCE	re-0.5.6/src/net/linux/rt.c	6;"	d	file:
_BSD_SOURCE	re-0.5.6/src/net/net.c	6;"	d	file:
_BSD_SOURCE	re-0.5.6/src/net/rt.c	6;"	d	file:
_BSD_SOURCE	re-0.5.6/src/sa/ntop.c	7;"	d	file:
_BSD_SOURCE	re-0.5.6/src/sa/pton.c	7;"	d	file:
_BSD_SOURCE	re-0.5.6/src/sa/sa.c	6;"	d	file:
_BSD_SOURCE	re-0.5.6/src/sys/sleep.c	13;"	d	file:
_BSD_SOURCE	re-0.5.6/src/udp/mcast.c	7;"	d	file:
_BSD_SOURCE	rem-0.5.2/src/aumix/aumix.c	7;"	d	file:
_BSD_SOURCE	rem-0.5.2/src/vidmix/vidmix.c	7;"	d	file:
_Bool	re-0.5.6/include/re_types.h	/^typedef bool _Bool;$/;"	t
_Bool	re-0.5.6/include/re_types.h	85;"	d
_DEFAULT_SOURCE	baresip/modules/alsa/alsa.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/alsa/alsa_play.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/alsa/alsa_src.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/aufile/aufile.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/avformat/avformat.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/cairo/cairo.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/fakevideo/fakevideo.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/gst1/gst.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/gst_video/encode.c	7;"	d	file:
_DEFAULT_SOURCE	baresip/modules/gst_video1/encode.c	10;"	d	file:
_DEFAULT_SOURCE	baresip/modules/rst/audio.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/rst/video.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/snapshot/png_vf.c	7;"	d	file:
_DEFAULT_SOURCE	baresip/modules/v4l/v4l.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/v4l2/v4l2.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/v4l2_codec/v4l2_codec.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/vidloop/vidloop.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/modules/x11grab/x11grab.c	6;"	d	file:
_DEFAULT_SOURCE	baresip/src/audio.c	7;"	d	file:
_DEFAULT_SOURCE	baresip/src/conf.c	6;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/dns/res.c	7;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/lock/lock.c	6;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/net/linux/rt.c	7;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/net/net.c	7;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/net/rt.c	7;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/sa/ntop.c	8;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/sa/pton.c	8;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/sa/sa.c	7;"	d	file:
_DEFAULT_SOURCE	re-0.5.6/src/udp/mcast.c	8;"	d	file:
_DEFAULT_SOURCE	rem-0.5.2/src/aumix/aumix.c	8;"	d	file:
_DEFAULT_SOURCE	rem-0.5.2/src/vidmix/vidmix.c	8;"	d	file:
_GNU_SOURCE	re-0.5.6/src/fmt/str_error.c	6;"	d	file:
_GNU_SOURCE	re-0.5.6/src/lock/rwlock.c	6;"	d	file:
_POSIX_SOURCE	baresip/modules/alsa/alsa.c	7;"	d	file:
_POSIX_SOURCE	baresip/modules/alsa/alsa_play.c	7;"	d	file:
_POSIX_SOURCE	baresip/modules/alsa/alsa_src.c	7;"	d	file:
_STRICT_ANSI	re-0.5.6/src/main/main.c	10;"	d	file:
_WIN32_WINNT	re-0.5.6/src/lock/win32/lock.c	6;"	d	file:
_WIN32_WINNT	re-0.5.6/src/lock/win32/lock.c	7;"	d	file:
_XOPEN_SOURCE	baresip/modules/x11/x11.c	8;"	d	file:
_XOPEN_SOURCE	baresip/modules/x11grab/x11grab.c	10;"	d	file:
__CF_USE_FRAMEWORK_INCLUDES__	re-0.5.6/src/dns/darwin/srv.c	13;"	d	file:
__EXTENSIONS__	baresip/src/main.c	7;"	d	file:
__EXTENSIONS__	baresip/test/main.c	7;"	d	file:
__EXTENSIONS__	re-0.5.6/src/fmt/pl.c	9;"	d	file:
__EXTENSIONS__	re-0.5.6/src/fmt/str_error.c	7;"	d	file:
__MAGIC_FUNC__	baresip/src/magic.h	19;"	d
__MAGIC_FUNC__	baresip/src/magic.h	21;"	d
__REFUNC__	re-0.5.6/include/re_types.h	250;"	d
__REFUNC__	re-0.5.6/include/re_types.h	252;"	d
__SESSION_H	baresip/modules/gzrtp/session.h	7;"	d
__SRTP_H	baresip/modules/gzrtp/srtp.h	7;"	d
__STREAM_H	baresip/modules/gzrtp/stream.h	7;"	d
__STRICT_ANSI__	baresip/modules/v4l/v4l.c	15;"	d	file:
__STRICT_ANSI__	baresip/modules/v4l2/v4l2.c	17;"	d	file:
__STRICT_ANSI__	re-0.5.6/src/fmt/str.c	6;"	d	file:
__STRICT_ANSI__	re-0.5.6/src/net/linux/rt.c	14;"	d	file:
__USE_BSD	re-0.5.6/src/net/net.c	11;"	d	file:
__USE_BSD	re-0.5.6/src/sa/ntop.c	17;"	d	file:
__USE_GNU	re-0.5.6/src/main/main.c	46;"	d	file:
__USE_MISC	re-0.5.6/src/net/ifaddrs.c	8;"	d	file:
__USE_MISC	re-0.5.6/src/net/linux/rt.c	12;"	d	file:
__USE_MISC	re-0.5.6/src/net/posix/pif.c	13;"	d	file:
__USE_MISC	re-0.5.6/src/sa/printaddr.c	9;"	d	file:
__USE_MISC	re-0.5.6/src/tcp/tcp.c	16;"	d	file:
__USE_POSIX	re-0.5.6/src/net/linux/rt.c	10;"	d	file:
__USE_POSIX	re-0.5.6/src/net/posix/pif.c	10;"	d	file:
__USE_POSIX	re-0.5.6/src/sa/ntop.c	21;"	d	file:
__USE_POSIX	re-0.5.6/src/sa/pton.c	17;"	d	file:
__USE_POSIX	re-0.5.6/src/tcp/tcp.c	14;"	d	file:
__USE_POSIX	re-0.5.6/src/udp/udp.c	14;"	d	file:
__USE_POSIX199309	baresip/modules/gst/gst.c	8;"	d	file:
__USE_POSIX199309	baresip/modules/gst_video/encode.c	8;"	d	file:
__USE_POSIX199309	baresip/modules/gst_video1/encode.c	9;"	d	file:
__USE_UNIX98	re-0.5.6/src/lock/lock.c	7;"	d	file:
__USE_UNIX98	rem-0.5.2/src/vidmix/vidmix.c	10;"	d	file:
__USE_XOPEN2K	baresip/modules/avahi/avahi.c	35;"	d	file:
__USE_XOPEN2K	re-0.5.6/src/net/posix/pif.c	11;"	d	file:
__USE_XOPEN2K	re-0.5.6/src/tcp/tcp.c	15;"	d	file:
__USE_XOPEN2K	re-0.5.6/src/udp/udp.c	15;"	d	file:
__bool_true_false_are_defined	re-0.5.6/include/re_types.h	91;"	d
__int8_t_defined	re-0.5.6/include/re_types.h	22;"	d
__ssize_t_defined	re-0.5.6/include/re_types.h	52;"	d
__uint32_t_defined	re-0.5.6/include/re_types.h	40;"	d
_json_decode	re-0.5.6/src/json/decode.c	/^static int _json_decode(const char **str, size_t *len,$/;"	f	file:
_mb	re-0.5.6/include/re_http.h	/^	struct mbuf *_mb;      \/**< Buffer containing the HTTP message     *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::mbuf
_mod_close	re-0.5.6/src/mod/dl.c	/^void _mod_close(void *h)$/;"	f
_mod_close	re-0.5.6/src/mod/win32/dll.c	/^void _mod_close(void *h)$/;"	f
_mod_open	re-0.5.6/src/mod/dl.c	/^void *_mod_open(const char *name)$/;"	f
_mod_open	re-0.5.6/src/mod/win32/dll.c	/^void *_mod_open(const char *name)$/;"	f
_mod_sym	re-0.5.6/src/mod/dl.c	/^void *_mod_sym(void *h, const char *symbol)$/;"	f
_mod_sym	re-0.5.6/src/mod/win32/dll.c	/^void *_mod_sym(void *h, const char *symbol)$/;"	f
_sip_transp_srvid	baresip/test/ua.c	/^static const char *_sip_transp_srvid(enum sip_transp tp)$/;"	f	file:
_yuv2rgb	rem-0.5.2/src/vidconv/vconv.c	/^static inline void _yuv2rgb(uint8_t *rgb, uint8_t y, uint8_t u, uint8_t v)$/;"	f	file:
a	baresip/modules/avcodec/h26x.h	/^	unsigned a:1;      \/**< 1 bit  - Advanced Prediction option         *\/$/;"	m	struct:h263_hdr
a	baresip/test/call.c	/^	struct agent a, b;$/;"	m	struct:fixture	typeref:struct:fixture::agent	file:
a	re-0.5.6/include/re_dns.h	/^		} a;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon155
a_handler	re-0.5.6/src/stun/dnsdisc.c	/^static void a_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
a_or_aaaa_query	re-0.5.6/src/stun/dnsdisc.c	/^static int a_or_aaaa_query(struct stun_dns *dns, const char *name)$/;"	f	file:
aa	re-0.5.6/include/re_dns.h	/^	bool aa;$/;"	m	struct:dnshdr
aaaa	re-0.5.6/include/re_dns.h	/^		} aaaa;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon161
aaaa_handler	re-0.5.6/src/stun/dnsdisc.c	/^static void aaaa_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
ab	baresip/modules/auloop/auloop.c	/^	struct aubuf *ab;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::aubuf	file:
abcd	re-0.5.6/src/md5/md5.h	/^	md5_word_t abcd[4];		\/* digest buffer *\/$/;"	m	struct:md5_state_s
abort_call	baresip/modules/zrtp/zrtp.c	/^static void abort_call(struct menc_sess *sess)$/;"	f	file:
abort_ice	re-0.5.6/src/ice/connchk.c	/^static void abort_ice(struct icem *icem, int err)$/;"	f	file:
abort_timer	baresip/modules/zrtp/zrtp.c	/^	struct tmr abort_timer;$/;"	m	struct:menc_sess	typeref:struct:menc_sess::tmr	file:
abort_timer_h	baresip/modules/zrtp/zrtp.c	/^static void abort_timer_h(void *arg)$/;"	f	file:
about_box	baresip/modules/menu/menu.c	/^static int about_box(struct re_printf *pf, void *unused)$/;"	f	file:
about_fmt	baresip/modules/menu/menu.c	/^static const char about_fmt[] =$/;"	v	file:
ac	baresip/modules/amr/amr.c	/^	const struct aucodec *ac;$/;"	m	struct:audec_state	typeref:struct:audec_state::aucodec	file:
ac	baresip/modules/amr/amr.c	/^	const struct aucodec *ac;$/;"	m	struct:auenc_state	typeref:struct:auenc_state::aucodec	file:
ac	baresip/modules/auloop/auloop.c	/^	const struct aucodec *ac;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::aucodec	file:
ac	baresip/modules/g7221/g7221.h	/^	struct aucodec ac;$/;"	m	struct:g7221_aucodec	typeref:struct:g7221_aucodec::aucodec
ac	baresip/modules/g726/g726.c	/^	struct aucodec ac;$/;"	m	struct:g726_aucodec	typeref:struct:g726_aucodec::aucodec	file:
ac	baresip/src/audio.c	/^	const struct aucodec *ac;     \/**< Current audio decoder           *\/$/;"	m	struct:aurx	typeref:struct:aurx::aucodec	file:
ac	baresip/src/audio.c	/^	const struct aucodec *ac;     \/**< Current audio encoder           *\/$/;"	m	struct:autx	typeref:struct:autx::aucodec	file:
ac_dummy	baresip/test/mock/mock_aucodec.c	/^static struct aucodec ac_dummy = {$/;"	v	typeref:struct:aucodec	file:
ac_gsm	baresip/modules/gsm/gsm.c	/^static struct aucodec ac_gsm = {$/;"	v	typeref:struct:aucodec	file:
acc	baresip/src/call.c	/^	struct account *acc;      \/**< Account (ref.)                       *\/$/;"	m	struct:call	typeref:struct:call::account	file:
acc	baresip/src/ua.c	/^	struct account *acc;         \/**< Account Parameters                 *\/$/;"	m	struct:ua	typeref:struct:ua::account	file:
accept_print	re-0.5.6/src/websock/websock.c	/^static int accept_print(struct re_printf *pf, const struct pl *key)$/;"	f	file:
access	baresip/src/contact.c	/^	enum access access;$/;"	m	struct:contact	typeref:enum:contact::access	file:
access	baresip/src/contact.c	/^enum access {$/;"	g	file:
account	baresip/modules/account/account.c	/^const struct mod_export DECL_EXPORTS(account) = {$/;"	v	typeref:struct:DECL_EXPORTS
account	baresip/src/core.h	/^struct account {$/;"	s
account_alloc	baresip/src/account.c	/^int account_alloc(struct account **accp, const char *sipaddr)$/;"	f
account_answermode	baresip/src/account.c	/^enum answermode account_answermode(const struct account *acc)$/;"	f
account_aor	baresip/src/account.c	/^const char *account_aor(const struct account *acc)$/;"	f
account_aucodecl	baresip/src/account.c	/^struct list *account_aucodecl(const struct account *acc)$/;"	f
account_auth	baresip/src/account.c	/^int account_auth(const struct account *acc, char **username, char **password,$/;"	f
account_auth_pass	baresip/src/account.c	/^const char *account_auth_pass(const struct account *acc)$/;"	f
account_auth_user	baresip/src/account.c	/^const char *account_auth_user(const struct account *acc)$/;"	f
account_debug	baresip/src/account.c	/^int account_debug(struct re_printf *pf, const struct account *acc)$/;"	f
account_laddr	baresip/src/account.c	/^struct sip_addr *account_laddr(const struct account *acc)$/;"	f
account_outbound	baresip/src/account.c	/^const char *account_outbound(const struct account *acc, unsigned ix)$/;"	f
account_ptime	baresip/src/account.c	/^uint32_t account_ptime(const struct account *acc)$/;"	f
account_pubint	baresip/src/account.c	/^uint32_t account_pubint(const struct account *acc)$/;"	f
account_read_file	baresip/modules/account/account.c	/^static int account_read_file(void)$/;"	f	file:
account_regint	baresip/src/account.c	/^uint32_t account_regint(const struct account *acc)$/;"	f
account_set_auth_pass	baresip/src/account.c	/^int account_set_auth_pass(struct account *acc, const char *pass)$/;"	f
account_set_display_name	baresip/src/account.c	/^int account_set_display_name(struct account *acc, const char *dname)$/;"	f
account_stun_host	baresip/src/account.c	/^const char *account_stun_host(const struct account *acc)$/;"	f
account_stun_pass	baresip/src/account.c	/^const char *account_stun_pass(const struct account *acc)$/;"	f
account_stun_user	baresip/src/account.c	/^const char *account_stun_user(const struct account *acc)$/;"	f
account_vidcodecl	baresip/src/account.c	/^struct list *account_vidcodecl(const struct account *acc)$/;"	f
account_write_template	baresip/modules/account/account.c	/^static int account_write_template(const char *file)$/;"	f	file:
accounts_inited	baresip/modules/gtk/gtk_mod.c	/^	bool accounts_inited;$/;"	m	struct:gtk_mod	file:
accounts_menu	baresip/modules/gtk/gtk_mod.c	/^	GtkWidget *accounts_menu;$/;"	m	struct:gtk_mod	file:
accounts_menu_add_item	baresip/modules/gtk/gtk_mod.c	/^static GtkMenuItem *accounts_menu_add_item(struct gtk_mod *mod,$/;"	f	file:
accounts_menu_get_item	baresip/modules/gtk/gtk_mod.c	/^static GtkMenuItem *accounts_menu_get_item(struct gtk_mod *mod,$/;"	f	file:
accounts_menu_group	baresip/modules/gtk/gtk_mod.c	/^	GSList *accounts_menu_group;$/;"	m	struct:gtk_mod	file:
accounts_menu_set_status	baresip/modules/gtk/gtk_mod.c	/^static void accounts_menu_set_status(struct gtk_mod *mod,$/;"	f	file:
ack_handler	re-0.5.6/src/sip/strans.c	/^static bool ack_handler(struct sip *sip, const struct sip_msg *msg)$/;"	f	file:
ack_handler	re-0.5.6/src/sipsess/listen.c	/^static void ack_handler(struct sipsess_sock *sock, const struct sip_msg *msg)$/;"	f	file:
action	baresip/test/call.c	/^enum action {$/;"	g	file:
activateTimer	baresip/modules/gzrtp/stream.cpp	/^int32_t Stream::activateTimer(int32_t time)$/;"	f	class:Stream
active	baresip/modules/dtls_srtp/dtls_srtp.c	/^	bool active;$/;"	m	struct:dtls_srtp	file:
active	baresip/src/bfcp.c	/^	bool active;$/;"	m	struct:bfcp	file:
active	re-0.5.6/src/tcp/tcp.c	/^	bool active;          \/**< We are connecting flag            *\/$/;"	m	struct:tcp_conn	file:
active	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	bool active;$/;"	m	struct:tls_conn	file:
active	re-0.5.6/src/tls/openssl/tls_udp.c	/^	bool active;$/;"	m	struct:tls_conn	file:
active	re-0.5.6/src/websock/websock.c	/^	bool active;$/;"	m	struct:websock_conn	file:
acv	baresip/src/core.h	/^	struct le acv[8];            \/**< List elements for aucodecl         *\/$/;"	m	struct:account	typeref:struct:account::le
add_audio_codec	baresip/src/audio.c	/^static int add_audio_codec(struct audio *a, struct sdp_media *m,$/;"	f	file:
add_contact	baresip/modules/avahi/avahi.c	/^static void add_contact(const char* uri,$/;"	f	file:
add_extension	baresip/src/ua.c	/^static void add_extension(struct ua *ua, const char *extension)$/;"	f	file:
add_rtcp_stats	baresip/src/event.c	/^static int add_rtcp_stats(struct odict *od_parent, const struct rtcp_stats *rs)$/;"	f	file:
add_sample_grabber	baresip/modules/dshow/dshow.cpp	/^static int add_sample_grabber(struct vidsrc_st *st)$/;"	f	file:
add_telev_codec	baresip/src/audio.c	/^static int add_telev_codec(struct audio *a)$/;"	f	file:
add_transp_af	baresip/src/ua.c	/^static int add_transp_af(const struct sa *laddr)$/;"	f	file:
add_wave_in	baresip/modules/winwave/src.c	/^static int add_wave_in(struct ausrc_st *st)$/;"	f	file:
addr	baresip/include/baresip.h	/^		char addr[64];$/;"	m	struct:config_net::__anon24
addr	baresip/src/contact.c	/^	struct sip_addr addr;$/;"	m	struct:contact	typeref:struct:contact::sip_addr	file:
addr	baresip/test/test.h	/^	struct sa addr;$/;"	m	struct:dns_server	typeref:struct:dns_server::sa
addr	re-0.5.6/include/re_dns.h	/^			uint32_t addr;$/;"	m	struct:dnsrr::__anon154::__anon155
addr	re-0.5.6/include/re_dns.h	/^			uint8_t addr[16];$/;"	m	struct:dnsrr::__anon154::__anon161
addr	re-0.5.6/include/re_ice.h	/^	struct sa addr;           \/**< Transport address                    *\/$/;"	m	struct:ice_cand_attr	typeref:struct:ice_cand_attr::sa
addr	re-0.5.6/include/re_sip.h	/^	const struct sa *addr;$/;"	m	struct:sip_contact	typeref:struct:sip_contact::sa
addr	re-0.5.6/include/re_sip.h	/^	struct sa addr;$/;"	m	struct:sip_via	typeref:struct:sip_via::sa
addr	re-0.5.6/src/http/client.c	/^	struct sa addr;$/;"	m	struct:conn	typeref:struct:conn::sa	file:
addr	re-0.5.6/src/ice/ice.h	/^	struct sa addr;              \/**< Transport address                  *\/$/;"	m	struct:ice_cand	typeref:struct:ice_cand::sa
addr1	baresip/modules/stun/stun.c	/^	struct sa addr1;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sa	file:
addr1	baresip/modules/turn/turn.c	/^	struct sa addr1;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sa	file:
addr2	baresip/modules/stun/stun.c	/^	struct sa addr2;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sa	file:
addr2	baresip/modules/turn/turn.c	/^	struct sa addr2;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sa	file:
addr_handler	re-0.5.6/src/sip/request.c	/^static void addr_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
addr_lookup	re-0.5.6/src/sip/request.c	/^static int addr_lookup(struct sip_request *req, const char *name)$/;"	f	file:
addr_sort_handler	re-0.5.6/src/dns/rrlist.c	/^static bool addr_sort_handler(struct le *le1, struct le *le2, void *arg)$/;"	f	file:
addrl	re-0.5.6/src/sip/request.c	/^	struct list addrl;$/;"	m	struct:sip_request	typeref:struct:sip_request::list	file:
aec_alloc	baresip/modules/speex_aec/speex_aec.c	/^static int aec_alloc(struct speex_st **stp, void **ctx, struct aufilt_prm *prm)$/;"	f	file:
aeh	re-0.5.6/include/re_json.h	/^	json_array_entry_h *aeh;$/;"	m	struct:json_handlers
aes	re-0.5.6/src/aes/apple/aes.c	/^struct aes {$/;"	s	file:
aes	re-0.5.6/src/aes/openssl/aes.c	/^struct aes {$/;"	s	file:
aes	re-0.5.6/src/srtp/srtp.h	/^		struct aes *aes;    \/**< AES Context                       *\/$/;"	m	struct:srtp::comp	typeref:struct:srtp::comp::aes
aes_alloc	re-0.5.6/src/aes/apple/aes.c	/^int aes_alloc(struct aes **stp, enum aes_mode mode,$/;"	f
aes_alloc	re-0.5.6/src/aes/openssl/aes.c	/^int aes_alloc(struct aes **aesp, enum aes_mode mode,$/;"	f
aes_alloc	re-0.5.6/src/aes/stub.c	/^int aes_alloc(struct aes **stp, enum aes_mode mode,$/;"	f
aes_cm_128_hmac_sha1_32	baresip/modules/libsrtp/srtp.c	/^static const char aes_cm_128_hmac_sha1_32[] = "AES_CM_128_HMAC_SHA1_32";$/;"	v	file:
aes_cm_128_hmac_sha1_32	baresip/modules/srtp/srtp.c	/^static const char aes_cm_128_hmac_sha1_32[] = "AES_CM_128_HMAC_SHA1_32";$/;"	v	file:
aes_cm_128_hmac_sha1_80	baresip/modules/libsrtp/srtp.c	/^static const char aes_cm_128_hmac_sha1_80[] = "AES_CM_128_HMAC_SHA1_80";$/;"	v	file:
aes_cm_128_hmac_sha1_80	baresip/modules/srtp/srtp.c	/^static const char aes_cm_128_hmac_sha1_80[] = "AES_CM_128_HMAC_SHA1_80";$/;"	v	file:
aes_decr	re-0.5.6/src/aes/apple/aes.c	/^int aes_decr(struct aes *st, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
aes_decr	re-0.5.6/src/aes/openssl/aes.c	/^int aes_decr(struct aes *aes, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
aes_decr	re-0.5.6/src/aes/stub.c	/^int aes_decr(struct aes *st, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
aes_encr	re-0.5.6/src/aes/apple/aes.c	/^int aes_encr(struct aes *st, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
aes_encr	re-0.5.6/src/aes/openssl/aes.c	/^int aes_encr(struct aes *aes, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
aes_encr	re-0.5.6/src/aes/stub.c	/^int aes_encr(struct aes *st, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
aes_mode	re-0.5.6/include/re_aes.h	/^enum aes_mode {$/;"	g
aes_set_iv	re-0.5.6/src/aes/apple/aes.c	/^void aes_set_iv(struct aes *st, const uint8_t iv[AES_BLOCK_SIZE])$/;"	f
aes_set_iv	re-0.5.6/src/aes/openssl/aes.c	/^void aes_set_iv(struct aes *aes, const uint8_t iv[AES_BLOCK_SIZE])$/;"	f
aes_set_iv	re-0.5.6/src/aes/stub.c	/^void aes_set_iv(struct aes *st, const uint8_t iv[AES_BLOCK_SIZE])$/;"	f
af	baresip/include/baresip.h	/^	const struct aufilt *af;$/;"	m	struct:aufilt_dec_st	typeref:struct:aufilt_dec_st::aufilt
af	baresip/include/baresip.h	/^	const struct aufilt *af;$/;"	m	struct:aufilt_enc_st	typeref:struct:aufilt_enc_st::aufilt
af	baresip/modules/gtk/gtk_mod.h	/^	struct aufilt_dec_st af;  \/* inheritance *\/$/;"	m	struct:vumeter_dec	typeref:struct:vumeter_dec::aufilt_dec_st
af	baresip/modules/gtk/gtk_mod.h	/^	struct aufilt_enc_st af;  \/* inheritance *\/$/;"	m	struct:vumeter_enc	typeref:struct:vumeter_enc::aufilt_enc_st
af	baresip/modules/plc/plc.c	/^	struct aufilt_dec_st af; \/* base class *\/$/;"	m	struct:plc_st	typeref:struct:plc_st::aufilt_dec_st	file:
af	baresip/modules/sndfile/sndfile.c	/^	struct aufilt_dec_st af;  \/* base class *\/$/;"	m	struct:sndfile_dec	typeref:struct:sndfile_dec::aufilt_dec_st	file:
af	baresip/modules/sndfile/sndfile.c	/^	struct aufilt_enc_st af;  \/* base class *\/$/;"	m	struct:sndfile_enc	typeref:struct:sndfile_enc::aufilt_enc_st	file:
af	baresip/modules/speex_aec/speex_aec.c	/^	struct aufilt_dec_st af;  \/* base class *\/$/;"	m	struct:dec_st	typeref:struct:dec_st::aufilt_dec_st	file:
af	baresip/modules/speex_aec/speex_aec.c	/^	struct aufilt_enc_st af;  \/* base class *\/$/;"	m	struct:enc_st	typeref:struct:enc_st::aufilt_enc_st	file:
af	baresip/modules/speex_pp/speex_pp.c	/^	struct aufilt_enc_st af;    \/* base class *\/$/;"	m	struct:preproc	typeref:struct:preproc::aufilt_enc_st	file:
af	baresip/modules/vumeter/vumeter.c	/^	struct aufilt_dec_st af;  \/* inheritance *\/$/;"	m	struct:vumeter_dec	typeref:struct:vumeter_dec::aufilt_dec_st	file:
af	baresip/modules/vumeter/vumeter.c	/^	struct aufilt_enc_st af;  \/* inheritance *\/$/;"	m	struct:vumeter_enc	typeref:struct:vumeter_enc::aufilt_enc_st	file:
af	baresip/src/call.c	/^	int af;                   \/**< Preferred Address Family             *\/$/;"	m	struct:call	file:
af	baresip/src/core.h	/^	int af;$/;"	m	struct:call_prm
af	baresip/src/net.c	/^	int af;              \/**< Preferred address family          *\/$/;"	m	struct:network	file:
af	baresip/src/reg.c	/^	int af;                      \/**< Cached address family for SIP conn *\/$/;"	m	struct:reg	file:
af	baresip/src/ua.c	/^	int af;                      \/**< Preferred Address Family           *\/$/;"	m	struct:ua	file:
af	re-0.5.6/include/re_uri.h	/^	int af;              \/**< Address family of host IP-address *\/$/;"	m	struct:uri
af	re-0.5.6/src/net/if.c	/^	int af;        \/**< Address family *\/$/;"	m	struct:ifentry	file:
af	re-0.5.6/src/net/rt.c	/^	int af;$/;"	m	struct:net_rt	file:
af	re-0.5.6/src/stun/dnsdisc.c	/^	int af;                \/**< Preferred Address family*\/$/;"	m	struct:stun_dns	file:
af	rem-0.5.2/src/aumix/aumix.c	/^	struct aufile *af;$/;"	m	struct:aumix	typeref:struct:aumix::aufile	file:
af_media	baresip/src/ua.c	/^	int af_media;                \/**< Preferred Address Family for media *\/$/;"	m	struct:ua	file:
af_name	baresip/src/reg.c	/^static const char *af_name(int af)$/;"	f	file:
afb	re-0.5.6/include/re_rtp.h	/^				struct mbuf *afb;$/;"	m	union:rtcp_msg::__anon181::__anon188::__anon189	typeref:struct:rtcp_msg::__anon181::__anon188::__anon189::mbuf
afl	rem-0.5.2/src/aubuf/aubuf.c	/^	struct list afl;$/;"	m	struct:aubuf	typeref:struct:aubuf::list	file:
agc_enabled	baresip/modules/speex_pp/speex_pp.c	/^	int agc_enabled;$/;"	m	struct:__anon75	file:
agc_level	baresip/modules/speex_pp/speex_pp.c	/^	spx_int32_t agc_level;$/;"	m	struct:__anon75	file:
agent	baresip/test/call.c	/^struct agent {$/;"	s	file:
ah	re-0.5.6/include/re_json.h	/^	json_array_h *ah;$/;"	m	struct:json_handlers
alert_dev	baresip/include/baresip.h	/^	char alert_dev[128];    \/**< Audio alert device             *\/$/;"	m	struct:config_audio
alert_mod	baresip/include/baresip.h	/^	char alert_mod[16];     \/**< Audio alert module             *\/$/;"	m	struct:config_audio
alert_start	baresip/modules/menu/menu.c	/^static void alert_start(void *arg)$/;"	f	file:
alert_stop	baresip/modules/menu/menu.c	/^static void alert_stop(void)$/;"	f	file:
algo	re-0.5.6/src/hmac/apple/hmac.c	/^	CCHmacAlgorithm algo;$/;"	m	struct:hmac	file:
algorithm	re-0.5.6/include/re_httpauth.h	/^	struct pl algorithm;$/;"	m	struct:httpauth_digest_chall	typeref:struct:httpauth_digest_chall::pl
all_components_granted	baresip/modules/natpmp/natpmp.c	/^static bool all_components_granted(const struct mnat_media *m)$/;"	f	file:
all_components_granted	baresip/modules/pcp/pcp.c	/^static bool all_components_granted(const struct mnat_media *m)$/;"	f	file:
alloc	baresip/modules/avformat/avformat.c	/^static int alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
alloc	baresip/modules/cairo/cairo.c	/^static int alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
alloc	baresip/modules/directfb/directfb.c	/^static int alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
alloc	baresip/modules/dshow/dshow.cpp	/^static int alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
alloc	baresip/modules/libsrtp/srtp.c	/^static int alloc(struct menc_media **stp, struct menc_sess *sess,$/;"	f	file:
alloc	baresip/modules/sdl/sdl.c	/^static int alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
alloc	baresip/modules/sdl2/sdl.c	/^static int alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
alloc	baresip/modules/srtp/srtp.c	/^static int alloc(struct menc_media **stp, struct menc_sess *sess,$/;"	f	file:
alloc	baresip/modules/v4l/v4l.c	/^static int alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
alloc	baresip/modules/v4l2/v4l2.c	/^static int alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
alloc	baresip/modules/x11/x11.c	/^static int alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
alloc	baresip/modules/x11grab/x11grab.c	/^static int alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
alloc_handler	baresip/modules/aufile/aufile.c	/^static int alloc_handler(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
alloc_handler	baresip/modules/rst/audio.c	/^static int alloc_handler(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
alloc_handler	baresip/modules/rst/video.c	/^static int alloc_handler(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
allocate_request	re-0.5.6/src/turn/turnc.c	/^static int allocate_request(struct turnc *t)$/;"	f	file:
allocate_resources	baresip/modules/gst_video1/encode.c	/^static int allocate_resources(struct videnc_state **stp)$/;"	f	file:
allocate_resp_handler	re-0.5.6/src/turn/turnc.c	/^static void allocate_resp_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
allocated	re-0.5.6/src/turn/turnc.h	/^	bool allocated;                \/**< Allocation was done flag        *\/$/;"	m	struct:turnc
alloch	baresip/src/core.h	/^	auplay_alloc_h  *alloch;$/;"	m	struct:auplay
alloch	baresip/src/core.h	/^	ausrc_alloc_h   *alloch;$/;"	m	struct:ausrc
alloch	baresip/src/core.h	/^	vidisp_alloc_h  *alloch;$/;"	m	struct:vidisp
alloch	baresip/src/core.h	/^	vidsrc_alloc_h   *alloch;$/;"	m	struct:vidsrc
alphanum	re-0.5.6/src/sys/rand.c	/^static const char alphanum[] =$/;"	v	file:
alsa	baresip/modules/alsa/alsa.c	/^const struct mod_export DECL_EXPORTS(alsa) = {$/;"	v	typeref:struct:DECL_EXPORTS
alsa_close	baresip/modules/alsa/alsa.c	/^static int alsa_close(void)$/;"	f	file:
alsa_dev	baresip/modules/alsa/alsa.c	/^char alsa_dev[64] = "default";$/;"	v
alsa_init	baresip/modules/alsa/alsa.c	/^static int alsa_init(void)$/;"	f	file:
alsa_play_alloc	baresip/modules/alsa/alsa_play.c	/^int alsa_play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
alsa_reset	baresip/modules/alsa/alsa.c	/^int alsa_reset(snd_pcm_t *pcm, uint32_t srate, uint32_t ch,$/;"	f
alsa_src_alloc	baresip/modules/alsa/alsa_src.c	/^int alsa_src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
alt_server	re-0.5.6/include/re_stun.h	/^		struct sa alt_server;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
amr	baresip/modules/amr/amr.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(amr) = {$/;"	v	typeref:struct:DECL_EXPORTS
amr_fmtp_cmp	baresip/modules/amr/sdp.c	/^bool amr_fmtp_cmp(const char *lfmtp, const char *rfmtp, void *arg)$/;"	f
amr_fmtp_enc	baresip/modules/amr/sdp.c	/^int amr_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f
amr_nb	baresip/modules/amr/amr.c	/^static struct aucodec amr_nb = {$/;"	v	typeref:struct:aucodec	file:
amr_octet_align	baresip/modules/amr/sdp.c	/^static bool amr_octet_align(const char *fmtp)$/;"	f	file:
amr_wb	baresip/modules/amr/amr.c	/^static struct aucodec amr_wb = {$/;"	v	typeref:struct:aucodec	file:
answer_activated	baresip/modules/gtk/gtk_mod.c	/^static void answer_activated(GSimpleAction *action, GVariant *parameter,$/;"	f	file:
answerh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_answer_h *answerh;$/;"	m	struct:sipsess
answermode	baresip/include/baresip.h	/^enum answermode {$/;"	g
answermode	baresip/src/core.h	/^	enum answermode answermode;  \/**< Answermode for incoming calls      *\/$/;"	m	struct:account	typeref:enum:account::answermode
answermode_decode	baresip/src/account.c	/^static void answermode_decode(struct account *prm, const struct pl *pl)$/;"	f	file:
answermode_str	baresip/src/account.c	/^static const char *answermode_str(enum answermode mode)$/;"	f	file:
aor	baresip/src/core.h	/^	char *aor;                   \/**< Local SIP uri                      *\/$/;"	m	struct:account
aor	baresip/test/sip/sipsrv.h	/^struct aor {$/;"	s
aor_create	baresip/test/sip/aor.c	/^int aor_create(struct sip_server *srv, struct aor **aorp,$/;"	f
aor_find	baresip/test/sip/aor.c	/^int aor_find(struct sip_server *srv, struct aor **aorp, const struct uri *uri)$/;"	f
ap	baresip/modules/alsa/alsa_play.c	/^	const struct auplay *ap;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/aubridge/aubridge.h	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay
ap	baresip/modules/audiounit/player.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/coreaudio/player.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/jack/jack_play.c	/^	const struct auplay *ap;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/opensles/player.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/oss/oss.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/portaudio/portaudio.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/pulse/player.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/sndio/sndio.c	/^	const struct auplay *ap;  \/* pointer to base-class *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/modules/winwave/play.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
ap	baresip/src/core.h	/^	struct auplay *ap;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay
ap	baresip/test/mock/mock_auplay.c	/^	const struct auplay *ap;      \/* inheritance *\/$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay	file:
apm	baresip/modules/avcodec/h26x.h	/^	unsigned apm:1;              \/**< Advanced Prediction mode        *\/$/;"	m	struct:h263_strm
app	baresip/modules/gtk/gtk_mod.c	/^	GApplication *app;$/;"	m	struct:gtk_mod	file:
app	re-0.5.6/include/re_rtp.h	/^		} app;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon185
app_entries	baresip/modules/gtk/gtk_mod.c	/^static GActionEntry app_entries[] = {$/;"	v	file:
app_menu	baresip/modules/gtk/gtk_mod.c	/^	GtkWidget *app_menu;$/;"	m	struct:gtk_mod	file:
app_sock	baresip/modules/dtls_srtp/dtls_srtp.h	/^	void *app_sock;$/;"	m	struct:comp
append_extension	baresip/src/module.c	/^static void append_extension(char *buf, size_t sz, const char *name)$/;"	f	file:
append_rtpext	baresip/src/audio.c	/^static int append_rtpext(struct audio *au, struct mbuf *mb,$/;"	f	file:
appsinkCallbacks	baresip/modules/gst_video1/encode.c	/^		GstAppSinkCallbacks appsinkCallbacks;$/;"	m	struct:videnc_state::__anon91	file:
appsink_destroy_notify_cb	baresip/modules/gst_video1/encode.c	/^static void appsink_destroy_notify_cb(struct videnc_state *st)$/;"	f	file:
appsink_end_of_stream_cb	baresip/modules/gst_video1/encode.c	/^static void appsink_end_of_stream_cb(GstAppSink *src, gpointer user_data)$/;"	f	file:
appsink_new_sample_cb	baresip/modules/gst_video1/encode.c	/^static GstFlowReturn appsink_new_sample_cb(GstAppSink *sink,$/;"	f	file:
appsrcCallbacks	baresip/modules/gst_video1/encode.c	/^		GstAppSrcCallbacks appsrcCallbacks;$/;"	m	struct:videnc_state::__anon91	file:
appsrc_destroy_notify_cb	baresip/modules/gst_video1/encode.c	/^static void appsrc_destroy_notify_cb(struct videnc_state *st)$/;"	f	file:
appsrc_enough_data_cb	baresip/modules/gst_video1/encode.c	/^static void appsrc_enough_data_cb(GstAppSrc *src, gpointer user_data)$/;"	f	file:
appsrc_need_data_cb	baresip/modules/gst_video1/encode.c	/^static void appsrc_need_data_cb(GstAppSrc *src, guint size, gpointer user_data)$/;"	f	file:
arg	baresip/modules/alsa/alsa_play.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/alsa/alsa_src.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/aubridge/aubridge.h	/^	void *arg;$/;"	m	struct:auplay_st
arg	baresip/modules/aubridge/aubridge.h	/^	void *arg;$/;"	m	struct:ausrc_st
arg	baresip/modules/audiounit/player.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/audiounit/recorder.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/audiounit/sess.c	/^	void *arg;$/;"	m	struct:audiosess_st	file:
arg	baresip/modules/aufile/aufile.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/av1/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/avcodec/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/avformat/avformat.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/cairo/cairo.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/coreaudio/player.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/coreaudio/recorder.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/daala/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/dshow/dshow.cpp	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/dtls_srtp/dtls_srtp.c	/^	void *arg;$/;"	m	struct:menc_sess	file:
arg	baresip/modules/fakevideo/fakevideo.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/gst/gst.c	/^	void *arg;                  \/**< Handler argument        *\/$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/gst1/gst.c	/^	void *arg;                  \/**< Handler argument        *\/$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/gst_video1/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/h265/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/ice/ice.c	/^	void *arg;$/;"	m	struct:mnat_sess	file:
arg	baresip/modules/jack/jack_play.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/jack/jack_src.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/natpmp/libnatpmp.c	/^	void *arg;$/;"	m	struct:natpmp_req	file:
arg	baresip/modules/natpmp/natpmp.c	/^	void *arg;$/;"	m	struct:mnat_sess	file:
arg	baresip/modules/opensles/player.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/opensles/recorder.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/oss/oss.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/oss/oss.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/pcp/listener.c	/^	void *arg;$/;"	m	struct:pcp_listener	file:
arg	baresip/modules/pcp/pcp.c	/^	void *arg;$/;"	m	struct:mnat_sess	file:
arg	baresip/modules/portaudio/portaudio.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/portaudio/portaudio.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/pulse/player.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/pulse/recorder.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/rst/audio.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/rst/video.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/sdl/sdl.c	/^	void *arg;                      \/**< Handler argument      *\/$/;"	m	struct:__anon60	file:
arg	baresip/modules/sndio/sndio.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/sndio/sndio.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/stun/stun.c	/^	void *arg;$/;"	m	struct:mnat_sess	file:
arg	baresip/modules/turn/turn.c	/^	void *arg;$/;"	m	struct:mnat_sess	file:
arg	baresip/modules/v4l/v4l.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/v4l2/v4l2.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/v4l2_codec/v4l2_codec.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/vidbridge/vidbridge.h	/^	void *arg;$/;"	m	struct:vidsrc_st
arg	baresip/modules/vp8/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/vp9/encode.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/modules/winwave/play.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/modules/winwave/src.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/modules/x11grab/x11grab.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	baresip/modules/zrtp/zrtp.c	/^	void *arg;$/;"	m	struct:menc_sess	file:
arg	baresip/src/audio.c	/^	void *arg;                    \/**< Handler argument                *\/$/;"	m	struct:audio	file:
arg	baresip/src/call.c	/^	void *arg;                \/**< Handler argument                     *\/$/;"	m	struct:call	file:
arg	baresip/src/core.h	/^	void *arg;               \/**< Handler argument                      *\/$/;"	m	struct:stream
arg	baresip/src/message.c	/^	void *arg;$/;"	m	struct:message_lsnr	file:
arg	baresip/src/net.c	/^	void *arg;$/;"	m	struct:network	file:
arg	baresip/src/sipreq.c	/^	void *arg;$/;"	m	struct:sip_req	file:
arg	baresip/src/ua.c	/^	void *arg;                     \/**< UA Exit handler argument        *\/$/;"	m	struct:__anon7	file:
arg	baresip/src/ua.c	/^	void *arg;$/;"	m	struct:ua_eh	file:
arg	baresip/src/video.c	/^	void *arg;              \/**< Error handler argument               *\/$/;"	m	struct:video	file:
arg	baresip/test/mock/mock_auplay.c	/^	void *arg;$/;"	m	struct:__anon98	file:
arg	baresip/test/mock/mock_auplay.c	/^	void *arg;$/;"	m	struct:auplay_st	file:
arg	baresip/test/mock/mock_ausrc.c	/^	void *arg;$/;"	m	struct:ausrc_st	file:
arg	baresip/test/mock/mock_vidcodec.c	/^	void *arg;$/;"	m	struct:videnc_state	file:
arg	baresip/test/mock/mock_vidsrc.c	/^	void *arg;$/;"	m	struct:vidsrc_st	file:
arg	re-0.5.6/include/re_bfcp.h	/^	void *arg;$/;"	m	struct:bfcp_encode
arg	re-0.5.6/include/re_fmt.h	/^	void *arg;         \/**< Handler agument *\/$/;"	m	struct:re_printf
arg	re-0.5.6/include/re_json.h	/^	void *arg;$/;"	m	struct:json_handlers
arg	re-0.5.6/include/re_tmr.h	/^	void *arg;          \/**< Handler argument    *\/$/;"	m	struct:tmr
arg	re-0.5.6/src/bfcp/bfcp.h	/^	void *arg;$/;"	m	struct:bfcp_conn
arg	re-0.5.6/src/bfcp/request.c	/^	void *arg;$/;"	m	struct:bfcp_ctrans	file:
arg	re-0.5.6/src/dbg/dbg.c	/^	void *arg;             \/**< Handler argument       *\/$/;"	m	struct:__anon141	file:
arg	re-0.5.6/src/dns/client.c	/^	void *arg;$/;"	m	struct:dns_query	file:
arg	re-0.5.6/src/http/client.c	/^	void *arg;$/;"	m	struct:http_req	file:
arg	re-0.5.6/src/http/server.c	/^	void *arg;$/;"	m	struct:http_sock	file:
arg	re-0.5.6/src/ice/ice.h	/^	void *arg;                   \/**< Handler argument                   *\/$/;"	m	struct:icem
arg	re-0.5.6/src/main/main.c	/^		void *arg;           \/**< Handler argument                  *\/$/;"	m	struct:re::__anon140	file:
arg	re-0.5.6/src/mqueue/mqueue.c	/^	void *arg;$/;"	m	struct:mqueue	file:
arg	re-0.5.6/src/natbd/filtering.c	/^	void *arg;             \/**< Handler argument           *\/$/;"	m	struct:nat_filtering	file:
arg	re-0.5.6/src/natbd/genalg.c	/^	void *arg;              \/**< Handler argument          *\/$/;"	m	struct:nat_genalg	file:
arg	re-0.5.6/src/natbd/hairpinning.c	/^	void *arg;               \/**< Handler argument        *\/$/;"	m	struct:nat_hairpinning	file:
arg	re-0.5.6/src/natbd/lifetime.c	/^	void *arg;                              \/**< Handler argument       *\/$/;"	m	struct:nat_lifetime	file:
arg	re-0.5.6/src/natbd/mapping.c	/^	void *arg;                \/**< Handler argument          *\/$/;"	m	struct:nat_mapping	file:
arg	re-0.5.6/src/rtp/rtp.c	/^	void *arg;              \/**< Handler argument      *\/$/;"	m	struct:rtp_sock	file:
arg	re-0.5.6/src/sdp/sdp.h	/^	void *arg;$/;"	m	struct:sdp_media
arg	re-0.5.6/src/sip/auth.c	/^	void *arg;$/;"	m	struct:sip_auth	file:
arg	re-0.5.6/src/sip/ctrans.c	/^	void *arg;$/;"	m	struct:sip_ctrans	file:
arg	re-0.5.6/src/sip/request.c	/^	void *arg;$/;"	m	struct:sip_request	file:
arg	re-0.5.6/src/sip/sip.h	/^	void *arg;$/;"	m	struct:sip
arg	re-0.5.6/src/sip/sip.h	/^	void *arg;$/;"	m	struct:sip_keepalive
arg	re-0.5.6/src/sip/sip.h	/^	void *arg;$/;"	m	struct:sip_lsnr
arg	re-0.5.6/src/sip/strans.c	/^	void *arg;$/;"	m	struct:sip_strans	file:
arg	re-0.5.6/src/sip/transp.c	/^	void *arg;$/;"	m	struct:sip_connqent	file:
arg	re-0.5.6/src/sipevent/sipevent.h	/^	void *arg;$/;"	m	struct:sipevent_sock
arg	re-0.5.6/src/sipevent/sipevent.h	/^	void *arg;$/;"	m	struct:sipnot
arg	re-0.5.6/src/sipevent/sipevent.h	/^	void *arg;$/;"	m	struct:sipsub
arg	re-0.5.6/src/sipreg/reg.c	/^	void *arg;$/;"	m	struct:sipreg	file:
arg	re-0.5.6/src/sipsess/sipsess.h	/^	void *arg;$/;"	m	struct:sipsess
arg	re-0.5.6/src/sipsess/sipsess.h	/^	void *arg;$/;"	m	struct:sipsess_request
arg	re-0.5.6/src/sipsess/sipsess.h	/^	void *arg;$/;"	m	struct:sipsess_sock
arg	re-0.5.6/src/stun/ctrans.c	/^	void *arg;$/;"	m	struct:stun_ctrans	file:
arg	re-0.5.6/src/stun/dnsdisc.c	/^	void *arg;             \/**< Handler argument        *\/$/;"	m	struct:stun_dns	file:
arg	re-0.5.6/src/stun/keepalive.c	/^	void *arg;                \/**< Handler argument                     *\/$/;"	m	struct:stun_keepalive	file:
arg	re-0.5.6/src/stun/stun.h	/^	void *arg;$/;"	m	struct:stun
arg	re-0.5.6/src/tcp/tcp.c	/^	void *arg;            \/**< Handler argument                  *\/$/;"	m	struct:tcp_conn	file:
arg	re-0.5.6/src/tcp/tcp.c	/^	void *arg;            \/**< Handler argument                  *\/$/;"	m	struct:tcp_sock	file:
arg	re-0.5.6/src/tcp/tcp.c	/^	void *arg;$/;"	m	struct:tcp_helper	file:
arg	re-0.5.6/src/tls/openssl/tls_udp.c	/^	void *arg;$/;"	m	struct:dtls_sock	file:
arg	re-0.5.6/src/tls/openssl/tls_udp.c	/^	void *arg;$/;"	m	struct:tls_conn	file:
arg	re-0.5.6/src/turn/chan.c	/^	void *arg;$/;"	m	struct:chan	file:
arg	re-0.5.6/src/turn/perm.c	/^	void *arg;$/;"	m	struct:perm	file:
arg	re-0.5.6/src/turn/turnc.h	/^	void *arg;                     \/**< Handler argument                *\/$/;"	m	struct:turnc
arg	re-0.5.6/src/udp/udp.c	/^	void *arg;           \/**< Handler argument            *\/$/;"	m	struct:udp_sock	file:
arg	re-0.5.6/src/udp/udp.c	/^	void *arg;$/;"	m	struct:udp_helper	file:
arg	re-0.5.6/src/websock/websock.c	/^	void *arg;$/;"	m	struct:websock	file:
arg	re-0.5.6/src/websock/websock.c	/^	void *arg;$/;"	m	struct:websock_conn	file:
arg	rem-0.5.2/src/aumix/aumix.c	/^	void *arg;$/;"	m	struct:aumix_source	file:
arg	rem-0.5.2/src/dtmf/dec.c	/^	void *arg;$/;"	m	struct:dtmf_dec	file:
arg	rem-0.5.2/src/vidmix/vidmix.c	/^	void *arg;$/;"	m	struct:vidmix_source	file:
array_entry	re-0.5.6/src/json/decode.c	/^static int array_entry(unsigned idx, const struct pl *pl_val,$/;"	f	file:
array_entry_handler	re-0.5.6/src/json/decode_odict.c	/^static int array_entry_handler(unsigned idx, const struct json_value *val,$/;"	f	file:
array_handler	re-0.5.6/src/json/decode_odict.c	/^static int array_handler(const char *name, unsigned idx,$/;"	f	file:
array_start	re-0.5.6/src/json/decode.c	/^static int array_start(const struct pl *pl_name, unsigned idx,$/;"	f	file:
as	baresip/modules/alsa/alsa_src.c	/^	const struct ausrc *as;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/aubridge/aubridge.h	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc
as	baresip/modules/audiounit/recorder.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/audiounit/sess.c	/^	struct audiosess *as;$/;"	m	struct:audiosess_st	typeref:struct:audiosess_st::audiosess	file:
as	baresip/modules/aufile/aufile.c	/^	const struct ausrc *as;  \/* base class *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/coreaudio/recorder.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/gst/gst.c	/^	const struct ausrc *as;     \/**< Inheritance             *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/gst1/gst.c	/^	const struct ausrc *as;     \/**< Inheritance             *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/jack/jack_src.c	/^	const struct ausrc *as;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/opensles/recorder.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/oss/oss.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/portaudio/portaudio.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/pulse/recorder.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/rst/audio.c	/^	const struct ausrc *as;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/sndio/sndio.c	/^	const struct ausrc *as;  \/* pointer to base-class *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/modules/winwave/src.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
as	baresip/src/core.h	/^	const struct ausrc *as;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc
as	baresip/test/mock/mock_ausrc.c	/^	const struct ausrc *as;      \/* inheritance *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc	file:
asm	baresip/modules/libsrtp/srtp.c	7;"	d	file:
assign_if	baresip/modules/mpa/sdp.c	/^static void assign_if (uint32_t *v, const struct pl *pl,$/;"	f	file:
assign_if	baresip/modules/opus/sdp.c	/^static void assign_if(opus_int32 *v, const struct pl *pl,$/;"	f	file:
assign_linenum	baresip/src/call.c	/^static int assign_linenum(uint32_t *linenum, const struct list *lst)$/;"	f	file:
attr_decode	re-0.5.6/src/bfcp/attr.c	/^static int attr_decode(struct bfcp_attr **attrp, struct mbuf *mb,$/;"	f	file:
attr_decode	re-0.5.6/src/sdp/msg.c	/^static int attr_decode(struct sdp_session *sess, struct sdp_media *m,$/;"	f	file:
attr_decode_fmtp	re-0.5.6/src/sdp/msg.c	/^static int attr_decode_fmtp(struct sdp_media *m, const struct pl *pl)$/;"	f	file:
attr_decode_rtcp	re-0.5.6/src/sdp/msg.c	/^static int attr_decode_rtcp(struct sdp_media *m, const struct pl *pl)$/;"	f	file:
attr_decode_rtpmap	re-0.5.6/src/sdp/msg.c	/^static int attr_decode_rtpmap(struct sdp_media *m, const struct pl *pl)$/;"	f	file:
attr_encode	re-0.5.6/src/bfcp/attr.c	/^static int attr_encode(struct mbuf *mb, bool mand, enum bfcp_attrib type,$/;"	f	file:
attr_print	re-0.5.6/src/stun/msg.c	/^static bool attr_print(const struct stun_attr *attr, void *arg)$/;"	f	file:
attrc	re-0.5.6/include/re_bfcp.h	/^	size_t attrc;$/;"	m	struct:bfcp_supattr
attrl	re-0.5.6/include/re_bfcp.h	/^	struct list attrl;$/;"	m	struct:bfcp_attr	typeref:struct:bfcp_attr::list
attrl	re-0.5.6/include/re_bfcp.h	/^	struct list attrl;$/;"	m	struct:bfcp_msg	typeref:struct:bfcp_msg::list
attrl	re-0.5.6/src/stun/msg.c	/^	struct list attrl;$/;"	m	struct:stun_msg	typeref:struct:stun_msg::list	file:
attrs	re-0.5.6/include/re_sdp.h	/^	struct pl attrs;$/;"	m	struct:sdp_extmap	typeref:struct:sdp_extmap::pl
attrv	re-0.5.6/include/re_bfcp.h	/^	enum bfcp_attrib *attrv;$/;"	m	struct:bfcp_supattr	typeref:enum:bfcp_supattr::bfcp_attrib
au	baresip/modules/audiounit/player.c	/^	AudioUnit au;$/;"	m	struct:auplay_st	file:
au	baresip/modules/audiounit/recorder.c	/^	AudioUnit au;$/;"	m	struct:ausrc_st	file:
aubridge	baresip/modules/aubridge/aubridge.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(aubridge) = {$/;"	v	typeref:struct:DECL_EXPORTS
aubuf	baresip/modules/aufile/aufile.c	/^	struct aubuf *aubuf;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::aubuf	file:
aubuf	baresip/modules/gst/gst.c	/^	struct aubuf *aubuf;        \/**< Packet buffer           *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::aubuf	file:
aubuf	baresip/modules/gst1/gst.c	/^	struct aubuf *aubuf;        \/**< Packet buffer           *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::aubuf	file:
aubuf	baresip/modules/rst/audio.c	/^	struct aubuf *aubuf;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::aubuf	file:
aubuf	baresip/src/audio.c	/^	struct aubuf *aubuf;          \/**< Incoming audio buffer           *\/$/;"	m	struct:aurx	typeref:struct:aurx::aubuf	file:
aubuf	baresip/src/audio.c	/^	struct aubuf *aubuf;          \/**< Packetize outgoing stream       *\/$/;"	m	struct:autx	typeref:struct:autx::aubuf	file:
aubuf	rem-0.5.2/src/aubuf/aubuf.c	/^struct aubuf {$/;"	s	file:
aubuf	rem-0.5.2/src/aumix/aumix.c	/^	struct aubuf *aubuf;$/;"	m	struct:aumix_source	typeref:struct:aumix_source::aubuf	file:
aubuf_alloc	rem-0.5.2/src/aubuf/aubuf.c	/^int aubuf_alloc(struct aubuf **abp, size_t min_sz, size_t max_sz)$/;"	f
aubuf_append	rem-0.5.2/src/aubuf/aubuf.c	/^int aubuf_append(struct aubuf *ab, struct mbuf *mb)$/;"	f
aubuf_cur_size	rem-0.5.2/src/aubuf/aubuf.c	/^size_t aubuf_cur_size(const struct aubuf *ab)$/;"	f
aubuf_debug	rem-0.5.2/src/aubuf/aubuf.c	/^int aubuf_debug(struct re_printf *pf, const struct aubuf *ab)$/;"	f
aubuf_destructor	rem-0.5.2/src/aubuf/aubuf.c	/^static void aubuf_destructor(void *arg)$/;"	f	file:
aubuf_flush	rem-0.5.2/src/aubuf/aubuf.c	/^void aubuf_flush(struct aubuf *ab)$/;"	f
aubuf_get	rem-0.5.2/src/aubuf/aubuf.c	/^int aubuf_get(struct aubuf *ab, uint32_t ptime, uint8_t *p, size_t sz)$/;"	f
aubuf_get_samp	rem-0.5.2/include/rem_aubuf.h	/^static inline int aubuf_get_samp(struct aubuf *ab, uint32_t ptime,$/;"	f
aubuf_maxsz	baresip/src/audio.c	/^	size_t aubuf_maxsz;           \/**< Maximum aubuf size in [bytes]   *\/$/;"	m	struct:aurx	file:
aubuf_maxsz	baresip/src/audio.c	/^	size_t aubuf_maxsz;           \/**< Maximum aubuf size in [bytes]   *\/$/;"	m	struct:autx	file:
aubuf_overrun	baresip/src/audio.c	/^		uint64_t aubuf_overrun;$/;"	m	struct:aurx::__anon14	file:
aubuf_overrun	baresip/src/audio.c	/^		uint64_t aubuf_overrun;$/;"	m	struct:autx::__anon11	file:
aubuf_read	rem-0.5.2/src/aubuf/aubuf.c	/^void aubuf_read(struct aubuf *ab, uint8_t *p, size_t sz)$/;"	f
aubuf_read_samp	rem-0.5.2/include/rem_aubuf.h	/^static inline void aubuf_read_samp(struct aubuf *ab, int16_t *sampv,$/;"	f
aubuf_started	baresip/src/audio.c	/^	volatile bool aubuf_started;  \/**< Aubuf was started flag          *\/$/;"	m	struct:aurx	file:
aubuf_started	baresip/src/audio.c	/^	volatile bool aubuf_started;  \/**< Aubuf was started flag          *\/$/;"	m	struct:autx	file:
aubuf_underrun	baresip/src/audio.c	/^		uint64_t aubuf_underrun;$/;"	m	struct:aurx::__anon14	file:
aubuf_underrun	baresip/src/audio.c	/^		uint64_t aubuf_underrun;$/;"	m	struct:autx::__anon11	file:
aubuf_write	rem-0.5.2/src/aubuf/aubuf.c	/^int aubuf_write(struct aubuf *ab, const uint8_t *p, size_t sz)$/;"	f
aubuf_write_samp	rem-0.5.2/include/rem_aubuf.h	/^static inline int aubuf_write_samp(struct aubuf *ab, const int16_t *sampv,$/;"	f
aucodec	baresip/include/baresip.h	/^struct aucodec {$/;"	s
aucodec	baresip/modules/auloop/auloop.c	/^static char aucodec[64];$/;"	v	file:
aucodec_equal	baresip/src/audio.c	/^static bool aucodec_equal(const struct aucodec *a, const struct aucodec *b)$/;"	f	file:
aucodec_find	baresip/src/aucodec.c	/^const struct aucodec *aucodec_find(const struct list *aucodecl,$/;"	f
aucodec_print	baresip/src/audio.c	/^static int aucodec_print(struct re_printf *pf, const struct aucodec *ac)$/;"	f	file:
aucodec_register	baresip/src/aucodec.c	/^void aucodec_register(struct list *aucodecl, struct aucodec *ac)$/;"	f
aucodec_unregister	baresip/src/aucodec.c	/^void aucodec_unregister(struct aucodec *ac)$/;"	f
aucodecl	baresip/src/baresip.c	/^	struct list aucodecl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
aucodecl	baresip/src/core.h	/^	struct list aucodecl;        \/**< List of preferred audio-codecs     *\/$/;"	m	struct:account	typeref:struct:account::list
auconv_from_s16	rem-0.5.2/src/auconv/auconv.c	/^void auconv_from_s16(enum aufmt dst_fmt, void *dst_sampv,$/;"	f
auconv_to_s16	rem-0.5.2/src/auconv/auconv.c	/^void auconv_to_s16(int16_t *dst_sampv, enum aufmt src_fmt,$/;"	f
audec_decode_h	baresip/include/baresip.h	/^typedef int (audec_decode_h)(struct audec_state *ads, int16_t *sampv,$/;"	t
audec_plc_h	baresip/include/baresip.h	/^typedef int (audec_plc_h)(struct audec_state *ads,$/;"	t
audec_state	baresip/modules/amr/amr.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/bv32/bv32.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/codec2/codec2.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/g722/g722.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/g7221/decode.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/g726/g726.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/gsm/gsm.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/ilbc/ilbc.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/isac/isac.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/mpa/decode.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/opus/decode.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/silk/silk.c	/^struct audec_state {$/;"	s	file:
audec_state	baresip/modules/speex/speex.c	/^struct audec_state {$/;"	s	file:
audec_update_h	baresip/include/baresip.h	/^typedef int (audec_update_h)(struct audec_state **adsp,$/;"	t
audio	baresip/include/baresip.h	/^	struct config_audio audio;$/;"	m	struct:config	typeref:struct:config::config_audio
audio	baresip/src/audio.c	/^struct audio {$/;"	s	file:
audio	baresip/src/call.c	/^	struct audio *audio;      \/**< Audio stream                         *\/$/;"	m	struct:call	typeref:struct:call::audio	file:
audio_alloc	baresip/src/audio.c	/^int audio_alloc(struct audio **ap, const struct stream_param *stream_prm,$/;"	f
audio_calc_seconds	baresip/src/audio.c	/^static double audio_calc_seconds(uint64_t rtp_ts, uint32_t clock_rate)$/;"	f	file:
audio_codecs_decode	baresip/src/account.c	/^static int audio_codecs_decode(struct account *acc, const struct pl *prm)$/;"	f	file:
audio_debug	baresip/src/audio.c	/^int audio_debug(struct re_printf *pf, const struct audio *a)$/;"	f
audio_decoder_set	baresip/src/audio.c	/^int audio_decoder_set(struct audio *a, const struct aucodec *ac,$/;"	f
audio_destructor	baresip/src/audio.c	/^static void audio_destructor(void *arg)$/;"	f	file:
audio_encoder_cycle	baresip/src/audio.c	/^void audio_encoder_cycle(struct audio *audio)$/;"	f
audio_encoder_set	baresip/src/audio.c	/^int audio_encoder_set(struct audio *a, const struct aucodec *ac,$/;"	f
audio_err_h	baresip/src/core.h	/^typedef void (audio_err_h)(int err, const char *str, void *arg);$/;"	t
audio_error_handler	baresip/src/call.c	/^static void audio_error_handler(int err, const char *str, void *arg)$/;"	f	file:
audio_event_h	baresip/src/core.h	/^typedef void (audio_event_h)(int key, bool end, void *arg);$/;"	t
audio_event_handler	baresip/src/call.c	/^static void audio_event_handler(int key, bool end, void *arg)$/;"	f	file:
audio_ismuted	baresip/src/audio.c	/^bool audio_ismuted(const struct audio *a)$/;"	f
audio_level_get	baresip/src/audio.c	/^int audio_level_get(const struct audio *au, double *levelp)$/;"	f
audio_loop	baresip/modules/auloop/auloop.c	/^struct audio_loop {$/;"	s	file:
audio_loop_alloc	baresip/modules/auloop/auloop.c	/^static int audio_loop_alloc(struct audio_loop **alp)$/;"	f	file:
audio_loop_cycle	baresip/modules/auloop/auloop.c	/^static int audio_loop_cycle(struct audio_loop *al)$/;"	f	file:
audio_mode	baresip/include/baresip.h	/^enum audio_mode {$/;"	g
audio_mute	baresip/src/audio.c	/^void audio_mute(struct audio *a, bool muted)$/;"	f
audio_path	baresip/include/baresip.h	/^	char audio_path[256];   \/**< Audio file directory           *\/$/;"	m	struct:config_audio
audio_print_rtpstat	baresip/src/audio.c	/^int audio_print_rtpstat(struct re_printf *pf, const struct audio *a)$/;"	f
audio_print_vu	baresip/modules/vumeter/vumeter.c	/^static int audio_print_vu(struct re_printf *pf, double *level)$/;"	f	file:
audio_sdp_attr_decode	baresip/src/audio.c	/^void audio_sdp_attr_decode(struct audio *a)$/;"	f
audio_send_digit	baresip/src/audio.c	/^int audio_send_digit(struct audio *a, char key)$/;"	f
audio_session_disable	baresip/modules/coreaudio/coreaudio.c	/^void audio_session_disable(void)$/;"	f
audio_session_enable	baresip/modules/coreaudio/coreaudio.c	/^int audio_session_enable(void)$/;"	f
audio_set_devicename	baresip/src/audio.c	/^void audio_set_devicename(struct audio *a, const char *src, const char *play)$/;"	f
audio_set_player	baresip/src/audio.c	/^int audio_set_player(struct audio *au, const char *mod, const char *device)$/;"	f
audio_set_source	baresip/src/audio.c	/^int audio_set_source(struct audio *au, const char *mod, const char *device)$/;"	f
audio_start	baresip/src/audio.c	/^int audio_start(struct audio *a)$/;"	f
audio_stop	baresip/src/audio.c	/^void audio_stop(struct audio *a)$/;"	f
audio_strm	baresip/src/audio.c	/^struct stream *audio_strm(const struct audio *a)$/;"	f
audiosess	baresip/modules/audiounit/sess.c	/^struct audiosess {$/;"	s	file:
audiosess_alloc	baresip/modules/audiounit/sess.c	/^int audiosess_alloc(struct audiosess_st **stp,$/;"	f
audiosess_int_h	baresip/modules/audiounit/audiounit.h	/^typedef void (audiosess_int_h)(bool start, void *arg);$/;"	t
audiosess_interrupt	baresip/modules/audiounit/sess.c	/^void audiosess_interrupt(bool start)$/;"	f
audiosess_st	baresip/modules/audiounit/sess.c	/^struct audiosess_st {$/;"	s	file:
audiounit	baresip/modules/audiounit/audiounit.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(audiounit) = {$/;"	v	typeref:struct:DECL_EXPORTS
audiounit_player_alloc	baresip/modules/audiounit/player.c	/^int audiounit_player_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
audiounit_recorder_alloc	baresip/modules/audiounit/recorder.c	/^int audiounit_recorder_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
auenc_encode_h	baresip/include/baresip.h	/^typedef int (auenc_encode_h)(struct auenc_state *aes, uint8_t *buf,$/;"	t
auenc_param	baresip/include/baresip.h	/^struct auenc_param {$/;"	s
auenc_state	baresip/modules/amr/amr.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/bv32/bv32.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/codec2/codec2.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/g722/g722.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/g7221/encode.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/g726/g726.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/gsm/gsm.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/ilbc/ilbc.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/isac/isac.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/mpa/encode.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/opus/encode.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/silk/silk.c	/^struct auenc_state {$/;"	s	file:
auenc_state	baresip/modules/speex/speex.c	/^struct auenc_state {$/;"	s	file:
auenc_update_h	baresip/include/baresip.h	/^typedef int (auenc_update_h)(struct auenc_state **aesp,$/;"	t
aufile	baresip/modules/aufile/aufile.c	/^	struct aufile *aufile;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::aufile	file:
aufile	baresip/modules/aufile/aufile.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(aufile) = {$/;"	v	typeref:struct:DECL_EXPORTS
aufile	rem-0.5.2/src/aufile/aufile.c	/^struct aufile {$/;"	s	file:
aufile_load	baresip/src/play.c	/^static int aufile_load(struct mbuf *mb, const char *filename,$/;"	f	file:
aufile_mode	rem-0.5.2/include/rem_aufile.h	/^enum aufile_mode {$/;"	g
aufile_open	rem-0.5.2/src/aufile/aufile.c	/^int aufile_open(struct aufile **afp, struct aufile_prm *prm,$/;"	f
aufile_prm	rem-0.5.2/include/rem_aufile.h	/^struct aufile_prm {$/;"	s
aufile_read	rem-0.5.2/src/aufile/aufile.c	/^int aufile_read(struct aufile *af, uint8_t *p, size_t *sz)$/;"	f
aufile_write	rem-0.5.2/src/aufile/aufile.c	/^int aufile_write(struct aufile *af, const uint8_t *p, size_t sz)$/;"	f
aufilt	baresip/include/baresip.h	/^struct aufilt {$/;"	s
aufilt_dec_st	baresip/include/baresip.h	/^struct aufilt_dec_st {$/;"	s
aufilt_decode_h	baresip/include/baresip.h	/^typedef int (aufilt_decode_h)(struct aufilt_dec_st *st,$/;"	t
aufilt_decupd_h	baresip/include/baresip.h	/^typedef int (aufilt_decupd_h)(struct aufilt_dec_st **stp, void **ctx,$/;"	t
aufilt_enc_st	baresip/include/baresip.h	/^struct aufilt_enc_st {$/;"	s
aufilt_encode_h	baresip/include/baresip.h	/^typedef int (aufilt_encode_h)(struct aufilt_enc_st *st,$/;"	t
aufilt_encupd_h	baresip/include/baresip.h	/^typedef int (aufilt_encupd_h)(struct aufilt_enc_st **stp, void **ctx,$/;"	t
aufilt_param_set	baresip/src/audio.c	/^static void aufilt_param_set(struct aufilt_prm *prm,$/;"	f	file:
aufilt_prm	baresip/include/baresip.h	/^struct aufilt_prm {$/;"	s
aufilt_register	baresip/src/aufilt.c	/^void aufilt_register(struct list *aufiltl, struct aufilt *af)$/;"	f
aufilt_setup	baresip/src/audio.c	/^static int aufilt_setup(struct audio *a)$/;"	f	file:
aufilt_unregister	baresip/src/aufilt.c	/^void aufilt_unregister(struct aufilt *af)$/;"	f
aufiltl	baresip/src/baresip.c	/^	struct list aufiltl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
aufmt	rem-0.5.2/include/rem_au.h	/^enum aufmt {$/;"	g
aufmt_name	rem-0.5.2/src/au/fmt.c	/^const char *aufmt_name(enum aufmt fmt)$/;"	f
aufmt_sample_size	rem-0.5.2/src/au/fmt.c	/^size_t aufmt_sample_size(enum aufmt fmt)$/;"	f
aufmt_to_alsaformat	baresip/modules/alsa/alsa.c	/^snd_pcm_format_t aufmt_to_alsaformat(enum aufmt fmt)$/;"	f
aufmt_to_bps	rem-0.5.2/src/aufile/aufile.c	/^static uint16_t aufmt_to_bps(enum aufmt fmt)$/;"	f	file:
aufmt_to_encoding	baresip/modules/rst/audio.c	/^static int aufmt_to_encoding(enum aufmt fmt)$/;"	f	file:
aufmt_to_formatflags	baresip/modules/audiounit/player.c	/^static uint32_t aufmt_to_formatflags(enum aufmt fmt)$/;"	f	file:
aufmt_to_formatflags	baresip/modules/audiounit/recorder.c	/^static uint32_t aufmt_to_formatflags(enum aufmt fmt)$/;"	f	file:
aufmt_to_pasampleformat	baresip/modules/portaudio/portaudio.c	/^static PaSampleFormat aufmt_to_pasampleformat(enum aufmt fmt)$/;"	f	file:
aufmt_to_pulse_format	baresip/modules/pulse/player.c	/^static int aufmt_to_pulse_format(enum aufmt fmt)$/;"	f	file:
aufmt_to_pulse_format	baresip/modules/pulse/recorder.c	/^static int aufmt_to_pulse_format(enum aufmt fmt)$/;"	f	file:
aufmt_to_wavfmt	rem-0.5.2/src/aufile/aufile.c	/^static enum wavfmt aufmt_to_wavfmt(enum aufmt fmt)$/;"	f	file:
auframe	rem-0.5.2/src/aubuf/aubuf.c	/^struct auframe {$/;"	s	file:
auframe_destructor	rem-0.5.2/src/aubuf/aubuf.c	/^static void auframe_destructor(void *arg)$/;"	f	file:
aulevel_calc_dbov	baresip/src/aulevel.c	/^double aulevel_calc_dbov(const int16_t *sampv, size_t sampc)$/;"	f
auloop	baresip/modules/auloop/auloop.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(auloop) = {$/;"	v	typeref:struct:DECL_EXPORTS
auloop_destructor	baresip/modules/auloop/auloop.c	/^static void auloop_destructor(void *arg)$/;"	f	file:
auloop_reset	baresip/modules/auloop/auloop.c	/^static int auloop_reset(struct audio_loop *al)$/;"	f	file:
auloop_start	baresip/modules/auloop/auloop.c	/^static int auloop_start(struct re_printf *pf, void *arg)$/;"	f	file:
auloop_stop	baresip/modules/auloop/auloop.c	/^static int auloop_stop(struct re_printf *pf, void *arg)$/;"	f	file:
aumix	rem-0.5.2/src/aumix/aumix.c	/^struct aumix {$/;"	s	file:
aumix_alloc	rem-0.5.2/src/aumix/aumix.c	/^int aumix_alloc(struct aumix **mixp, uint32_t srate,$/;"	f
aumix_frame_h	rem-0.5.2/include/rem_aumix.h	/^typedef void (aumix_frame_h)(const int16_t *sampv, size_t sampc, void *arg);$/;"	t
aumix_playfile	rem-0.5.2/src/aumix/aumix.c	/^int aumix_playfile(struct aumix *mix, const char *filepath)$/;"	f
aumix_source	rem-0.5.2/src/aumix/aumix.c	/^struct aumix_source {$/;"	s	file:
aumix_source_alloc	rem-0.5.2/src/aumix/aumix.c	/^int aumix_source_alloc(struct aumix_source **srcp, struct aumix *mix,$/;"	f
aumix_source_count	rem-0.5.2/src/aumix/aumix.c	/^uint32_t aumix_source_count(const struct aumix *mix)$/;"	f
aumix_source_enable	rem-0.5.2/src/aumix/aumix.c	/^void aumix_source_enable(struct aumix_source *src, bool enable)$/;"	f
aumix_source_flush	rem-0.5.2/src/aumix/aumix.c	/^void aumix_source_flush(struct aumix_source *src)$/;"	f
aumix_source_put	rem-0.5.2/src/aumix/aumix.c	/^int aumix_source_put(struct aumix_source *src, const int16_t *sampv,$/;"	f
aumix_thread	rem-0.5.2/src/aumix/aumix.c	/^static void *aumix_thread(void *arg)$/;"	f	file:
auplay	baresip/modules/alsa/alsa.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/aubridge/aubridge.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/aubridge/device.c	/^	const struct auplay_st *auplay;$/;"	m	struct:device	typeref:struct:device::auplay_st	file:
auplay	baresip/modules/audiounit/audiounit.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/auloop/auloop.c	/^	struct auplay_st *auplay;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::auplay_st	file:
auplay	baresip/modules/coreaudio/coreaudio.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/jack/jack.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/opensles/opensles.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/oss/oss.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/portaudio/portaudio.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/pulse/pulse.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/sndio/sndio.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/modules/winwave/winwave.c	/^static struct auplay *auplay;$/;"	v	typeref:struct:auplay	file:
auplay	baresip/src/audio.c	/^	struct auplay_st *auplay;     \/**< Audio Player                    *\/$/;"	m	struct:aurx	typeref:struct:aurx::auplay_st	file:
auplay	baresip/src/core.h	/^struct auplay {$/;"	s
auplay	baresip/src/play.c	/^	struct auplay_st *auplay;$/;"	m	struct:play	typeref:struct:play::auplay_st	file:
auplay_alloc	baresip/src/auplay.c	/^int auplay_alloc(struct auplay_st **stp, struct list *auplayl,$/;"	f
auplay_alloc_h	baresip/include/baresip.h	/^typedef int  (auplay_alloc_h)(struct auplay_st **stp, const struct auplay *ap,$/;"	t
auplay_destructor	baresip/modules/alsa/alsa_play.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/aubridge/play.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/audiounit/player.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/coreaudio/player.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/jack/jack_play.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/opensles/player.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/oss/oss.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/portaudio/portaudio.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/pulse/player.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/sndio/sndio.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/modules/winwave/play.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_destructor	baresip/test/mock/mock_auplay.c	/^static void auplay_destructor(void *arg)$/;"	f	file:
auplay_find	baresip/src/auplay.c	/^const struct auplay *auplay_find(const struct list *auplayl, const char *name)$/;"	f
auplay_prm	baresip/include/baresip.h	/^struct auplay_prm {$/;"	s
auplay_prm	baresip/src/audio.c	/^	struct auplay_prm auplay_prm; \/**< Audio Player parameters         *\/$/;"	m	struct:aurx	typeref:struct:aurx::auplay_prm	file:
auplay_register	baresip/src/auplay.c	/^int auplay_register(struct auplay **app, struct list *auplayl,$/;"	f
auplay_st	baresip/modules/alsa/alsa_play.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/aubridge/aubridge.h	/^struct auplay_st {$/;"	s
auplay_st	baresip/modules/audiounit/player.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/coreaudio/player.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/jack/jack_play.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/opensles/player.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/oss/oss.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/portaudio/portaudio.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/pulse/player.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/sndio/sndio.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/modules/winwave/play.c	/^struct auplay_st {$/;"	s	file:
auplay_st	baresip/src/core.h	/^struct auplay_st {$/;"	s
auplay_st	baresip/test/mock/mock_auplay.c	/^struct auplay_st {$/;"	s	file:
auplay_write_h	baresip/include/baresip.h	/^typedef void (auplay_write_h)(void *sampv, size_t sampc, void *arg);$/;"	t
auplay_write_handler	baresip/src/audio.c	/^static void auplay_write_handler(void *sampv, size_t sampc, void *arg)$/;"	f	file:
auplayl	baresip/src/baresip.c	/^	struct list auplayl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
auresamp	rem-0.5.2/include/rem_auresamp.h	/^struct auresamp {$/;"	s
auresamp	rem-0.5.2/src/auresamp/resamp.c	/^int auresamp(struct auresamp *rs, int16_t *outv, size_t *outc,$/;"	f
auresamp_h	rem-0.5.2/include/rem_auresamp.h	/^typedef void (auresamp_h)(int16_t *outv, const int16_t *inv,$/;"	t
auresamp_init	rem-0.5.2/src/auresamp/resamp.c	/^void auresamp_init(struct auresamp *rs)$/;"	f
auresamp_setup	rem-0.5.2/src/auresamp/resamp.c	/^int auresamp_setup(struct auresamp *rs, uint32_t irate, unsigned ich,$/;"	f
auri	re-0.5.6/include/re_sip.h	/^	struct pl auri;$/;"	m	struct:sip_addr	typeref:struct:sip_addr::pl
auri	re-0.5.6/include/re_sip.h	/^	struct pl auri;$/;"	m	struct:sip_taddr	typeref:struct:sip_taddr::pl
aurx	baresip/src/audio.c	/^struct aurx {$/;"	s	file:
aurx_calc_seconds	baresip/src/audio.c	/^static double aurx_calc_seconds(const struct aurx *aurx)$/;"	f	file:
aurx_print_pipeline	baresip/src/audio.c	/^static int aurx_print_pipeline(struct re_printf *pf, const struct aurx *aurx)$/;"	f	file:
aurx_stream_decode	baresip/src/audio.c	/^static int aurx_stream_decode(struct aurx *rx, struct mbuf *mb)$/;"	f	file:
ausamp_float2short	baresip/modules/jack/jack_src.c	/^static inline int16_t ausamp_float2short(float in)$/;"	f	file:
ausamp_float2short	rem-0.5.2/src/auconv/auconv.c	/^static inline int16_t ausamp_float2short(float in)$/;"	f	file:
ausamp_short2float	baresip/modules/jack/jack_play.c	/^static inline float ausamp_short2float(int16_t in)$/;"	f	file:
ausamp_short2float	rem-0.5.2/src/auconv/auconv.c	/^static inline float ausamp_short2float(int16_t in)$/;"	f	file:
ausrc	baresip/modules/alsa/alsa.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/aubridge/aubridge.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/aubridge/device.c	/^	const struct ausrc_st *ausrc;$/;"	m	struct:device	typeref:struct:device::ausrc_st	file:
ausrc	baresip/modules/audiounit/audiounit.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/aufile/aufile.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/auloop/auloop.c	/^	struct ausrc_st *ausrc;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::ausrc_st	file:
ausrc	baresip/modules/coreaudio/coreaudio.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/gst/gst.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/gst1/gst.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/jack/jack.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/opensles/opensles.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/oss/oss.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/portaudio/portaudio.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/pulse/pulse.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/rst/audio.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/sndio/sndio.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/modules/winwave/winwave.c	/^static struct ausrc *ausrc;$/;"	v	typeref:struct:ausrc	file:
ausrc	baresip/src/audio.c	/^	struct ausrc_st *ausrc;       \/**< Audio Source                    *\/$/;"	m	struct:autx	typeref:struct:autx::ausrc_st	file:
ausrc	baresip/src/core.h	/^struct ausrc {$/;"	s
ausrc_alloc	baresip/src/ausrc.c	/^int ausrc_alloc(struct ausrc_st **stp, struct list *ausrcl,$/;"	f
ausrc_alloc_h	baresip/include/baresip.h	/^typedef int  (ausrc_alloc_h)(struct ausrc_st **stp, const struct ausrc *ausrc,$/;"	t
ausrc_destructor	baresip/modules/alsa/alsa_src.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/aubridge/src.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/audiounit/recorder.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/coreaudio/recorder.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/jack/jack_src.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/opensles/recorder.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/oss/oss.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/portaudio/portaudio.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/pulse/recorder.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/sndio/sndio.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/modules/winwave/src.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_destructor	baresip/test/mock/mock_ausrc.c	/^static void ausrc_destructor(void *arg)$/;"	f	file:
ausrc_error_h	baresip/include/baresip.h	/^typedef void (ausrc_error_h)(int err, const char *str, void *arg);$/;"	t
ausrc_error_handler	baresip/src/audio.c	/^static void ausrc_error_handler(int err, const char *str, void *arg)$/;"	f	file:
ausrc_find	baresip/src/ausrc.c	/^const struct ausrc *ausrc_find(const struct list *ausrcl, const char *name)$/;"	f
ausrc_prm	baresip/include/baresip.h	/^struct ausrc_prm {$/;"	s
ausrc_prm	baresip/src/audio.c	/^	struct ausrc_prm ausrc_prm;   \/**< Audio Source parameters         *\/$/;"	m	struct:autx	typeref:struct:autx::ausrc_prm	file:
ausrc_read_h	baresip/include/baresip.h	/^typedef void (ausrc_read_h)(const void *sampv, size_t sampc, void *arg);$/;"	t
ausrc_read_handler	baresip/src/audio.c	/^static void ausrc_read_handler(const void *sampv, size_t sampc, void *arg)$/;"	f	file:
ausrc_register	baresip/src/ausrc.c	/^int ausrc_register(struct ausrc **asp, struct list *ausrcl,$/;"	f
ausrc_st	baresip/modules/alsa/alsa_src.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/aubridge/aubridge.h	/^struct ausrc_st {$/;"	s
ausrc_st	baresip/modules/audiounit/recorder.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/aufile/aufile.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/coreaudio/recorder.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/gst/gst.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/gst1/gst.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/jack/jack_src.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/opensles/recorder.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/oss/oss.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/portaudio/portaudio.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/pulse/recorder.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/rst/audio.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/rst/rst.c	/^	struct ausrc_st *ausrc_st;$/;"	m	struct:rst	typeref:struct:rst::ausrc_st	file:
ausrc_st	baresip/modules/sndio/sndio.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/modules/winwave/src.c	/^struct ausrc_st {$/;"	s	file:
ausrc_st	baresip/src/core.h	/^struct ausrc_st {$/;"	s
ausrc_st	baresip/test/mock/mock_ausrc.c	/^struct ausrc_st {$/;"	s	file:
ausrcl	baresip/src/baresip.c	/^	struct list ausrcl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
auth	baresip/src/sipreq.c	/^	struct sip_auth *auth;$/;"	m	struct:sip_req	typeref:struct:sip_req::sip_auth	file:
auth	baresip/test/sip/sipsrv.h	/^struct auth {$/;"	s
auth	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_auth *auth;$/;"	m	struct:sipnot	typeref:struct:sipnot::sip_auth
auth	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_auth *auth;$/;"	m	struct:sipsub	typeref:struct:sipsub::sip_auth
auth	re-0.5.6/src/sipreg/reg.c	/^	struct sip_auth *auth;$/;"	m	struct:sipreg	typeref:struct:sipreg::sip_auth	file:
auth	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_auth *auth;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip_auth
auth_chk_nonce	baresip/test/sip/auth.c	/^int auth_chk_nonce(struct sip_server *srv,$/;"	f
auth_destructor	re-0.5.6/src/sip/auth.c	/^static void auth_destructor(void *arg)$/;"	f	file:
auth_enabled	baresip/test/sip/sipsrv.h	/^	bool auth_enabled;$/;"	m	struct:sip_server
auth_handler	baresip/modules/mwi/mwi.c	/^static int auth_handler(char **username, char **password,$/;"	f	file:
auth_handler	baresip/modules/presence/notifier.c	/^static int auth_handler(char **username, char **password,$/;"	f	file:
auth_handler	baresip/modules/presence/subscriber.c	/^static int auth_handler(char **username, char **password,$/;"	f	file:
auth_handler	baresip/src/call.c	/^static int auth_handler(char **username, char **password,$/;"	f	file:
auth_handler	baresip/src/sipreq.c	/^static int auth_handler(char **username, char **password,$/;"	f	file:
auth_handler	re-0.5.6/src/sip/auth.c	/^static bool auth_handler(const struct sip_hdr *hdr, const struct sip_msg *msg,$/;"	f	file:
auth_pass	baresip/src/core.h	/^	char *auth_pass;             \/**< Authentication password            *\/$/;"	m	struct:account
auth_print	baresip/test/sip/auth.c	/^int auth_print(struct re_printf *pf, const struct auth *auth)$/;"	f
auth_set_realm	baresip/test/sip/auth.c	/^int auth_set_realm(struct auth *auth, const char *realm)$/;"	f
auth_user	baresip/src/core.h	/^	char *auth_user;             \/**< Authentication username            *\/$/;"	m	struct:account
authh	re-0.5.6/src/sip/auth.c	/^	sip_auth_h *authh;$/;"	m	struct:sip_auth	file:
autone_dtmf	rem-0.5.2/src/autone/tone.c	/^int autone_dtmf(struct mbuf *mb, uint32_t srate, int digit)$/;"	f
autone_sine	rem-0.5.2/src/autone/tone.c	/^int autone_sine(struct mbuf *mb, uint32_t srate,$/;"	f
autx	baresip/src/audio.c	/^struct autx {$/;"	s	file:
autx_calc_seconds	baresip/src/audio.c	/^static double autx_calc_seconds(const struct autx *autx)$/;"	f	file:
autx_print_pipeline	baresip/src/audio.c	/^static int autx_print_pipeline(struct re_printf *pf, const struct autx *autx)$/;"	f	file:
av1	baresip/modules/av1/av1.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(av1) = {$/;"	v	typeref:struct:DECL_EXPORTS
av1	baresip/modules/av1/av1.c	/^static struct vidcodec av1 = {$/;"	v	typeref:struct:vidcodec	file:
av1_decode	baresip/modules/av1/decode.c	/^int av1_decode(struct viddec_state *vds, struct vidframe *frame,$/;"	f
av1_decode_update	baresip/modules/av1/decode.c	/^int av1_decode_update(struct viddec_state **vdsp, const struct vidcodec *vc,$/;"	f
av1_encode	baresip/modules/av1/encode.c	/^int av1_encode(struct videnc_state *ves, bool update,$/;"	f
av1_encode_update	baresip/modules/av1/encode.c	/^int av1_encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f
avahi	baresip/modules/avahi/avahi.c	/^const struct mod_export DECL_EXPORTS(avahi) = {$/;"	v	typeref:struct:DECL_EXPORTS
avahi	baresip/modules/avahi/avahi.c	/^static struct avahi_st* avahi = NULL;$/;"	v	typeref:struct:avahi_st	file:
avahi_st	baresip/modules/avahi/avahi.c	/^struct avahi_st {$/;"	s	file:
avahi_update	baresip/modules/avahi/avahi.c	/^static void avahi_update(void* arg)$/;"	f	file:
avcodec	baresip/modules/avcodec/avcodec.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(avcodec) = {$/;"	v	typeref:struct:DECL_EXPORTS
avcodec_h264dec	baresip/modules/avcodec/avcodec.c	/^AVCodec *avcodec_h264dec;             \/* optional; specified H.264 decoder *\/$/;"	v
avcodec_h264enc	baresip/modules/avcodec/avcodec.c	/^AVCodec *avcodec_h264enc;             \/* optional; specified H.264 encoder *\/$/;"	v
avcodec_resolve_codecid	baresip/modules/avcodec/avcodec.c	/^int avcodec_resolve_codecid(const char *s)$/;"	f
avformat	baresip/modules/avformat/avformat.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(avformat) = {$/;"	v	typeref:struct:DECL_EXPORTS
avg_play	baresip/modules/gtk/gtk_mod.h	/^	int16_t avg_play;$/;"	m	struct:vumeter_dec
avg_play	baresip/modules/vumeter/vumeter.c	/^	double avg_play;$/;"	m	struct:vumeter_dec	file:
avg_rec	baresip/modules/gtk/gtk_mod.h	/^	int16_t avg_rec;$/;"	m	struct:vumeter_enc
avg_rec	baresip/modules/vumeter/vumeter.c	/^	double avg_rec;$/;"	m	struct:vumeter_enc	file:
avt	baresip/include/baresip.h	/^	struct config_avt avt;$/;"	m	struct:config	typeref:struct:config::config_avt
awaiting_answer	re-0.5.6/src/sipsess/reply.c	/^	bool awaiting_answer;$/;"	m	struct:sipsess_reply	file:
awaiting_answer	re-0.5.6/src/sipsess/sipsess.h	/^	bool awaiting_answer;$/;"	m	struct:sipsess
b	baresip/modules/vp9/decode.c	/^	unsigned b:1;  \/* B: Start of a layer frame                  *\/$/;"	m	struct:hdr	file:
b	baresip/test/call.c	/^	struct agent a, b;$/;"	m	struct:fixture	typeref:struct:fixture::	file:
b2bua	baresip/modules/b2bua/b2bua.c	/^const struct mod_export DECL_EXPORTS(b2bua) = {$/;"	v	typeref:struct:DECL_EXPORTS
b2bua_status	baresip/modules/b2bua/b2bua.c	/^static int b2bua_status(struct re_printf *pf, void *arg)$/;"	f	file:
b64_table	re-0.5.6/src/base64/b64.c	/^static const char b64_table[65] =$/;"	v	file:
b64val	re-0.5.6/src/base64/b64.c	/^static inline uint32_t b64val(char c)$/;"	f	file:
background	baresip/modules/rst/video.c	/^static void background(cairo_t *cr, unsigned width, unsigned height)$/;"	f	file:
bad_seq	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t bad_seq;         \/**< Last 'bad' seq number + 1           *\/$/;"	m	struct:rtp_source
bandwidth_decode	re-0.5.6/src/sdp/msg.c	/^static int bandwidth_decode(int32_t *bwv, const struct pl *pl)$/;"	f	file:
baresip	baresip/src/baresip.c	/^static struct baresip {$/;"	s	file:
baresip	baresip/src/baresip.c	/^} baresip;$/;"	v	typeref:struct:baresip	file:
baresip_aucodecl	baresip/src/baresip.c	/^struct list *baresip_aucodecl(void)$/;"	f
baresip_aufiltl	baresip/src/baresip.c	/^struct list *baresip_aufiltl(void)$/;"	f
baresip_auplayl	baresip/src/baresip.c	/^struct list *baresip_auplayl(void)$/;"	f
baresip_ausrcl	baresip/src/baresip.c	/^struct list *baresip_ausrcl(void)$/;"	f
baresip_close	baresip/src/baresip.c	/^void baresip_close(void)$/;"	f
baresip_commands	baresip/src/baresip.c	/^struct commands *baresip_commands(void)$/;"	f
baresip_contacts	baresip/src/baresip.c	/^struct contacts *baresip_contacts(void)$/;"	f
baresip_init	baresip/src/baresip.c	/^int baresip_init(struct config *cfg, bool prefer_ipv6)$/;"	f
baresip_mencl	baresip/src/baresip.c	/^struct list *baresip_mencl(void)$/;"	f
baresip_message	baresip/src/baresip.c	/^struct message *baresip_message(void)$/;"	f
baresip_mnatl	baresip/src/baresip.c	/^struct list *baresip_mnatl(void)$/;"	f
baresip_network	baresip/src/baresip.c	/^struct network *baresip_network(void)$/;"	f
baresip_player	baresip/src/baresip.c	/^struct player *baresip_player(void)$/;"	f
baresip_uis	baresip/src/baresip.c	/^struct ui_sub *baresip_uis(void)$/;"	f
baresip_vidcodecl	baresip/src/baresip.c	/^struct list *baresip_vidcodecl(void)$/;"	f
baresip_vidfiltl	baresip/src/baresip.c	/^struct list *baresip_vidfiltl(void)$/;"	f
baresip_vidispl	baresip/src/baresip.c	/^struct list *baresip_vidispl(void)$/;"	f
baresip_vidsrcl	baresip/src/baresip.c	/^struct list *baresip_vidsrcl(void)$/;"	f
base	re-0.5.6/src/ice/ice.h	/^	struct ice_cand *base;       \/**< Links to base candidate, if any    *\/$/;"	m	struct:ice_cand	typeref:struct:ice_cand::ice_cand
base64_decode	re-0.5.6/src/base64/b64.c	/^int base64_decode(const char *in, size_t ilen, uint8_t *out, size_t *olen)$/;"	f
base64_encode	re-0.5.6/src/base64/b64.c	/^int base64_encode(const uint8_t *in, size_t ilen, char *out, size_t *olen)$/;"	f
base64_print	re-0.5.6/src/base64/b64.c	/^int base64_print(struct re_printf *pf, const uint8_t *ptr, size_t len)$/;"	f
base_seq	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t base_seq;        \/**< Base seq number                     *\/$/;"	m	struct:rtp_source
behaviour	baresip/test/call.c	/^	enum behaviour behaviour;$/;"	m	struct:fixture	typeref:enum:fixture::behaviour	file:
behaviour	baresip/test/call.c	/^enum behaviour {$/;"	g	file:
bell	baresip/modules/menu/menu.c	/^	bool bell;$/;"	m	struct:__anon72	file:
beneficiaryid	re-0.5.6/include/re_bfcp.h	/^		uint16_t beneficiaryid;$/;"	m	union:bfcp_attr::bfcp_union
bfcp	baresip/include/baresip.h	/^	struct config_bfcp bfcp;$/;"	m	struct:config	typeref:struct:config::config_bfcp
bfcp	baresip/src/bfcp.c	/^struct bfcp {$/;"	s	file:
bfcp	baresip/src/call.c	/^	struct bfcp *bfcp;        \/**< BFCP Client                          *\/$/;"	m	struct:call	typeref:struct:call::bfcp	file:
bfcp_alloc	baresip/src/bfcp.c	/^int bfcp_alloc(struct bfcp **bfcpp, struct sdp_session *sdp_sess,$/;"	f
bfcp_attr	re-0.5.6/include/re_bfcp.h	/^struct bfcp_attr {$/;"	s
bfcp_attr_h	re-0.5.6/include/re_bfcp.h	/^typedef bool (bfcp_attr_h)(const struct bfcp_attr *attr, void *arg);$/;"	t
bfcp_attr_name	re-0.5.6/src/bfcp/attr.c	/^const char *bfcp_attr_name(enum bfcp_attrib type)$/;"	f
bfcp_attr_print	re-0.5.6/src/bfcp/attr.c	/^int bfcp_attr_print(struct re_printf *pf, const struct bfcp_attr *attr)$/;"	f
bfcp_attr_subattr	re-0.5.6/src/bfcp/attr.c	/^struct bfcp_attr *bfcp_attr_subattr(const struct bfcp_attr *attr,$/;"	f
bfcp_attr_subattr_apply	re-0.5.6/src/bfcp/attr.c	/^struct bfcp_attr *bfcp_attr_subattr_apply(const struct bfcp_attr *attr,$/;"	f
bfcp_attrib	re-0.5.6/include/re_bfcp.h	/^enum bfcp_attrib {$/;"	g
bfcp_attrs_apply	re-0.5.6/src/bfcp/attr.c	/^struct bfcp_attr *bfcp_attrs_apply(const struct list *attrl,$/;"	f
bfcp_attrs_decode	re-0.5.6/src/bfcp/attr.c	/^int bfcp_attrs_decode(struct list *attrl, struct mbuf *mb, size_t len,$/;"	f
bfcp_attrs_encode	re-0.5.6/src/bfcp/attr.c	/^int bfcp_attrs_encode(struct mbuf *mb, unsigned attrc, ...)$/;"	f
bfcp_attrs_find	re-0.5.6/src/bfcp/attr.c	/^struct bfcp_attr *bfcp_attrs_find(const struct list *attrl,$/;"	f
bfcp_attrs_print	re-0.5.6/src/bfcp/attr.c	/^int bfcp_attrs_print(struct re_printf *pf, const struct list *attrl,$/;"	f
bfcp_attrs_vencode	re-0.5.6/src/bfcp/attr.c	/^int bfcp_attrs_vencode(struct mbuf *mb, unsigned attrc, va_list *ap)$/;"	f
bfcp_conn	re-0.5.6/src/bfcp/bfcp.h	/^struct bfcp_conn {$/;"	s
bfcp_ctrans	re-0.5.6/src/bfcp/request.c	/^struct bfcp_ctrans {$/;"	s	file:
bfcp_edreply	re-0.5.6/src/bfcp/reply.c	/^int bfcp_edreply(struct bfcp_conn *bc, const struct bfcp_msg *req,$/;"	f
bfcp_encode	re-0.5.6/include/re_bfcp.h	/^struct bfcp_encode {$/;"	s
bfcp_encode_h	re-0.5.6/include/re_bfcp.h	/^typedef int (bfcp_encode_h)(struct mbuf *mb, void *arg);$/;"	t
bfcp_ereply	re-0.5.6/src/bfcp/reply.c	/^int bfcp_ereply(struct bfcp_conn *bc, const struct bfcp_msg *req,$/;"	f
bfcp_err	re-0.5.6/include/re_bfcp.h	/^enum bfcp_err {$/;"	g
bfcp_errcode	re-0.5.6/include/re_bfcp.h	/^struct bfcp_errcode {$/;"	s
bfcp_errcode_name	re-0.5.6/src/bfcp/attr.c	/^const char *bfcp_errcode_name(enum bfcp_err code)$/;"	f
bfcp_handle_response	re-0.5.6/src/bfcp/request.c	/^bool bfcp_handle_response(struct bfcp_conn *bc, const struct bfcp_msg *msg)$/;"	f
bfcp_listen	re-0.5.6/src/bfcp/conn.c	/^int bfcp_listen(struct bfcp_conn **bcp, enum bfcp_transp tp, struct sa *laddr,$/;"	f
bfcp_msg	re-0.5.6/include/re_bfcp.h	/^struct bfcp_msg {$/;"	s
bfcp_msg_attr	re-0.5.6/src/bfcp/msg.c	/^struct bfcp_attr *bfcp_msg_attr(const struct bfcp_msg *msg,$/;"	f
bfcp_msg_attr_apply	re-0.5.6/src/bfcp/msg.c	/^struct bfcp_attr *bfcp_msg_attr_apply(const struct bfcp_msg *msg,$/;"	f
bfcp_msg_decode	re-0.5.6/src/bfcp/msg.c	/^int bfcp_msg_decode(struct bfcp_msg **msgp, struct mbuf *mb)$/;"	f
bfcp_msg_encode	re-0.5.6/src/bfcp/msg.c	/^int bfcp_msg_encode(struct mbuf *mb, uint8_t ver, bool r, enum bfcp_prim prim,$/;"	f
bfcp_msg_handler	baresip/src/bfcp.c	/^static void bfcp_msg_handler(const struct bfcp_msg *msg, void *arg)$/;"	f	file:
bfcp_msg_print	re-0.5.6/src/bfcp/msg.c	/^int bfcp_msg_print(struct re_printf *pf, const struct bfcp_msg *msg)$/;"	f
bfcp_msg_vencode	re-0.5.6/src/bfcp/msg.c	/^int bfcp_msg_vencode(struct mbuf *mb, uint8_t ver, bool r, enum bfcp_prim prim,$/;"	f
bfcp_notify	re-0.5.6/src/bfcp/request.c	/^int bfcp_notify(struct bfcp_conn *bc, const struct sa *dst, uint8_t ver,$/;"	f
bfcp_prim	re-0.5.6/include/re_bfcp.h	/^enum bfcp_prim {$/;"	g
bfcp_prim_name	re-0.5.6/src/bfcp/msg.c	/^const char *bfcp_prim_name(enum bfcp_prim prim)$/;"	f
bfcp_priority	re-0.5.6/include/re_bfcp.h	/^enum bfcp_priority {$/;"	g
bfcp_recv_h	re-0.5.6/include/re_bfcp.h	/^typedef void (bfcp_recv_h)(const struct bfcp_msg *msg, void *arg);$/;"	t
bfcp_reply	re-0.5.6/src/bfcp/reply.c	/^int bfcp_reply(struct bfcp_conn *bc, const struct bfcp_msg *req,$/;"	f
bfcp_reqstat	re-0.5.6/include/re_bfcp.h	/^enum bfcp_reqstat {$/;"	g
bfcp_reqstatus	re-0.5.6/include/re_bfcp.h	/^struct bfcp_reqstatus {$/;"	s
bfcp_reqstatus_name	re-0.5.6/src/bfcp/attr.c	/^const char *bfcp_reqstatus_name(enum bfcp_reqstat status)$/;"	f
bfcp_request	re-0.5.6/src/bfcp/request.c	/^int bfcp_request(struct bfcp_conn *bc, const struct sa *dst, uint8_t ver,$/;"	f
bfcp_resp_h	re-0.5.6/include/re_bfcp.h	/^typedef void (bfcp_resp_h)(int err, const struct bfcp_msg *msg, void *arg);$/;"	t
bfcp_resp_handler	baresip/src/bfcp.c	/^static void bfcp_resp_handler(int err, const struct bfcp_msg *msg, void *arg)$/;"	f	file:
bfcp_sdp_transp	baresip/src/bfcp.c	/^static const char *bfcp_sdp_transp(enum bfcp_transp tp)$/;"	f	file:
bfcp_send	re-0.5.6/src/bfcp/conn.c	/^int bfcp_send(struct bfcp_conn *bc, const struct sa *dst, struct mbuf *mb)$/;"	f
bfcp_sock	re-0.5.6/src/bfcp/conn.c	/^void *bfcp_sock(const struct bfcp_conn *bc)$/;"	f
bfcp_start	baresip/src/bfcp.c	/^int bfcp_start(struct bfcp *bfcp)$/;"	f
bfcp_strans	re-0.5.6/src/bfcp/bfcp.h	/^struct bfcp_strans {$/;"	s
bfcp_supattr	re-0.5.6/include/re_bfcp.h	/^struct bfcp_supattr {$/;"	s
bfcp_supprim	re-0.5.6/include/re_bfcp.h	/^struct bfcp_supprim {$/;"	s
bfcp_transp	re-0.5.6/include/re_bfcp.h	/^enum bfcp_transp {$/;"	g
bfcp_union	re-0.5.6/include/re_bfcp.h	/^	union bfcp_union {$/;"	u	struct:bfcp_attr
bfcp_unknown_attr	re-0.5.6/include/re_bfcp.h	/^struct bfcp_unknown_attr {$/;"	s
bfcp_vrequest	re-0.5.6/src/bfcp/request.c	/^int bfcp_vrequest(struct bfcp_conn *bc, const struct sa *dst, uint8_t ver,$/;"	f
bidx	rem-0.5.2/src/dtmf/dec.c	/^	unsigned bidx;$/;"	m	struct:dtmf_dec	file:
bin	baresip/modules/gst/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
bin	baresip/modules/gst1/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
binding_expired	re-0.5.6/src/natbd/lifetime.c	/^static void binding_expired(struct nat_lifetime *nl)$/;"	f	file:
binding_ok	re-0.5.6/src/natbd/lifetime.c	/^static void binding_ok(struct nat_lifetime *nl)$/;"	f	file:
bio_create	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static int bio_create(BIO *b)$/;"	f	file:
bio_create	re-0.5.6/src/tls/openssl/tls_udp.c	/^static int bio_create(BIO *b)$/;"	f	file:
bio_ctrl	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static long bio_ctrl(BIO *b, int cmd, long num, void *ptr)$/;"	f	file:
bio_ctrl	re-0.5.6/src/tls/openssl/tls_udp.c	/^static long bio_ctrl(BIO *b, int cmd, long num, void *ptr)$/;"	f	file:
bio_destroy	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static int bio_destroy(BIO *b)$/;"	f	file:
bio_destroy	re-0.5.6/src/tls/openssl/tls_udp.c	/^static int bio_destroy(BIO *b)$/;"	f	file:
bio_tcp_send	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static struct bio_method_st bio_tcp_send = {$/;"	v	typeref:struct:bio_method_st	file:
bio_udp_send	re-0.5.6/src/tls/openssl/tls_udp.c	/^static struct bio_method_st bio_udp_send = {$/;"	v	typeref:struct:bio_method_st	file:
bio_write	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static int bio_write(BIO *b, const char *buf, int len)$/;"	f	file:
bio_write	re-0.5.6/src/tls/openssl/tls_udp.c	/^static int bio_write(BIO *b, const char *buf, int len)$/;"	f	file:
bitmap	re-0.5.6/src/srtp/srtp.h	/^	uint64_t bitmap;   \/**< Session state - must be 64 bits *\/$/;"	m	struct:replay
bitrate	baresip/include/baresip.h	/^	uint32_t bitrate;       \/**< Encoder bitrate in [bit\/s]     *\/$/;"	m	struct:config_video
bitrate	baresip/include/baresip.h	/^	unsigned bitrate;  \/**< Encoder bitrate in [bit\/s] *\/$/;"	m	struct:videnc_param
bitrate	baresip/modules/av1/encode.c	/^	unsigned bitrate;$/;"	m	struct:videnc_state	file:
bitrate	baresip/modules/daala/encode.c	/^	unsigned bitrate;$/;"	m	struct:videnc_state	file:
bitrate	baresip/modules/g7221/g7221.h	/^	uint32_t bitrate;$/;"	m	struct:g7221_aucodec
bitrate	baresip/modules/g726/g726.c	/^	int bitrate;$/;"	m	struct:g726_aucodec	file:
bitrate	baresip/modules/gst_video/encode.c	/^	unsigned bitrate;$/;"	m	struct:videnc_state	file:
bitrate	baresip/modules/gst_video1/encode.c	/^		unsigned bitrate;$/;"	m	struct:videnc_state::__anon89	file:
bitrate	baresip/modules/h265/encode.c	/^	unsigned bitrate;$/;"	m	struct:videnc_state	file:
bitrate	baresip/modules/mpa/mpa.h	/^	unsigned bitrate;$/;"	m	struct:mpa_param
bitrate	baresip/modules/opus/opus.h	/^	opus_int32 bitrate;$/;"	m	struct:opus_param
bitrate	baresip/modules/vidloop/vidloop.c	/^	uint32_t bitrate;$/;"	m	struct:vstat	file:
bitrate	baresip/modules/vp8/encode.c	/^	unsigned bitrate;$/;"	m	struct:videnc_state	file:
bitrate	baresip/modules/vp9/encode.c	/^	unsigned bitrate;$/;"	m	struct:videnc_state	file:
bits	baresip/modules/speex/speex.c	/^	SpeexBits bits;$/;"	m	struct:audec_state	file:
bits	baresip/modules/speex/speex.c	/^	SpeexBits bits;$/;"	m	struct:auenc_state	file:
bitv_assign	re-0.5.6/include/re_bitv.h	/^static inline void bitv_assign(bitv_t *bv, uint32_t i, bool val)$/;"	f
bitv_assign_range	re-0.5.6/include/re_bitv.h	/^static inline void bitv_assign_range(bitv_t *bv, uint32_t i, uint32_t n,$/;"	f
bitv_clr	re-0.5.6/include/re_bitv.h	/^static inline void bitv_clr(bitv_t *bv, uint32_t i)$/;"	f
bitv_init	re-0.5.6/include/re_bitv.h	/^static inline void bitv_init(bitv_t *bv, uint32_t nbits, bool val)$/;"	f
bitv_set	re-0.5.6/include/re_bitv.h	/^static inline void bitv_set(bitv_t *bv, uint32_t i)$/;"	f
bitv_t	re-0.5.6/include/re_bitv.h	/^typedef unsigned long bitv_t;$/;"	t
bitv_toggle	re-0.5.6/include/re_bitv.h	/^static inline void bitv_toggle(bitv_t *bv, uint32_t i)$/;"	f
bitv_val	re-0.5.6/include/re_bitv.h	/^static inline bool bitv_val(const bitv_t *bv, uint32_t i)$/;"	f
blk	re-0.5.6/src/sha/sha1.c	114;"	d	file:
blk0	re-0.5.6/src/sha/sha1.c	109;"	d	file:
blk0	re-0.5.6/src/sha/sha1.c	111;"	d	file:
block_align	rem-0.5.2/src/aufile/aufile.h	/^	uint16_t block_align;$/;"	m	struct:wav_fmt
block_until_port_changed	baresip/modules/omx/omx.c	/^static void block_until_port_changed(OMX_HANDLETYPE hComponent,$/;"	f	file:
block_until_state_changed	baresip/modules/omx/omx.c	/^static void block_until_state_changed(OMX_HANDLETYPE hComponent,$/;"	f	file:
blocks_cur	re-0.5.6/include/re_mem.h	/^	size_t blocks_cur;   \/**< Current blocks allocated     *\/$/;"	m	struct:memstat
blocks_peak	re-0.5.6/include/re_mem.h	/^	size_t blocks_peak;  \/**< Peak blocks allocated        *\/$/;"	m	struct:memstat
blp	re-0.5.6/include/re_rtp.h	/^					uint16_t blp;$/;"	m	struct:rtcp_msg::__anon181::__anon188::__anon189::gnack
blp	re-0.5.6/include/re_rtp.h	/^			uint16_t blp;   \/**< Bitmask of lost packets        *\/$/;"	m	struct:rtcp_msg::__anon181::__anon187
bmp	baresip/modules/sdl/sdl.c	/^	SDL_Overlay *bmp;               \/**< SDL YUV Overlay       *\/$/;"	m	struct:__anon60	file:
body	re-0.5.6/src/sipsess/sipsess.h	/^	struct mbuf *body;$/;"	m	struct:sipsess_request	typeref:struct:sipsess_request::mbuf
bool	re-0.5.6/include/re_types.h	88;"	d
boolean	re-0.5.6/include/re_json.h	/^		bool boolean;$/;"	m	union:json_value::__anon192
boolean	re-0.5.6/include/re_odict.h	/^		bool boolean;          \/* ODICT_BOOL   *\/$/;"	m	union:odict_entry::__anon172
bps	rem-0.5.2/src/aufile/aufile.h	/^	uint16_t bps;$/;"	m	struct:wav_fmt
bqPlayerCallback	baresip/modules/opensles/player.c	/^static void bqPlayerCallback(SLAndroidSimpleBufferQueueItf bq, void *context)$/;"	f	file:
bqPlayerObject	baresip/modules/opensles/player.c	/^	SLObjectItf bqPlayerObject;$/;"	m	struct:auplay_st	file:
bqPlayerPlay	baresip/modules/opensles/player.c	/^	SLPlayItf bqPlayerPlay;$/;"	m	struct:auplay_st	file:
bqRecorderCallback	baresip/modules/opensles/recorder.c	/^static void bqRecorderCallback(SLAndroidSimpleBufferQueueItf bq, void *context)$/;"	f	file:
branch	re-0.5.6/include/re_sip.h	/^	struct pl branch;$/;"	m	struct:sip_via	typeref:struct:sip_via::pl
branch	re-0.5.6/src/sip/ctrans.c	/^	char *branch;$/;"	m	struct:sip_ctrans	file:
broker_host	baresip/modules/mqtt/mqtt.c	/^static char broker_host[256] = "127.0.0.1";$/;"	v	file:
broker_port	baresip/modules/mqtt/mqtt.c	/^static uint32_t broker_port = 1883;$/;"	v	file:
browse_callback	baresip/modules/avahi/avahi.c	/^static void browse_callback($/;"	f	file:
browser	baresip/modules/avahi/avahi.c	/^	AvahiServiceBrowser* browser;$/;"	m	struct:avahi_st	file:
bsc	baresip/modules/bv32/bv32.c	/^	struct BV32_Bit_Stream bsc;$/;"	m	struct:auenc_state	typeref:struct:auenc_state::BV32_Bit_Stream	file:
bsd	baresip/modules/bv32/bv32.c	/^	struct BV32_Bit_Stream bsd;$/;"	m	struct:audec_state	typeref:struct:audec_state::BV32_Bit_Stream	file:
bsize	re-0.5.6/src/hash/hash.c	/^	uint32_t bsize;       \/**< Bucket size              *\/$/;"	m	struct:hash	file:
bsize	rem-0.5.2/src/dtmf/dec.c	/^	unsigned bsize;$/;"	m	struct:dtmf_dec	file:
bucket	re-0.5.6/src/hash/hash.c	/^	struct list *bucket;  \/**< Bucket with linked lists *\/$/;"	m	struct:hash	typeref:struct:hash::list	file:
buf	baresip/modules/coreaudio/player.c	/^	AudioQueueBufferRef buf[BUFC];$/;"	m	struct:auplay_st	file:
buf	baresip/modules/coreaudio/recorder.c	/^	AudioQueueBufferRef buf[BUFC];$/;"	m	struct:ausrc_st	file:
buf	baresip/src/contact.c	/^	char *buf;$/;"	m	struct:contact	file:
buf	baresip/src/core.h	/^	char *buf;                   \/**< Buffer for the SIP address         *\/$/;"	m	struct:account
buf	re-0.5.6/include/re_mbuf.h	/^	uint8_t *buf;   \/**< Buffer memory      *\/$/;"	m	struct:mbuf
buf	re-0.5.6/src/md5/md5.h	/^	md5_byte_t buf[64];		\/* accumulate block *\/$/;"	m	struct:md5_state_s
buffer	baresip/modules/v4l2/v4l2.c	/^struct buffer {$/;"	s	file:
buffer	baresip/modules/v4l2_codec/v4l2_codec.c	/^	uint8_t *buffer;$/;"	m	struct:vidsrc_st	file:
buffer	re-0.5.6/include/re_sha.h	/^	uint8_t  buffer[64]; \/**< SHA-1 buffer  *\/$/;"	m	struct:__anon168
bufferId	baresip/modules/opensles/player.c	/^	uint8_t  bufferId;$/;"	m	struct:auplay_st	file:
bufferId	baresip/modules/opensles/recorder.c	/^	uint8_t  bufferId;$/;"	m	struct:ausrc_st	file:
buffer_len	baresip/modules/v4l2_codec/v4l2_codec.c	/^	size_t buffer_len;$/;"	m	struct:vidsrc_st	file:
buffers	baresip/modules/omx/omx.h	/^	OMX_BUFFERHEADERTYPE** buffers;$/;"	m	struct:omx_state
buffers	baresip/modules/v4l2/v4l2.c	/^	struct buffer *buffers;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::buffer	file:
bufs	baresip/modules/winwave/play.c	/^	struct dspbuf bufs[WRITE_BUFFERS];$/;"	m	struct:auplay_st	typeref:struct:auplay_st::dspbuf	file:
bufs	baresip/modules/winwave/src.c	/^	struct dspbuf bufs[READ_BUFFERS];$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::dspbuf	file:
buri	baresip/test/call.c	/^	char buri[256];$/;"	m	struct:fixture	file:
bus	baresip/modules/gst_video/encode.c	/^	GstBus *bus;$/;"	m	struct:videnc_state	file:
bus_destroy_notify_cb	baresip/modules/gst_video1/encode.c	/^static void bus_destroy_notify_cb(struct videnc_state *st)$/;"	f	file:
bus_sync_handler_cb	baresip/modules/gst_video1/encode.c	/^static GstBusSyncReply bus_sync_handler_cb(GstBus *bus, GstMessage *msg,$/;"	f	file:
bus_watch_handler	baresip/modules/gst/gst.c	/^static gboolean bus_watch_handler(GstBus *bus, GstMessage *msg, gpointer data)$/;"	f	file:
bus_watch_handler	baresip/modules/gst1/gst.c	/^static gboolean bus_watch_handler(GstBus *bus, GstMessage *msg, gpointer data)$/;"	f	file:
button_is_down	baresip/modules/x11/x11.c	/^	int button_is_down;$/;"	m	struct:vidisp_st	file:
buttons	baresip/modules/gtk/call_window.c	/^	} buttons;$/;"	m	struct:call_window	typeref:struct:call_window::__anon77	file:
buzz	baresip/modules/evdev/evdev.c	/^static int buzz(const struct ui_st *st, int value)$/;"	f	file:
bv32	baresip/modules/bv32/bv32.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(bv32) = {$/;"	v	typeref:struct:DECL_EXPORTS
bv32	baresip/modules/bv32/bv32.c	/^static struct aucodec bv32 = {$/;"	v	typeref:struct:aucodec	file:
bwait	baresip/modules/gst_video/encode.c	/^	int bwait;$/;"	m	struct:videnc_state	file:
bye	re-0.5.6/include/re_rtp.h	/^		} bye;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon184
bye_handler	re-0.5.6/src/sipsess/listen.c	/^static void bye_handler(struct sipsess_sock *sock, const struct sip_msg *msg)$/;"	f	file:
bye_resp_handler	re-0.5.6/src/sipsess/close.c	/^static void bye_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
bytec	baresip/modules/rst/rst.c	/^	size_t bytec;$/;"	m	struct:rst	file:
byterate	rem-0.5.2/src/aufile/aufile.h	/^	uint32_t byterate;$/;"	m	struct:wav_fmt
bytes	baresip/modules/vidloop/vidloop.c	/^	size_t bytes;$/;"	m	struct:vstat	file:
bytes_cur	re-0.5.6/include/re_mem.h	/^	size_t bytes_cur;    \/**< Current bytes allocated      *\/$/;"	m	struct:memstat
bytes_peak	re-0.5.6/include/re_mem.h	/^	size_t bytes_peak;   \/**< Peak bytes allocated         *\/$/;"	m	struct:memstat
c	re-0.5.6/src/lock/win32/lock.c	/^	CRITICAL_SECTION c;$/;"	m	struct:lock	file:
c2	baresip/modules/codec2/codec2.c	/^	struct CODEC2 *c2;$/;"	m	struct:audec_state	typeref:struct:audec_state::CODEC2	file:
c2	baresip/modules/codec2/codec2.c	/^	struct CODEC2 *c2;$/;"	m	struct:auenc_state	typeref:struct:auenc_state::CODEC2	file:
cachel	re-0.5.6/src/sip/request.c	/^	struct list cachel;$/;"	m	struct:sip_request	typeref:struct:sip_request::list	file:
cairo	baresip/modules/cairo/cairo.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(cairo) = {$/;"	v	typeref:struct:DECL_EXPORTS
cairo	baresip/modules/rst/video.c	/^	cairo_t *cairo;$/;"	m	struct:vidsrc_st	file:
calc_avg_s16	baresip/modules/gtk/gtk_mod.c	/^static int16_t calc_avg_s16(const int16_t *sampv, size_t sampc)$/;"	f	file:
calc_bitrate	baresip/modules/vidloop/vidloop.c	/^static void calc_bitrate(struct video_loop *vl)$/;"	f	file:
calc_dlsr	re-0.5.6/src/rtp/sess.c	/^static uint32_t calc_dlsr(uint64_t sr_recv)$/;"	f	file:
calc_extended_timestamp	baresip/src/core.h	/^static inline uint64_t calc_extended_timestamp(uint32_t num_wraps, uint32_t ts)$/;"	f
calc_lsr	re-0.5.6/src/rtp/sess.c	/^static uint32_t calc_lsr(const struct ntp_time *last_sr)$/;"	f	file:
calc_nsamp	baresip/src/audio.c	/^static inline uint32_t calc_nsamp(uint32_t srate, uint8_t channels,$/;"	f	file:
calc_ptime	baresip/src/audio.c	/^static inline double calc_ptime(size_t nsamp, uint32_t srate, uint8_t channels)$/;"	f	file:
calc_rms	baresip/src/aulevel.c	/^static double calc_rms(const int16_t *data, size_t len)$/;"	f	file:
calc_rows	rem-0.5.2/src/vidmix/vidmix.c	/^static inline unsigned calc_rows(unsigned n)$/;"	f	file:
calc_rtt	re-0.5.6/src/rtp/sess.c	/^static void calc_rtt(uint32_t *rtt, uint32_t lsr, uint32_t dlsr)$/;"	f	file:
call	baresip/include/baresip.h	/^	struct config_call call;$/;"	m	struct:config	typeref:struct:config::config_call
call	baresip/modules/gtk/call_window.c	/^	struct call *call;$/;"	m	struct:call_window	typeref:struct:call_window::call	file:
call	baresip/src/call.c	/^struct call {$/;"	s	file:
call	baresip/src/core.h	/^	struct call *call;       \/**< Ref. to call object                   *\/$/;"	m	struct:stream	typeref:struct:stream::call
call_accept	baresip/src/call.c	/^int call_accept(struct call *call, struct sipsess_sock *sess_sock,$/;"	f
call_account	baresip/src/call.c	/^struct account *call_account(const struct call *call)$/;"	f
call_af	baresip/src/call.c	/^int call_af(const struct call *call)$/;"	f
call_alloc	baresip/src/call.c	/^int call_alloc(struct call **callp, const struct config *cfg, struct list *lst,$/;"	f
call_answer	baresip/src/call.c	/^int call_answer(struct call *call, uint16_t scode)$/;"	f
call_audio	baresip/src/call.c	/^struct audio *call_audio(const struct call *call)$/;"	f
call_audio_debug	baresip/modules/menu/menu.c	/^static int call_audio_debug(struct re_printf *pf, void *unused)$/;"	f	file:
call_audioenc_cycle	baresip/modules/menu/menu.c	/^static int call_audioenc_cycle(struct re_printf *pf, void *unused)$/;"	f	file:
call_connect	baresip/src/call.c	/^int call_connect(struct call *call, const struct pl *paddr)$/;"	f
call_debug	baresip/src/call.c	/^int call_debug(struct re_printf *pf, const struct call *call)$/;"	f
call_destructor	baresip/src/call.c	/^static void call_destructor(void *arg)$/;"	f	file:
call_dtmf_h	baresip/include/baresip.h	/^typedef void (call_dtmf_h)(struct call *call, char key, void *arg);$/;"	t
call_dtmf_handler	baresip/modules/b2bua/b2bua.c	/^static void call_dtmf_handler(struct call *call, char key, void *arg)$/;"	f	file:
call_dtmf_handler	baresip/modules/echo/echo.c	/^static void call_dtmf_handler(struct call *call, char key, void *arg)$/;"	f	file:
call_dtmf_handler	baresip/src/ua.c	/^static void call_dtmf_handler(struct call *call, char key, void *arg)$/;"	f	file:
call_duration	baresip/src/call.c	/^uint32_t call_duration(const struct call *call)$/;"	f
call_enable_rtp_timeout	baresip/src/call.c	/^void call_enable_rtp_timeout(struct call *call, uint32_t timeout_ms)$/;"	f
call_event	baresip/include/baresip.h	/^enum call_event {$/;"	g
call_event_h	baresip/include/baresip.h	/^typedef void (call_event_h)(struct call *call, enum call_event ev,$/;"	t
call_event_handler	baresip/modules/b2bua/b2bua.c	/^static void call_event_handler(struct call *call, enum call_event ev,$/;"	f	file:
call_event_handler	baresip/modules/echo/echo.c	/^static void call_event_handler(struct call *call, enum call_event ev,$/;"	f	file:
call_event_handler	baresip/src/call.c	/^static void call_event_handler(struct call *call, enum call_event ev,$/;"	f	file:
call_event_handler	baresip/src/ua.c	/^static void call_event_handler(struct call *call, enum call_event ev,$/;"	f	file:
call_find_linenum	baresip/src/call.c	/^struct call *call_find_linenum(const struct list *calls, uint32_t linenum)$/;"	f
call_frame_handler	baresip/modules/v4l/v4l.c	/^static void call_frame_handler(struct vidsrc_st *st, uint8_t *buf)$/;"	f	file:
call_frame_handler	baresip/modules/v4l2/v4l2.c	/^static void call_frame_handler(struct vidsrc_st *st, uint8_t *buf)$/;"	f	file:
call_frame_handler	baresip/modules/x11grab/x11grab.c	/^static void call_frame_handler(struct vidsrc_st *st, uint8_t *buf)$/;"	f	file:
call_gather_handler	baresip/modules/ice/ice.c	/^static void call_gather_handler(int err, struct mnat_media *m, uint16_t scode,$/;"	f	file:
call_get_ua	baresip/src/call.c	/^struct ua *call_get_ua(const struct call *call)$/;"	f
call_handle_info_req	baresip/src/call.c	/^static void call_handle_info_req(struct call *call, const struct sip_msg *req)$/;"	f	file:
call_handler	re-0.5.6/src/stun/keepalive.c	/^static void call_handler(struct stun_keepalive *ska, int err,$/;"	f	file:
call_handler	re-0.5.6/src/tmr/tmr.c	/^static void call_handler(tmr_h *th, void *arg)$/;"	f	file:
call_hangup	baresip/src/call.c	/^int call_hangup(struct call *call, uint16_t scode, const char *reason)$/;"	f
call_has_audio	baresip/src/call.c	/^bool call_has_audio(const struct call *call)$/;"	f
call_has_video	baresip/src/call.c	/^bool call_has_video(const struct call *call)$/;"	f
call_hold	baresip/src/call.c	/^int call_hold(struct call *call, bool hold)$/;"	f
call_in	baresip/modules/b2bua/b2bua.c	/^	struct call *call_in, *call_out;$/;"	m	struct:session	typeref:struct:session::call	file:
call_in	baresip/modules/echo/echo.c	/^	struct call *call_in;$/;"	m	struct:session	typeref:struct:session::call	file:
call_info	baresip/src/call.c	/^int call_info(struct re_printf *pf, const struct call *call)$/;"	f
call_is_onhold	baresip/src/call.c	/^bool call_is_onhold(const struct call *call)$/;"	f
call_is_outgoing	baresip/src/call.c	/^bool call_is_outgoing(const struct call *call)$/;"	f
call_jbuf_stat	baresip/src/call.c	/^int call_jbuf_stat(struct re_printf *pf, const struct call *call)$/;"	f
call_linenum	baresip/src/call.c	/^uint32_t call_linenum(const struct call *call)$/;"	f
call_localuri	baresip/src/call.c	/^const char *call_localuri(const struct call *call)$/;"	f
call_modify	baresip/src/call.c	/^int call_modify(struct call *call)$/;"	f
call_mute	baresip/modules/menu/menu.c	/^static int call_mute(struct re_printf *pf, void *unused)$/;"	f	file:
call_notify_sipfrag	baresip/src/call.c	/^int call_notify_sipfrag(struct call *call, uint16_t scode,$/;"	f
call_on_hangup	baresip/modules/gtk/call_window.c	/^static void call_on_hangup(GtkToggleButton *btn, struct call_window *win)$/;"	f	file:
call_on_hold_toggle	baresip/modules/gtk/call_window.c	/^static void call_on_hold_toggle(GtkToggleButton *btn, struct call_window *win)$/;"	f	file:
call_on_key_press	baresip/modules/gtk/call_window.c	/^static gboolean call_on_key_press(GtkWidget *window, GdkEvent *ev,$/;"	f	file:
call_on_key_release	baresip/modules/gtk/call_window.c	/^static gboolean call_on_key_release(GtkWidget *window, GdkEvent *ev,$/;"	f	file:
call_on_mute_toggle	baresip/modules/gtk/call_window.c	/^static void call_on_mute_toggle(GtkToggleButton *btn, struct call_window *win)$/;"	f	file:
call_on_transfer	baresip/modules/gtk/call_window.c	/^static void call_on_transfer(GtkToggleButton *btn, struct call_window *win)$/;"	f	file:
call_on_window_close	baresip/modules/gtk/call_window.c	/^static gboolean call_on_window_close(GtkWidget *widget, GdkEventAny *event,$/;"	f	file:
call_out	baresip/modules/b2bua/b2bua.c	/^	struct call *call_in, *call_out;$/;"	m	struct:session	typeref:struct:session::	file:
call_peername	baresip/src/call.c	/^const char *call_peername(const struct call *call)$/;"	f
call_peeruri	baresip/src/call.c	/^const char *call_peeruri(const struct call *call)$/;"	f
call_prm	baresip/src/core.h	/^struct call_prm {$/;"	s
call_progress	baresip/src/call.c	/^int call_progress(struct call *call)$/;"	f
call_reinvite	baresip/modules/menu/menu.c	/^static int call_reinvite(struct re_printf *pf, void *unused)$/;"	f	file:
call_reset_transp	baresip/src/call.c	/^int call_reset_transp(struct call *call, const struct sa *laddr)$/;"	f
call_scode	baresip/src/call.c	/^uint16_t call_scode(const struct call *call)$/;"	f
call_sdp_get	baresip/src/call.c	/^int call_sdp_get(const struct call *call, struct mbuf **descp, bool offer)$/;"	f
call_send_digit	baresip/src/call.c	/^int call_send_digit(struct call *call, char key)$/;"	f
call_set_current	baresip/src/call.c	/^void call_set_current(struct list *calls, struct call *call)$/;"	f
call_set_handlers	baresip/src/call.c	/^void call_set_handlers(struct call *call, call_event_h *eh,$/;"	f
call_set_xrtpstat	baresip/src/call.c	/^void call_set_xrtpstat(struct call *call)$/;"	f
call_setup_duration	baresip/src/call.c	/^uint32_t call_setup_duration(const struct call *call)$/;"	f
call_status	baresip/src/call.c	/^int call_status(struct re_printf *pf, const struct call *call)$/;"	f
call_stream_start	baresip/src/call.c	/^static void call_stream_start(struct call *call, bool active)$/;"	f	file:
call_stream_stop	baresip/src/call.c	/^static void call_stream_stop(struct call *call)$/;"	f	file:
call_streaml	baresip/src/call.c	/^struct list *call_streaml(const struct call *call)$/;"	f
call_timer	baresip/modules/gtk/call_window.c	/^static gboolean call_timer(gpointer arg)$/;"	f	file:
call_transfer	baresip/src/call.c	/^int call_transfer(struct call *call, const char *uri)$/;"	f
call_video	baresip/src/call.c	/^struct video *call_video(const struct call *call)$/;"	f
call_video_debug	baresip/modules/menu/menu.c	/^static int call_video_debug(struct re_printf *pf, void *unused)$/;"	f	file:
call_videoenc_cycle	baresip/modules/menu/menu.c	/^static int call_videoenc_cycle(struct re_printf *pf, void *unused)$/;"	f	file:
call_win	baresip/modules/gtk/transfer_dialog.c	/^	struct call_window *call_win;$/;"	m	struct:transfer_dialog	typeref:struct:transfer_dialog::call_window	file:
call_window	baresip/modules/gtk/call_window.c	/^struct call_window {$/;"	s	file:
call_window_closed	baresip/modules/gtk/call_window.c	/^void call_window_closed(struct call_window *win, const char *reason)$/;"	f
call_window_destructor	baresip/modules/gtk/call_window.c	/^static void call_window_destructor(void *arg)$/;"	f	file:
call_window_established	baresip/modules/gtk/call_window.c	/^void call_window_established(struct call_window *win)$/;"	f
call_window_events	baresip/modules/gtk/call_window.c	/^enum call_window_events {$/;"	g	file:
call_window_got_vu_dec	baresip/modules/gtk/call_window.c	/^void call_window_got_vu_dec(struct vumeter_dec *dec)$/;"	f
call_window_got_vu_enc	baresip/modules/gtk/call_window.c	/^void call_window_got_vu_enc(struct vumeter_enc *enc)$/;"	f
call_window_is_for_call	baresip/modules/gtk/call_window.c	/^bool call_window_is_for_call(struct call_window *win, struct call *call)$/;"	f
call_window_new	baresip/modules/gtk/call_window.c	/^struct call_window *call_window_new(struct call *call, struct gtk_mod *mod)$/;"	f
call_window_progress	baresip/modules/gtk/call_window.c	/^void call_window_progress(struct call_window *win)$/;"	f
call_window_ringing	baresip/modules/gtk/call_window.c	/^void call_window_ringing(struct call_window *win)$/;"	f
call_window_set_status	baresip/modules/gtk/call_window.c	/^static void call_window_set_status(struct call_window *win,$/;"	f	file:
call_window_set_vu_dec	baresip/modules/gtk/call_window.c	/^static void call_window_set_vu_dec(struct call_window *win,$/;"	f	file:
call_window_set_vu_enc	baresip/modules/gtk/call_window.c	/^static void call_window_set_vu_enc(struct call_window *win,$/;"	f	file:
call_window_transfer	baresip/modules/gtk/call_window.c	/^void call_window_transfer(struct call_window *win, const char *uri)$/;"	f
call_window_transfer_failed	baresip/modules/gtk/call_window.c	/^void call_window_transfer_failed(struct call_window *win, const char *reason)$/;"	f
call_window_update_duration	baresip/modules/gtk/call_window.c	/^static void call_window_update_duration(struct call_window *win)$/;"	f	file:
call_window_update_vumeters	baresip/modules/gtk/call_window.c	/^static void call_window_update_vumeters(struct call_window *win)$/;"	f	file:
call_windows	baresip/modules/gtk/gtk_mod.c	/^	GSList *call_windows;$/;"	m	struct:gtk_mod	file:
call_xfer	baresip/modules/menu/menu.c	/^static int call_xfer(struct re_printf *pf, void *arg)$/;"	f	file:
callback	baresip/modules/speex/speex.c	/^	SpeexCallback callback;$/;"	m	struct:audec_state	file:
callbacks	baresip/modules/omx/omx.c	/^static struct OMX_CALLBACKTYPE callbacks = {$/;"	v	typeref:struct:OMX_CALLBACKTYPE	file:
callcmdv	baresip/modules/menu/menu.c	/^static const struct cmd callcmdv[] = {$/;"	v	typeref:struct:cmd	file:
callid	baresip/test/sip/location.c	/^	char *callid;$/;"	m	struct:loctmp	file:
callid	baresip/test/sip/sipsrv.h	/^	char *callid;$/;"	m	struct:location
callid	re-0.5.6/include/re_sip.h	/^	struct pl callid;      \/**< Cached Call-ID header                *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
callid	re-0.5.6/src/sip/dialog.c	/^	char *callid;$/;"	m	struct:sip_dialog	file:
calls	baresip/src/ua.c	/^	struct list calls;           \/**< List of active calls (struct call) *\/$/;"	m	struct:ua	typeref:struct:ua::list	file:
cancelTimer	baresip/modules/gzrtp/stream.cpp	/^int32_t Stream::cancelTimer()$/;"	f	class:Stream
cancel_handler	re-0.5.6/src/sip/strans.c	/^static bool cancel_handler(struct sip *sip, const struct sip_msg *msg)$/;"	f	file:
cancel_handler	re-0.5.6/src/sipsess/accept.c	/^static void cancel_handler(void *arg)$/;"	f	file:
canceled	re-0.5.6/src/sip/request.c	/^	bool canceled;$/;"	m	struct:sip_request	file:
cancelh	re-0.5.6/src/sip/strans.c	/^	sip_cancel_h *cancelh;$/;"	m	struct:sip_strans	file:
cand_alloc	re-0.5.6/src/ice/cand.c	/^static int cand_alloc(struct ice_cand **candp, struct icem *icem,$/;"	f	file:
cand_decode	re-0.5.6/src/ice/icesdp.c	/^static int cand_decode(struct icem *icem, const char *val)$/;"	f	file:
cand_default	re-0.5.6/src/ice/comp.c	/^static struct ice_cand *cand_default(const struct list *lcandl,$/;"	f	file:
cand_destructor	re-0.5.6/src/ice/cand.c	/^static void cand_destructor(void *arg)$/;"	f	file:
cand_gather_relayed	baresip/modules/ice/ice.c	/^static int cand_gather_relayed(struct mnat_media *m, struct comp *comp,$/;"	f	file:
cand_srflx_addr	re-0.5.6/src/ice/chklist.c	/^static const struct sa *cand_srflx_addr(const struct ice_cand *c)$/;"	f	file:
candidate_handler	baresip/modules/ice/ice.c	/^static bool candidate_handler(struct le *le, void *arg)$/;"	f	file:
candpair_destructor	re-0.5.6/src/ice/candpair.c	/^static void candpair_destructor(void *arg)$/;"	f	file:
candpair_prune	re-0.5.6/src/ice/chklist.c	/^static void candpair_prune(struct icem *icem)$/;"	f	file:
candpair_set_pprio	re-0.5.6/src/ice/candpair.c	/^static void candpair_set_pprio(struct ice_candpair *cp)$/;"	f	file:
candpairs_form	re-0.5.6/src/ice/chklist.c	/^static int candpairs_form(struct icem *icem)$/;"	f	file:
capsfilt	baresip/modules/gst/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
capsfilt	baresip/modules/gst1/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
capture	baresip/modules/dshow/dshow.cpp	/^	ICaptureGraphBuilder2 *capture;$/;"	m	struct:vidsrc_st	file:
casecmp	re-0.5.6/src/fmt/pl.c	/^static int casecmp(const struct pl *pl, const char *str)$/;"	f	file:
cbr	baresip/modules/opus/opus.h	/^	opus_int32 cbr;$/;"	m	struct:opus_param
cc	re-0.5.6/include/re_rtp.h	/^	uint8_t  cc;        \/**< CSRC count             *\/$/;"	m	struct:rtp_header
cert	baresip/include/baresip.h	/^	char cert[256];         \/**< SIP Certificate                *\/$/;"	m	struct:config_sip
cert	re-0.5.6/src/tls/openssl/tls.h	/^	X509 *cert;$/;"	m	struct:tls
cert_fingerprint	re-0.5.6/src/tls/openssl/tls.c	/^static int cert_fingerprint(X509 *cert, enum tls_fingerprint type,$/;"	f	file:
cfg	baresip/modules/vidloop/vidloop.c	/^	struct config_video cfg;$/;"	m	struct:video_loop	typeref:struct:video_loop::config_video	file:
cfg	baresip/src/audio.c	/^	struct config_audio cfg;      \/**< Audio configuration             *\/$/;"	m	struct:audio	typeref:struct:audio::config_audio	file:
cfg	baresip/src/core.h	/^	struct config_avt cfg;   \/**< Stream configuration                  *\/$/;"	m	struct:stream	typeref:struct:stream::config_avt
cfg	baresip/src/net.c	/^	struct config_net cfg;$/;"	m	struct:network	typeref:struct:network::config_net	file:
cfg	baresip/src/ua.c	/^	struct config_sip *cfg;        \/**< SIP configuration               *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::config_sip	file:
cfg	baresip/src/video.c	/^	struct config_video cfg;\/**< Video configuration                  *\/$/;"	m	struct:video	typeref:struct:video::config_video	file:
ch	baresip/include/baresip.h	/^	uint8_t    ch;          \/**< Number of channels    *\/$/;"	m	struct:auplay_prm
ch	baresip/include/baresip.h	/^	uint8_t    ch;          \/**< Number of channels    *\/$/;"	m	struct:ausrc_prm
ch	baresip/include/baresip.h	/^	uint8_t  ch;          \/**< Number of channels           *\/$/;"	m	struct:aufilt_prm
ch	baresip/include/baresip.h	/^	uint8_t ch;$/;"	m	struct:aucodec
ch	baresip/modules/audiounit/recorder.c	/^	int ch;$/;"	m	struct:ausrc_st	file:
ch	baresip/modules/auloop/auloop.c	/^	uint32_t ch;$/;"	m	struct:__anon56	file:
ch	baresip/modules/auloop/auloop.c	/^	uint32_t ch;$/;"	m	struct:audio_loop	file:
ch	baresip/modules/opus/decode.c	/^	unsigned ch;$/;"	m	struct:audec_state	file:
ch	baresip/modules/opus/encode.c	/^	unsigned ch;$/;"	m	struct:auenc_state	file:
ch	baresip/modules/portaudio/portaudio.c	/^	unsigned ch;$/;"	m	struct:auplay_st	file:
ch	baresip/modules/portaudio/portaudio.c	/^	unsigned ch;$/;"	m	struct:ausrc_st	file:
ch	baresip/src/net.c	/^	net_change_h *ch;$/;"	m	struct:network	file:
ch	re-0.5.6/include/re_sdp.h	/^	uint8_t ch;$/;"	m	struct:sdp_format
ch	re-0.5.6/src/turn/chan.c	/^	turnc_chan_h *ch;$/;"	m	struct:chan	file:
ch	rem-0.5.2/src/aumix/aumix.c	/^	uint8_t ch;$/;"	m	struct:aumix	file:
ch_hex	re-0.5.6/src/fmt/ch.c	/^uint8_t ch_hex(char ch)$/;"	f
challenge_decode	re-0.5.6/src/httpauth/digest.c	/^static void challenge_decode(const struct pl *name, const struct pl *val,$/;"	f	file:
chan	re-0.5.6/src/turn/chan.c	/^struct chan {$/;"	s	file:
chan_destructor	re-0.5.6/src/turn/chan.c	/^static void chan_destructor(void *data)$/;"	f	file:
chan_hdr	re-0.5.6/src/turn/turnc.h	/^struct chan_hdr {$/;"	s
chanbind_request	re-0.5.6/src/turn/chan.c	/^static int chanbind_request(struct chan *chan, bool reset_ls)$/;"	f	file:
chanbind_resp_handler	re-0.5.6/src/turn/chan.c	/^static void chanbind_resp_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
change_req	re-0.5.6/include/re_stun.h	/^		struct stun_change_req change_req;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::stun_change_req
channel_number	re-0.5.6/include/re_stun.h	/^		uint16_t channel_number;$/;"	m	union:stun_attr::__anon174
channels	baresip/include/baresip.h	/^	struct range channels;  \/**< Nr. of audio channels (1=mono) *\/$/;"	m	struct:config_audio	typeref:struct:config_audio::range
channels	baresip/modules/mpa/decode.c	/^	int channels;$/;"	m	struct:audec_state	file:
channels	baresip/modules/mpa/encode.c	/^	int channels, samplerate;$/;"	m	struct:auenc_state	file:
channels	baresip/modules/speex/speex.c	/^	uint8_t channels;$/;"	m	struct:audec_state	file:
channels	baresip/modules/speex/speex.c	/^	uint8_t channels;$/;"	m	struct:auenc_state	file:
channels	re-0.5.6/src/turn/chan.c	/^struct channels {$/;"	s	file:
channels	rem-0.5.2/include/rem_aufile.h	/^	uint8_t channels;$/;"	m	struct:aufile_prm
channels	rem-0.5.2/src/aufile/aufile.h	/^	uint16_t channels;$/;"	m	struct:wav_fmt
channels_destructor	re-0.5.6/src/turn/chan.c	/^static void channels_destructor(void *data)$/;"	f	file:
channels_play	baresip/include/baresip.h	/^	uint32_t channels_play; \/**< Opt. channels for player       *\/$/;"	m	struct:config_audio
channels_src	baresip/include/baresip.h	/^	uint32_t channels_src;  \/**< Opt. channels for source       *\/$/;"	m	struct:config_audio
chans	re-0.5.6/src/turn/turnc.h	/^	struct channels *chans;        \/**< TURN Channels                   *\/$/;"	m	struct:turnc	typeref:struct:turnc::channels
chat_peer	baresip/modules/contact/contact.c	/^static const char *chat_peer;         \/**< Selected chat peer             *\/$/;"	v	file:
checkSASSignature	baresip/modules/gzrtp/stream.cpp	/^bool Stream::checkSASSignature(uint8_t* sasHash)$/;"	f	class:Stream
check_ipv6	baresip/src/net.c	/^static bool check_ipv6(void)$/;"	f	file:
check_ptime	baresip/modules/ilbc/ilbc.c	/^static int check_ptime(const struct auenc_param *prm)$/;"	f	file:
check_registrations	baresip/modules/menu/menu.c	/^static void check_registrations(void)$/;"	f	file:
check_rtp_handler	baresip/src/stream.c	/^static void check_rtp_handler(void *arg)$/;"	f	file:
check_telev	baresip/src/audio.c	/^static void check_telev(struct audio *a, struct autx *tx)$/;"	f	file:
check_timer	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void check_timer(struct tls_conn *tc)$/;"	f	file:
checkl	re-0.5.6/src/ice/ice.h	/^	struct list checkl;          \/**< Check List of cand pairs (sorted)  *\/$/;"	m	struct:icem	typeref:struct:icem::list
chk_nonce	re-0.5.6/src/http/auth.c	/^static int chk_nonce(const struct pl *nonce, uint32_t expires)$/;"	f	file:
chkh	re-0.5.6/src/ice/ice.h	/^	ice_connchk_h *chkh;         \/**< Connectivity check handler         *\/$/;"	m	struct:icem
chkval	re-0.5.6/src/json/decode.c	/^static inline int chkval(struct pl *val, const char *p)$/;"	f	file:
chr	re-0.5.6/src/fmt/regex.c	/^struct chr {$/;"	s	file:
chroma_step	baresip/modules/sdl2/sdl.c	/^static uint32_t chroma_step(enum vidfmt fmt)$/;"	f	file:
cht	baresip/include/baresip.h	/^	struct hash *cht;$/;"	m	struct:contacts	typeref:struct:contacts::hash
chunk	re-0.5.6/src/http/client.c	/^	struct http_chunk chunk;$/;"	m	struct:http_req	typeref:struct:http_req::http_chunk	file:
chunk_decode	rem-0.5.2/src/aufile/wave.c	/^static int chunk_decode(struct wav_chunk *chunk, FILE *f)$/;"	f	file:
chunk_encode	rem-0.5.2/src/aufile/wave.c	/^static int chunk_encode(FILE *f, const char *id, size_t sz)$/;"	f	file:
chunked	re-0.5.6/src/http/client.c	/^	bool chunked;$/;"	m	struct:http_req	file:
cl	baresip/include/baresip.h	/^	struct list cl;$/;"	m	struct:contacts	typeref:struct:contacts::list
clear	rem-0.5.2/src/vidmix/vidmix.c	/^	bool clear;$/;"	m	struct:vidmix_source	file:
clear_all	rem-0.5.2/src/vidmix/vidmix.c	/^static void clear_all(struct vidmix *mix)$/;"	f	file:
clear_frame	rem-0.5.2/src/vidmix/vidmix.c	/^static inline void clear_frame(struct vidframe *vf)$/;"	f	file:
clen	re-0.5.6/include/re_http.h	/^	uint32_t clen;         \/**< Content length                         *\/$/;"	m	struct:http_msg
clen	re-0.5.6/include/re_sip.h	/^	struct pl clen;        \/**< Cached Content-Length header         *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
cli	re-0.5.6/src/http/client.c	/^	struct http_cli *cli;$/;"	m	struct:http_req	typeref:struct:http_req::http_cli	file:
cli_destructor	re-0.5.6/src/http/client.c	/^static void cli_destructor(void *arg)$/;"	f	file:
client	baresip/modules/avahi/avahi.c	/^	AvahiClient* client;$/;"	m	struct:avahi_st	file:
client	baresip/modules/jack/jack_play.c	/^	jack_client_t *client;$/;"	m	struct:auplay_st	file:
client	baresip/modules/jack/jack_src.c	/^	jack_client_t *client;$/;"	m	struct:ausrc_st	file:
client_callback	baresip/modules/avahi/avahi.c	/^static void client_callback(AvahiClient *c, AvahiClientState state,$/;"	f	file:
client_id	baresip/modules/gzrtp/stream.h	/^	char client_id[CLIENT_ID_SIZE + 1];$/;"	m	class:ZRTPConfig
close	baresip/src/conf.c	31;"	d	file:
close	re-0.5.6/include/re_mod.h	/^	mod_close_h *close;  \/**< Module close handler    *\/$/;"	m	struct:mod_export
close	re-0.5.6/src/conf/conf.c	25;"	d	file:
close	re-0.5.6/src/http/client.c	/^	bool close;$/;"	m	struct:http_req	file:
close	re-0.5.6/src/mqueue/mqueue.c	21;"	d	file:
close	re-0.5.6/src/tcp/tcp.c	44;"	d	file:
close	re-0.5.6/src/udp/udp.c	46;"	d	file:
close_handler	baresip/modules/mwi/mwi.c	/^static void close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
close_handler	baresip/modules/presence/subscriber.c	/^static void close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
close_handler	baresip/modules/rst/rst.c	/^static void close_handler(int err, void *arg)$/;"	f	file:
close_handler	re-0.5.6/src/http/client.c	/^static void close_handler(int err, void *arg)$/;"	f	file:
close_handler	re-0.5.6/src/http/server.c	/^static void close_handler(int err, void *arg)$/;"	f	file:
close_handler	re-0.5.6/src/sip/request.c	/^static bool close_handler(struct le *le, void *arg)$/;"	f	file:
close_handler	re-0.5.6/src/stun/ctrans.c	/^static bool close_handler(struct le *le, void *arg)$/;"	f	file:
close_handler	re-0.5.6/src/websock/websock.c	/^static void close_handler(int err, void *arg)$/;"	f	file:
close_hdrs	re-0.5.6/src/sipsess/sipsess.h	/^	char *close_hdrs;$/;"	m	struct:sipsess
close_scode	baresip/test/call.c	/^	uint16_t close_scode;$/;"	m	struct:agent	file:
close_window	baresip/modules/x11/x11.c	/^static void close_window(struct vidisp_st *st)$/;"	f	file:
closed	baresip/modules/gtk/call_window.c	/^	bool closed;$/;"	m	struct:call_window	file:
closeh	re-0.5.6/src/sipevent/sipevent.h	/^	sipnot_close_h *closeh;$/;"	m	struct:sipnot
closeh	re-0.5.6/src/sipevent/sipevent.h	/^	sipsub_close_h *closeh;$/;"	m	struct:sipsub
closeh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_close_h *closeh;$/;"	m	struct:sipsess
closeh	re-0.5.6/src/tcp/tcp.c	/^	tcp_close_h *closeh;  \/**< Connection close handler          *\/$/;"	m	struct:tcp_conn	file:
closeh	re-0.5.6/src/tls/openssl/tls_udp.c	/^	dtls_close_h *closeh;$/;"	m	struct:tls_conn	file:
closeh	re-0.5.6/src/websock/websock.c	/^	websock_close_h *closeh;$/;"	m	struct:websock_conn	file:
closing	re-0.5.6/src/sip/sip.h	/^	bool closing;$/;"	m	struct:sip
cmd	baresip/include/baresip.h	/^struct cmd {$/;"	s
cmd	baresip/src/cmd.c	/^	const struct cmd *cmd;$/;"	m	struct:cmd_ctx	typeref:struct:cmd_ctx::cmd	file:
cmd	baresip/src/cmd.c	/^	const struct cmd *cmd;$/;"	m	struct:cmd_sort	typeref:struct:cmd_sort::cmd	file:
cmd_answer	baresip/modules/menu/menu.c	/^static int cmd_answer(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_arg	baresip/include/baresip.h	/^struct cmd_arg {$/;"	s
cmd_call_hold	baresip/modules/menu/menu.c	/^static int cmd_call_hold(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_call_resume	baresip/modules/menu/menu.c	/^static int cmd_call_resume(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_called	baresip/test/cmd.c	/^	unsigned cmd_called;$/;"	m	struct:test	file:
cmd_config_print	baresip/modules/debug_cmd/debug_cmd.c	/^static int cmd_config_print(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_contact	baresip/modules/contact/contact.c	/^static int cmd_contact(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_ctx	baresip/src/cmd.c	/^struct cmd_ctx {$/;"	s	file:
cmd_desc	baresip/modules/contact/contact.c	/^static char cmd_desc[128] = "Send MESSAGE to peer";$/;"	v	file:
cmd_find_by_key	baresip/src/cmd.c	/^static const struct cmd *cmd_find_by_key(const struct commands *commands,$/;"	f	file:
cmd_find_long	baresip/src/cmd.c	/^const struct cmd *cmd_find_long(const struct commands *commands,$/;"	f
cmd_hangup	baresip/modules/menu/menu.c	/^static int cmd_hangup(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_init	baresip/src/cmd.c	/^int cmd_init(struct commands **commandsp)$/;"	f
cmd_message	baresip/modules/contact/contact.c	/^static int cmd_message(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_name	baresip/src/cmd.c	/^static const char *cmd_name(char *buf, size_t sz, const struct cmd *cmd)$/;"	f	file:
cmd_net_debug	baresip/modules/debug_cmd/debug_cmd.c	/^static int cmd_net_debug(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_offline	baresip/modules/presence/presence.c	/^static int cmd_offline(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_online	baresip/modules/presence/presence.c	/^static int cmd_online(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_play_file	baresip/modules/debug_cmd/debug_cmd.c	/^static int cmd_play_file(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_popup_menu	baresip/modules/gtk/gtk_mod.c	/^static int cmd_popup_menu(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_print	baresip/src/cmd.c	/^int cmd_print(struct re_printf *pf, const struct commands *commands)$/;"	f
cmd_print_all	baresip/src/cmd.c	/^static int cmd_print_all(struct re_printf *pf,$/;"	f	file:
cmd_print_calls	baresip/modules/menu/menu.c	/^static int cmd_print_calls(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_process	baresip/src/cmd.c	/^int cmd_process(struct commands *commands, struct cmd_ctx **ctxp, char key,$/;"	f
cmd_process_edit	baresip/src/cmd.c	/^static int cmd_process_edit(struct commands *commands,$/;"	f	file:
cmd_process_long	baresip/src/cmd.c	/^int cmd_process_long(struct commands *commands, const char *str, size_t len,$/;"	f
cmd_quit	baresip/src/baresip.c	/^static int cmd_quit(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_register	baresip/src/cmd.c	/^int cmd_register(struct commands *commands,$/;"	f
cmd_report	baresip/src/cmd.c	/^static int cmd_report(const struct cmd *cmd, struct re_printf *pf,$/;"	f	file:
cmd_sas	baresip/modules/gzrtp/session.cpp	/^int Session::cmd_sas(bool verify, struct re_printf *pf, void *arg)$/;"	f	class:Session
cmd_sort	baresip/src/cmd.c	/^struct cmd_sort {$/;"	s	file:
cmd_test	baresip/test/cmd.c	/^static int cmd_test(struct re_printf *pf, void *arg)$/;"	f	file:
cmd_ua_debug	baresip/modules/debug_cmd/debug_cmd.c	/^static int cmd_ua_debug(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_ua_next	baresip/modules/menu/menu.c	/^static int cmd_ua_next(struct re_printf *pf, void *unused)$/;"	f	file:
cmd_unregister	baresip/src/cmd.c	/^void cmd_unregister(struct commands *commands, const struct cmd *cmdv)$/;"	f
cmd_unverify_sas	baresip/modules/gzrtp/session.cpp	/^int Session::cmd_unverify_sas(struct re_printf *pf, void *arg)$/;"	f	class:Session
cmd_verify_sas	baresip/modules/gzrtp/session.cpp	/^int Session::cmd_verify_sas(struct re_printf *pf, void *arg)$/;"	f	class:Session
cmdc	baresip/src/cmd.c	/^	size_t cmdc;$/;"	m	struct:cmds	file:
cmdl	baresip/src/cmd.c	/^	struct list cmdl;        \/**< List of command blocks (struct cmds) *\/$/;"	m	struct:commands	typeref:struct:commands::list	file:
cmds	baresip/src/cmd.c	/^struct cmds {$/;"	s	file:
cmds_find	baresip/src/cmd.c	/^struct cmds *cmds_find(const struct commands *commands,$/;"	f
cmdv	baresip/modules/auloop/auloop.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/b2bua/b2bua.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/contact/contact.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/gtk/gtk_mod.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/gzrtp/gzrtp.cpp	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/menu/menu.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/natbd/natbd.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/presence/presence.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/snapshot/snapshot.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/vidloop/vidloop.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/modules/zrtp/zrtp.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmdv	baresip/src/cmd.c	/^	const struct cmd *cmdv;$/;"	m	struct:cmds	typeref:struct:cmds::cmd	file:
cmdv	baresip/test/cmd.c	/^static const struct cmd cmdv[] = {$/;"	v	typeref:struct:cmd	file:
cmp_ack_handler	re-0.5.6/src/sip/strans.c	/^static bool cmp_ack_handler(struct le *le, void *arg)$/;"	f	file:
cmp_cancel_handler	re-0.5.6/src/sip/strans.c	/^static bool cmp_cancel_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	baresip/test/sip/location.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/sip/auth.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/sip/ctrans.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/sip/strans.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/sipsess/ack.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/sipsess/listen.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/sipsess/reply.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_handler	re-0.5.6/src/tls/openssl/tls_udp.c	/^static bool cmp_handler(struct le *le, void *arg)$/;"	f	file:
cmp_merge_handler	re-0.5.6/src/sip/strans.c	/^static bool cmp_merge_handler(struct le *le, void *arg)$/;"	f	file:
cmph	re-0.5.6/include/re_sdp.h	/^	sdp_fmtp_cmp_h *cmph;$/;"	m	struct:sdp_format
cname	baresip/src/core.h	/^	char *cname;             \/**< RTCP Canonical end-point identifier   *\/$/;"	m	struct:stream
cname	re-0.5.6/include/re_dns.h	/^			char *cname;$/;"	m	struct:dnsrr::__anon154::__anon157
cname	re-0.5.6/include/re_dns.h	/^		} cname;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon157
cname	re-0.5.6/src/rtp/sess.c	/^	char *cname;                \/**< Canonical Name                      *\/$/;"	m	struct:rtcp_sess	file:
cnonce	re-0.5.6/include/re_httpauth.h	/^	struct pl cnonce;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
code	re-0.5.6/include/re_bfcp.h	/^	enum bfcp_err code;$/;"	m	struct:bfcp_errcode	typeref:enum:bfcp_errcode::bfcp_err
code	re-0.5.6/include/re_stun.h	/^	uint16_t code;$/;"	m	struct:stun_errcode
code2ascii	baresip/modules/evdev/evdev.c	/^static int code2ascii(uint16_t modifier, uint16_t code)$/;"	f	file:
codec	baresip/modules/avcodec/decode.c	/^	AVCodec *codec;$/;"	m	struct:viddec_state	file:
codec	baresip/modules/avcodec/encode.c	/^	AVCodec *codec;$/;"	m	struct:videnc_state	file:
codec	baresip/modules/avformat/avformat.c	/^	AVCodec *codec;$/;"	m	struct:vidsrc_st	file:
codec2	baresip/modules/codec2/codec2.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(codec2) = {$/;"	v	typeref:struct:DECL_EXPORTS
codec2	baresip/modules/codec2/codec2.c	/^static struct aucodec codec2 = {$/;"	v	typeref:struct:aucodec	file:
codec_id	baresip/modules/avcodec/encode.c	/^	enum AVCodecID codec_id;$/;"	m	struct:videnc_state	typeref:enum:videnc_state::AVCodecID	file:
codec_read	baresip/modules/auloop/auloop.c	/^static int codec_read(struct audio_loop *al, int16_t *sampv, size_t sampc)$/;"	f	file:
coef	rem-0.5.2/include/rem_goertzel.h	/^	double coef; \/**< coefficient *\/$/;"	m	struct:goertzel
coeffs	rem-0.5.2/util/genfir.py	/^coeffs = scipy.signal.firwin(TAPS, cutoff)$/;"	v
commands	baresip/src/baresip.c	/^	struct commands *commands;$/;"	m	struct:baresip	typeref:struct:baresip::commands	file:
commands	baresip/src/cmd.c	/^struct commands {$/;"	s	file:
commands_destructor	baresip/src/cmd.c	/^static void commands_destructor(void *data)$/;"	f	file:
comp	baresip/modules/dtls_srtp/dtls_srtp.h	/^struct comp {$/;"	s
comp	baresip/modules/ice/ice.c	/^	struct comp {$/;"	s	struct:mnat_media	file:
comp	baresip/modules/natpmp/natpmp.c	/^	struct comp {$/;"	s	struct:mnat_media	file:
comp	baresip/modules/pcp/pcp.c	/^	struct comp {$/;"	s	struct:mnat_media	file:
comp	re-0.5.6/src/ice/ice.h	/^	struct icem_comp *comp;      \/**< Pointer to media-stream component  *\/$/;"	m	struct:ice_candpair	typeref:struct:ice_candpair::icem_comp
comp	re-0.5.6/src/srtp/srtp.h	/^	struct comp {$/;"	s	struct:srtp
comp_alloc	baresip/modules/natpmp/natpmp.c	/^static int comp_alloc(struct comp *comp, void *sock)$/;"	f	file:
comp_escape	re-0.5.6/src/uri/uric.c	/^static int comp_escape(struct re_printf *pf, const struct pl *pl, esc_h *eh)$/;"	f	file:
comp_init	re-0.5.6/src/srtp/srtp.c	/^static int comp_init(struct comp *c, unsigned offs,$/;"	f	file:
comp_unescape	re-0.5.6/src/uri/uric.c	/^static int comp_unescape(struct re_printf *pf, const struct pl *pl, esc_h *eh)$/;"	f	file:
compc	baresip/modules/natpmp/natpmp.c	/^	unsigned compc;$/;"	m	struct:mnat_media	file:
compc	baresip/modules/pcp/pcp.c	/^	unsigned compc;$/;"	m	struct:mnat_media	file:
compid	re-0.5.6/include/re_ice.h	/^	unsigned compid;          \/**< Component ID (1-256)                 *\/$/;"	m	struct:ice_cand_attr
compid	re-0.5.6/src/ice/ice.h	/^	unsigned compid;             \/**< Component ID (1-256)               *\/$/;"	m	struct:ice_cand
compl	re-0.5.6/src/ice/ice.h	/^	struct list compl;           \/**< ICE media components               *\/$/;"	m	struct:icem	typeref:struct:icem::list
complete	baresip/include/baresip.h	/^	bool complete;    \/**< True if complete       *\/$/;"	m	struct:cmd_arg
complete	baresip/modules/ice/ice.c	/^	bool complete;$/;"	m	struct:mnat_media	file:
complete	baresip/modules/natpmp/natpmp.c	/^static void complete(struct mnat_sess *sess, int err)$/;"	f	file:
complete	baresip/modules/pcp/pcp.c	/^static void complete(struct mnat_sess *sess, int err, const char *reason)$/;"	f	file:
completed	baresip/modules/natpmp/libnatpmp.c	/^static void completed(struct natpmp_req *np, int err,$/;"	f	file:
completed	re-0.5.6/src/stun/ctrans.c	/^static void completed(struct stun_ctrans *ct, int err, uint16_t scode,$/;"	f	file:
complexity	baresip/modules/speex/speex.c	/^	int complexity;$/;"	m	struct:__anon83	file:
compn	rem-0.5.2/include/rem_vid.h	/^	uint8_t compn;$/;"	m	struct:vidfmt_desc
component_start	baresip/modules/dtls_srtp/dtls_srtp.c	/^static int component_start(struct comp *comp, struct sdp_media *sdpm)$/;"	f	file:
compute_foundation	re-0.5.6/src/ice/cand.c	/^static int compute_foundation(struct ice_cand *cand)$/;"	f	file:
compv	baresip/modules/dtls_srtp/dtls_srtp.c	/^	struct comp compv[2];$/;"	m	struct:dtls_srtp	typeref:struct:dtls_srtp::comp	file:
compv	baresip/modules/ice/ice.c	/^	} compv[2];$/;"	m	struct:mnat_media	typeref:struct:mnat_media::comp	file:
compv	baresip/modules/natpmp/natpmp.c	/^	} compv[2];$/;"	m	struct:mnat_media	typeref:struct:mnat_media::comp	file:
compv	baresip/modules/pcp/pcp.c	/^	} compv[2];$/;"	m	struct:mnat_media	typeref:struct:mnat_media::comp	file:
compv	rem-0.5.2/include/rem_vid.h	/^	struct vidfmt_compdesc compv[4];$/;"	m	struct:vidfmt_desc	typeref:struct:vidfmt_desc::vidfmt_compdesc
concluded	re-0.5.6/src/ice/ice.h	/^	bool concluded;              \/**< Concluded flag                    *\/$/;"	m	struct:icem_comp
concluding_ice	re-0.5.6/src/ice/chklist.c	/^static void concluding_ice(struct icem_comp *comp)$/;"	f	file:
cond	baresip/modules/gst_video1/encode.c	/^			pthread_cond_t cond;$/;"	m	struct:videnc_state::__anon91::__anon92	file:
cond	baresip/modules/gst_video1/encode.c	/^			pthread_cond_t cond;$/;"	m	struct:videnc_state::__anon91::__anon93	file:
cond	rem-0.5.2/src/aumix/aumix.c	/^	pthread_cond_t cond;$/;"	m	struct:aumix	file:
conf	re-0.5.6/src/conf/conf.c	/^struct conf {$/;"	s	file:
conf	re-0.5.6/src/dns/client.c	/^	struct dnsc_conf conf;$/;"	m	struct:dnsc	typeref:struct:dnsc::dnsc_conf	file:
conf	re-0.5.6/src/ice/ice.h	/^	struct ice_conf conf;        \/**< ICE Configuration                  *\/$/;"	m	struct:icem	typeref:struct:icem::ice_conf
conf	re-0.5.6/src/stun/stun.h	/^	struct stun_conf conf;$/;"	m	struct:stun	typeref:struct:stun::stun_conf
conf_alloc	re-0.5.6/src/conf/conf.c	/^int conf_alloc(struct conf **confp, const char *filename)$/;"	f
conf_alloc_buf	re-0.5.6/src/conf/conf.c	/^int conf_alloc_buf(struct conf **confp, const uint8_t *buf, size_t sz)$/;"	f
conf_apply	re-0.5.6/src/conf/conf.c	/^int conf_apply(const struct conf *conf, const char *name,$/;"	f
conf_close	baresip/src/conf.c	/^void conf_close(void)$/;"	f
conf_config	baresip/src/config.c	/^struct config *conf_config(void)$/;"	f
conf_configure	baresip/src/conf.c	/^int conf_configure(void)$/;"	f
conf_cur	baresip/src/conf.c	/^struct conf *conf_cur(void)$/;"	f
conf_default	re-0.5.6/src/ice/icem.c	/^static const struct ice_conf conf_default = {$/;"	v	typeref:struct:ice_conf	file:
conf_default	re-0.5.6/src/stun/stun.c	/^static const struct stun_conf conf_default = {$/;"	v	typeref:struct:stun_conf	file:
conf_destructor	re-0.5.6/src/conf/conf.c	/^static void conf_destructor(void *data)$/;"	f	file:
conf_fileexist	baresip/src/conf.c	/^bool conf_fileexist(const char *path)$/;"	f
conf_get	re-0.5.6/src/conf/conf.c	/^int conf_get(const struct conf *conf, const char *name, struct pl *pl)$/;"	f
conf_get_aufmt	baresip/src/config.c	/^static int conf_get_aufmt(const struct conf *conf, const char *name,$/;"	f	file:
conf_get_bool	re-0.5.6/src/conf/conf.c	/^int conf_get_bool(const struct conf *conf, const char *name, bool *val)$/;"	f
conf_get_csv	baresip/src/conf.c	/^int conf_get_csv(const struct conf *conf, const char *name,$/;"	f
conf_get_range	baresip/src/conf.c	/^int conf_get_range(const struct conf *conf, const char *name,$/;"	f
conf_get_sa	baresip/src/conf.c	/^int conf_get_sa(const struct conf *conf, const char *name, struct sa *sa)$/;"	f
conf_get_str	re-0.5.6/src/conf/conf.c	/^int conf_get_str(const struct conf *conf, const char *name, char *str,$/;"	f
conf_get_u32	re-0.5.6/src/conf/conf.c	/^int conf_get_u32(const struct conf *conf, const char *name, uint32_t *num)$/;"	f
conf_get_vidsz	baresip/src/conf.c	/^int conf_get_vidsz(const struct conf *conf, const char *name, struct vidsz *sz)$/;"	f
conf_h	re-0.5.6/include/re_conf.h	/^typedef int (conf_h)(const struct pl *val, void *arg);$/;"	t
conf_modules	baresip/src/conf.c	/^int conf_modules(void)$/;"	f
conf_obj	baresip/src/conf.c	/^static struct conf *conf_obj;$/;"	v	typeref:struct:conf	file:
conf_parse	baresip/src/conf.c	/^int conf_parse(const char *filename, confline_h *ch, void *arg)$/;"	f
conf_path	baresip/src/conf.c	/^static const char *conf_path = NULL;$/;"	v	file:
conf_path_get	baresip/src/conf.c	/^int conf_path_get(char *path, size_t sz)$/;"	f
conf_path_set	baresip/src/conf.c	/^void conf_path_set(const char *path)$/;"	f
confid	re-0.5.6/include/re_bfcp.h	/^	uint32_t confid;$/;"	m	struct:bfcp_msg
confid	re-0.5.6/src/bfcp/bfcp.h	/^	uint32_t confid;$/;"	m	struct:bfcp_strans
confid	re-0.5.6/src/bfcp/request.c	/^	uint32_t confid;$/;"	m	struct:bfcp_ctrans	file:
config	baresip/include/baresip.h	/^struct config {$/;"	s
config_audio	baresip/include/baresip.h	/^struct config_audio {$/;"	s
config_avt	baresip/include/baresip.h	/^struct config_avt {$/;"	s
config_avt	baresip/src/call.c	/^	struct config_avt config_avt;    \/**< AVT config                    *\/$/;"	m	struct:call	typeref:struct:call::config_avt	file:
config_bfcp	baresip/include/baresip.h	/^struct config_bfcp {$/;"	s
config_call	baresip/include/baresip.h	/^struct config_call {$/;"	s
config_call	baresip/src/call.c	/^	struct config_call config_call;  \/**< Call config                   *\/$/;"	m	struct:call	typeref:struct:call::config_call	file:
config_net	baresip/include/baresip.h	/^struct config_net {$/;"	s
config_parse	baresip/modules/speex/speex.c	/^static void config_parse(struct conf *conf)$/;"	f	file:
config_parse	baresip/modules/speex_pp/speex_pp.c	/^static void config_parse(struct conf *conf)$/;"	f	file:
config_parse_conf	baresip/src/config.c	/^int config_parse_conf(struct config *cfg, const struct conf *conf)$/;"	f
config_pin	baresip/modules/dshow/dshow.cpp	/^static int config_pin(struct vidsrc_st *st, IPin *pin)$/;"	f	file:
config_print	baresip/src/config.c	/^int config_print(struct re_printf *pf, const struct config *cfg)$/;"	f
config_sdp	baresip/include/baresip.h	/^struct config_sdp {$/;"	s
config_sip	baresip/include/baresip.h	/^struct config_sip {$/;"	s
config_video	baresip/include/baresip.h	/^struct config_video {$/;"	s
config_write_template	baresip/src/config.c	/^int config_write_template(const char *file, const struct config *cfg)$/;"	f
configv	baresip/modules/auloop/auloop.c	/^} configv[] = {$/;"	v	typeref:struct:__anon56	file:
confline_h	baresip/include/baresip.h	/^typedef int (confline_h)(const struct pl *addr, void *arg);$/;"	t
confline_handler	baresip/modules/contact/contact.c	/^static int confline_handler(const struct pl *addr, void *arg)$/;"	f	file:
conn	baresip/src/bfcp.c	/^	struct bfcp_conn *conn;$/;"	m	struct:bfcp	typeref:struct:bfcp::bfcp_conn	file:
conn	re-0.5.6/src/dns/client.c	/^	struct tcp_conn *conn;$/;"	m	struct:tcpconn	typeref:struct:tcpconn::tcp_conn	file:
conn	re-0.5.6/src/http/client.c	/^	struct conn *conn;$/;"	m	struct:http_req	typeref:struct:http_req::conn	file:
conn	re-0.5.6/src/http/client.c	/^struct conn {$/;"	s	file:
conn	re-0.5.6/src/udp/udp.c	/^	bool conn;           \/**< Connected socket flag       *\/$/;"	m	struct:udp_sock	file:
conn_alloc	re-0.5.6/src/tcp/tcp.c	/^static struct tcp_conn *conn_alloc(tcp_estab_h *eh, tcp_recv_h *rh,$/;"	f	file:
conn_alloc	re-0.5.6/src/tls/openssl/tls_udp.c	/^static int conn_alloc(struct tls_conn **ptc, struct tls *tls,$/;"	f	file:
conn_close	re-0.5.6/src/http/server.c	/^static void conn_close(struct http_conn *conn)$/;"	f	file:
conn_close	re-0.5.6/src/sip/transp.c	/^static void conn_close(struct sip_conn *conn, int err)$/;"	f	file:
conn_close	re-0.5.6/src/tcp/tcp.c	/^static void conn_close(struct tcp_conn *tc, int err)$/;"	f	file:
conn_close	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void conn_close(struct tls_conn *tc, int err)$/;"	f	file:
conn_close	re-0.5.6/src/websock/websock.c	/^static void conn_close(struct websock_conn *conn, int err)$/;"	f	file:
conn_cmp	re-0.5.6/src/http/client.c	/^static bool conn_cmp(struct le *le, void *arg)$/;"	f	file:
conn_connect	re-0.5.6/src/http/client.c	/^static int conn_connect(struct http_req *req)$/;"	f	file:
conn_decode	re-0.5.6/src/sdp/msg.c	/^static int conn_decode(struct sa *sa, const struct pl *pl)$/;"	f	file:
conn_destructor	re-0.5.6/src/http/client.c	/^static void conn_destructor(void *arg)$/;"	f	file:
conn_destructor	re-0.5.6/src/http/server.c	/^static void conn_destructor(void *arg)$/;"	f	file:
conn_destructor	re-0.5.6/src/sip/transp.c	/^static void conn_destructor(void *arg)$/;"	f	file:
conn_destructor	re-0.5.6/src/tcp/tcp.c	/^static void conn_destructor(void *data)$/;"	f	file:
conn_destructor	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void conn_destructor(void *arg)$/;"	f	file:
conn_destructor	re-0.5.6/src/websock/websock.c	/^static void conn_destructor(void *arg)$/;"	f	file:
conn_find	re-0.5.6/src/sip/transp.c	/^static struct sip_conn *conn_find(struct sip *sip, const struct sa *paddr,$/;"	f	file:
conn_idle	re-0.5.6/src/http/client.c	/^static void conn_idle(struct conn *conn)$/;"	f	file:
conn_keepalive_handler	re-0.5.6/src/sip/transp.c	/^static void conn_keepalive_handler(void *arg)$/;"	f	file:
conn_lookup	re-0.5.6/src/tls/openssl/tls_udp.c	/^static struct tls_conn *conn_lookup(struct dtls_sock *sock,$/;"	f	file:
conn_recv	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void conn_recv(struct tls_conn *tc, struct mbuf *mb)$/;"	f	file:
conn_send	re-0.5.6/src/sip/transp.c	/^static int conn_send(struct sip_connqent **qentp, struct sip *sip, bool secure,$/;"	f	file:
conn_timeout	re-0.5.6/include/re_dns.h	/^	uint32_t conn_timeout;  \/* in [ms] *\/$/;"	m	struct:dnsc_conf
conn_tmr_handler	re-0.5.6/src/sip/transp.c	/^static void conn_tmr_handler(void *arg)$/;"	f	file:
conncheck_handler	baresip/modules/ice/ice.c	/^static void conncheck_handler(int err, bool update, void *arg)$/;"	f	file:
connect_callback	baresip/modules/mqtt/mqtt.c	/^static void connect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f	file:
connect_handler	re-0.5.6/src/http/server.c	/^static void connect_handler(const struct sa *peer, void *arg)$/;"	f	file:
connected	re-0.5.6/src/dns/client.c	/^	bool connected;$/;"	m	struct:tcpconn	file:
connected	re-0.5.6/src/tcp/tcp.c	/^	bool connected;       \/**< Connection is connected flag      *\/$/;"	m	struct:tcp_conn	file:
connh	re-0.5.6/src/http/client.c	/^	http_conn_h *connh;$/;"	m	struct:http_req	file:
connh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_conn_h *connh;$/;"	m	struct:sipsess_sock
connh	re-0.5.6/src/tcp/tcp.c	/^	tcp_conn_h *connh;    \/**< TCP Connect handler               *\/$/;"	m	struct:tcp_sock	file:
connh	re-0.5.6/src/tls/openssl/tls_udp.c	/^	dtls_conn_h *connh;$/;"	m	struct:dtls_sock	file:
connl	re-0.5.6/src/http/server.c	/^	struct list connl;$/;"	m	struct:http_sock	typeref:struct:http_sock::list	file:
cons	baresip/modules/cons/cons.c	/^const struct mod_export DECL_EXPORTS(cons) = {$/;"	v	typeref:struct:DECL_EXPORTS
cons	baresip/modules/cons/cons.c	/^static struct ui_st *cons = NULL;  \/* allow only one instance *\/$/;"	v	typeref:struct:ui_st	file:
cons_alloc	baresip/modules/cons/cons.c	/^static int cons_alloc(struct ui_st **stp, const struct sa *laddr)$/;"	f	file:
cons_close	baresip/modules/cons/cons.c	/^static int cons_close(void)$/;"	f	file:
cons_destructor	baresip/modules/cons/cons.c	/^static void cons_destructor(void *arg)$/;"	f	file:
cons_init	baresip/modules/cons/cons.c	/^static int cons_init(void)$/;"	f	file:
construct_valid_pair	re-0.5.6/src/ice/connchk.c	/^static struct ice_candpair *construct_valid_pair(struct icem *icem,$/;"	f	file:
contact	baresip/modules/contact/contact.c	/^const struct mod_export DECL_EXPORTS(contact) = {$/;"	v	typeref:struct:DECL_EXPORTS
contact	baresip/modules/presence/subscriber.c	/^	struct contact *contact;$/;"	m	struct:presence	typeref:struct:presence::contact	file:
contact	baresip/src/contact.c	/^struct contact {$/;"	s	file:
contact_add	baresip/src/contact.c	/^int contact_add(struct contacts *contacts,$/;"	f
contact_addr	baresip/src/contact.c	/^struct sip_addr *contact_addr(const struct contact *c)$/;"	f
contact_block_access	baresip/src/contact.c	/^bool contact_block_access(const struct contacts *contacts, const char *uri)$/;"	f
contact_close	baresip/src/contact.c	/^void contact_close(struct contacts *contacts)$/;"	f
contact_find	baresip/src/contact.c	/^struct contact *contact_find(const struct contacts *contacts, const char *uri)$/;"	f
contact_handler	baresip/modules/presence/subscriber.c	/^static void contact_handler(struct contact *contact,$/;"	f	file:
contact_handler	baresip/src/reg.c	/^static bool contact_handler(const struct sip_hdr *hdr,$/;"	f	file:
contact_handler	re-0.5.6/src/sipreg/reg.c	/^static bool contact_handler(const struct sip_hdr *hdr,$/;"	f	file:
contact_init	baresip/src/contact.c	/^int contact_init(struct contacts *contacts)$/;"	f
contact_list	baresip/src/contact.c	/^struct list *contact_list(const struct contacts *contacts)$/;"	f
contact_presence	baresip/src/contact.c	/^enum presence_status contact_presence(const struct contact *c)$/;"	f
contact_presence_str	baresip/src/contact.c	/^const char *contact_presence_str(enum presence_status status)$/;"	f
contact_remove	baresip/src/contact.c	/^void contact_remove(struct contacts *contacts, struct contact *contact)$/;"	f
contact_set_presence	baresip/src/contact.c	/^void contact_set_presence(struct contact *c, enum presence_status status)$/;"	f
contact_set_update_handler	baresip/src/contact.c	/^void contact_set_update_handler(struct contacts *contacts,$/;"	f
contact_str	baresip/src/contact.c	/^const char *contact_str(const struct contact *c)$/;"	f
contact_update_h	baresip/include/baresip.h	/^typedef void (contact_update_h)(struct contact *c, bool removed, void *arg);$/;"	t
contacts	baresip/include/baresip.h	/^struct contacts {$/;"	s
contacts	baresip/src/baresip.c	/^	struct contacts contacts;$/;"	m	struct:baresip	typeref:struct:baresip::contacts	file:
contacts_inited	baresip/modules/gtk/gtk_mod.c	/^	bool contacts_inited;$/;"	m	struct:gtk_mod	file:
contacts_menu	baresip/modules/gtk/gtk_mod.c	/^	GtkWidget *contacts_menu;$/;"	m	struct:gtk_mod	file:
contacts_print	baresip/src/contact.c	/^int contacts_print(struct re_printf *pf, const struct contacts *contacts)$/;"	f
container_add	re-0.5.6/src/json/decode_odict.c	/^static int container_add(const char *name, unsigned idx,$/;"	f	file:
content	rem-0.5.2/src/vidmix/vidmix.c	/^	bool content;$/;"	m	struct:vidmix_source	file:
content_hide	rem-0.5.2/src/vidmix/vidmix.c	/^	bool content_hide;$/;"	m	struct:vidmix_source	file:
content_thread	rem-0.5.2/src/vidmix/vidmix.c	/^static void *content_thread(void *arg)$/;"	f	file:
controlled	re-0.5.6/include/re_stun.h	/^		uint64_t controlled;$/;"	m	union:stun_attr::__anon174
controlling	re-0.5.6/include/re_stun.h	/^		uint64_t controlling;$/;"	m	union:stun_attr::__anon174
conv_table	rem-0.5.2/src/vidconv/vconv.c	/^static line_h *conv_table[MAX_SRC][MAX_DST] = {$/;"	v	file:
cookie	re-0.5.6/src/stun/stun.h	/^	uint32_t cookie;             \/**< Magic cookie   *\/$/;"	m	struct:stun_hdr
core_config	baresip/src/config.c	/^static struct config core_config = {$/;"	v	typeref:struct:config	file:
core_config_template	baresip/src/config.c	/^static int core_config_template(struct re_printf *pf, const struct config *cfg)$/;"	f	file:
coreaudio	baresip/modules/coreaudio/coreaudio.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(coreaudio) = {$/;"	v	typeref:struct:DECL_EXPORTS
coreaudio_player_alloc	baresip/modules/coreaudio/player.c	/^int coreaudio_player_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
coreaudio_recorder_alloc	baresip/modules/coreaudio/recorder.c	/^int coreaudio_recorder_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
corecmdv	baresip/src/baresip.c	/^static const struct cmd corecmdv[] = {$/;"	v	typeref:struct:cmd	file:
count	re-0.5.6/include/re_rtp.h	/^		unsigned int count:5;    \/**< Varies by packet type  *\/$/;"	m	struct:rtcp_msg::rtcp_hdr
count	re-0.5.6/include/re_sha.h	/^	uint32_t count[2];   \/**< Counter       *\/$/;"	m	struct:__anon168
count	re-0.5.6/src/md5/md5.h	/^	md5_word_t count[2];	\/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
count_handler	re-0.5.6/src/http/msg.c	/^static bool count_handler(const struct http_hdr *hdr, void *arg)$/;"	f	file:
count_handler	re-0.5.6/src/sip/msg.c	/^static bool count_handler(const struct sip_hdr *hdr, const struct sip_msg *msg,$/;"	f	file:
count_modules	baresip/src/config.c	/^static uint32_t count_modules(const char *path)$/;"	f	file:
cp_sel	re-0.5.6/src/ice/ice.h	/^	struct ice_candpair *cp_sel; \/**< Selected candidate-pair           *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::ice_candpair
cpm	baresip/modules/avcodec/h26x.h	/^	unsigned cpm:1;              \/**< Continuous Presence Multipoint  *\/$/;"	m	struct:h263_strm
cpos	re-0.5.6/src/sip/dialog.c	/^	size_t cpos;$/;"	m	struct:sip_dialog	file:
cr	baresip/modules/cairo/cairo.c	/^	cairo_t *cr;$/;"	m	struct:vidsrc_st	file:
cr	baresip/modules/vidinfo/vidinfo.h	/^	cairo_t *cr;$/;"	m	struct:panel
cr_logo	baresip/modules/cairo/cairo.c	/^	cairo_t *cr_logo;$/;"	m	struct:vidsrc_st	file:
crate	baresip/include/baresip.h	/^	uint32_t crate;             \/* RTP Clock rate   *\/$/;"	m	struct:aucodec
crc32	re-0.5.6/src/crc32/crc32.c	/^uint32_t crc32(uint32_t crc, const void *buf, uint32_t size)$/;"	f
crc32_tab	re-0.5.6/src/crc32/crc32.c	/^static const uint32_t crc32_tab[] = {$/;"	v	file:
createAudioRecorder	baresip/modules/opensles/recorder.c	/^static int createAudioRecorder(struct ausrc_st *st, struct ausrc_prm *prm)$/;"	f	file:
createOutput	baresip/modules/opensles/player.c	/^static int createOutput(struct auplay_st *st)$/;"	f	file:
createPlayer	baresip/modules/opensles/player.c	/^static int createPlayer(struct auplay_st *st, struct auplay_prm *prm)$/;"	f	file:
create_services	baresip/modules/avahi/avahi.c	/^static void create_services(AvahiClient *client)$/;"	f	file:
create_stream	baresip/modules/gzrtp/session.cpp	/^Stream *Session::create_stream(const ZRTPConfig& config,$/;"	f	class:Session
create_ua	baresip/modules/menu/menu.c	/^static int create_ua(struct re_printf *pf, void *arg)$/;"	f	file:
create_window	baresip/modules/x11/x11.c	/^static int create_window(struct vidisp_st *st, const struct vidsz *sz)$/;"	f	file:
createperm_request	re-0.5.6/src/turn/perm.c	/^static int createperm_request(struct perm *perm, bool reset_ls)$/;"	f	file:
createperm_resp_handler	re-0.5.6/src/turn/perm.c	/^static void createperm_resp_handler(int err, uint16_t scode,$/;"	f	file:
crlfcrlf	re-0.5.6/src/sip/transp.c	/^static uint8_t crlfcrlf[4] = {0x0d, 0x0a, 0x0d, 0x0a};$/;"	v	file:
crypto	baresip/modules/libsrtp/sdes.h	/^struct crypto {$/;"	s
crypto	baresip/modules/srtp/sdes.h	/^struct crypto {$/;"	s
crypto_suite	baresip/modules/libsrtp/srtp.c	/^	char *crypto_suite;$/;"	m	struct:menc_st	file:
crypto_suite	baresip/modules/srtp/srtp.c	/^	char *crypto_suite;$/;"	m	struct:menc_st	file:
cryptor	re-0.5.6/src/aes/apple/aes.c	/^	CCCryptorRef cryptor;$/;"	m	struct:aes	file:
cryptosuite_issupported	baresip/modules/libsrtp/srtp.c	/^static bool cryptosuite_issupported(const struct pl *suite)$/;"	f	file:
cryptosuite_issupported	baresip/modules/srtp/srtp.c	/^static bool cryptosuite_issupported(const struct pl *suite)$/;"	f	file:
cs	baresip/modules/bv32/bv32.c	/^	struct BV32_Encoder_State cs;$/;"	m	struct:auenc_state	typeref:struct:auenc_state::BV32_Encoder_State	file:
cseq	baresip/test/sip/location.c	/^	uint32_t cseq;$/;"	m	struct:loctmp	file:
cseq	baresip/test/sip/sipsrv.h	/^	uint32_t cseq;$/;"	m	struct:location
cseq	re-0.5.6/include/re_sip.h	/^	struct sip_cseq cseq;  \/**< Parsed CSeq header                   *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::sip_cseq
cseq	re-0.5.6/src/sipsess/ack.c	/^	uint32_t cseq;$/;"	m	struct:sipsess_ack	file:
csl_parse	baresip/src/account.c	/^static int csl_parse(struct pl *pl, char *str, size_t sz)$/;"	f	file:
csrc	re-0.5.6/include/re_rtp.h	/^	uint32_t csrc[16];  \/**< Contributing sources   *\/$/;"	m	struct:rtp_header
ct	re-0.5.6/src/sip/keepalive_udp.c	/^	struct stun_ctrans *ct;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::stun_ctrans	file:
ct	re-0.5.6/src/sip/request.c	/^	struct sip_ctrans *ct;$/;"	m	struct:sip_request	typeref:struct:sip_request::sip_ctrans	file:
ct	re-0.5.6/src/stun/keepalive.c	/^	struct stun_ctrans *ct;   \/**< STUN client transaction              *\/$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::stun_ctrans	file:
ct	re-0.5.6/src/turn/chan.c	/^	struct stun_ctrans *ct;$/;"	m	struct:chan	typeref:struct:chan::stun_ctrans	file:
ct	re-0.5.6/src/turn/perm.c	/^	struct stun_ctrans *ct;$/;"	m	struct:perm	typeref:struct:perm::stun_ctrans	file:
ct	re-0.5.6/src/turn/turnc.h	/^	struct stun_ctrans *ct;        \/**< Pending STUN Client Transaction *\/$/;"	m	struct:turnc	typeref:struct:turnc::stun_ctrans
ct_conn	re-0.5.6/src/ice/ice.h	/^	struct stun_ctrans *ct_conn; \/**< STUN Transaction for conncheck     *\/$/;"	m	struct:ice_candpair	typeref:struct:ice_candpair::stun_ctrans
ct_gath	baresip/modules/ice/ice.c	/^		struct stun_ctrans *ct_gath;$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::stun_ctrans	file:
ctl	re-0.5.6/src/stun/stun.h	/^	struct list ctl;$/;"	m	struct:stun	typeref:struct:stun::list
ctp	re-0.5.6/src/stun/ctrans.c	/^	struct stun_ctrans **ctp;$/;"	m	struct:stun_ctrans	typeref:struct:stun_ctrans::stun_ctrans	file:
ctransl	re-0.5.6/src/bfcp/bfcp.h	/^	struct list ctransl;$/;"	m	struct:bfcp_conn	typeref:struct:bfcp_conn::list
ctx	baresip/modules/av1/decode.c	/^	aom_codec_ctx_t ctx;$/;"	m	struct:viddec_state	file:
ctx	baresip/modules/av1/encode.c	/^	aom_codec_ctx_t ctx;$/;"	m	struct:videnc_state	file:
ctx	baresip/modules/avcodec/decode.c	/^	AVCodecContext *ctx;$/;"	m	struct:viddec_state	file:
ctx	baresip/modules/avcodec/encode.c	/^	AVCodecContext *ctx;$/;"	m	struct:videnc_state	file:
ctx	baresip/modules/avformat/avformat.c	/^	AVCodecContext *ctx;$/;"	m	struct:vidsrc_st	file:
ctx	baresip/modules/h265/decode.c	/^	AVCodecContext *ctx;$/;"	m	struct:viddec_state	file:
ctx	baresip/modules/vp8/decode.c	/^	vpx_codec_ctx_t ctx;$/;"	m	struct:viddec_state	file:
ctx	baresip/modules/vp8/encode.c	/^	vpx_codec_ctx_t ctx;$/;"	m	struct:videnc_state	file:
ctx	baresip/modules/vp9/decode.c	/^	vpx_codec_ctx_t ctx;$/;"	m	struct:viddec_state	file:
ctx	baresip/modules/vp9/encode.c	/^	vpx_codec_ctx_t ctx;$/;"	m	struct:videnc_state	file:
ctx	re-0.5.6/src/aes/openssl/aes.c	/^	EVP_CIPHER_CTX *ctx;$/;"	m	struct:aes	file:
ctx	re-0.5.6/src/hmac/apple/hmac.c	/^	CCHmacContext ctx;$/;"	m	struct:hmac	file:
ctx	re-0.5.6/src/hmac/openssl/hmac.c	/^	HMAC_CTX *ctx;$/;"	m	struct:hmac	file:
ctx	re-0.5.6/src/natbd/lifetime.c	/^	struct stun_ctrans *ctx;                \/**< STUN Transaction 1     *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::stun_ctrans	file:
ctx	re-0.5.6/src/tls/openssl/tls.h	/^	SSL_CTX *ctx;$/;"	m	struct:tls
ctx_alloc	baresip/src/cmd.c	/^static int ctx_alloc(struct cmd_ctx **ctxp, const struct cmd *cmd)$/;"	f	file:
ctx_destructor	baresip/src/cmd.c	/^static void ctx_destructor(void *arg)$/;"	f	file:
ctxup	baresip/modules/av1/decode.c	/^	bool ctxup;$/;"	m	struct:viddec_state	file:
ctxup	baresip/modules/av1/encode.c	/^	bool ctxup;$/;"	m	struct:videnc_state	file:
ctxup	baresip/modules/vp8/decode.c	/^	bool ctxup;$/;"	m	struct:viddec_state	file:
ctxup	baresip/modules/vp8/encode.c	/^	bool ctxup;$/;"	m	struct:videnc_state	file:
ctxup	baresip/modules/vp9/decode.c	/^	bool ctxup;$/;"	m	struct:viddec_state	file:
ctxup	baresip/modules/vp9/encode.c	/^	bool ctxup;$/;"	m	struct:videnc_state	file:
cty	re-0.5.6/src/natbd/lifetime.c	/^	struct stun_ctrans *cty;                \/**< STUN Transaction 2     *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::stun_ctrans	file:
ctyp	re-0.5.6/include/re_http.h	/^	struct msg_ctype ctyp; \/**< Content-type                           *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::msg_ctype
ctyp	re-0.5.6/include/re_sip.h	/^	struct msg_ctype ctyp; \/**< Content Type                         *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::msg_ctype
ctype	re-0.5.6/src/sipevent/sipevent.h	/^	char *ctype;$/;"	m	struct:sipnot
ctype	re-0.5.6/src/sipsess/sipsess.h	/^	char *ctype;$/;"	m	struct:sipsess
ctype	re-0.5.6/src/sipsess/sipsess.h	/^	char *ctype;$/;"	m	struct:sipsess_request
cum_lost	re-0.5.6/src/rtp/rtcp.h	/^	int cum_lost;             \/**< Cumulative number of packets lost   *\/$/;"	m	struct:rtp_member
cur	re-0.5.6/include/re_natbd.h	/^	uint32_t cur;  \/**< Current lifetime interval in [seconds] *\/$/;"	m	struct:nat_lifetime_interval
cur_bitrate	baresip/src/core.h	/^	uint32_t cur_bitrate;$/;"	m	struct:metric
cur_key	baresip/modules/gtk/call_window.c	/^	int cur_key;$/;"	m	struct:call_window	file:
cur_key	baresip/src/audio.c	/^	int cur_key;                  \/**< Currently transmitted event     *\/$/;"	m	struct:autx	file:
cur_sz	rem-0.5.2/src/aubuf/aubuf.c	/^	size_t cur_sz;$/;"	m	struct:aubuf	file:
curmap	re-0.5.6/src/stun/keepalive.c	/^	struct sa curmap;         \/**< Currently mapped IP address and port *\/$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::sa	file:
current_attempts	baresip/modules/menu/menu.c	/^	uint32_t current_attempts;    \/**< Current number of re-dials     *\/$/;"	m	struct:__anon72	file:
current_buffer	baresip/modules/omx/omx.h	/^	int current_buffer;$/;"	m	struct:omx_state
cuser	baresip/src/ua.c	/^	char *cuser;                 \/**< SIP Contact username               *\/$/;"	m	struct:ua	file:
cuser	re-0.5.6/src/sipevent/sipevent.h	/^	char *cuser;$/;"	m	struct:sipnot
cuser	re-0.5.6/src/sipevent/sipevent.h	/^	char *cuser;$/;"	m	struct:sipsub
cuser	re-0.5.6/src/sipreg/reg.c	/^	char *cuser;$/;"	m	struct:sipreg	file:
cuser	re-0.5.6/src/sipsess/sipsess.h	/^	char *cuser;$/;"	m	struct:sipsess
cutoff	rem-0.5.2/util/genfir.py	/^cutoff = CUTOFF \/ SRATE$/;"	v
cycles	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t cycles;          \/**< Shifted count of seq. number cycles *\/$/;"	m	struct:rtp_source
daala	baresip/modules/daala/daala.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(daala) = {$/;"	v	typeref:struct:DECL_EXPORTS
daala	baresip/modules/daala/daala.c	/^static struct vidcodec daala = {$/;"	v	typeref:struct:vidcodec	file:
daala_decode	baresip/modules/daala/decode.c	/^int daala_decode(struct viddec_state *vds, struct vidframe *frame,$/;"	f
daala_decode_update	baresip/modules/daala/decode.c	/^int daala_decode_update(struct viddec_state **vdsp, const struct vidcodec *vc,$/;"	f
daala_encode	baresip/modules/daala/encode.c	/^int daala_encode(struct videnc_state *ves, bool update,$/;"	f
daala_encode_update	baresip/modules/daala/encode.c	/^int daala_encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f
data	baresip/include/baresip.h	/^	void *data;       \/**< Application data       *\/$/;"	m	struct:cmd_arg
data	baresip/src/core.h	/^	uint8_t data[RTPEXT_LEN_MAX];$/;"	m	struct:rtpext
data	re-0.5.6/include/re_list.h	/^	void *data;         \/**< User-data                           *\/$/;"	m	struct:le
data	re-0.5.6/include/re_rtp.h	/^			uint8_t *data;     \/**< Application data (32 bits) *\/$/;"	m	struct:rtcp_msg::__anon181::__anon185
data	re-0.5.6/include/re_rtp.h	/^	char *data;               \/**< Text, not null-terminated          *\/$/;"	m	struct:rtcp_sdes_item
data	re-0.5.6/include/re_sdp.h	/^	void *data;$/;"	m	struct:sdp_format
data	re-0.5.6/include/re_stun.h	/^		struct mbuf data;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::mbuf
data	re-0.5.6/src/mqueue/mqueue.c	/^	void *data;$/;"	m	struct:msg	file:
data	rem-0.5.2/include/rem_vid.h	/^	uint8_t *data[4];      \/**< Video planes        *\/$/;"	m	struct:vidframe
data_len	re-0.5.6/include/re_rtp.h	/^			size_t data_len;   \/**< Number of data bytes       *\/$/;"	m	struct:rtcp_msg::__anon181::__anon185
datah	re-0.5.6/src/http/client.c	/^	http_data_h *datah;$/;"	m	struct:http_req	file:
datasize	rem-0.5.2/src/aufile/aufile.c	/^	size_t datasize;$/;"	m	struct:aufile	file:
dayv	re-0.5.6/src/fmt/time.c	/^static const char *dayv[] = {"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"};$/;"	v	file:
dbg	re-0.5.6/src/dbg/dbg.c	/^} dbg = {$/;"	v	typeref:struct:__anon141	file:
dbg_close	re-0.5.6/src/dbg/dbg.c	/^void dbg_close(void)$/;"	f
dbg_flags	re-0.5.6/include/re_dbg.h	/^enum dbg_flags {$/;"	g
dbg_fmt_vprintf	re-0.5.6/src/dbg/dbg.c	/^static void dbg_fmt_vprintf(int level, const char *fmt, va_list ap)$/;"	f	file:
dbg_handler_set	re-0.5.6/src/dbg/dbg.c	/^void dbg_handler_set(dbg_print_h *ph, void *arg)$/;"	f
dbg_info	re-0.5.6/src/dbg/dbg.c	/^void dbg_info(const char *fmt, ...)$/;"	f
dbg_init	re-0.5.6/src/dbg/dbg.c	/^void dbg_init(int level, enum dbg_flags flags)$/;"	f
dbg_level_str	re-0.5.6/src/dbg/dbg.c	/^const char *dbg_level_str(int level)$/;"	f
dbg_lock	re-0.5.6/src/dbg/dbg.c	/^static inline void dbg_lock(void)$/;"	f	file:
dbg_lock	re-0.5.6/src/dbg/dbg.c	62;"	d	file:
dbg_logfile_set	re-0.5.6/src/dbg/dbg.c	/^int dbg_logfile_set(const char *name)$/;"	f
dbg_noprintf	re-0.5.6/src/dbg/dbg.c	/^void dbg_noprintf(const char *fmt, ...)$/;"	f
dbg_notice	re-0.5.6/src/dbg/dbg.c	/^void dbg_notice(const char *fmt, ...)$/;"	f
dbg_print_h	re-0.5.6/include/re_dbg.h	/^typedef void (dbg_print_h)(int level, const char *p, size_t len, void *arg);$/;"	t
dbg_printf	re-0.5.6/src/dbg/dbg.c	/^void dbg_printf(int level, const char *fmt, ...)$/;"	f
dbg_unlock	re-0.5.6/src/dbg/dbg.c	/^static inline void dbg_unlock(void)$/;"	f	file:
dbg_unlock	re-0.5.6/src/dbg/dbg.c	63;"	d	file:
dbg_vprintf	re-0.5.6/src/dbg/dbg.c	/^static void dbg_vprintf(int level, const char *fmt, va_list ap)$/;"	f	file:
dbg_warning	re-0.5.6/src/dbg/dbg.c	/^void dbg_warning(const char *fmt, ...)$/;"	f
dbl	re-0.5.6/include/re_json.h	/^		double dbl;$/;"	m	union:json_value::__anon192
dbl	re-0.5.6/include/re_odict.h	/^		double dbl;            \/* ODICT_DOUBLE *\/$/;"	m	union:odict_entry::__anon172
dbq	baresip/modules/avcodec/h26x.h	/^	unsigned dbq:2;    \/**< 2 bits - DBQUANT                            *\/$/;"	m	struct:h263_hdr
dc	baresip/modules/daala/decode.c	/^	daala_comment dc;$/;"	m	struct:viddec_state	file:
debug	baresip/modules/ice/ice.c	/^	bool debug;$/;"	m	struct:__anon45	file:
debug	baresip/src/log.c	/^	bool debug;$/;"	m	struct:__anon22	file:
debug	baresip/src/log.c	/^void debug(const char *fmt, ...)$/;"	f
debug	re-0.5.6/include/re_ice.h	/^	bool debug;               \/**< Enable ICE debugging        *\/$/;"	m	struct:ice_conf
debug_cmd	baresip/modules/debug_cmd/debug_cmd.c	/^const struct mod_export DECL_EXPORTS(debug_cmd) = {$/;"	v	typeref:struct:DECL_EXPORTS
debug_handler	re-0.5.6/src/mem/mem.c	/^static bool debug_handler(struct le *le, void *arg)$/;"	f	file:
debug_handler	re-0.5.6/src/rtp/sess.c	/^static bool debug_handler(struct le *le, void *arg)$/;"	f	file:
debug_handler	re-0.5.6/src/sip/ctrans.c	/^static bool debug_handler(struct le *le, void *arg)$/;"	f	file:
debug_handler	re-0.5.6/src/sip/strans.c	/^static bool debug_handler(struct le *le, void *arg)$/;"	f	file:
debug_handler	re-0.5.6/src/sip/transp.c	/^static bool debug_handler(struct le *le, void *arg)$/;"	f	file:
debug_handler	re-0.5.6/src/stun/ctrans.c	/^static bool debug_handler(struct le *le, void *arg)$/;"	f	file:
debugcmdv	baresip/modules/debug_cmd/debug_cmd.c	/^static const struct cmd debugcmdv[] = {$/;"	v	typeref:struct:cmd	file:
dec	baresip/modules/amr/amr.c	/^	void *dec;                  \/**< Decoder state            *\/$/;"	m	struct:audec_state	file:
dec	baresip/modules/auloop/auloop.c	/^	struct audec_state *dec;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::audec_state	file:
dec	baresip/modules/daala/decode.c	/^	daala_dec_ctx *dec;$/;"	m	struct:viddec_state	file:
dec	baresip/modules/g722/g722.c	/^	g722_decode_state_t dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/g7221/decode.c	/^	g722_1_decode_state_t dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/gsm/gsm.c	/^	gsm dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/gtk/call_window.c	/^		GtkProgressBar *enc, *dec;$/;"	m	struct:call_window::__anon78	file:
dec	baresip/modules/gtk/call_window.c	/^		struct vumeter_dec *dec;$/;"	m	struct:call_window::__anon76	typeref:struct:call_window::__anon76::vumeter_dec	file:
dec	baresip/modules/ilbc/ilbc.c	/^	iLBC_Dec_Inst_t dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/mpa/decode.c	/^	mpg123_handle *dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/opus/decode.c	/^	OpusDecoder *dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/silk/silk.c	/^	void *dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/sndfile/sndfile.c	/^	SNDFILE *dec;$/;"	m	struct:sndfile_dec	file:
dec	baresip/modules/speex/speex.c	/^	void *dec;$/;"	m	struct:audec_state	file:
dec	baresip/modules/vidloop/vidloop.c	/^	struct viddec_state *dec;$/;"	m	struct:video_loop	typeref:struct:video_loop::viddec_state	file:
dec	baresip/src/audio.c	/^	struct audec_state *dec;      \/**< Audio decoder state (optional)  *\/$/;"	m	struct:aurx	typeref:struct:aurx::audec_state	file:
dec	baresip/src/video.c	/^	struct viddec_state *dec;          \/**< Video decoder state       *\/$/;"	m	struct:vrx	typeref:struct:vrx::viddec_state	file:
decControl	baresip/modules/silk/silk.c	/^	SKP_SILK_SDK_DecControlStruct decControl;$/;"	m	struct:audec_state	file:
dec_bytes	baresip/modules/ilbc/ilbc.c	/^	size_t dec_bytes;$/;"	m	struct:audec_state	file:
dec_destructor	baresip/modules/sndfile/sndfile.c	/^static void dec_destructor(void *arg)$/;"	f	file:
dec_destructor	baresip/modules/speex_aec/speex_aec.c	/^static void dec_destructor(void *arg)$/;"	f	file:
dec_destructor	baresip/modules/vumeter/vumeter.c	/^static void dec_destructor(void *arg)$/;"	f	file:
dec_st	baresip/modules/speex_aec/speex_aec.c	/^struct dec_st {$/;"	s	file:
dec_tmr_handler	baresip/modules/vumeter/vumeter.c	/^static void dec_tmr_handler(void *arg)$/;"	f	file:
dech	baresip/include/baresip.h	/^	audec_decode_h *dech;$/;"	m	struct:aucodec
dech	baresip/include/baresip.h	/^	aufilt_decode_h *dech;$/;"	m	struct:aufilt
dech	baresip/include/baresip.h	/^	viddec_decode_h *dech;$/;"	m	struct:vidcodec
dech	baresip/include/baresip.h	/^	vidfilt_decode_h *dech;$/;"	m	struct:vidfilt
dech	rem-0.5.2/src/dtmf/dec.c	/^	dtmf_dec_h *dech;$/;"	m	struct:dtmf_dec	file:
decode	baresip/modules/bv32/bv32.c	/^static int decode(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/codec2/codec2.c	/^static int decode(struct audec_state *ads, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/g722/g722.c	/^static int decode(struct audec_state *st, int16_t *sampv, size_t *sampc,$/;"	f	file:
decode	baresip/modules/g726/g726.c	/^static int decode(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/gsm/gsm.c	/^static int decode(struct audec_state *st, int16_t *sampv, size_t *sampc,$/;"	f	file:
decode	baresip/modules/ilbc/ilbc.c	/^static int decode(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/isac/isac.c	/^static int decode(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/l16/l16.c	/^static int decode(struct audec_state *st, int16_t *sampv, size_t *sampc,$/;"	f	file:
decode	baresip/modules/plc/plc.c	/^static int decode(struct aufilt_dec_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
decode	baresip/modules/rst/audio.c	/^static inline int decode(struct ausrc_st *st)$/;"	f	file:
decode	baresip/modules/silk/silk.c	/^static int decode(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/snapshot/snapshot.c	/^static int decode(struct vidfilt_dec_st *st, struct vidframe *frame)$/;"	f	file:
decode	baresip/modules/sndfile/sndfile.c	/^static int decode(struct aufilt_dec_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
decode	baresip/modules/speex/speex.c	/^static int decode(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode	baresip/modules/speex_aec/speex_aec.c	/^static int decode(struct aufilt_dec_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
decode	baresip/modules/vidinfo/vidinfo.c	/^static int decode(struct vidfilt_dec_st *_st, struct vidframe *frame)$/;"	f	file:
decode	baresip/modules/vumeter/vumeter.c	/^static int decode(struct aufilt_dec_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
decode_chunk_size	re-0.5.6/src/http/chunk.c	/^static int decode_chunk_size(struct http_chunk *chunk, struct mbuf *mb)$/;"	f	file:
decode_destructor	baresip/modules/amr/amr.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/bv32/bv32.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/codec2/codec2.c	/^static void decode_destructor(void *data)$/;"	f	file:
decode_destructor	baresip/modules/g726/g726.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/gsm/gsm.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/ilbc/ilbc.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/isac/isac.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/selfview/selfview.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/silk/silk.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/speex/speex.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/modules/vidinfo/vidinfo.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_destructor	baresip/test/mock/mock_vidcodec.c	/^static void decode_destructor(void *arg)$/;"	f	file:
decode_digit	rem-0.5.2/src/dtmf/dec.c	/^static char decode_digit(struct dtmf_dec *dec)$/;"	f	file:
decode_dns_query	baresip/test/mock/dnssrv.c	/^static void decode_dns_query(struct dns_server *srv,$/;"	f	file:
decode_h263	baresip/modules/avcodec/decode.c	/^int decode_h263(struct viddec_state *st, struct vidframe *frame,$/;"	f
decode_h264	baresip/modules/avcodec/decode.c	/^int decode_h264(struct viddec_state *st, struct vidframe *frame,$/;"	f
decode_hostport	re-0.5.6/src/sip/via.c	/^static int decode_hostport(const struct pl *hostport, struct pl *host,$/;"	f	file:
decode_hostport	re-0.5.6/src/uri/uri.c	/^static int decode_hostport(const struct pl *hostport, struct pl *host,$/;"	f	file:
decode_mpeg4	baresip/modules/avcodec/decode.c	/^int decode_mpeg4(struct viddec_state *st, struct vidframe *frame,$/;"	f
decode_name	re-0.5.6/src/json/decode.c	/^static int decode_name(char **str, const struct pl *pl)$/;"	f	file:
decode_nb	baresip/modules/amr/amr.c	/^static int decode_nb(struct audec_state *st, int16_t *sampv,$/;"	f	file:
decode_param	baresip/modules/speex/speex.c	/^static int decode_param(struct auenc_state *st, const struct pl *name,$/;"	f	file:
decode_part	baresip/src/sdp.c	/^static void decode_part(const struct pl *part, struct mbuf *mb)$/;"	f	file:
decode_pip	baresip/modules/selfview/selfview.c	/^static int decode_pip(struct vidfilt_dec_st *st, struct vidframe *frame)$/;"	f	file:
decode_sdpparam_h263	baresip/modules/avcodec/encode.c	/^static int decode_sdpparam_h263(struct videnc_state *st, const struct pl *name,$/;"	f	file:
decode_sdpparam_h264	baresip/modules/avcodec/encode.c	/^int decode_sdpparam_h264(struct videnc_state *st, const struct pl *name,$/;"	f
decode_sdpparam_h264	baresip/modules/gst_video/encode.c	/^static int decode_sdpparam_h264(struct videnc_state *st, const struct pl *name,$/;"	f	file:
decode_trailer	re-0.5.6/src/http/chunk.c	/^static int decode_trailer(struct http_chunk *chunk, struct mbuf *mb)$/;"	f	file:
decode_update	baresip/modules/amr/amr.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/avcodec/decode.c	/^int decode_update(struct viddec_state **vdsp, const struct vidcodec *vc,$/;"	f
decode_update	baresip/modules/bv32/bv32.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/codec2/codec2.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/g722/g722.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/g726/g726.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/gsm/gsm.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/ilbc/ilbc.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/isac/isac.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/selfview/selfview.c	/^static int decode_update(struct vidfilt_dec_st **stp, void **ctx,$/;"	f	file:
decode_update	baresip/modules/silk/silk.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/sndfile/sndfile.c	/^static int decode_update(struct aufilt_dec_st **stp, void **ctx,$/;"	f	file:
decode_update	baresip/modules/speex/speex.c	/^static int decode_update(struct audec_state **adsp,$/;"	f	file:
decode_update	baresip/modules/speex_aec/speex_aec.c	/^static int decode_update(struct aufilt_dec_st **stp, void **ctx,$/;"	f	file:
decode_update	baresip/modules/vidinfo/vidinfo.c	/^static int decode_update(struct vidfilt_dec_st **stp, void **ctx,$/;"	f	file:
decode_update	baresip/modules/vumeter/vumeter.c	/^static int decode_update(struct aufilt_dec_st **stp, void **ctx,$/;"	f	file:
decode_value	re-0.5.6/src/json/decode.c	/^static int decode_value(struct json_value *val, const struct pl *pl)$/;"	f	file:
decode_wb	baresip/modules/amr/amr.c	/^static int decode_wb(struct audec_state *st, int16_t *sampv, size_t *sampc,$/;"	f	file:
decoder_config	baresip/modules/speex/speex.c	/^static void decoder_config(void *st)$/;"	f	file:
decoder_fmtp_decode	baresip/modules/ilbc/ilbc.c	/^static void decoder_fmtp_decode(struct audec_state *st, const char *fmtp)$/;"	f	file:
decupdh	baresip/include/baresip.h	/^	audec_update_h *decupdh;$/;"	m	struct:aucodec
decupdh	baresip/include/baresip.h	/^	aufilt_decupd_h *decupdh;$/;"	m	struct:aufilt
decupdh	baresip/include/baresip.h	/^	viddec_update_h *decupdh;$/;"	m	struct:vidcodec
decupdh	baresip/include/baresip.h	/^	vidfilt_decupd_h *decupdh;$/;"	m	struct:vidfilt
def	re-0.5.6/src/ice/ice.h	/^	bool def;                    \/**< Default flag                       *\/$/;"	m	struct:ice_candpair
def_lcand	re-0.5.6/src/ice/ice.h	/^	struct ice_cand *def_lcand;  \/**< Default local candidate           *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::ice_cand
def_rcand	re-0.5.6/src/ice/ice.h	/^	struct ice_cand *def_rcand;  \/**< Default remote candidate          *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::ice_cand
default_audio_device	baresip/src/config.c	/^static const char *default_audio_device(void)$/;"	f	file:
default_conf	re-0.5.6/src/dns/client.c	/^static const struct dnsc_conf default_conf = {$/;"	v	typeref:struct:dnsc_conf	file:
default_config	baresip/test/net.c	/^static struct config_net default_config;$/;"	v	typeref:struct:config_net	file:
default_interface_print	baresip/src/config.c	/^static int default_interface_print(struct re_printf *pf, void *unused)$/;"	f	file:
default_play_path	baresip/src/play.c	/^static const char default_play_path[FS_PATH_MAX] = PREFIX "\/share\/baresip";$/;"	v	file:
default_video_device	baresip/src/config.c	/^static const char *default_video_device(void)$/;"	f	file:
default_video_display	baresip/src/config.c	/^static const char *default_video_display(void)$/;"	f	file:
denoise_enabled	baresip/modules/speex_pp/speex_pp.c	/^	int denoise_enabled;$/;"	m	struct:__anon75	file:
denotify_incoming_call	baresip/modules/gtk/gtk_mod.c	/^static void denotify_incoming_call(struct gtk_mod *mod, struct call *call)$/;"	f	file:
dequeue	re-0.5.6/src/tcp/tcp.c	/^static int dequeue(struct tcp_conn *tc)$/;"	f	file:
deref_handler	baresip/modules/mwi/mwi.c	/^static void deref_handler(void *arg)$/;"	f	file:
deref_handler	baresip/modules/presence/subscriber.c	/^static void deref_handler(void *arg)$/;"	f	file:
dereverb_enabled	baresip/modules/speex_pp/speex_pp.c	/^	int dereverb_enabled;$/;"	m	struct:__anon75	file:
desc	baresip/include/baresip.h	/^	const char *desc; \/**< Description string     *\/$/;"	m	struct:cmd
desc	re-0.5.6/src/sipsess/sipsess.h	/^	struct mbuf *desc;$/;"	m	struct:sipsess	typeref:struct:sipsess::mbuf
destruct_resources	baresip/modules/gst_video1/encode.c	/^static void destruct_resources(void *data)$/;"	f	file:
destructor	baresip/modules/aubridge/device.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/audiounit/sess.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/aufile/aufile.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/av1/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/av1/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/avahi/avahi.c	/^static void destructor(void* arg)$/;"	f	file:
destructor	baresip/modules/avcodec/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/avcodec/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/avformat/avformat.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/b2bua/b2bua.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/cairo/cairo.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/daala/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/daala/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/directfb/directfb.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/dshow/dshow.cpp	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/dtls_srtp/dtls_srtp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/dtls_srtp/srtp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/echo/echo.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/gtk/dial_dialog.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/gtk/transfer_dialog.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/h265/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/h265/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/libsrtp/srtp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/mpa/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/mpa/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/mwi/mwi.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/natbd/natbd.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/natpmp/libnatpmp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/omx/module.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/opengles/opengles.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/opus/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/opus/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/pcp/listener.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/plc/plc.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/presence/notifier.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/presence/publisher.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/presence/subscriber.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/rst/audio.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/rst/rst.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/rst/video.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/sdl/sdl.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/sdl2/sdl.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/selfview/selfview.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/srtp/srtp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/v4l/v4l.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/v4l2/v4l2.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vidbridge/disp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vidbridge/src.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vidinfo/panel.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vp8/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vp8/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vp9/decode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/vp9/encode.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/wincons/wincons.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/x11/x11.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/modules/x11grab/x11grab.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/account.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/auplay.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/ausrc.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/bfcp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/cmd.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/contact.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/message.c	/^static void destructor(void *data)$/;"	f	file:
destructor	baresip/src/mnat.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/play.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/reg.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/rtpkeep.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/sipreq.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/vidisp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/src/vidsrc.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/test/mock/dnssrv.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/test/sip/aor.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/test/sip/domain.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/test/sip/sipsrv.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	baresip/test/sip/user.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/aes/apple/aes.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/aes/openssl/aes.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/bfcp/attr.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/bfcp/conn.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/bfcp/msg.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/bfcp/request.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/dns/dname.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/hmac/apple/hmac.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/hmac/hmac.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/hmac/openssl/hmac.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/http/msg.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/ice/comp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/mqueue/mqueue.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/odict/entry.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/odict/odict.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/rtp/member.c	/^static void destructor(void *data)$/;"	f	file:
destructor	re-0.5.6/src/rtp/rtp.c	/^static void destructor(void *data)$/;"	f	file:
destructor	re-0.5.6/src/sdp/attr.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sdp/format.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sdp/media.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sdp/session.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/ctrans.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/dialog.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/keepalive.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/keepalive_udp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/msg.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/request.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/sip.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sip/strans.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipevent/listen.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipevent/notify.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipevent/subscribe.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipreg/reg.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipsess/ack.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipsess/listen.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipsess/reply.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipsess/request.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/sipsess/sess.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/srtp/srtp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/stun/attr.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/stun/ctrans.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/stun/msg.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/stun/stun.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/telev/telev.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/tls/openssl/tls.c	/^static void destructor(void *data)$/;"	f	file:
destructor	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/turn/perm.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	re-0.5.6/src/turn/turnc.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	rem-0.5.2/src/aufile/aufile.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	rem-0.5.2/src/aumix/aumix.c	/^static void destructor(void *arg)$/;"	f	file:
destructor	rem-0.5.2/src/vidmix/vidmix.c	/^static void destructor(void *arg)$/;"	f	file:
destructor_location	baresip/test/sip/location.c	/^static void destructor_location(void *arg)$/;"	f	file:
destructor_loctmp	baresip/test/sip/location.c	/^static void destructor_loctmp(void *arg)$/;"	f	file:
details	re-0.5.6/include/re_bfcp.h	/^	uint8_t *details;  \/* optional *\/$/;"	m	struct:bfcp_errcode
detect_module_path	baresip/src/config.c	/^static const char *detect_module_path(bool *valid)$/;"	f	file:
dev	baresip/modules/aubridge/aubridge.h	/^	struct device *dev;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::device
dev	baresip/modules/aubridge/aubridge.h	/^	struct device *dev;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::device
dev_filter	baresip/modules/dshow/dshow.cpp	/^	IBaseFilter *dev_filter;$/;"	m	struct:vidsrc_st	file:
dev_moniker	baresip/modules/dshow/dshow.cpp	/^	IMoniker *dev_moniker;$/;"	m	struct:vidsrc_st	file:
device	baresip/modules/alsa/alsa_play.c	/^	char *device;$/;"	m	struct:auplay_st	file:
device	baresip/modules/alsa/alsa_src.c	/^	char *device;$/;"	m	struct:ausrc_st	file:
device	baresip/modules/aubridge/device.c	/^struct device {$/;"	s	file:
device	baresip/modules/vidbridge/vidbridge.h	/^	char *device;$/;"	m	struct:vidisp_st
device	baresip/modules/vidbridge/vidbridge.h	/^	char *device;$/;"	m	struct:vidsrc_st
device	baresip/src/audio.c	/^	char device[64];              \/**< Audio player device name        *\/$/;"	m	struct:aurx	file:
device	baresip/src/audio.c	/^	char device[64];              \/**< Audio source device name        *\/$/;"	m	struct:autx	file:
device	baresip/src/video.c	/^	char device[128];                  \/**< Display device name       *\/$/;"	m	struct:vrx	file:
device	baresip/src/video.c	/^	char device[128];                  \/**< Source device name        *\/$/;"	m	struct:vtx	file:
device_connect	baresip/modules/aubridge/device.c	/^int device_connect(struct device **devp, const char *device,$/;"	f
device_stop	baresip/modules/aubridge/device.c	/^void device_stop(struct device *dev)$/;"	f
device_thread	baresip/modules/aubridge/device.c	/^static void *device_thread(void *arg)$/;"	f	file:
dfb	baresip/modules/directfb/directfb.c	/^static IDirectFB *dfb;$/;"	v	file:
dh	re-0.5.6/src/mem/mem.c	/^	mem_destroy_h *dh;  \/**< Destroy handler       *\/$/;"	m	struct:mem	file:
di	baresip/modules/daala/decode.c	/^	daala_info di;$/;"	m	struct:viddec_state	file:
dial_dialog	baresip/modules/gtk/dial_dialog.c	/^struct dial_dialog {$/;"	s	file:
dial_dialog	baresip/modules/gtk/gtk_mod.c	/^	struct dial_dialog *dial_dialog;$/;"	m	struct:gtk_mod	typeref:struct:gtk_mod::dial_dialog	file:
dial_dialog_alloc	baresip/modules/gtk/dial_dialog.c	/^struct dial_dialog *dial_dialog_alloc(struct gtk_mod *mod)$/;"	f
dial_dialog_on_response	baresip/modules/gtk/dial_dialog.c	/^static void dial_dialog_on_response(GtkDialog *dialog, gint response_id,$/;"	f	file:
dial_dialog_show	baresip/modules/gtk/dial_dialog.c	/^void dial_dialog_show(struct dial_dialog *dd)$/;"	f
dial_handler	baresip/modules/menu/menu.c	/^static int dial_handler(struct re_printf *pf, void *arg)$/;"	f	file:
dialbuf	baresip/modules/menu/menu.c	/^static struct mbuf *dialbuf;          \/**< Buffer for dialled number      *\/$/;"	v	typeref:struct:mbuf	file:
dialcmdv	baresip/modules/menu/menu.c	/^static const struct cmd dialcmdv[] = {$/;"	v	typeref:struct:cmd	file:
dialog	baresip/modules/gtk/dial_dialog.c	/^	GtkWidget *dialog;$/;"	m	struct:dial_dialog	file:
dialog	baresip/modules/gtk/transfer_dialog.c	/^	GtkWidget *dialog;$/;"	m	struct:transfer_dialog	file:
digest_decode	re-0.5.6/src/httpauth/digest.c	/^static int digest_decode(const struct pl *hval, digest_decode_h *dech,$/;"	f	file:
digest_decode_h	re-0.5.6/src/httpauth/digest.c	/^typedef void (digest_decode_h)(const struct pl *name, const struct pl *val,$/;"	t	file:
digit	re-0.5.6/src/http/http.h	/^	bool digit;$/;"	m	struct:http_chunk
digit	rem-0.5.2/src/dtmf/dec.c	/^	char digit, digit1;$/;"	m	struct:dtmf_dec	file:
digit1	rem-0.5.2/src/dtmf/dec.c	/^	char digit, digit1;$/;"	m	struct:dtmf_dec	file:
digit2hi	rem-0.5.2/src/autone/tone.c	/^static inline uint32_t digit2hi(int digit)$/;"	f	file:
digit2lo	rem-0.5.2/src/autone/tone.c	/^static inline uint32_t digit2lo(int digit)$/;"	f	file:
digit_handler	baresip/modules/menu/menu.c	/^static int digit_handler(struct re_printf *pf, void *arg)$/;"	f	file:
dim_frame	baresip/modules/vidinfo/panel.c	/^static void dim_frame(struct vidframe *frame, unsigned yoffs, unsigned height)$/;"	f	file:
dir	re-0.5.6/include/re_sdp.h	/^	enum sdp_dir dir;$/;"	m	struct:sdp_extmap	typeref:enum:sdp_extmap::sdp_dir
dir_set	re-0.5.6/include/re_sdp.h	/^	bool dir_set;$/;"	m	struct:sdp_extmap
directfb	baresip/modules/directfb/directfb.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(directfb) = {$/;"	v	typeref:struct:DECL_EXPORTS
disabled	re-0.5.6/src/sdp/sdp.h	/^	bool disabled;$/;"	m	struct:sdp_media
disp	baresip/modules/selfview/selfview.c	/^	struct vidisp_st *disp;     \/**< Selfview display      *\/$/;"	m	struct:selfview_enc	typeref:struct:selfview_enc::vidisp_st	file:
disp	baresip/modules/x11/x11.c	/^	Display *disp;$/;"	m	struct:vidisp_st	file:
disp	baresip/modules/x11grab/x11grab.c	/^	Display *disp;$/;"	m	struct:vidsrc_st	file:
disp_alloc	baresip/modules/fakevideo/fakevideo.c	/^static int disp_alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
disp_destructor	baresip/modules/fakevideo/fakevideo.c	/^static void disp_destructor(void *arg)$/;"	f	file:
disp_destructor	baresip/test/mock/mock_vidisp.c	/^static void disp_destructor(void *arg)$/;"	f	file:
disp_dev	baresip/include/baresip.h	/^	char disp_dev[128];     \/**< Video display device           *\/$/;"	m	struct:config_video
disp_mod	baresip/include/baresip.h	/^	char disp_mod[16];      \/**< Video display module           *\/$/;"	m	struct:config_video
dispatch	re-0.5.6/src/bfcp/request.c	/^static void dispatch(struct bfcp_conn *bc)$/;"	f	file:
disph	baresip/src/core.h	/^	vidisp_disp_h   *disph;$/;"	m	struct:vidisp
display	baresip/modules/directfb/directfb.c	/^static int display(struct vidisp_st *st, const char *title,$/;"	f	file:
display	baresip/modules/fakevideo/fakevideo.c	/^static int display(struct vidisp_st *st, const char *title,$/;"	f	file:
display	baresip/modules/sdl/sdl.c	/^static int display(struct vidisp_st *st, const char *title,$/;"	f	file:
display	baresip/modules/sdl2/sdl.c	/^static int display(struct vidisp_st *st, const char *title,$/;"	f	file:
display	baresip/modules/vidloop/vidloop.c	/^static int display(struct video_loop *vl, struct vidframe *frame)$/;"	f	file:
display	baresip/modules/x11/x11.c	/^static int display(struct vidisp_st *st, const char *title,$/;"	f	file:
dispname	baresip/src/core.h	/^	char *dispname;              \/**< Display name                       *\/$/;"	m	struct:account
dl_flag	re-0.5.6/src/mod/dl.c	/^static const int dl_flag = RTLD_NOW | RTLD_LOCAL;$/;"	v	file:
dlg	baresip/src/sipreq.c	/^	struct sip_dialog *dlg;$/;"	m	struct:sip_req	typeref:struct:sip_req::sip_dialog	file:
dlg	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_dialog *dlg;$/;"	m	struct:sipnot	typeref:struct:sipnot::sip_dialog
dlg	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_dialog *dlg;$/;"	m	struct:sipsub	typeref:struct:sipsub::sip_dialog
dlg	re-0.5.6/src/sipreg/reg.c	/^	struct sip_dialog *dlg;$/;"	m	struct:sipreg	typeref:struct:sipreg::sip_dialog	file:
dlg	re-0.5.6/src/sipsess/ack.c	/^	struct sip_dialog *dlg;$/;"	m	struct:sipsess_ack	typeref:struct:sipsess_ack::sip_dialog	file:
dlg	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_dialog *dlg;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip_dialog
dlsr	re-0.5.6/include/re_rtp.h	/^	uint32_t dlsr;            \/**< Delay since last SR packet      *\/$/;"	m	struct:rtcp_rr
dname	re-0.5.6/include/re_sip.h	/^	struct pl dname;$/;"	m	struct:sip_addr	typeref:struct:sip_addr::pl
dname	re-0.5.6/include/re_sip.h	/^	struct pl dname;$/;"	m	struct:sip_taddr	typeref:struct:sip_taddr::pl
dname	re-0.5.6/src/dns/dname.c	/^struct dname {$/;"	s	file:
dname_append	re-0.5.6/src/dns/dname.c	/^static void dname_append(struct hash *ht_dname, const char *name, size_t pos)$/;"	f	file:
dname_encode_pointer	re-0.5.6/src/dns/dname.c	/^static inline int dname_encode_pointer(struct mbuf *mb, size_t pos)$/;"	f	file:
dname_lookup	re-0.5.6/src/dns/dname.c	/^static inline struct dname *dname_lookup(struct hash *ht_dname,$/;"	f	file:
dns	baresip/modules/natbd/natbd.c	/^	struct stun_dns *dns;$/;"	m	struct:natbd	typeref:struct:natbd::stun_dns	file:
dns_cstr_decode	re-0.5.6/src/dns/cstr.c	/^int dns_cstr_decode(struct mbuf *mb, char **str)$/;"	f
dns_cstr_encode	re-0.5.6/src/dns/cstr.c	/^int dns_cstr_encode(struct mbuf *mb, const char *str)$/;"	f
dns_debug	baresip/src/net.c	/^static int dns_debug(struct re_printf *pf, const struct network *net)$/;"	f	file:
dns_dname_decode	re-0.5.6/src/dns/dname.c	/^int dns_dname_decode(struct mbuf *mb, char **name, size_t start)$/;"	f
dns_dname_encode	re-0.5.6/src/dns/dname.c	/^int dns_dname_encode(struct mbuf *mb, const char *name,$/;"	f
dns_handler	baresip/modules/ice/ice.c	/^static void dns_handler(int err, const struct sa *srv, void *arg)$/;"	f	file:
dns_handler	baresip/modules/natbd/natbd.c	/^static void dns_handler(int err, const struct sa *addr, void *arg)$/;"	f	file:
dns_handler	baresip/modules/rst/rst.c	/^static void dns_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
dns_handler	baresip/modules/stun/stun.c	/^static void dns_handler(int err, const struct sa *srv, void *arg)$/;"	f	file:
dns_handler	baresip/modules/turn/turn.c	/^static void dns_handler(int err, const struct sa *srv, void *arg)$/;"	f	file:
dns_hdr_decode	re-0.5.6/src/dns/hdr.c	/^int dns_hdr_decode(struct mbuf *mb, struct dnshdr *hdr)$/;"	f
dns_hdr_encode	re-0.5.6/src/dns/hdr.c	/^int dns_hdr_encode(struct mbuf *mb, const struct dnshdr *hdr)$/;"	f
dns_hdr_opcodename	re-0.5.6/src/dns/hdr.c	/^const char *dns_hdr_opcodename(uint8_t opcode)$/;"	f
dns_hdr_rcodename	re-0.5.6/src/dns/hdr.c	/^const char *dns_hdr_rcodename(uint8_t rcode)$/;"	f
dns_init	baresip/src/net.c	/^static int dns_init(struct network *net)$/;"	f	file:
dns_query	re-0.5.6/src/dns/client.c	/^struct dns_query {$/;"	s	file:
dns_query_h	re-0.5.6/include/re_dns.h	/^typedef void(dns_query_h)(int err, const struct dnshdr *hdr,$/;"	t
dns_refresh	baresip/src/net.c	/^static void dns_refresh(struct network *net)$/;"	f	file:
dns_rr_alloc	re-0.5.6/src/dns/rr.c	/^struct dnsrr *dns_rr_alloc(void)$/;"	f
dns_rr_classname	re-0.5.6/src/dns/rr.c	/^const char *dns_rr_classname(uint16_t dnsclass)$/;"	f
dns_rr_cmp	re-0.5.6/src/dns/rr.c	/^bool dns_rr_cmp(const struct dnsrr *rr1, const struct dnsrr *rr2, bool rdata)$/;"	f
dns_rr_decode	re-0.5.6/src/dns/rr.c	/^int dns_rr_decode(struct mbuf *mb, struct dnsrr **rr, size_t start)$/;"	f
dns_rr_encode	re-0.5.6/src/dns/rr.c	/^int dns_rr_encode(struct mbuf *mb, const struct dnsrr *rr, int64_t ttl_offs,$/;"	f
dns_rr_print	re-0.5.6/src/dns/rr.c	/^int dns_rr_print(struct re_printf *pf, const struct dnsrr *rr)$/;"	f
dns_rr_typename	re-0.5.6/src/dns/rr.c	/^const char *dns_rr_typename(uint16_t type)$/;"	f
dns_rrlist_apply	re-0.5.6/src/dns/rrlist.c	/^struct dnsrr *dns_rrlist_apply(struct list *rrl, const char *name,$/;"	f
dns_rrlist_apply2	re-0.5.6/src/dns/rrlist.c	/^struct dnsrr *dns_rrlist_apply2(struct list *rrl, const char *name,$/;"	f
dns_rrlist_find	re-0.5.6/src/dns/rrlist.c	/^struct dnsrr *dns_rrlist_find(struct list *rrl, const char *name,$/;"	f
dns_rrlist_h	re-0.5.6/include/re_dns.h	/^typedef bool(dns_rrlist_h)(struct dnsrr *rr, void *arg);$/;"	t
dns_rrlist_sort	re-0.5.6/src/dns/rrlist.c	/^void dns_rrlist_sort(struct list *rrl, uint16_t type, size_t key)$/;"	f
dns_rrlist_sort_addr	re-0.5.6/src/dns/rrlist.c	/^void dns_rrlist_sort_addr(struct list *rrl, size_t key)$/;"	f
dns_server	baresip/test/test.h	/^struct dns_server {$/;"	s
dns_server_add_a	baresip/test/mock/dnssrv.c	/^int dns_server_add_a(struct dns_server *srv, const char *name, uint32_t addr)$/;"	f
dns_server_add_srv	baresip/test/mock/dnssrv.c	/^int dns_server_add_srv(struct dns_server *srv, const char *name,$/;"	f
dns_server_alloc	baresip/test/mock/dnssrv.c	/^int dns_server_alloc(struct dns_server **srvp, bool rotate)$/;"	f
dns_server_handler	baresip/src/config.c	/^static int dns_server_handler(const struct pl *pl, void *arg)$/;"	f	file:
dns_server_match	baresip/test/mock/dnssrv.c	/^static void dns_server_match(struct dns_server *srv, struct list *rrl,$/;"	f	file:
dns_srv_get	re-0.5.6/src/dns/ns.c	/^int dns_srv_get(char *domain, size_t dsize, struct sa *srvv, uint32_t *n)$/;"	f
dnsc	baresip/src/net.c	/^	struct dnsc *dnsc;$/;"	m	struct:network	typeref:struct:network::dnsc	file:
dnsc	re-0.5.6/src/dns/client.c	/^	struct dnsc *dnsc;     \/* parent  *\/$/;"	m	struct:dns_query	typeref:struct:dns_query::dnsc	file:
dnsc	re-0.5.6/src/dns/client.c	/^	struct dnsc *dnsc; \/* parent *\/$/;"	m	struct:tcpconn	typeref:struct:tcpconn::dnsc	file:
dnsc	re-0.5.6/src/dns/client.c	/^struct dnsc {$/;"	s	file:
dnsc	re-0.5.6/src/http/client.c	/^	struct dnsc *dnsc;$/;"	m	struct:http_cli	typeref:struct:http_cli::dnsc	file:
dnsc	re-0.5.6/src/sip/sip.h	/^	struct dnsc *dnsc;$/;"	m	struct:sip	typeref:struct:sip::dnsc
dnsc	re-0.5.6/src/stun/dnsdisc.c	/^	struct dnsc *dnsc;     \/**< DNS Client              *\/$/;"	m	struct:stun_dns	typeref:struct:stun_dns::dnsc	file:
dnsc_alloc	re-0.5.6/src/dns/client.c	/^int dnsc_alloc(struct dnsc **dcpp, const struct dnsc_conf *conf,$/;"	f
dnsc_conf	re-0.5.6/include/re_dns.h	/^struct dnsc_conf {$/;"	s
dnsc_destructor	re-0.5.6/src/dns/client.c	/^static void dnsc_destructor(void *data)$/;"	f	file:
dnsc_notify	re-0.5.6/src/dns/client.c	/^int dnsc_notify(struct dns_query **qp, struct dnsc *dnsc, const char *name,$/;"	f
dnsc_query	re-0.5.6/src/dns/client.c	/^int dnsc_query(struct dns_query **qp, struct dnsc *dnsc, const char *name,$/;"	f
dnsc_query_srv	re-0.5.6/src/dns/client.c	/^int dnsc_query_srv(struct dns_query **qp, struct dnsc *dnsc, const char *name,$/;"	f
dnsc_srv_set	re-0.5.6/src/dns/client.c	/^int dnsc_srv_set(struct dnsc *dnsc, const struct sa *srvv, uint32_t srvc)$/;"	f
dnsclass	re-0.5.6/include/re_dns.h	/^	uint16_t dnsclass;$/;"	m	struct:dnsrr
dnsclass	re-0.5.6/src/dns/client.c	/^	uint16_t dnsclass;$/;"	m	struct:dns_query	file:
dnsclass	re-0.5.6/src/dns/client.c	/^	uint16_t dnsclass;$/;"	m	struct:dnsquery	file:
dnsdisc_destructor	re-0.5.6/src/stun/dnsdisc.c	/^static void dnsdisc_destructor(void *data)$/;"	f	file:
dnsh	re-0.5.6/src/stun/dnsdisc.c	/^	stun_dns_h *dnsh;      \/**< DNS Response handler    *\/$/;"	m	struct:stun_dns	file:
dnshdr	re-0.5.6/include/re_dns.h	/^struct dnshdr {$/;"	s
dnsq	baresip/modules/ice/ice.c	/^	struct stun_dns *dnsq;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::stun_dns	file:
dnsq	baresip/modules/rst/rst.c	/^	struct dns_query *dnsq;$/;"	m	struct:rst	typeref:struct:rst::dns_query	file:
dnsq	baresip/modules/stun/stun.c	/^	struct stun_dns *dnsq;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::stun_dns	file:
dnsq	baresip/modules/turn/turn.c	/^	struct stun_dns *dnsq;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::stun_dns	file:
dnsq	re-0.5.6/src/sip/request.c	/^	struct dns_query *dnsq;$/;"	m	struct:sip_request	typeref:struct:sip_request::dns_query	file:
dnsq2	re-0.5.6/src/sip/request.c	/^	struct dns_query *dnsq2;$/;"	m	struct:sip_request	typeref:struct:sip_request::dns_query	file:
dnsquery	re-0.5.6/src/dns/client.c	/^struct dnsquery {$/;"	s	file:
dnsrr	re-0.5.6/include/re_dns.h	/^struct dnsrr {$/;"	s
do_check	re-0.5.6/src/ice/connchk.c	/^static void do_check(struct ice_candpair *cp)$/;"	f	file:
do_dec	baresip/modules/ilbc/ilbc.c	/^static int do_dec(struct audec_state *st, int16_t *sampv, size_t *sampc,$/;"	f	file:
do_snapshot	baresip/modules/snapshot/snapshot.c	/^static int do_snapshot(struct re_printf *pf, void *arg)$/;"	f	file:
doc_camera	baresip/modules/avcodec/h26x.h	/^	unsigned doc_camera:1;       \/**< Document Camera Indicator       *\/$/;"	m	struct:h263_strm
domain	baresip/src/net.c	/^	char domain[64];     \/**< DNS domain from network           *\/$/;"	m	struct:network	file:
domain	baresip/test/sip/sipsrv.h	/^struct domain {$/;"	s
domain	re-0.5.6/src/stun/dnsdisc.c	/^	char domain[256];      \/**< Cached domain name      *\/$/;"	m	struct:stun_dns	file:
domain_add	baresip/test/sip/domain.c	/^int domain_add(struct sip_server *srv, const char *name)$/;"	f
domain_auth	baresip/test/sip/domain.c	/^int domain_auth(struct sip_server *srv,$/;"	f
domain_find	baresip/test/sip/domain.c	/^int domain_find(struct sip_server *srv, const struct uri *uri)$/;"	f
domain_lookup	baresip/test/sip/domain.c	/^struct domain *domain_lookup(struct sip_server *srv, const char *name)$/;"	f
downsample_mono2mono	rem-0.5.2/src/auresamp/resamp.c	/^static void downsample_mono2mono(int16_t *outv, const int16_t *inv,$/;"	f	file:
downsample_mono2stereo	rem-0.5.2/src/auresamp/resamp.c	/^static void downsample_mono2stereo(int16_t *outv, const int16_t *inv,$/;"	f	file:
downsample_stereo2mono	rem-0.5.2/src/auresamp/resamp.c	/^static void downsample_stereo2mono(int16_t *outv, const int16_t *inv,$/;"	f	file:
downsample_stereo2stereo	rem-0.5.2/src/auresamp/resamp.c	/^static void downsample_stereo2stereo(int16_t *outv, const int16_t *inv,$/;"	f	file:
dq	re-0.5.6/src/http/client.c	/^	struct dns_query *dq;$/;"	m	struct:http_req	typeref:struct:http_req::dns_query	file:
dq	re-0.5.6/src/stun/dnsdisc.c	/^	struct dns_query *dq;  \/**< Current DNS query       *\/$/;"	m	struct:stun_dns	typeref:struct:stun_dns::dns_query	file:
draw_background	baresip/modules/cairo/cairo.c	/^static void draw_background(cairo_t *cr, double color_step,$/;"	f	file:
draw_graph	baresip/modules/vidinfo/panel.c	/^static void draw_graph(struct panel *panel, struct vidframe *frame)$/;"	f	file:
draw_logo	baresip/modules/cairo/cairo.c	/^static void draw_logo(struct vidsrc_st *st)$/;"	f	file:
draw_text	baresip/modules/cairo/cairo.c	/^static void draw_text(struct vidsrc_st *st, int x, int y,$/;"	f	file:
draw_text	baresip/modules/vidinfo/panel.c	/^static int draw_text(struct panel *panel, struct vidframe *frame)$/;"	f	file:
drop_packets	baresip/modules/zrtp/zrtp.c	/^static bool drop_packets(const struct menc_media *st)$/;"	f	file:
ds	baresip/modules/bv32/bv32.c	/^	struct BV32_Decoder_State ds;$/;"	m	struct:audec_state	typeref:struct:audec_state::BV32_Decoder_State	file:
ds	baresip/modules/daala/decode.c	/^	daala_setup_info *ds;$/;"	m	struct:viddec_state	file:
ds	baresip/modules/dtls_srtp/dtls_srtp.h	/^	const struct dtls_srtp *ds; \/* parent *\/$/;"	m	struct:comp	typeref:struct:comp::dtls_srtp
dshow	baresip/modules/dshow/dshow.cpp	/^extern "C" const struct mod_export DECL_EXPORTS(dshow) = {$/;"	v	typeref:struct:DECL_EXPORTS
dsp_write	baresip/modules/winwave/play.c	/^static int dsp_write(struct auplay_st *st)$/;"	f	file:
dspbuf	baresip/modules/winwave/winwave.h	/^struct dspbuf {$/;"	s
dst	baresip/src/video.c	/^	struct sa dst;$/;"	m	struct:vidqent	typeref:struct:vidqent::sa	file:
dst	re-0.5.6/include/re_sip.h	/^	struct sa dst;         \/**< Destination network address          *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::sa
dst	re-0.5.6/src/bfcp/request.c	/^	struct sa dst;$/;"	m	struct:bfcp_ctrans	typeref:struct:bfcp_ctrans::sa	file:
dst	re-0.5.6/src/net/linux/rt.c	/^	struct sa dst;          \/**< Destination IP address\/network *\/$/;"	m	struct:net_rt	typeref:struct:net_rt::sa	file:
dst	re-0.5.6/src/sip/ctrans.c	/^	struct sa dst;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::sa	file:
dst	re-0.5.6/src/sip/strans.c	/^	struct sa dst;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::sa	file:
dst	re-0.5.6/src/sipsess/ack.c	/^	struct sa dst;$/;"	m	struct:sipsess_ack	typeref:struct:sipsess_ack::sa	file:
dst	re-0.5.6/src/stun/ctrans.c	/^	struct sa dst;$/;"	m	struct:stun_ctrans	typeref:struct:stun_ctrans::sa	file:
dst	re-0.5.6/src/stun/keepalive.c	/^	struct sa dst;$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::sa	file:
dst_size	baresip/modules/swscale/swscale.c	/^	struct vidsz dst_size;$/;"	m	struct:swscale_enc	typeref:struct:swscale_enc::vidsz	file:
dstlen	re-0.5.6/src/net/linux/rt.c	/^	int dstlen;             \/**< Prefix length of destination   *\/$/;"	m	struct:net_rt	file:
dtls_accept	re-0.5.6/src/tls/openssl/tls_udp.c	/^int dtls_accept(struct tls_conn **ptc, struct tls *tls,$/;"	f
dtls_close_h	re-0.5.6/include/re_tls.h	/^typedef void (dtls_close_h)(int err, void *arg);$/;"	t
dtls_close_handler	baresip/modules/dtls_srtp/dtls_srtp.c	/^static void dtls_close_handler(int err, void *arg)$/;"	f	file:
dtls_conn_h	re-0.5.6/include/re_tls.h	/^typedef void (dtls_conn_h)(const struct sa *peer, void *arg);$/;"	t
dtls_conn_handler	baresip/modules/dtls_srtp/dtls_srtp.c	/^static void dtls_conn_handler(const struct sa *peer, void *arg)$/;"	f	file:
dtls_connect	re-0.5.6/src/tls/openssl/tls_udp.c	/^int dtls_connect(struct tls_conn **ptc, struct tls *tls,$/;"	f
dtls_estab_h	re-0.5.6/include/re_tls.h	/^typedef void (dtls_estab_h)(void *arg);$/;"	t
dtls_estab_handler	baresip/modules/dtls_srtp/dtls_srtp.c	/^static void dtls_estab_handler(void *arg)$/;"	f	file:
dtls_listen	re-0.5.6/src/tls/openssl/tls_udp.c	/^int dtls_listen(struct dtls_sock **sockp, const struct sa *laddr,$/;"	f
dtls_peer	re-0.5.6/src/tls/openssl/tls_udp.c	/^const struct sa *dtls_peer(const struct tls_conn *tc)$/;"	f
dtls_print_sha1_fingerprint	baresip/modules/dtls_srtp/dtls.c	/^int dtls_print_sha1_fingerprint(struct re_printf *pf, const struct tls *tls)$/;"	f
dtls_print_sha256_fingerprint	baresip/modules/dtls_srtp/dtls.c	/^int dtls_print_sha256_fingerprint(struct re_printf *pf, const struct tls *tls)$/;"	f
dtls_recv_h	re-0.5.6/include/re_tls.h	/^typedef void (dtls_recv_h)(struct mbuf *mb, void *arg);$/;"	t
dtls_recv_packet	re-0.5.6/src/tls/openssl/tls_udp.c	/^void dtls_recv_packet(struct dtls_sock *sock, const struct sa *src,$/;"	f
dtls_send	re-0.5.6/src/tls/openssl/tls_udp.c	/^int dtls_send(struct tls_conn *tc, struct mbuf *mb)$/;"	f
dtls_set_handlers	re-0.5.6/src/tls/openssl/tls_udp.c	/^void dtls_set_handlers(struct tls_conn *tc, dtls_estab_h *estabh,$/;"	f
dtls_set_mtu	re-0.5.6/src/tls/openssl/tls_udp.c	/^void dtls_set_mtu(struct dtls_sock *sock, size_t mtu)$/;"	f
dtls_set_peer	re-0.5.6/src/tls/openssl/tls_udp.c	/^void dtls_set_peer(struct tls_conn *tc, const struct sa *peer)$/;"	f
dtls_sock	baresip/modules/dtls_srtp/dtls_srtp.h	/^	struct dtls_sock *dtls_sock;$/;"	m	struct:comp	typeref:struct:comp::dtls_sock
dtls_sock	re-0.5.6/src/tls/openssl/tls_udp.c	/^struct dtls_sock {$/;"	s	file:
dtls_srtp	baresip/modules/dtls_srtp/dtls_srtp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(dtls_srtp) = {$/;"	v	typeref:struct:DECL_EXPORTS
dtls_srtp	baresip/modules/dtls_srtp/dtls_srtp.c	/^static struct menc dtls_srtp = {$/;"	v	typeref:struct:menc	file:
dtls_srtp	baresip/modules/dtls_srtp/dtls_srtp.c	/^struct dtls_srtp {$/;"	s	file:
dtls_srtp2	baresip/modules/dtls_srtp/dtls_srtp.c	/^static struct menc dtls_srtp2 = {$/;"	v	typeref:struct:menc	file:
dtls_srtpf	baresip/modules/dtls_srtp/dtls_srtp.c	/^static struct menc dtls_srtpf = {$/;"	v	typeref:struct:menc	file:
dtls_udp_sock	re-0.5.6/src/tls/openssl/tls_udp.c	/^struct udp_sock *dtls_udp_sock(struct dtls_sock *sock)$/;"	f
dtmf_dec	rem-0.5.2/src/dtmf/dec.c	/^struct dtmf_dec {$/;"	s	file:
dtmf_dec_alloc	rem-0.5.2/src/dtmf/dec.c	/^int dtmf_dec_alloc(struct dtmf_dec **decp, unsigned srate, unsigned ch,$/;"	f
dtmf_dec_h	rem-0.5.2/include/rem_dtmf.h	/^typedef void (dtmf_dec_h)(char digit, void *arg);$/;"	t
dtmf_dec_probe	rem-0.5.2/src/dtmf/dec.c	/^void dtmf_dec_probe(struct dtmf_dec *dec, const int16_t *sampv, size_t sampc)$/;"	f
dtmf_dec_reset	rem-0.5.2/src/dtmf/dec.c	/^void dtmf_dec_reset(struct dtmf_dec *dec, unsigned srate, unsigned ch)$/;"	f
dtmf_digits	baresip/test/call.c	/^static const char dtmf_digits[] = "123";$/;"	v	file:
dtmf_handler	baresip/modules/dtmfio/dtmfio.c	/^static void dtmf_handler(struct call *call, char key, void *arg)$/;"	f	file:
dtmf_handler	baresip/test/call.c	/^static void dtmf_handler(struct call *call, char key, void *arg)$/;"	f	file:
dtmfend_handler	baresip/src/call.c	/^static void dtmfend_handler(void *arg)$/;"	f	file:
dtmfh	baresip/src/call.c	/^	call_dtmf_h *dtmfh;       \/**< DTMF handler                         *\/$/;"	m	struct:call	file:
dtmfio	baresip/modules/dtmfio/dtmfio.c	/^const struct mod_export DECL_EXPORTS(dtmfio) = {$/;"	v	typeref:struct:DECL_EXPORTS
dtx	baresip/modules/opus/opus.h	/^	opus_int32 dtx;$/;"	m	struct:opus_param
dummy_frame_handler	rem-0.5.2/src/aumix/aumix.c	/^static void dummy_frame_handler(const int16_t *sampv, size_t sampc, void *arg)$/;"	f	file:
dummy_handler	re-0.5.6/src/sip/auth.c	/^static int dummy_handler(char **user, char **pass, const char *rlm, void *arg)$/;"	f	file:
dummy_handler	re-0.5.6/src/sip/ctrans.c	/^static void dummy_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
dummy_handler	re-0.5.6/src/sip/strans.c	/^static void dummy_handler(void *arg)$/;"	f	file:
dummy_handler	re-0.5.6/src/sipreg/reg.c	/^static void dummy_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
dummy_msg	baresip/test/message.c	/^static const char dummy_msg[] = "hei paa deg";$/;"	v	file:
dummy_recv_handler	re-0.5.6/src/websock/websock.c	/^static void dummy_recv_handler(const struct websock_hdr *hdr, struct mbuf *mb,$/;"	f	file:
dummy_resp_handler	re-0.5.6/src/bfcp/request.c	/^static void dummy_resp_handler(int err, const struct bfcp_msg *msg, void *arg)$/;"	f	file:
dummy_udp_recv_handler	re-0.5.6/src/udp/udp.c	/^static void dummy_udp_recv_handler(const struct sa *src,$/;"	f	file:
dump_stats	baresip/modules/daala/decode.c	/^static void dump_stats(const struct viddec_state *vds)$/;"	f	file:
dump_stats	baresip/modules/daala/encode.c	/^static void dump_stats(const struct videnc_state *ves)$/;"	f	file:
dur	re-0.5.6/src/telev/telev.c	/^	uint16_t dur;$/;"	m	struct:telev	file:
dur	re-0.5.6/src/telev/telev.c	/^	uint16_t dur;$/;"	m	struct:telev_fmt	file:
duration	baresip/modules/gtk/call_window.c	/^	GtkLabel *duration;$/;"	m	struct:call_window	file:
duration_timer_tag	baresip/modules/gtk/call_window.c	/^	guint duration_timer_tag;$/;"	m	struct:call_window	file:
duri	baresip/test/sip/location.c	/^	struct uri duri;$/;"	m	struct:loctmp	typeref:struct:loctmp::uri	file:
duri	baresip/test/sip/sipsrv.h	/^	struct uri duri;$/;"	m	struct:location	typeref:struct:location::uri
dyn_print	re-0.5.6/src/fmt/print.c	/^struct dyn_print {$/;"	s	file:
dynlock_create_handler	re-0.5.6/src/main/openssl.c	/^static struct CRYPTO_dynlock_value *dynlock_create_handler(const char *file,$/;"	f	file:
dynlock_destroy_handler	re-0.5.6/src/main/openssl.c	/^static void dynlock_destroy_handler(struct CRYPTO_dynlock_value *l,$/;"	f	file:
dynlock_lock_handler	re-0.5.6/src/main/openssl.c	/^static void dynlock_lock_handler(int mode, struct CRYPTO_dynlock_value *l,$/;"	f	file:
dynpt	re-0.5.6/src/sdp/sdp.h	/^	int dynpt;$/;"	m	struct:sdp_media
e	baresip/include/baresip.h	/^	unsigned e:1;      \/**< End bit                                 *\/$/;"	m	struct:h264_fu
e	baresip/modules/h265/decode.c	/^	unsigned e:1;$/;"	m	struct:fu	file:
e	baresip/modules/vp9/decode.c	/^	unsigned e:1;  \/* E: End of a layer frame                    *\/$/;"	m	struct:hdr	file:
ebit	baresip/modules/avcodec/h26x.h	/^	unsigned ebit:3;   \/**< 3 bits - End Bit Position (EBIT)            *\/$/;"	m	struct:h263_hdr
ebuacip	baresip/include/baresip.h	/^	bool ebuacip;           \/**< Enable EBU-ACIP parameters     *\/$/;"	m	struct:config_sdp
echo	baresip/modules/echo/echo.c	/^const struct mod_export DECL_EXPORTS(echo) = {$/;"	v	typeref:struct:DECL_EXPORTS
editor_input	baresip/src/cmd.c	/^static int editor_input(struct commands *commands, struct mbuf *mb, char key,$/;"	f	file:
efac	rem-0.5.2/src/dtmf/dec.c	/^	double efac;$/;"	m	struct:dtmf_dec	file:
efps	baresip/modules/vidloop/vidloop.c	/^	double efps;$/;"	m	struct:vstat	file:
efps	baresip/src/video.c	/^	int efps;                          \/**< Estimated frame-rate      *\/$/;"	m	struct:vrx	file:
efps	baresip/src/video.c	/^	int efps;                          \/**< Estimated frame-rate      *\/$/;"	m	struct:vtx	file:
eh	baresip/src/call.c	/^	call_event_h *eh;         \/**< Event handler                        *\/$/;"	m	struct:call	file:
eh	re-0.5.6/src/udp/udp.c	/^	udp_error_h *eh;     \/**< Error handler               *\/$/;"	m	struct:udp_sock	file:
eh_destructor	baresip/src/ua.c	/^static void eh_destructor(void *arg)$/;"	f	file:
ehl	baresip/src/ua.c	/^	struct list ehl;               \/**< Event handlers (struct ua_eh)   *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::list	file:
enable_codec	baresip/modules/vidloop/vidloop.c	/^static int enable_codec(struct video_loop *vl, const char *name)$/;"	f	file:
enable_turn_channels	baresip/modules/ice/ice.c	/^static int enable_turn_channels(struct mnat_sess *sess)$/;"	f	file:
enc	baresip/modules/amr/amr.c	/^	void *enc;                  \/**< Encoder state            *\/$/;"	m	struct:auenc_state	file:
enc	baresip/modules/auloop/auloop.c	/^	struct auenc_state *enc;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::auenc_state	file:
enc	baresip/modules/daala/encode.c	/^	daala_enc_ctx *enc;$/;"	m	struct:videnc_state	file:
enc	baresip/modules/g722/g722.c	/^	g722_encode_state_t enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/g7221/encode.c	/^	g722_1_encode_state_t enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/gsm/gsm.c	/^	gsm enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/gtk/call_window.c	/^		GtkProgressBar *enc, *dec;$/;"	m	struct:call_window::__anon78	file:
enc	baresip/modules/gtk/call_window.c	/^		struct vumeter_enc *enc;$/;"	m	struct:call_window::__anon76	typeref:struct:call_window::__anon76::vumeter_enc	file:
enc	baresip/modules/ilbc/ilbc.c	/^	iLBC_Enc_Inst_t enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/mpa/encode.c	/^	twolame_options *enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/opus/encode.c	/^	OpusEncoder *enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/silk/silk.c	/^	void *enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/sndfile/sndfile.c	/^	SNDFILE *enc;$/;"	m	struct:sndfile_enc	file:
enc	baresip/modules/speex/speex.c	/^	void *enc;$/;"	m	struct:auenc_state	file:
enc	baresip/modules/vidloop/vidloop.c	/^	struct videnc_state *enc;$/;"	m	struct:video_loop	typeref:struct:video_loop::videnc_state	file:
enc	baresip/src/audio.c	/^	struct auenc_state *enc;      \/**< Audio encoder state (optional)  *\/$/;"	m	struct:autx	typeref:struct:autx::auenc_state	file:
enc	baresip/src/video.c	/^	struct videnc_state *enc;          \/**< Video encoder state       *\/$/;"	m	struct:vtx	typeref:struct:vtx::videnc_state	file:
enc	re-0.5.6/src/rtp/rtp.c	/^	} enc;$/;"	m	struct:rtp_sock	typeref:struct:rtp_sock::__anon143	file:
encControl	baresip/modules/silk/silk.c	/^	SKP_SILK_SDK_EncControlStruct encControl;$/;"	m	struct:auenc_state	file:
enc_bytes	baresip/modules/ilbc/ilbc.c	/^	uint32_t enc_bytes;$/;"	m	struct:auenc_state	file:
enc_destructor	baresip/modules/sndfile/sndfile.c	/^static void enc_destructor(void *arg)$/;"	f	file:
enc_destructor	baresip/modules/speex_aec/speex_aec.c	/^static void enc_destructor(void *arg)$/;"	f	file:
enc_destructor	baresip/modules/v4l2_codec/v4l2_codec.c	/^static void enc_destructor(void *arg)$/;"	f	file:
enc_destructor	baresip/modules/vumeter/vumeter.c	/^static void enc_destructor(void *arg)$/;"	f	file:
enc_st	baresip/modules/speex_aec/speex_aec.c	/^struct enc_st {$/;"	s	file:
enc_tmr_handler	baresip/modules/vumeter/vumeter.c	/^static void enc_tmr_handler(void *arg)$/;"	f	file:
ench	baresip/include/baresip.h	/^	auenc_encode_h *ench;$/;"	m	struct:aucodec
ench	baresip/include/baresip.h	/^	aufilt_encode_h *ench;$/;"	m	struct:aufilt
ench	baresip/include/baresip.h	/^	videnc_encode_h *ench;$/;"	m	struct:vidcodec
ench	baresip/include/baresip.h	/^	vidfilt_encode_h *ench;$/;"	m	struct:vidfilt
ench	re-0.5.6/include/re_bfcp.h	/^	bfcp_encode_h *ench;$/;"	m	struct:bfcp_encode
ench	re-0.5.6/include/re_sdp.h	/^	sdp_fmtp_enc_h *ench;$/;"	m	struct:sdp_format
ench	re-0.5.6/src/sdp/sdp.h	/^	sdp_media_enc_h *ench;$/;"	m	struct:sdp_media
encode	baresip/modules/avcodec/encode.c	/^int encode(struct videnc_state *st, bool update, const struct vidframe *frame)$/;"	f
encode	baresip/modules/bv32/bv32.c	/^static int encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode	baresip/modules/codec2/codec2.c	/^static int encode(struct auenc_state *aes, uint8_t *buf,$/;"	f	file:
encode	baresip/modules/g722/g722.c	/^static int encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode	baresip/modules/g726/g726.c	/^static int encode(struct auenc_state *st, uint8_t *buf,$/;"	f	file:
encode	baresip/modules/gsm/gsm.c	/^static int encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode	baresip/modules/ilbc/ilbc.c	/^static int encode(struct auenc_state *st, uint8_t *buf,$/;"	f	file:
encode	baresip/modules/isac/isac.c	/^static int encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode	baresip/modules/l16/l16.c	/^static int encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode	baresip/modules/silk/silk.c	/^static int encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode	baresip/modules/snapshot/snapshot.c	/^static int encode(struct vidfilt_enc_st *st, struct vidframe *frame)$/;"	f	file:
encode	baresip/modules/sndfile/sndfile.c	/^static int encode(struct aufilt_enc_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
encode	baresip/modules/speex/speex.c	/^static int encode(struct auenc_state *st, uint8_t *buf,$/;"	f	file:
encode	baresip/modules/speex_aec/speex_aec.c	/^static int encode(struct aufilt_enc_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
encode	baresip/modules/speex_pp/speex_pp.c	/^static int encode(struct aufilt_enc_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
encode	baresip/modules/vidinfo/vidinfo.c	/^static int encode(struct vidfilt_enc_st *_st, struct vidframe *frame)$/;"	f	file:
encode	baresip/modules/vumeter/vumeter.c	/^static int encode(struct aufilt_enc_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
encode_destructor	baresip/modules/amr/amr.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/bv32/bv32.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/codec2/codec2.c	/^static void encode_destructor(void *data)$/;"	f	file:
encode_destructor	baresip/modules/g726/g726.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/gsm/gsm.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/gst_video/encode.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/ilbc/ilbc.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/isac/isac.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/selfview/selfview.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/silk/silk.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/speex/speex.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/swscale/swscale.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_destructor	baresip/modules/vidinfo/vidinfo.c	/^static void encode_destructor(void *arg)$/;"	f	file:
encode_entry	re-0.5.6/src/json/encode.c	/^static int encode_entry(struct re_printf *pf, const struct odict_entry *e)$/;"	f	file:
encode_handler	re-0.5.6/src/rtp/sess.c	/^static int encode_handler(struct mbuf *mb, void *arg)$/;"	f	file:
encode_nb	baresip/modules/amr/amr.c	/^static int encode_nb(struct auenc_state *st, uint8_t *buf,$/;"	f	file:
encode_packet	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int encode_packet(struct videnc_state *st, bool update,$/;"	f	file:
encode_pip	baresip/modules/selfview/selfview.c	/^static int encode_pip(struct vidfilt_enc_st *st, struct vidframe *frame)$/;"	f	file:
encode_process	baresip/modules/swscale/swscale.c	/^static int encode_process(struct vidfilt_enc_st *st, struct vidframe *frame)$/;"	f	file:
encode_rtp_send	baresip/src/audio.c	/^static void encode_rtp_send(struct audio *a, struct autx *tx,$/;"	f	file:
encode_rtp_send	baresip/src/video.c	/^static void encode_rtp_send(struct vtx *vtx, struct vidframe *frame)$/;"	f	file:
encode_update	baresip/modules/amr/amr.c	/^static int encode_update(struct auenc_state **aesp,$/;"	f	file:
encode_update	baresip/modules/avcodec/encode.c	/^int encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f
encode_update	baresip/modules/bv32/bv32.c	/^static int encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f	file:
encode_update	baresip/modules/codec2/codec2.c	/^static int encode_update(struct auenc_state **aesp,$/;"	f	file:
encode_update	baresip/modules/g722/g722.c	/^static int encode_update(struct auenc_state **aesp,$/;"	f	file:
encode_update	baresip/modules/g726/g726.c	/^static int encode_update(struct auenc_state **aesp,$/;"	f	file:
encode_update	baresip/modules/gsm/gsm.c	/^static int encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f	file:
encode_update	baresip/modules/ilbc/ilbc.c	/^static int encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f	file:
encode_update	baresip/modules/isac/isac.c	/^static int encode_update(struct auenc_state **aesp,$/;"	f	file:
encode_update	baresip/modules/selfview/selfview.c	/^static int encode_update(struct vidfilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_update	baresip/modules/silk/silk.c	/^static int encode_update(struct auenc_state **aesp,$/;"	f	file:
encode_update	baresip/modules/sndfile/sndfile.c	/^static int encode_update(struct aufilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_update	baresip/modules/speex/speex.c	/^static int encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f	file:
encode_update	baresip/modules/speex_aec/speex_aec.c	/^static int encode_update(struct aufilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_update	baresip/modules/speex_pp/speex_pp.c	/^static int encode_update(struct aufilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_update	baresip/modules/swscale/swscale.c	/^static int encode_update(struct vidfilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_update	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f	file:
encode_update	baresip/modules/vidinfo/vidinfo.c	/^static int encode_update(struct vidfilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_update	baresip/modules/vumeter/vumeter.c	/^static int encode_update(struct aufilt_enc_st **stp, void **ctx,$/;"	f	file:
encode_uri_user	baresip/src/account.c	/^static int encode_uri_user(struct re_printf *pf, const struct uri *uri)$/;"	f	file:
encode_wb	baresip/modules/amr/amr.c	/^static int encode_wb(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
encode_win	baresip/modules/selfview/selfview.c	/^static int encode_win(struct vidfilt_enc_st *st, struct vidframe *frame)$/;"	f	file:
encode_x264	baresip/modules/avcodec/encode.c	/^int encode_x264(struct videnc_state *st, bool update,$/;"	f
encoder	baresip/modules/gst_video1/encode.c	/^	} encoder;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::__anon89	file:
encoder_config	baresip/modules/speex/speex.c	/^static void encoder_config(void *st)$/;"	f	file:
encoder_fmtp_decode	baresip/modules/ilbc/ilbc.c	/^static void encoder_fmtp_decode(struct auenc_state *st, const char *fmtp)$/;"	f	file:
encoderl	baresip/modules/v4l2_codec/v4l2_codec.c	/^	struct list encoderl;$/;"	m	struct:__anon85	typeref:struct:__anon85::list	file:
encoders_read	baresip/modules/v4l2_codec/v4l2_codec.c	/^static void encoders_read(uint32_t rtp_ts, const uint8_t *buf, size_t sz)$/;"	f	file:
encprm	baresip/modules/avcodec/encode.c	/^	struct videnc_param encprm;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::videnc_param	file:
encprm	baresip/modules/v4l2_codec/v4l2_codec.c	/^	struct videnc_param encprm;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::videnc_param	file:
encsize	baresip/modules/avcodec/encode.c	/^	struct vidsz encsize;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
encupdh	baresip/include/baresip.h	/^	auenc_update_h *encupdh;$/;"	m	struct:aucodec
encupdh	baresip/include/baresip.h	/^	aufilt_encupd_h *encupdh;$/;"	m	struct:aufilt
encupdh	baresip/include/baresip.h	/^	videnc_update_h *encupdh;$/;"	m	struct:vidcodec
encupdh	baresip/include/baresip.h	/^	vidfilt_encupd_h *encupdh;$/;"	m	struct:vidfilt
end	re-0.5.6/include/re_mbuf.h	/^	size_t end;     \/**< End of buffer      *\/$/;"	m	struct:mbuf
end	re-0.5.6/src/sip/dialog.c	/^	size_t end;$/;"	m	struct:route_enc	file:
end	re-0.5.6/src/telev/telev.c	/^	bool end;$/;"	m	struct:telev_fmt	file:
endpoint	baresip/test/message.c	/^struct endpoint {$/;"	s	file:
endpoint_alloc	baresip/test/message.c	/^static int endpoint_alloc(struct endpoint **epp, struct test *test,$/;"	f	file:
endpoint_destructor	baresip/test/message.c	/^static void endpoint_destructor(void *data)$/;"	f	file:
endpoint_is_complete	baresip/test/message.c	/^static bool endpoint_is_complete(const struct endpoint *ep)$/;"	f	file:
energy	rem-0.5.2/src/dtmf/dec.c	/^	double energy;$/;"	m	struct:dtmf_dec	file:
engineEngine	baresip/modules/opensles/opensles.c	/^SLEngineItf engineEngine;$/;"	v
engineObject	baresip/modules/opensles/opensles.c	/^SLObjectItf engineObject = NULL;$/;"	v
enhancement	baresip/modules/speex/speex.c	/^	int enhancement;$/;"	m	struct:__anon83	file:
enough_data_handler	baresip/modules/gst_video/encode.c	/^	gulong enough_data_handler;$/;"	m	struct:videnc_state	file:
enqueue	re-0.5.6/src/tcp/tcp.c	/^static int enqueue(struct tcp_conn *tc, struct mbuf *mb)$/;"	f	file:
entry_add	re-0.5.6/src/json/decode_odict.c	/^static int entry_add(struct odict *o, const char *name,$/;"	f	file:
eof	baresip/src/play.c	/^	bool eof;$/;"	m	struct:play	file:
eos	baresip/modules/gst_video1/encode.c	/^		} eos;$/;"	m	struct:videnc_state::__anon91	typeref:struct:videnc_state::__anon91::__anon92	file:
epfd	re-0.5.6/src/main/main.c	/^	int epfd;                    \/**< epoll control file descriptor     *\/$/;"	m	struct:re	file:
epoch	baresip/modules/natpmp/libnatpmp.h	/^	uint32_t epoch;$/;"	m	struct:natpmp_resp
epoll_check	re-0.5.6/src/main/epoll.c	/^bool epoll_check(void)$/;"	f
eprm	baresip/src/ua.c	/^	char *eprm;                    \/**< Extra UA parameters             *\/$/;"	m	struct:__anon7	file:
err	baresip/modules/vidloop/vidloop.c	/^	int err;$/;"	m	struct:video_loop	file:
err	baresip/modules/zrtp/zrtp.c	/^	int err;$/;"	m	struct:menc_sess	file:
err	baresip/test/call.c	/^	int err;$/;"	m	struct:fixture	file:
err	baresip/test/message.c	/^	int err;$/;"	m	struct:test	file:
err	baresip/test/ua.c	/^	int err;$/;"	m	struct:test	file:
err	re-0.5.6/src/ice/ice.h	/^	int err;                     \/**< Saved error code, if failed        *\/$/;"	m	struct:ice_candpair
err	re-0.5.6/src/sip/auth.c	/^	int err;$/;"	m	struct:sip_auth	file:
err_code	re-0.5.6/include/re_stun.h	/^		struct stun_errcode err_code;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::stun_errcode
errcode	re-0.5.6/include/re_bfcp.h	/^		struct bfcp_errcode errcode;$/;"	m	union:bfcp_attr::bfcp_union	typeref:struct:bfcp_attr::bfcp_union::bfcp_errcode
errh	baresip/modules/aufile/aufile.c	/^	ausrc_error_h *errh;$/;"	m	struct:ausrc_st	file:
errh	baresip/modules/gst/gst.c	/^	ausrc_error_h *errh;        \/**< Error handler           *\/$/;"	m	struct:ausrc_st	file:
errh	baresip/modules/gst1/gst.c	/^	ausrc_error_h *errh;        \/**< Error handler           *\/$/;"	m	struct:ausrc_st	file:
errh	baresip/modules/oss/oss.c	/^	ausrc_error_h *errh;$/;"	m	struct:ausrc_st	file:
errh	baresip/modules/rst/audio.c	/^	ausrc_error_h *errh;$/;"	m	struct:ausrc_st	file:
errh	baresip/src/audio.c	/^	audio_err_h *errh;            \/**< Audio error handler             *\/$/;"	m	struct:audio	file:
errh	baresip/src/video.c	/^	video_err_h *errh;      \/**< Error handler                        *\/$/;"	m	struct:video	file:
errinfo	re-0.5.6/include/re_bfcp.h	/^		char *errinfo;$/;"	m	union:bfcp_attr::bfcp_union
error_handler	baresip/modules/auloop/auloop.c	/^static void error_handler(int err, const char *str, void *arg)$/;"	f	file:
error_handler	baresip/modules/x11/x11.c	/^static int error_handler(Display *d, XErrorEvent *e)$/;"	f	file:
error_msg	baresip/src/log.c	/^void error_msg(const char *fmt, ...)$/;"	f
errorh	baresip/modules/dtls_srtp/dtls_srtp.c	/^	menc_error_h *errorh;$/;"	m	struct:menc_sess	file:
errorh	baresip/modules/x11/x11.c	/^	int (*errorh) (Display *, XErrorEvent *);$/;"	m	struct:__anon42	file:
errorh	baresip/modules/zrtp/zrtp.c	/^	menc_error_h *errorh;$/;"	m	struct:menc_sess	file:
errorh	baresip/src/core.h	/^	stream_error_h *errorh;  \/**< Stream error handler                  *\/$/;"	m	struct:stream
errorh_arg	baresip/src/core.h	/^	void *errorh_arg;        \/**< Error handler argument                *\/$/;"	m	struct:stream
errstatus_print	baresip/modules/libsrtp/srtp.c	/^static int errstatus_print(struct re_printf *pf, err_status_t e)$/;"	f	file:
esc_h	re-0.5.6/src/uri/uric.c	/^typedef bool (esc_h)(char c);$/;"	t	file:
estab_action	baresip/test/call.c	/^	enum action estab_action;$/;"	m	struct:fixture	typeref:enum:fixture::action	file:
estab_handler	baresip/modules/rst/rst.c	/^static void estab_handler(void *arg)$/;"	f	file:
estab_handler	re-0.5.6/src/http/client.c	/^static void estab_handler(void *arg)$/;"	f	file:
estab_handler	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static bool estab_handler(int *err, bool active, void *arg)$/;"	f	file:
estabh	baresip/modules/ice/ice.c	/^	mnat_estab_h *estabh;$/;"	m	struct:mnat_sess	file:
estabh	baresip/modules/natpmp/natpmp.c	/^	mnat_estab_h *estabh;$/;"	m	struct:mnat_sess	file:
estabh	baresip/modules/pcp/pcp.c	/^	mnat_estab_h *estabh;$/;"	m	struct:mnat_sess	file:
estabh	baresip/modules/stun/stun.c	/^	mnat_estab_h *estabh;$/;"	m	struct:mnat_sess	file:
estabh	baresip/modules/turn/turn.c	/^	mnat_estab_h *estabh;$/;"	m	struct:mnat_sess	file:
estabh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_estab_h *estabh;$/;"	m	struct:sipsess
estabh	re-0.5.6/src/tcp/tcp.c	/^	tcp_estab_h *estabh;  \/**< Connection established handler    *\/$/;"	m	struct:tcp_conn	file:
estabh	re-0.5.6/src/tcp/tcp.c	/^	tcp_helper_estab_h *estabh;$/;"	m	struct:tcp_helper	file:
estabh	re-0.5.6/src/tls/openssl/tls_udp.c	/^	dtls_estab_h *estabh;$/;"	m	struct:tls_conn	file:
estabh	re-0.5.6/src/websock/websock.c	/^	websock_estab_h *estabh;$/;"	m	struct:websock_conn	file:
established	re-0.5.6/src/sip/transp.c	/^	bool established;$/;"	m	struct:sip_conn	file:
established	re-0.5.6/src/sipsess/sipsess.h	/^	bool established;$/;"	m	struct:sipsess
etag	baresip/modules/presence/publisher.c	/^	char *etag;$/;"	m	struct:publisher	file:
evdev	baresip/modules/evdev/evdev.c	/^const struct mod_export DECL_EXPORTS(evdev) = {$/;"	v	typeref:struct:DECL_EXPORTS
evdev	baresip/modules/evdev/evdev.c	/^static struct ui_st *evdev;$/;"	v	typeref:struct:ui_st	file:
evdev_alloc	baresip/modules/evdev/evdev.c	/^static int evdev_alloc(struct ui_st **stp, const char *dev)$/;"	f	file:
evdev_close	baresip/modules/evdev/evdev.c	/^static void evdev_close(struct ui_st *st)$/;"	f	file:
evdev_destructor	baresip/modules/evdev/evdev.c	/^static void evdev_destructor(void *arg)$/;"	f	file:
evdev_device	baresip/modules/evdev/evdev.c	/^static char evdev_device[64] = "\/dev\/input\/event0";$/;"	v	file:
evdev_fd_handler	baresip/modules/evdev/evdev.c	/^static void evdev_fd_handler(int flags, void *arg)$/;"	f	file:
evdev_output	baresip/modules/evdev/evdev.c	/^static int evdev_output(const char *str)$/;"	f	file:
even_port	re-0.5.6/include/re_stun.h	/^		struct stun_even_port even_port;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::stun_even_port
event	re-0.5.6/include/re_sipevent.h	/^	struct pl event;$/;"	m	struct:sipevent_event	typeref:struct:sipevent_event::pl
event	re-0.5.6/src/sipevent/sipevent.h	/^	char *event;$/;"	m	struct:sipnot
event	re-0.5.6/src/sipevent/sipevent.h	/^	char *event;$/;"	m	struct:sipsub
event	re-0.5.6/src/telev/telev.c	/^	int event;$/;"	m	struct:telev	file:
event	re-0.5.6/src/telev/telev.c	/^	uint8_t event;$/;"	m	struct:telev_fmt	file:
event_class_name	baresip/src/event.c	/^static const char *event_class_name(enum ua_event ev)$/;"	f	file:
event_cmp	re-0.5.6/src/sipevent/listen.c	/^static bool event_cmp(const struct sipevent_event *evt,$/;"	f	file:
event_encode_dict	baresip/src/event.c	/^int event_encode_dict(struct odict *od, struct ua *ua, enum ua_event ev,$/;"	f
event_handler	baresip/modules/presence/presence.c	/^static void event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
event_handler	baresip/modules/sdl/sdl.c	/^static void event_handler(void *arg)$/;"	f	file:
event_handler	baresip/modules/sdl2/sdl.c	/^static void event_handler(void *arg)$/;"	f	file:
event_handler	baresip/test/call.c	/^static void event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
event_handler	re-0.5.6/src/mqueue/mqueue.c	/^static void event_handler(int flags, void *arg)$/;"	f	file:
eventh	baresip/src/audio.c	/^	audio_event_h *eventh;        \/**< Event handler                   *\/$/;"	m	struct:audio	file:
events	re-0.5.6/src/main/main.c	/^	struct epoll_event *events;  \/**< Event set for epoll()             *\/$/;"	m	struct:re	typeref:struct:re::epoll_event	file:
evlist	re-0.5.6/src/main/main.c	/^	struct kevent *evlist;$/;"	m	struct:re	typeref:struct:re::kevent	file:
evsock	baresip/src/ua.c	/^	struct sipevent_sock *evsock;  \/**< SIP Event socket                *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::sipevent_sock	file:
evt	re-0.5.6/src/sipevent/listen.c	/^	const struct sipevent_event *evt;$/;"	m	struct:subcmp	typeref:struct:subcmp::sipevent_event	file:
exchange	re-0.5.6/include/re_dns.h	/^			char *exchange;$/;"	m	struct:dnsrr::__anon154::__anon160
exec	baresip/test/main.c	/^	test_exec_h *exec;$/;"	m	struct:test	file:
exit_handler	baresip/src/ua.c	/^static void exit_handler(void *arg)$/;"	f	file:
exith	baresip/src/ua.c	/^	ua_exit_h *exith;              \/**< UA Exit handler                 *\/$/;"	m	struct:__anon7	file:
exith	re-0.5.6/src/sip/sip.h	/^	sip_exit_h *exith;$/;"	m	struct:sip
exp_closed	baresip/test/call.c	/^	unsigned exp_closed;$/;"	m	struct:fixture	file:
exp_estab	baresip/test/call.c	/^	unsigned exp_estab;$/;"	m	struct:fixture	file:
expected_prior	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t expected_prior;  \/**< Packet expected at last interval    *\/$/;"	m	struct:rtp_source
expire	re-0.5.6/include/re_dns.h	/^			uint32_t expire;$/;"	m	struct:dnsrr::__anon154::__anon158
expires	baresip/modules/presence/publisher.c	/^	unsigned int expires;$/;"	m	struct:publisher	file:
expires	baresip/test/sip/location.c	/^	uint32_t expires;$/;"	m	struct:loctmp	file:
expires	baresip/test/sip/sipsrv.h	/^	uint64_t expires;$/;"	m	struct:location
expires	re-0.5.6/include/re_sip.h	/^	struct pl expires;     \/**< Cached Expires header                *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
expires	re-0.5.6/include/re_sipevent.h	/^	struct pl expires;$/;"	m	struct:sipevent_substate	typeref:struct:sipevent_substate::pl
expires	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t expires;$/;"	m	struct:sipnot
expires	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t expires;$/;"	m	struct:sipsub
expires	re-0.5.6/src/sipreg/reg.c	/^	uint32_t expires;$/;"	m	struct:sipreg	file:
expires_dfl	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t expires_dfl;$/;"	m	struct:sipnot
expires_max	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t expires_max;$/;"	m	struct:sipnot
expires_min	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t expires_min;$/;"	m	struct:sipnot
expr_match	re-0.5.6/src/fmt/regex.c	/^static bool expr_match(const struct chr *chrv, uint32_t n, uint8_t c,$/;"	f	file:
ext	re-0.5.6/include/re_rtp.h	/^	bool     ext;       \/**< Extension bit          *\/$/;"	m	struct:rtp_header
ext_addr	baresip/modules/natpmp/libnatpmp.h	/^		uint32_t ext_addr;$/;"	m	union:natpmp_resp::__anon70
ext_port	baresip/modules/natpmp/libnatpmp.h	/^			uint16_t ext_port;$/;"	m	struct:natpmp_resp::__anon70::__anon71
extaddr_handler	baresip/modules/natpmp/natpmp.c	/^static void extaddr_handler(int err, const struct natpmp_resp *resp, void *arg)$/;"	f	file:
extensionc	baresip/src/ua.c	/^	size_t    extensionc;        \/**< Number of SIP extensions           *\/$/;"	m	struct:ua	file:
extensionv	baresip/src/ua.c	/^	struct pl extensionv[8];     \/**< Vector of SIP extensions           *\/$/;"	m	struct:ua	typeref:struct:ua::pl	file:
extmap_aulevel	baresip/src/audio.c	/^	unsigned extmap_aulevel;      \/**< ID Range 1-14 inclusive         *\/$/;"	m	struct:audio	file:
extmap_handler	baresip/src/audio.c	/^static bool extmap_handler(const char *name, const char *value, void *arg)$/;"	f	file:
extra	rem-0.5.2/src/aufile/aufile.h	/^	uint16_t extra;$/;"	m	struct:wav_fmt
f	baresip/include/baresip.h	/^	unsigned f:1;      \/**< 1 bit  - Forbidden zero bit (must be 0) *\/$/;"	m	struct:h264_hdr
f	baresip/modules/avcodec/h26x.h	/^	unsigned f:1;      \/**< 1 bit  - Flag; 0=mode A, 1=mode B\/C         *\/$/;"	m	struct:h263_hdr
f	baresip/modules/vp9/decode.c	/^	unsigned f:1;  \/* F: Flexible mode                           *\/$/;"	m	struct:hdr	file:
f	re-0.5.6/include/re_bfcp.h	/^	unsigned f:1;$/;"	m	struct:bfcp_msg
f	re-0.5.6/src/dbg/dbg.c	/^	FILE *f;               \/**< Logfile                *\/$/;"	m	struct:__anon141	file:
f	re-0.5.6/src/fmt/print.c	/^	FILE *f;$/;"	m	struct:strm_print	file:
f	rem-0.5.2/src/aufile/aufile.c	/^	FILE *f;$/;"	m	struct:aufile	file:
failc	baresip/modules/presence/publisher.c	/^	unsigned failc;$/;"	m	struct:publisher	file:
failc	baresip/modules/presence/subscriber.c	/^	unsigned failc;$/;"	m	struct:presence	file:
failc	re-0.5.6/include/re_sip.h	/^	uint32_t failc;$/;"	m	struct:sip_loopstate
failc	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t failc;$/;"	m	struct:sipsub
failc	re-0.5.6/src/sipreg/reg.c	/^	uint32_t failc;$/;"	m	struct:sipreg	file:
failc	re-0.5.6/src/turn/turnc.h	/^	uint32_t failc;$/;"	m	struct:loop_state
failed	baresip/test/call.c	/^	bool failed;$/;"	m	struct:agent	file:
failwait	re-0.5.6/src/sipreg/reg.c	/^static uint32_t failwait(uint32_t failc)$/;"	f	file:
fakevideo	baresip/modules/fakevideo/fakevideo.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(fakevideo) = {$/;"	v	typeref:struct:DECL_EXPORTS
false	re-0.5.6/include/re_types.h	89;"	d
fb	re-0.5.6/include/re_rtp.h	/^		} fb;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon188
fci	re-0.5.6/include/re_rtp.h	/^			} fci;$/;"	m	struct:rtcp_msg::__anon181::__anon188	typeref:union:rtcp_msg::__anon181::__anon188::__anon189
fd	baresip/modules/dtmfio/dtmfio.c	/^static FILE *fd;$/;"	v	file:
fd	baresip/modules/evdev/evdev.c	/^	int fd;$/;"	m	struct:ui_st	file:
fd	baresip/modules/mqtt/mqtt.h	/^	int fd;$/;"	m	struct:mqtt
fd	baresip/modules/oss/oss.c	/^	int fd;$/;"	m	struct:auplay_st	file:
fd	baresip/modules/oss/oss.c	/^	int fd;$/;"	m	struct:ausrc_st	file:
fd	baresip/modules/v4l/v4l.c	/^	int fd;$/;"	m	struct:vidsrc_st	file:
fd	baresip/modules/v4l2/v4l2.c	/^	int fd;$/;"	m	struct:vidsrc_st	file:
fd	baresip/modules/v4l2_codec/v4l2_codec.c	/^	int fd;$/;"	m	struct:vidsrc_st	file:
fd	re-0.5.6/src/tcp/tcp.c	/^	int fd;               \/**< Listening file descriptor         *\/$/;"	m	struct:tcp_sock	file:
fd	re-0.5.6/src/udp/udp.c	/^	int fd;              \/**< Socket file descriptor      *\/$/;"	m	struct:udp_sock	file:
fd6	re-0.5.6/src/udp/udp.c	/^	int fd6;             \/**< IPv6 socket file descriptor *\/$/;"	m	struct:udp_sock	file:
fd_close	re-0.5.6/src/main/main.c	/^void fd_close(int fd)$/;"	f
fd_debug	re-0.5.6/src/main/main.c	/^void fd_debug(void)$/;"	f
fd_h	re-0.5.6/include/re_main.h	/^typedef void (fd_h)(int flags, void *arg);$/;"	t
fd_handler	baresip/modules/mqtt/mqtt.c	/^static void fd_handler(int flags, void *arg)$/;"	f	file:
fd_handler	re-0.5.6/src/main/main.c	/^static void fd_handler(struct re *re, int fd, int flags)$/;"	f	file:
fd_listen	re-0.5.6/src/main/main.c	/^int fd_listen(int fd, int flags, fd_h *fh, void *arg)$/;"	f
fd_poll	re-0.5.6/src/main/main.c	/^static int fd_poll(struct re *re)$/;"	f	file:
fd_setsize	re-0.5.6/src/main/main.c	/^int fd_setsize(int maxfds)$/;"	f
fdc	re-0.5.6/src/tcp/tcp.c	/^	int fdc;              \/**< Cached connection file descriptor *\/$/;"	m	struct:tcp_sock	file:
fdc	re-0.5.6/src/tcp/tcp.c	/^	int fdc;              \/**< Connection file descriptor        *\/$/;"	m	struct:tcp_conn	file:
fds	re-0.5.6/src/main/main.c	/^	struct pollfd *fds;          \/**< Event set for poll()              *\/$/;"	m	struct:re	typeref:struct:re::pollfd	file:
ffdecode	baresip/modules/avcodec/decode.c	/^static int ffdecode(struct viddec_state *st, struct vidframe *frame)$/;"	f	file:
fh	re-0.5.6/src/main/main.c	/^		fd_h *fh;            \/**< Event handler                     *\/$/;"	m	struct:re::__anon140	file:
fh	re-0.5.6/src/natbd/filtering.c	/^	nat_filtering_h *fh;   \/**< Result handler             *\/$/;"	m	struct:nat_filtering	file:
fh	rem-0.5.2/src/aumix/aumix.c	/^	aumix_frame_h *fh;$/;"	m	struct:aumix_source	file:
fh	rem-0.5.2/src/vidmix/vidmix.c	/^	vidmix_frame_h *fh;$/;"	m	struct:vidmix_source	file:
fhs	re-0.5.6/src/main/main.c	/^	} *fhs;$/;"	m	struct:re	typeref:struct:re::__anon140	file:
file_path	baresip/modules/sndfile/sndfile.c	/^static char file_path[256] = ".";$/;"	v	file:
filling	rem-0.5.2/src/aubuf/aubuf.c	/^	bool filling;$/;"	m	struct:aubuf	file:
filtdecl	baresip/modules/vidloop/vidloop.c	/^	struct list filtdecl;$/;"	m	struct:video_loop	typeref:struct:video_loop::list	file:
filtencl	baresip/modules/vidloop/vidloop.c	/^	struct list filtencl;$/;"	m	struct:video_loop	typeref:struct:video_loop::list	file:
filtering_destructor	re-0.5.6/src/natbd/filtering.c	/^static void filtering_destructor(void *data)$/;"	f	file:
filtl	baresip/src/audio.c	/^	struct list filtl;            \/**< Audio filters in decoding order *\/$/;"	m	struct:aurx	typeref:struct:aurx::list	file:
filtl	baresip/src/audio.c	/^	struct list filtl;            \/**< Audio filters in encoding order *\/$/;"	m	struct:autx	typeref:struct:autx::list	file:
filtl	baresip/src/video.c	/^	struct list filtl;                 \/**< Filters in decoding order *\/$/;"	m	struct:vrx	typeref:struct:vrx::list	file:
filtl	baresip/src/video.c	/^	struct list filtl;                 \/**< Filters in encoding order *\/$/;"	m	struct:vtx	typeref:struct:vtx::list	file:
fin	re-0.5.6/include/re_websock.h	/^	unsigned fin:1;$/;"	m	struct:websock_hdr
final	re-0.5.6/src/hash/func.c	175;"	d	file:
find_dev	baresip/modules/winwave/play.c	/^static unsigned int find_dev(const char *name)$/;"	f	file:
find_dev	baresip/modules/winwave/src.c	/^static unsigned int find_dev(const char *name)$/;"	f	file:
find_device	baresip/modules/aubridge/device.c	/^static struct device *find_device(const char *device)$/;"	f	file:
find_handler	baresip/src/contact.c	/^static bool find_handler(struct le *le, void *arg)$/;"	f	file:
find_handler	re-0.5.6/src/dns/rrlist.c	/^static bool find_handler(struct dnsrr *rr, void *arg)$/;"	f	file:
find_test	baresip/test/main.c	/^static const struct test *find_test(const char *name)$/;"	f	file:
fingerprint	re-0.5.6/include/re_stun.h	/^		uint32_t fingerprint;$/;"	m	union:stun_attr::__anon174
fingerprint	re-0.5.6/src/stun/msg.c	/^static uint32_t fingerprint(const uint8_t *buf, size_t len)$/;"	f	file:
fint	rem-0.5.2/src/vidmix/vidmix.c	/^	unsigned fint;$/;"	m	struct:vidmix_source	file:
fir	re-0.5.6/include/re_rtp.h	/^		} fir;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon186
fir	rem-0.5.2/include/rem_auresamp.h	/^	struct fir fir;        \/**< FIR filter state *\/$/;"	m	struct:auresamp	typeref:struct:auresamp::fir
fir	rem-0.5.2/include/rem_fir.h	/^struct fir {$/;"	s
fir_48_4	rem-0.5.2/src/auresamp/resamp.c	/^static const int16_t fir_48_4[] = {$/;"	v	file:
fir_48_8	rem-0.5.2/src/auresamp/resamp.c	/^static const int16_t fir_48_8[] = {$/;"	v	file:
fir_filter	rem-0.5.2/src/fir/fir.c	/^void fir_filter(struct fir *fir, int16_t *outv, const int16_t *inv, size_t inc,$/;"	f
fir_reset	rem-0.5.2/src/fir/fir.c	/^void fir_reset(struct fir *fir)$/;"	f
first	baresip/src/core.h	/^	uint32_t first;$/;"	m	struct:timestamp_recv
first	re-0.5.6/include/re_rtp.h	/^					uint16_t first;$/;"	m	struct:rtcp_msg::__anon181::__anon188::__anon189::sli
fix	baresip/test/call.c	/^	struct fixture *fix;    \/* pointer to parent *\/$/;"	m	struct:agent	typeref:struct:agent::fixture	file:
fixture	baresip/test/call.c	/^struct fixture {$/;"	s	file:
fixture_abort	baresip/test/call.c	105;"	d	file:
fixture_close	baresip/test/call.c	94;"	d	file:
fixture_init	baresip/test/call.c	90;"	d	file:
fixture_init_prm	baresip/test/call.c	56;"	d	file:
flag	baresip/modules/gst_video1/encode.c	/^			int flag;$/;"	m	struct:videnc_state::__anon91::__anon92	file:
flag	baresip/modules/gst_video1/encode.c	/^			int flag;$/;"	m	struct:videnc_state::__anon91::__anon93	file:
flag	baresip/src/rtpkeep.c	/^	bool flag;$/;"	m	struct:rtpkeep	file:
flag_dec	baresip/modules/snapshot/snapshot.c	/^static bool flag_enc, flag_dec;$/;"	v	file:
flag_enc	baresip/modules/snapshot/snapshot.c	/^static bool flag_enc, flag_dec;$/;"	v	file:
flags	baresip/include/baresip.h	/^	int flags;        \/**< Optional command flags *\/$/;"	m	struct:cmd
flags	baresip/modules/sdl2/sdl.c	/^	Uint32 flags;$/;"	m	struct:vidisp_st	file:
flags	re-0.5.6/include/re_dns.h	/^			char *flags;$/;"	m	struct:dnsrr::__anon154::__anon163
flags	re-0.5.6/src/dbg/dbg.c	/^	enum dbg_flags flags;  \/**< Debug flags            *\/$/;"	m	struct:__anon141	typeref:enum:__anon141::dbg_flags	file:
flags	re-0.5.6/src/main/main.c	/^		int flags;           \/**< Polling flags (Read, Write, etc.) *\/$/;"	m	struct:re::__anon140	file:
flen	re-0.5.6/src/dns/client.c	/^	uint16_t flen;$/;"	m	struct:tcpconn	file:
float_sample_handler	baresip/test/call.c	/^static void float_sample_handler(const void *sampv, size_t sampc, void *arg)$/;"	f	file:
floorid	re-0.5.6/include/re_bfcp.h	/^		uint16_t floorid;$/;"	m	union:bfcp_attr::bfcp_union
floorreqid	re-0.5.6/include/re_bfcp.h	/^		uint16_t floorreqid;$/;"	m	union:bfcp_attr::bfcp_union
fmt	baresip/include/baresip.h	/^	int        fmt;         \/**< Sample format (enum aufmt) *\/$/;"	m	struct:auplay_prm
fmt	baresip/include/baresip.h	/^	int        fmt;         \/**< Sample format (enum aufmt) *\/$/;"	m	struct:ausrc_prm
fmt	baresip/modules/auloop/auloop.c	/^	enum aufmt fmt;$/;"	m	struct:audio_loop	typeref:enum:audio_loop::aufmt	file:
fmt	baresip/modules/avcodec/encode.c	/^	enum h263_fmt fmt;  \/**< Picture size *\/$/;"	m	struct:picsz	typeref:enum:picsz::h263_fmt	file:
fmt	baresip/modules/sdl2/sdl.c	/^	enum vidfmt fmt;                \/**< Current pixel format  *\/$/;"	m	struct:vidisp_st	typeref:enum:vidisp_st::vidfmt	file:
fmt	baresip/modules/v4l/v4l.c	/^	enum vidfmt fmt;$/;"	m	struct:vidsrc_st	typeref:enum:vidsrc_st::vidfmt	file:
fmt	baresip/src/sipreq.c	/^	char *fmt;$/;"	m	struct:sip_req	file:
fmt	baresip/test/mock/mock_vidcodec.c	/^	enum vidfmt fmt;$/;"	m	struct:hdr	typeref:enum:hdr::vidfmt	file:
fmt	rem-0.5.2/include/rem_aufile.h	/^	enum aufmt fmt;$/;"	m	struct:aufile_prm	typeref:enum:aufile_prm::aufmt
fmt	rem-0.5.2/include/rem_vid.h	/^	enum vidfmt fmt;       \/**< Video pixel format  *\/$/;"	m	struct:vidframe	typeref:enum:vidframe::vidfmt
fmt_gmtime	re-0.5.6/src/fmt/time.c	/^int fmt_gmtime(struct re_printf *pf, void *ts)$/;"	f
fmt_human_time	re-0.5.6/src/fmt/time.c	/^int fmt_human_time(struct re_printf *pf, const uint32_t *seconds)$/;"	f
fmt_ignore	re-0.5.6/src/sdp/sdp.h	/^	bool fmt_ignore;$/;"	m	struct:sdp_media
fmt_param_apply	re-0.5.6/src/fmt/prm.c	/^void fmt_param_apply(const struct pl *pl, fmt_param_h *ph, void *arg)$/;"	f
fmt_param_exists	re-0.5.6/src/fmt/prm.c	/^bool fmt_param_exists(const struct pl *pl, const char *pname)$/;"	f
fmt_param_get	re-0.5.6/src/fmt/prm.c	/^bool fmt_param_get(const struct pl *pl, const char *pname, struct pl *val)$/;"	f
fmt_param_h	re-0.5.6/include/re_fmt.h	/^typedef void (fmt_param_h)(const struct pl *name, const struct pl *val,$/;"	t
fmtp	baresip/include/baresip.h	/^	const char *fmtp;$/;"	m	struct:aucodec
fmtp	baresip/include/baresip.h	/^	const char *fmtp;$/;"	m	struct:vidcodec
fmtp	baresip/modules/opus/opus.c	/^static char fmtp[256] = "";$/;"	v	file:
fmtp_cmph	baresip/include/baresip.h	/^	sdp_fmtp_cmp_h *fmtp_cmph;$/;"	m	struct:aucodec
fmtp_cmph	baresip/include/baresip.h	/^	sdp_fmtp_cmp_h *fmtp_cmph;$/;"	m	struct:vidcodec
fmtp_ench	baresip/include/baresip.h	/^	sdp_fmtp_enc_h *fmtp_ench;$/;"	m	struct:aucodec
fmtp_ench	baresip/include/baresip.h	/^	sdp_fmtp_enc_h *fmtp_ench;$/;"	m	struct:vidcodec
fmtp_mirror	baresip/modules/opus/opus.c	/^static char fmtp_mirror[256];$/;"	v	file:
focus	rem-0.5.2/src/vidmix/vidmix.c	/^	void *focus;$/;"	m	struct:vidmix_source	file:
focus_full	rem-0.5.2/src/vidmix/vidmix.c	/^	bool focus_full;$/;"	m	struct:vidmix_source	file:
forkh	re-0.5.6/src/sipevent/sipevent.h	/^	sipsub_fork_h *forkh;$/;"	m	struct:sipsub
format	rem-0.5.2/src/aufile/aufile.h	/^	uint16_t format;$/;"	m	struct:wav_fmt
format_check	baresip/modules/gst/gst.c	/^static void format_check(struct ausrc_st *st, GstStructure *s)$/;"	f	file:
format_check	baresip/modules/gst1/gst.c	/^static void format_check(struct ausrc_st *st, GstStructure *s)$/;"	f	file:
found	re-0.5.6/src/net/if.c	/^	bool found;    \/**< Found flag     *\/$/;"	m	struct:ifentry	file:
foundation	re-0.5.6/include/re_ice.h	/^	char foundation[32];      \/**< Foundation string                    *\/$/;"	m	struct:ice_cand_attr
foundation	re-0.5.6/src/ice/ice.h	/^	char *foundation;            \/**< Foundation                         *\/$/;"	m	struct:ice_cand
fps	baresip/include/baresip.h	/^	int fps;          \/**< Wanted framerate                            *\/$/;"	m	struct:vidsrc_prm
fps	baresip/include/baresip.h	/^	uint32_t fps;           \/**< Video framerate                *\/$/;"	m	struct:config_video
fps	baresip/include/baresip.h	/^	unsigned fps;      \/**< Video framerate            *\/$/;"	m	struct:videnc_param
fps	baresip/modules/av1/encode.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/modules/avformat/avformat.c	/^	int fps;$/;"	m	struct:vidsrc_st	file:
fps	baresip/modules/daala/encode.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/modules/fakevideo/fakevideo.c	/^	int fps;$/;"	m	struct:vidsrc_st	file:
fps	baresip/modules/gst_video/encode.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/modules/gst_video1/encode.c	/^		unsigned fps;$/;"	m	struct:videnc_state::__anon89	file:
fps	baresip/modules/h265/encode.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/modules/vidinfo/vidinfo.h	/^	double fps;$/;"	m	struct:panel
fps	baresip/modules/vp8/encode.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/modules/vp9/encode.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/modules/x11grab/x11grab.c	/^	int fps;$/;"	m	struct:vidsrc_st	file:
fps	baresip/test/mock/mock_vidcodec.c	/^	unsigned fps;$/;"	m	struct:videnc_state	file:
fps	baresip/test/mock/mock_vidsrc.c	/^	int fps;$/;"	m	struct:vidsrc_st	file:
fraction	re-0.5.6/include/re_rtp.h	/^	unsigned int fraction:8;  \/**< Fraction lost since last SR\/RR  *\/$/;"	m	struct:rtcp_rr
frag	baresip/modules/avcodec/decode.c	/^	bool frag;$/;"	m	struct:viddec_state	file:
frag	baresip/modules/h265/decode.c	/^	bool frag;$/;"	m	struct:viddec_state	file:
frag_seq	baresip/modules/avcodec/decode.c	/^	uint16_t frag_seq;$/;"	m	struct:viddec_state	file:
frag_seq	baresip/modules/h265/decode.c	/^	uint16_t frag_seq;$/;"	m	struct:viddec_state	file:
frag_start	baresip/modules/avcodec/decode.c	/^	size_t frag_start;$/;"	m	struct:viddec_state	file:
frag_start	baresip/modules/h265/decode.c	/^	size_t frag_start;$/;"	m	struct:viddec_state	file:
fragment_rewind	baresip/modules/avcodec/decode.c	/^static inline void fragment_rewind(struct viddec_state *vds)$/;"	f	file:
fragment_rewind	baresip/modules/h265/decode.c	/^static inline void fragment_rewind(struct viddec_state *vds)$/;"	f	file:
frame	baresip/modules/fakevideo/fakevideo.c	/^	struct vidframe *frame;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidframe	file:
frame	baresip/modules/rst/video.c	/^	struct vidframe *frame;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidframe	file:
frame	baresip/modules/selfview/selfview.c	/^	struct vidframe *frame;     \/**< Copy of encoded frame *\/$/;"	m	struct:selfview	typeref:struct:selfview::vidframe	file:
frame	baresip/modules/swscale/swscale.c	/^	struct vidframe *frame;$/;"	m	struct:swscale_enc	typeref:struct:swscale_enc::vidframe	file:
frame	baresip/src/video.c	/^	struct vidframe *frame;            \/**< Source frame              *\/$/;"	m	struct:vtx	typeref:struct:vtx::vidframe	file:
frame	baresip/test/mock/mock_vidcodec.c	/^	struct vidframe *frame;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::vidframe	file:
frame	baresip/test/mock/mock_vidsrc.c	/^	struct vidframe *frame;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidframe	file:
frame	re-0.5.6/src/jbuf/jbuf.c	/^struct frame {$/;"	s	file:
frame	rem-0.5.2/src/aumix/aumix.c	/^	int16_t *frame;$/;"	m	struct:aumix_source	file:
frame_alloc	re-0.5.6/src/jbuf/jbuf.c	/^static void frame_alloc(struct jbuf *jb, struct frame **f)$/;"	f	file:
frame_deref	re-0.5.6/src/jbuf/jbuf.c	/^static void frame_deref(struct jbuf *jb, struct frame *f)$/;"	f	file:
frame_rx	rem-0.5.2/src/vidmix/vidmix.c	/^	struct vidframe *frame_rx;$/;"	m	struct:vidmix_source	typeref:struct:vidmix_source::vidframe	file:
frame_size	baresip/modules/speex/speex.c	/^	uint32_t frame_size;  \/* Number of sample-frames *\/$/;"	m	struct:audec_state	file:
frame_size	baresip/modules/speex/speex.c	/^	uint32_t frame_size;  \/* Number of sample-frames *\/$/;"	m	struct:auenc_state	file:
frame_size	rem-0.5.2/src/aumix/aumix.c	/^	uint32_t frame_size;$/;"	m	struct:aumix	file:
frame_tx	rem-0.5.2/src/vidmix/vidmix.c	/^	struct vidframe *frame_tx;$/;"	m	struct:vidmix_source	typeref:struct:vidmix_source::vidframe	file:
framebuffer	baresip/modules/opengles/opengles.h	/^	GLuint framebuffer;$/;"	m	struct:vidisp_st
frameh	baresip/modules/avformat/avformat.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/cairo/cairo.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/dshow/dshow.cpp	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/fakevideo/fakevideo.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/rst/video.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/v4l/v4l.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/v4l2/v4l2.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/modules/vidbridge/vidbridge.h	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st
frameh	baresip/modules/x11grab/x11grab.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
frameh	baresip/test/mock/mock_vidsrc.c	/^	vidsrc_frame_h *frameh;$/;"	m	struct:vidsrc_st	file:
framel	re-0.5.6/src/jbuf/jbuf.c	/^	struct list framel;  \/**< List of buffered frames                   *\/$/;"	m	struct:jbuf	typeref:struct:jbuf::list	file:
frames	baresip/modules/vidloop/vidloop.c	/^	uint32_t frames;$/;"	m	struct:vstat	file:
frames	baresip/src/video.c	/^	int frames;                        \/**< Number of frames received *\/$/;"	m	struct:vrx	file:
frames	baresip/src/video.c	/^	int frames;                        \/**< Number of frames sent     *\/$/;"	m	struct:vtx	file:
free_mt	baresip/modules/dshow/dshow.cpp	/^static AM_MEDIA_TYPE *free_mt(AM_MEDIA_TYPE *mt)$/;"	f	file:
from	re-0.5.6/include/re_sip.h	/^	struct sip_taddr from; \/**< Parsed From header                   *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::sip_taddr
fs_gethome	re-0.5.6/src/sys/fs.c	/^int fs_gethome(char *path, size_t sz)$/;"	f
fs_mkdir	re-0.5.6/src/sys/fs.c	/^int fs_mkdir(const char *path, uint16_t mode)$/;"	f
fsn	re-0.5.6/include/re_rtp.h	/^			uint16_t fsn;   \/**< First Sequence Number lost     *\/$/;"	m	struct:rtcp_msg::__anon181::__anon187
ftag	baresip/src/core.h	/^	const char *ftag;$/;"	m	struct:mnat
fu	baresip/modules/h265/decode.c	/^struct fu {$/;"	s	file:
fu_decode	baresip/modules/h265/decode.c	/^static inline int fu_decode(struct fu *fu, struct mbuf *mb)$/;"	f	file:
fullscreen	baresip/include/baresip.h	/^	bool fullscreen;        \/**< Enable fullscreen display      *\/$/;"	m	struct:config_video
fullscreen	baresip/include/baresip.h	/^	bool fullscreen;  \/**< Enable fullscreen display                    *\/$/;"	m	struct:vidisp_prm
fullscreen	baresip/modules/sdl/sdl.c	/^	bool fullscreen;$/;"	m	struct:__anon60	file:
fullscreen	baresip/modules/sdl2/sdl.c	/^	bool fullscreen;                \/**< Fullscreen flag       *\/$/;"	m	struct:vidisp_st	file:
fx	rem-0.5.2/src/dtmf/dec.c	/^static const double fx[4] = { 1209.0, 1336.0, 1477.0, 1633.0 };$/;"	v	file:
fy	rem-0.5.2/src/dtmf/dec.c	/^static const double fy[4] = {  697.0,  770.0,  852.0,  941.0 };$/;"	v	file:
g711	baresip/modules/g711/g711.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(g711) = {$/;"	v	typeref:struct:DECL_EXPORTS
g711_A2l	rem-0.5.2/src/g711/g711.c	/^const int16_t g711_A2l[256] = {$/;"	v
g711_alaw2pcm	rem-0.5.2/include/rem_g711.h	/^static inline int16_t g711_alaw2pcm(uint8_t a)$/;"	f
g711_l2A	rem-0.5.2/src/g711/g711.c	/^const uint8_t g711_l2A[2048] = {$/;"	v
g711_l2u	rem-0.5.2/src/g711/g711.c	/^const uint8_t g711_l2u[4096] = {$/;"	v
g711_pcm2alaw	rem-0.5.2/include/rem_g711.h	/^static inline uint8_t g711_pcm2alaw(int16_t l)$/;"	f
g711_pcm2ulaw	rem-0.5.2/include/rem_g711.h	/^static inline uint8_t g711_pcm2ulaw(int16_t l)$/;"	f
g711_u2l	rem-0.5.2/src/g711/g711.c	/^const int16_t g711_u2l[256] = {$/;"	v
g711_ulaw2pcm	rem-0.5.2/include/rem_g711.h	/^static inline int16_t g711_ulaw2pcm(uint8_t u)$/;"	f
g722	baresip/modules/g722/g722.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(g722) = {$/;"	v	typeref:struct:DECL_EXPORTS
g722	baresip/modules/g722/g722.c	/^static struct aucodec g722 = {$/;"	v	typeref:struct:aucodec	file:
g7221	baresip/modules/g7221/g7221.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(g7221) = {$/;"	v	typeref:struct:DECL_EXPORTS
g7221	baresip/modules/g7221/g7221.c	/^static struct g7221_aucodec g7221 = {$/;"	v	typeref:struct:g7221_aucodec	file:
g7221_aucodec	baresip/modules/g7221/g7221.h	/^struct g7221_aucodec {$/;"	s
g7221_bitrate	baresip/modules/g7221/sdp.c	/^static uint32_t g7221_bitrate(const char *fmtp)$/;"	f	file:
g7221_decode	baresip/modules/g7221/decode.c	/^int g7221_decode(struct audec_state *ads, int16_t *sampv, size_t *sampc,$/;"	f
g7221_decode_update	baresip/modules/g7221/decode.c	/^int g7221_decode_update(struct audec_state **adsp, const struct aucodec *ac,$/;"	f
g7221_encode	baresip/modules/g7221/encode.c	/^int g7221_encode(struct auenc_state *aes, uint8_t *buf, size_t *len,$/;"	f
g7221_encode_update	baresip/modules/g7221/encode.c	/^int g7221_encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f
g7221_fmtp_cmp	baresip/modules/g7221/sdp.c	/^bool g7221_fmtp_cmp(const char *lfmtp, const char *rfmtp, void *arg)$/;"	f
g7221_fmtp_enc	baresip/modules/g7221/sdp.c	/^int g7221_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f
g726	baresip/modules/g726/g726.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(g726) = {$/;"	v	typeref:struct:DECL_EXPORTS
g726	baresip/modules/g726/g726.c	/^static struct g726_aucodec g726[4] = {$/;"	v	typeref:struct:g726_aucodec	file:
g726_aucodec	baresip/modules/g726/g726.c	/^struct g726_aucodec {$/;"	s	file:
ga	baresip/modules/natbd/natbd.c	/^	struct nat_genalg *ga;$/;"	m	struct:natbd	typeref:struct:natbd::nat_genalg	file:
gai_strerror	re-0.5.6/include/re_net.h	26;"	d
gal	baresip/modules/auloop/auloop.c	/^static struct audio_loop *gal = NULL;$/;"	v	typeref:struct:audio_loop	file:
gas	baresip/modules/audiounit/sess.c	/^static struct audiosess *gas;$/;"	v	typeref:struct:audiosess	file:
gather_handler	baresip/modules/ice/ice.c	/^static void gather_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
gc	baresip/modules/x11/x11.c	/^	GC gc;$/;"	m	struct:vidisp_st	file:
genalg_destructor	re-0.5.6/src/natbd/genalg.c	/^static void genalg_destructor(void *data)$/;"	f	file:
genalg_str	baresip/modules/natbd/natbd.c	/^static const char *genalg_str(int status)$/;"	f	file:
general_packetize	baresip/modules/avcodec/encode.c	/^static int general_packetize(uint32_t rtp_ts, struct mbuf *mb, size_t pktsize,$/;"	f	file:
generate_random_uuid	baresip/modules/uuid/uuid.c	/^static int generate_random_uuid(FILE *f)$/;"	f	file:
generate_tone	baresip/test/play.c	/^static struct mbuf *generate_tone(void)$/;"	f	file:
get_android_dns	re-0.5.6/src/dns/ns.c	/^static int get_android_dns(struct sa *nsv, uint32_t *n)$/;"	f	file:
get_call_from_gvariant	baresip/modules/gtk/gtk_mod.c	/^static struct call *get_call_from_gvariant(GVariant *param)$/;"	f	file:
get_call_window	baresip/modules/gtk/gtk_mod.c	/^static struct call_window *get_call_window(struct gtk_mod *mod,$/;"	f	file:
get_ch	baresip/src/audio.c	/^static inline uint32_t get_ch(const struct aucodec *ac)$/;"	f	file:
get_ciphers	baresip/modules/gzrtp/stream.h	/^	const char *get_ciphers() const { return m_ciphers.c_str(); }$/;"	f	class:Stream
get_create_call_window	baresip/modules/gtk/gtk_mod.c	/^static struct call_window *get_create_call_window(struct gtk_mod *mod,$/;"	f	file:
get_darwin_dns	re-0.5.6/src/dns/darwin/srv.c	/^int get_darwin_dns(char *domain, size_t dsize, struct sa *nsv, uint32_t *n)$/;"	f
get_device	baresip/modules/dshow/dshow.cpp	/^static int get_device(struct vidsrc_st *st, const char *name)$/;"	f	file:
get_fps	baresip/src/video.c	/^static int get_fps(const struct video *v)$/;"	f	file:
get_framesize	baresip/src/audio.c	/^static inline uint32_t get_framesize(const struct aucodec *ac,$/;"	f	file:
get_match_long	baresip/src/cmd.c	/^static size_t get_match_long(const struct commands *commands,$/;"	f	file:
get_member	re-0.5.6/src/rtp/sess.c	/^static struct rtp_member *get_member(struct rtcp_sess *sess, uint32_t src)$/;"	f	file:
get_packet_type	baresip/modules/gzrtp/stream.cpp	/^static enum pkt_type get_packet_type(const struct mbuf *mb)$/;"	f	file:
get_packet_type	baresip/modules/zrtp/zrtp.c	/^static enum pkt_type get_packet_type(const struct mbuf *mb)$/;"	f	file:
get_plane_bytewidth	baresip/modules/sdl/util.c	/^static int get_plane_bytewidth(int width, int plane)$/;"	f	file:
get_resolv_dns	re-0.5.6/src/dns/res.c	/^int get_resolv_dns(char *domain, size_t dsize, struct sa *nsv, uint32_t *n)$/;"	f
get_rtcp_ssrc	re-0.5.6/src/srtp/srtcp.c	/^static int get_rtcp_ssrc(uint32_t *ssrc, struct mbuf *mb)$/;"	f	file:
get_sas	baresip/modules/gzrtp/stream.h	/^	const char *get_sas() const { return m_sas.c_str(); }$/;"	f	class:Stream
get_srate	baresip/src/audio.c	/^static inline uint32_t get_srate(const struct aucodec *ac)$/;"	f	file:
get_windns	re-0.5.6/src/dns/win32/srv.c	/^int get_windns(char *domain, size_t dsize, struct sa *srvv, uint32_t *n)$/;"	f
global_re	re-0.5.6/src/main/main.c	/^static struct re global_re = {$/;"	v	typeref:struct:re	file:
gnack	re-0.5.6/include/re_rtp.h	/^				struct gnack {$/;"	s	union:rtcp_msg::__anon181::__anon188::__anon189
gnackv	re-0.5.6/include/re_rtp.h	/^				} *gnackv;$/;"	m	union:rtcp_msg::__anon181::__anon188::__anon189	typeref:struct:rtcp_msg::__anon181::__anon188::__anon189::gnack
gobn	baresip/modules/avcodec/h26x.h	/^	unsigned gobn:5;  \/\/ gob number$/;"	m	struct:h263_hdr
goertzel	rem-0.5.2/include/rem_goertzel.h	/^struct goertzel {$/;"	s
goertzel_init	rem-0.5.2/src/goertzel/goertzel.c	/^void goertzel_init(struct goertzel *g, double freq, unsigned srate)$/;"	f
goertzel_reset	rem-0.5.2/src/goertzel/goertzel.c	/^void goertzel_reset(struct goertzel *g)$/;"	f
goertzel_result	rem-0.5.2/src/goertzel/goertzel.c	/^double goertzel_result(struct goertzel *g)$/;"	f
goertzel_update	rem-0.5.2/include/rem_goertzel.h	/^static inline void goertzel_update(struct goertzel *g, int16_t samp)$/;"	f
got_call_window	baresip/modules/gtk/call_window.c	/^static void got_call_window(struct call_window *win)$/;"	f	file:
got_headers	baresip/modules/daala/decode.c	/^	bool got_headers;$/;"	m	struct:viddec_state	file:
got_keyframe	baresip/modules/avcodec/decode.c	/^	bool got_keyframe;$/;"	m	struct:viddec_state	file:
got_offer	baresip/src/call.c	/^	bool got_offer;           \/**< Got SDP Offer from Peer              *\/$/;"	m	struct:call	file:
got_register_ok	baresip/test/ua.c	/^	unsigned got_register_ok;$/;"	m	struct:test	file:
got_sdp	baresip/modules/srtp/srtp.c	/^	bool got_sdp;$/;"	m	struct:menc_st	file:
grab	baresip/modules/dshow/dshow.cpp	/^	Grabber *grab;$/;"	m	struct:vidsrc_st	file:
grabber	baresip/modules/dshow/dshow.cpp	/^	ISampleGrabber *grabber;$/;"	m	struct:vidsrc_st	file:
grabber_filter	baresip/modules/dshow/dshow.cpp	/^	IBaseFilter *grabber_filter;$/;"	m	struct:vidsrc_st	file:
granted	baresip/modules/natpmp/natpmp.c	/^		bool granted;$/;"	m	struct:mnat_media::comp	file:
granted	baresip/modules/pcp/pcp.c	/^		bool granted;$/;"	m	struct:mnat_media::comp	file:
graph	baresip/modules/dshow/dshow.cpp	/^	IGraphBuilder *graph;$/;"	m	struct:vidsrc_st	file:
group	baresip/modules/avahi/avahi.c	/^	AvahiEntryGroup* group;$/;"	m	struct:avahi_st	file:
group	baresip/modules/pcp/listener.c	/^	struct sa group;$/;"	m	struct:pcp_listener	typeref:struct:pcp_listener::sa	file:
group_callback	baresip/modules/avahi/avahi.c	/^static void group_callback(AvahiEntryGroup* group,$/;"	f	file:
gsm	baresip/modules/gsm/gsm.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(gsm) = {$/;"	v	typeref:struct:DECL_EXPORTS
gst	baresip/modules/gst/gst.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(gst) = {$/;"	v	typeref:struct:DECL_EXPORTS
gst1	baresip/modules/gst1/gst.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(gst1) = {$/;"	v	typeref:struct:DECL_EXPORTS
gst_alloc	baresip/modules/gst/gst.c	/^static int gst_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
gst_alloc	baresip/modules/gst1/gst.c	/^static int gst_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
gst_destructor	baresip/modules/gst/gst.c	/^static void gst_destructor(void *arg)$/;"	f	file:
gst_destructor	baresip/modules/gst1/gst.c	/^static void gst_destructor(void *arg)$/;"	f	file:
gst_dump_caps	baresip/modules/gst/dump.c	/^void gst_dump_caps(const GstCaps *caps)$/;"	f
gst_dump_props	baresip/modules/gst/dump.c	/^void gst_dump_props(GstElement *g)$/;"	f
gst_encoder_close	baresip/modules/gst_video/encode.c	/^static void gst_encoder_close(struct videnc_state *st)$/;"	f	file:
gst_encoder_init	baresip/modules/gst_video/encode.c	/^static int gst_encoder_init(struct videnc_state *st, int width, int height,$/;"	f	file:
gst_inited	baresip/modules/gst_video/encode.c	/^	bool gst_inited;$/;"	m	struct:videnc_state	file:
gst_setup	baresip/modules/gst/gst.c	/^static int gst_setup(struct ausrc_st *st)$/;"	f	file:
gst_setup	baresip/modules/gst1/gst.c	/^static int gst_setup(struct ausrc_st *st)$/;"	f	file:
gst_uri	baresip/modules/gst/gst.c	/^static char gst_uri[256] = "http:\/\/relay1.slayradio.org:8000\/";$/;"	v	file:
gst_uri	baresip/modules/gst1/gst.c	/^static char gst_uri[256] = "http:\/\/relay1.slayradio.org:8000\/";$/;"	v	file:
gst_video	baresip/modules/gst_video/gst_video.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(gst_video) = {$/;"	v	typeref:struct:DECL_EXPORTS
gst_video1	baresip/modules/gst_video1/gst_video.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(gst_video1) = {$/;"	v	typeref:struct:DECL_EXPORTS
gst_video1_encode	baresip/modules/gst_video1/encode.c	/^int gst_video1_encode(struct videnc_state *st, bool update,$/;"	f
gst_video1_encoder_set	baresip/modules/gst_video1/encode.c	/^int gst_video1_encoder_set(struct videnc_state **stp,$/;"	f
gst_video1_fmtp_cmp	baresip/modules/gst_video1/sdp.c	/^bool gst_video1_fmtp_cmp(const char *fmtp1, const char *fmtp2, void *data)$/;"	f
gst_video1_fmtp_enc	baresip/modules/gst_video1/sdp.c	/^int gst_video1_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f
gst_video1_h264_packetization_mode	baresip/modules/gst_video1/sdp.c	/^uint32_t gst_video1_h264_packetization_mode(const char *fmtp)$/;"	f
gst_video_encode	baresip/modules/gst_video/encode.c	/^int gst_video_encode(struct videnc_state *st, bool update,$/;"	f
gst_video_encode_update	baresip/modules/gst_video/encode.c	/^int gst_video_encode_update(struct videnc_state **vesp,$/;"	f
gst_video_fmtp_cmp	baresip/modules/gst_video/sdp.c	/^bool gst_video_fmtp_cmp(const char *fmtp1, const char *fmtp2, void *data)$/;"	f
gst_video_fmtp_enc	baresip/modules/gst_video/sdp.c	/^int gst_video_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f
gst_video_h264_level_idc	baresip/modules/gst_video1/sdp.c	/^static const uint8_t gst_video_h264_level_idc = 0x0c;$/;"	v	file:
gst_video_h264_packetization_mode	baresip/modules/gst_video/sdp.c	/^uint32_t gst_video_h264_packetization_mode(const char *fmtp)$/;"	f
gst_video_push	baresip/modules/gst_video/encode.c	/^static int gst_video_push(struct videnc_state *st, const uint8_t *src,$/;"	f	file:
gtk	baresip/modules/gtk/gtk_mod.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(gtk) = {$/;"	v	typeref:struct:DECL_EXPORTS
gtk_mod	baresip/modules/gtk/gtk_mod.c	/^struct gtk_mod {$/;"	s	file:
gtk_mod_call_window_closed	baresip/modules/gtk/gtk_mod.c	/^void gtk_mod_call_window_closed(struct gtk_mod *mod, struct call_window *win)$/;"	f
gtk_mod_connect	baresip/modules/gtk/gtk_mod.c	/^void gtk_mod_connect(struct gtk_mod *mod, const char *uri)$/;"	f
gtk_mod_events	baresip/modules/gtk/gtk_mod.c	/^enum gtk_mod_events {$/;"	g	file:
gtk_thread	baresip/modules/gtk/gtk_mod.c	/^static void *gtk_thread(void *arg)$/;"	f	file:
gvl	baresip/modules/vidloop/vidloop.c	/^static struct video_loop *gvl;$/;"	v	typeref:struct:video_loop	file:
gw	re-0.5.6/src/net/linux/rt.c	/^	struct sa gw;           \/**< Gateway IP address             *\/$/;"	m	struct:net_rt	typeref:struct:net_rt::sa	file:
gx	rem-0.5.2/src/dtmf/dec.c	/^	struct goertzel gx[4], gy[4];$/;"	m	struct:dtmf_dec	typeref:struct:dtmf_dec::goertzel	file:
gy	rem-0.5.2/src/dtmf/dec.c	/^	struct goertzel gx[4], gy[4];$/;"	m	struct:dtmf_dec	typeref:struct:dtmf_dec::	file:
gzrtp	baresip/modules/gzrtp/gzrtp.cpp	/^extern "C" EXPORT_SYM const struct mod_export DECL_EXPORTS(gzrtp) = {$/;"	v	typeref:struct:DECL_EXPORTS
h	baresip/include/baresip.h	/^	log_h *h;$/;"	m	struct:log
h	baresip/include/baresip.h	/^	re_printf_h *h;   \/**< Command handler        *\/$/;"	m	struct:cmd
h	baresip/src/ua.c	/^	ua_event_h *h;$/;"	m	struct:ua_eh	file:
h	re-0.5.6/src/mod/mod.c	/^	void *h;                      \/**< Module handler      *\/$/;"	m	struct:mod	file:
h	re-0.5.6/src/mqueue/mqueue.c	/^	mqueue_h *h;$/;"	m	struct:mqueue	file:
h	re-0.5.6/src/natbd/genalg.c	/^	nat_genalg_h *h;        \/**< Result handler            *\/$/;"	m	struct:nat_genalg	file:
h	rem-0.5.2/include/rem_vid.h	/^	unsigned h;  \/**< Height     *\/$/;"	m	struct:vidrect
h	rem-0.5.2/include/rem_vid.h	/^	unsigned h;  \/**< Height *\/$/;"	m	struct:vidsz
h263	baresip/modules/avcodec/avcodec.c	/^static struct vidcodec h263 = {$/;"	v	typeref:struct:vidcodec	file:
h263	baresip/modules/avcodec/encode.c	/^		} h263;$/;"	m	union:videnc_state::__anon37	typeref:struct:videnc_state::__anon37::__anon38	file:
h263_fmt	baresip/modules/avcodec/encode.c	/^static enum h263_fmt h263_fmt(const struct pl *name)$/;"	f	file:
h263_fmt	baresip/modules/avcodec/h26x.h	/^enum h263_fmt {$/;"	g
h263_fmtp_enc	baresip/modules/avcodec/avcodec.c	/^static int h263_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f	file:
h263_hdr	baresip/modules/avcodec/h26x.h	/^struct h263_hdr {$/;"	s
h263_hdr_copy_strm	baresip/modules/avcodec/h263.c	/^void h263_hdr_copy_strm(struct h263_hdr *hdr, const struct h263_strm *s)$/;"	f
h263_hdr_decode	baresip/modules/avcodec/h263.c	/^int h263_hdr_decode(struct h263_hdr *hdr, struct mbuf *mb)$/;"	f
h263_hdr_encode	baresip/modules/avcodec/h263.c	/^int h263_hdr_encode(const struct h263_hdr *hdr, struct mbuf *mb)$/;"	f
h263_hdr_mode	baresip/modules/avcodec/h263.c	/^enum h263_mode h263_hdr_mode(const struct h263_hdr *hdr)$/;"	f
h263_mode	baresip/modules/avcodec/h26x.h	/^enum h263_mode {$/;"	g
h263_packetize	baresip/modules/avcodec/encode.c	/^static int h263_packetize(struct videnc_state *st,$/;"	f	file:
h263_strm	baresip/modules/avcodec/h26x.h	/^struct h263_strm {$/;"	s
h263_strm_decode	baresip/modules/avcodec/h263.c	/^int h263_strm_decode(struct h263_strm *s, struct mbuf *mb)$/;"	f
h263_strm_find_psc	baresip/modules/avcodec/h263.c	/^const uint8_t *h263_strm_find_psc(const uint8_t *p, uint32_t size)$/;"	f
h264	baresip/modules/avcodec/avcodec.c	/^static struct vidcodec h264 = {$/;"	v	typeref:struct:vidcodec	file:
h264	baresip/modules/avcodec/encode.c	/^		} h264;$/;"	m	union:videnc_state::__anon37	typeref:struct:videnc_state::__anon37::__anon39	file:
h264	baresip/modules/gst_video/encode.c	/^	} h264;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::__anon64	file:
h264	baresip/modules/gst_video/gst_video.c	/^static struct vidcodec h264 = {$/;"	v	typeref:struct:vidcodec	file:
h264	baresip/modules/gst_video1/encode.c	/^	} h264;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::__anon90	file:
h264	baresip/modules/gst_video1/gst_video.c	/^static struct vidcodec h264 = {$/;"	v	typeref:struct:vidcodec	file:
h264	baresip/modules/v4l2_codec/v4l2_codec.c	/^static struct vidcodec h264 = {$/;"	v	typeref:struct:vidcodec	file:
h264_find_startcode	baresip/src/h264.c	/^const uint8_t *h264_find_startcode(const uint8_t *p, const uint8_t *end)$/;"	f
h264_fmtp_cmp	baresip/modules/avcodec/avcodec.c	/^static bool h264_fmtp_cmp(const char *fmtp1, const char *fmtp2, void *data)$/;"	f	file:
h264_fmtp_cmp	baresip/modules/v4l2_codec/v4l2_codec.c	/^static bool h264_fmtp_cmp(const char *fmtp1, const char *fmtp2, void *data)$/;"	f	file:
h264_fmtp_enc	baresip/modules/avcodec/avcodec.c	/^static int h264_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f	file:
h264_fmtp_enc	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int h264_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f	file:
h264_fu	baresip/include/baresip.h	/^struct h264_fu {$/;"	s
h264_fu_hdr_decode	baresip/src/h264.c	/^int h264_fu_hdr_decode(struct h264_fu *fu, struct mbuf *mb)$/;"	f
h264_fu_hdr_encode	baresip/src/h264.c	/^int h264_fu_hdr_encode(const struct h264_fu *fu, struct mbuf *mb)$/;"	f
h264_hdr	baresip/include/baresip.h	/^struct h264_hdr {$/;"	s
h264_hdr_decode	baresip/src/h264.c	/^int h264_hdr_decode(struct h264_hdr *hdr, struct mbuf *mb)$/;"	f
h264_hdr_encode	baresip/src/h264.c	/^int h264_hdr_encode(const struct h264_hdr *hdr, struct mbuf *mb)$/;"	f
h264_is_keyframe	baresip/include/baresip.h	/^static inline bool h264_is_keyframe(int type)$/;"	f
h264_level_idc	baresip/modules/avcodec/avcodec.c	/^const uint8_t h264_level_idc = 0x1f;$/;"	v
h264_level_idc	baresip/modules/gst_video/sdp.c	/^static const uint8_t h264_level_idc = 0x0c;$/;"	v	file:
h264_nal_send	baresip/src/h264.c	/^int h264_nal_send(bool first, bool last,$/;"	f
h264_packetize	baresip/src/h264.c	/^int h264_packetize(uint32_t rtp_ts, const uint8_t *buf, size_t len,$/;"	f
h265	baresip/modules/h265/h265.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(h265) = {$/;"	v	typeref:struct:DECL_EXPORTS
h265	baresip/modules/h265/h265.c	/^static struct vidcodec h265 = {$/;"	v	typeref:struct:vidcodec	file:
h265_decode	baresip/modules/h265/decode.c	/^int h265_decode(struct viddec_state *vds, struct vidframe *frame,$/;"	f
h265_decode_update	baresip/modules/h265/decode.c	/^int h265_decode_update(struct viddec_state **vdsp, const struct vidcodec *vc,$/;"	f
h265_encode	baresip/modules/h265/encode.c	/^int h265_encode(struct videnc_state *st, bool update,$/;"	f
h265_encode_update	baresip/modules/h265/encode.c	/^int h265_encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f
h265_have_startcode	baresip/modules/h265/fmt.c	/^bool h265_have_startcode(const uint8_t *p, size_t len)$/;"	f
h265_is_keyframe	baresip/modules/h265/fmt.c	/^bool h265_is_keyframe(enum h265_naltype type)$/;"	f
h265_nal	baresip/modules/h265/h265.h	/^struct h265_nal {$/;"	s
h265_nal_decode	baresip/modules/h265/fmt.c	/^int h265_nal_decode(struct h265_nal *nal, const uint8_t *p)$/;"	f
h265_nal_encode	baresip/modules/h265/fmt.c	/^void h265_nal_encode(uint8_t buf[2], unsigned nal_unit_type,$/;"	f
h265_nal_encode_mbuf	baresip/modules/h265/fmt.c	/^int h265_nal_encode_mbuf(struct mbuf *mb, const struct h265_nal *nal)$/;"	f
h265_nal_print	baresip/modules/h265/fmt.c	/^void h265_nal_print(const struct h265_nal *nal)$/;"	f
h265_naltype	baresip/modules/h265/h265.h	/^enum h265_naltype {$/;"	g
h265_nalunit_name	baresip/modules/h265/fmt.c	/^const char *h265_nalunit_name(enum h265_naltype type)$/;"	f
h265_skip_startcode	baresip/modules/h265/fmt.c	/^void h265_skip_startcode(uint8_t **p, size_t *n)$/;"	f
hThread	baresip/modules/wincons/wincons.c	/^	HANDLE hThread;$/;"	m	struct:ui_st	file:
ha1	baresip/test/sip/sipsrv.h	/^	uint8_t ha1[MD5_SIZE];$/;"	m	struct:user
hairpin_send	re-0.5.6/src/natbd/hairpinning.c	/^static int hairpin_send(struct nat_hairpinning *nh, const struct sa *srv)$/;"	f	file:
hairpinning_destructor	re-0.5.6/src/natbd/hairpinning.c	/^static void hairpinning_destructor(void *data)$/;"	f	file:
hairpinning_str	baresip/modules/natbd/natbd.c	/^static const char *hairpinning_str(int res_hp)$/;"	f	file:
handleGoClear	baresip/modules/gzrtp/stream.cpp	/^void Stream::handleGoClear()$/;"	f	class:Stream
handle_command	baresip/modules/mqtt/subscribe.c	/^static void handle_command(struct mqtt *mqtt, const struct pl *msg)$/;"	f	file:
handle_incoming_bye	re-0.5.6/src/rtp/sess.c	/^static void handle_incoming_bye(struct rtcp_sess *sess,$/;"	f	file:
handle_incoming_rr	re-0.5.6/src/rtp/sess.c	/^static void handle_incoming_rr(struct rtcp_sess *sess,$/;"	f	file:
handle_incoming_sr	re-0.5.6/src/rtp/sess.c	/^static void handle_incoming_sr(struct rtcp_sess *sess,$/;"	f	file:
handle_message	baresip/src/message.c	/^static void handle_message(struct message_lsnr *lsnr, struct ua *ua,$/;"	f	file:
handle_options	baresip/src/ua.c	/^static void handle_options(struct ua *ua, const struct sip_msg *msg)$/;"	f	file:
handle_packet	baresip/modules/avformat/avformat.c	/^static void handle_packet(struct vidsrc_st *st, AVPacket *pkt)$/;"	f	file:
handle_register	baresip/test/sip/sipsrv.c	/^static bool handle_register(struct sip_server *srv, const struct sip_msg *msg)$/;"	f	file:
handle_resize	baresip/modules/sdl/sdl.c	/^static void handle_resize(int w, int h)$/;"	f	file:
handle_rr_block	re-0.5.6/src/rtp/sess.c	/^static void handle_rr_block(struct rtcp_sess *sess, struct rtp_member *mbr,$/;"	f	file:
handle_rtp	baresip/src/stream.c	/^static void handle_rtp(struct stream *s, const struct rtp_header *hdr,$/;"	f	file:
handle_stun_full	re-0.5.6/src/ice/stunsrv.c	/^static int handle_stun_full(struct icem *icem,$/;"	f	file:
handle_stun_lite	re-0.5.6/src/ice/stunsrv.c	/^static int handle_stun_lite(struct icem *icem,$/;"	f	file:
handle_success	re-0.5.6/src/ice/connchk.c	/^static void handle_success(struct icem *icem, struct ice_candpair *cp,$/;"	f	file:
handle_telev	baresip/src/audio.c	/^static void handle_telev(struct audio *a, struct mbuf *mb)$/;"	f	file:
handler	baresip/include/baresip.h	/^	contact_update_h *handler;$/;"	m	struct:contacts
handler_arg	baresip/include/baresip.h	/^	void* handler_arg;$/;"	m	struct:contacts
handoff_handler	baresip/modules/gst/gst.c	/^static void handoff_handler(GstFakeSink *fakesink, GstBuffer *buffer,$/;"	f	file:
handoff_handler	baresip/modules/gst1/gst.c	/^static void handoff_handler(GstFakeSink *fakesink, GstBuffer *buffer,$/;"	f	file:
hangup	baresip/modules/gtk/call_window.c	/^		GtkWidget *hangup, *transfer, *hold, *mute;$/;"	m	struct:call_window::__anon77	file:
hash	re-0.5.6/src/hash/hash.c	/^struct hash {$/;"	s	file:
hash	re-0.5.6/src/sip/dialog.c	/^	uint32_t hash;$/;"	m	struct:sip_dialog	file:
hash_alloc	re-0.5.6/src/hash/hash.c	/^int hash_alloc(struct hash **hp, uint32_t bsize)$/;"	f
hash_append	re-0.5.6/src/hash/hash.c	/^void hash_append(struct hash *h, uint32_t key, struct le *le, void *data)$/;"	f
hash_apply	re-0.5.6/src/hash/hash.c	/^struct le *hash_apply(const struct hash *h, list_apply_h *ah, void *arg)$/;"	f
hash_bsize	re-0.5.6/src/hash/hash.c	/^uint32_t hash_bsize(const struct hash *h)$/;"	f
hash_clear	re-0.5.6/src/hash/hash.c	/^void hash_clear(struct hash *h)$/;"	f
hash_cmp_handler	re-0.5.6/src/rtp/member.c	/^static bool hash_cmp_handler(struct le *le, void *arg)$/;"	f	file:
hash_cmp_handler	re-0.5.6/src/turn/perm.c	/^static bool hash_cmp_handler(struct le *le, void *arg)$/;"	f	file:
hash_destructor	re-0.5.6/src/hash/hash.c	/^static void hash_destructor(void *data)$/;"	f	file:
hash_fast	re-0.5.6/src/hash/func.c	/^uint32_t hash_fast(const char *k, size_t len)$/;"	f
hash_fast_str	re-0.5.6/src/hash/func.c	/^uint32_t hash_fast_str(const char *str)$/;"	f
hash_flush	re-0.5.6/src/hash/hash.c	/^void hash_flush(struct hash *h)$/;"	f
hash_joaat	re-0.5.6/src/hash/func.c	/^uint32_t hash_joaat(const uint8_t *key, size_t len)$/;"	f
hash_joaat_ci	re-0.5.6/src/hash/func.c	/^uint32_t hash_joaat_ci(const char *str, size_t len)$/;"	f
hash_joaat_pl	re-0.5.6/src/hash/func.c	/^uint32_t hash_joaat_pl(const struct pl *pl)$/;"	f
hash_joaat_pl_ci	re-0.5.6/src/hash/func.c	/^uint32_t hash_joaat_pl_ci(const struct pl *pl)$/;"	f
hash_joaat_str	re-0.5.6/src/hash/func.c	/^uint32_t hash_joaat_str(const char *str)$/;"	f
hash_joaat_str_ci	re-0.5.6/src/hash/func.c	/^uint32_t hash_joaat_str_ci(const char *str)$/;"	f
hash_list	re-0.5.6/src/hash/hash.c	/^struct list *hash_list(const struct hash *h, uint32_t key)$/;"	f
hash_lookup	re-0.5.6/src/hash/hash.c	/^struct le *hash_lookup(const struct hash *h, uint32_t key, list_apply_h *ah,$/;"	f
hash_unlink	re-0.5.6/src/hash/hash.c	/^void hash_unlink(struct le *le)$/;"	f
hash_valid_size	re-0.5.6/src/hash/hash.c	/^uint32_t hash_valid_size(uint32_t size)$/;"	f
hashlittle	re-0.5.6/src/hash/func.c	/^static uint32_t hashlittle( const void *key, size_t length, uint32_t initval)$/;"	f	file:
hashmask	re-0.5.6/src/hash/func.c	162;"	d	file:
hashsize	re-0.5.6/src/hash/func.c	161;"	d	file:
have_active_calls	baresip/modules/menu/menu.c	/^static bool have_active_calls(void)$/;"	f	file:
have_common_audio_codecs	baresip/src/call.c	/^static bool have_common_audio_codecs(const struct call *call)$/;"	f	file:
hdl	baresip/modules/sndio/sndio.c	/^	struct sio_hdl *hdl;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::sio_hdl	file:
hdl	baresip/modules/sndio/sndio.c	/^	struct sio_hdl *hdl;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::sio_hdl	file:
hdr	baresip/modules/av1/decode.c	/^struct hdr {$/;"	s	file:
hdr	baresip/modules/vp8/decode.c	/^struct hdr {$/;"	s	file:
hdr	baresip/modules/vp9/decode.c	/^struct hdr {$/;"	s	file:
hdr	baresip/test/mock/mock_vidcodec.c	/^struct hdr {$/;"	s	file:
hdr	re-0.5.6/include/re_rtp.h	/^	} hdr;$/;"	m	struct:rtcp_msg	typeref:struct:rtcp_msg::rtcp_hdr
hdr	re-0.5.6/src/dns/client.c	/^	struct dnshdr hdr;$/;"	m	struct:dnsquery	typeref:struct:dnsquery::dnshdr	file:
hdr	re-0.5.6/src/jbuf/jbuf.c	/^	struct rtp_header hdr;  \/**< RTP Header                *\/$/;"	m	struct:frame	typeref:struct:frame::rtp_header	file:
hdr	re-0.5.6/src/sip/auth.c	/^	enum sip_hdrid hdr;$/;"	m	struct:realm	typeref:enum:realm::sip_hdrid	file:
hdr	re-0.5.6/src/stun/msg.c	/^	struct stun_hdr hdr;$/;"	m	struct:stun_msg	typeref:struct:stun_msg::stun_hdr	file:
hdr_add	re-0.5.6/src/http/msg.c	/^static inline int hdr_add(struct http_msg *msg, const struct pl *name,$/;"	f	file:
hdr_add	re-0.5.6/src/sip/msg.c	/^static inline int hdr_add(struct sip_msg *msg, const struct pl *name,$/;"	f	file:
hdr_comma_separated	re-0.5.6/src/http/msg.c	/^static inline bool hdr_comma_separated(enum http_hdrid id)$/;"	f	file:
hdr_comma_separated	re-0.5.6/src/sip/msg.c	/^static inline bool hdr_comma_separated(enum sip_hdrid id)$/;"	f	file:
hdr_decode	baresip/modules/av1/decode.c	/^static inline int hdr_decode(struct hdr *hdr, struct mbuf *mb)$/;"	f	file:
hdr_decode	baresip/modules/vp8/decode.c	/^static inline int hdr_decode(struct hdr *hdr, struct mbuf *mb)$/;"	f	file:
hdr_decode	baresip/modules/vp9/decode.c	/^static inline int hdr_decode(struct hdr *hdr, struct mbuf *mb)$/;"	f	file:
hdr_decode	baresip/test/mock/mock_vidcodec.c	/^static int hdr_decode(struct hdr *hdr, struct mbuf *mb)$/;"	f	file:
hdr_decode	re-0.5.6/src/bfcp/msg.c	/^static int hdr_decode(struct bfcp_msg *msg, struct mbuf *mb)$/;"	f	file:
hdr_destructor	re-0.5.6/src/http/msg.c	/^static void hdr_destructor(void *arg)$/;"	f	file:
hdr_destructor	re-0.5.6/src/sip/msg.c	/^static void hdr_destructor(void *arg)$/;"	f	file:
hdr_encode	baresip/modules/av1/encode.c	/^static inline void hdr_encode(uint8_t hdr[HDR_SIZE], bool noref, bool start,$/;"	f	file:
hdr_encode	baresip/modules/vp8/encode.c	/^static inline void hdr_encode(uint8_t hdr[HDR_SIZE], bool noref, bool start,$/;"	f	file:
hdr_encode	baresip/modules/vp9/encode.c	/^static inline void hdr_encode(uint8_t hdr[HDR_SIZE], bool start, bool end,$/;"	f	file:
hdr_encode	re-0.5.6/src/bfcp/msg.c	/^static int hdr_encode(struct mbuf *mb, uint8_t ver, bool r,$/;"	f	file:
hdr_hash	re-0.5.6/src/http/msg.c	/^static enum http_hdrid hdr_hash(const struct pl *name)$/;"	f	file:
hdr_hash	re-0.5.6/src/sip/msg.c	/^static enum sip_hdrid hdr_hash(const struct pl *name)$/;"	f	file:
hdrht	re-0.5.6/include/re_sip.h	/^	struct hash *hdrht;    \/**< Hash-table with all SIP headers      *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::hash
hdrl	re-0.5.6/include/re_http.h	/^	struct list hdrl;      \/**< List of HTTP headers (struct http_hdr) *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::list
hdrl	re-0.5.6/include/re_sip.h	/^	struct list hdrl;      \/**< List of SIP Headers (struct sip_hdr) *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::list
hdrs	re-0.5.6/src/sipevent/sipevent.h	/^	char *hdrs;$/;"	m	struct:sipnot
hdrs	re-0.5.6/src/sipevent/sipevent.h	/^	char *hdrs;$/;"	m	struct:sipsub
hdrs	re-0.5.6/src/sipreg/reg.c	/^	struct mbuf *hdrs;$/;"	m	struct:sipreg	typeref:struct:sipreg::mbuf	file:
hdrs	re-0.5.6/src/sipsess/sipsess.h	/^	struct mbuf *hdrs;$/;"	m	struct:sipsess	typeref:struct:sipsess::mbuf
he	baresip/src/contact.c	/^	struct le he;          \/* hash-element with key 'auri' *\/$/;"	m	struct:contact	typeref:struct:contact::le	file:
he	baresip/test/sip/sipsrv.h	/^	struct le he;$/;"	m	struct:aor	typeref:struct:aor::le
he	baresip/test/sip/sipsrv.h	/^	struct le he;$/;"	m	struct:domain	typeref:struct:domain::le
he	baresip/test/sip/sipsrv.h	/^	struct le he;$/;"	m	struct:user	typeref:struct:user::le
he	re-0.5.6/include/re_odict.h	/^	struct le le, he;$/;"	m	struct:odict_entry	typeref:struct:odict_entry::
he	re-0.5.6/include/re_sip.h	/^	struct le he;          \/**< Hash-table element     *\/$/;"	m	struct:sip_hdr	typeref:struct:sip_hdr::le
he	re-0.5.6/src/dns/dname.c	/^	struct le he;$/;"	m	struct:dname	typeref:struct:dname::le	file:
he	re-0.5.6/src/http/client.c	/^	struct le he;$/;"	m	struct:conn	typeref:struct:conn::le	file:
he	re-0.5.6/src/sip/ctrans.c	/^	struct le he;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::le	file:
he	re-0.5.6/src/sip/keepalive_udp.c	/^	struct le he;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::le	file:
he	re-0.5.6/src/sip/strans.c	/^	struct le he;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::le	file:
he	re-0.5.6/src/sip/transp.c	/^	struct le he;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::le	file:
he	re-0.5.6/src/sipevent/sipevent.h	/^	struct le he;$/;"	m	struct:sipnot	typeref:struct:sipnot::le
he	re-0.5.6/src/sipevent/sipevent.h	/^	struct le he;$/;"	m	struct:sipsub	typeref:struct:sipsub::le
he	re-0.5.6/src/sipsess/ack.c	/^	struct le he;$/;"	m	struct:sipsess_ack	typeref:struct:sipsess_ack::le	file:
he	re-0.5.6/src/sipsess/sipsess.h	/^	struct le he;$/;"	m	struct:sipsess	typeref:struct:sipsess::le
he	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct le he;$/;"	m	struct:tls_conn	typeref:struct:tls_conn::le	file:
he	re-0.5.6/src/turn/perm.c	/^	struct le he;$/;"	m	struct:perm	typeref:struct:perm::le	file:
he_mrg	re-0.5.6/src/sip/strans.c	/^	struct le he_mrg;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::le	file:
he_numb	re-0.5.6/src/turn/chan.c	/^	struct le he_numb;$/;"	m	struct:chan	typeref:struct:chan::le	file:
he_peer	re-0.5.6/src/turn/chan.c	/^	struct le he_peer;$/;"	m	struct:chan	typeref:struct:chan::le	file:
head	re-0.5.6/include/re_list.h	/^	struct le *head;  \/**< First list element *\/$/;"	m	struct:list	typeref:struct:list::le
head_recv	baresip/modules/rst/rst.c	/^	bool head_recv;$/;"	m	struct:rst	file:
header_handler	re-0.5.6/src/uri/ucmp.c	/^static int header_handler(const struct pl *hname, const struct pl *hvalue,$/;"	f	file:
headers	re-0.5.6/include/re_uri.h	/^	struct pl headers;   \/**< Optional URI-headers              *\/$/;"	m	struct:uri	typeref:struct:uri::pl
height	baresip/include/baresip.h	/^	unsigned width, height; \/**< Video resolution               *\/$/;"	m	struct:config_video
height	baresip/test/mock/mock_vidcodec.c	/^	unsigned height;$/;"	m	struct:hdr	file:
helper_destructor	re-0.5.6/src/tcp/tcp.c	/^static void helper_destructor(void *data)$/;"	f	file:
helper_destructor	re-0.5.6/src/udp/udp.c	/^static void helper_destructor(void *data)$/;"	f	file:
helper_estab_handler	re-0.5.6/src/tcp/tcp.c	/^static bool helper_estab_handler(int *err, bool active, void *arg)$/;"	f	file:
helper_recv_handler	re-0.5.6/src/ice/comp.c	/^static bool helper_recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
helper_recv_handler	re-0.5.6/src/tcp/tcp.c	/^static bool helper_recv_handler(int *err, struct mbuf *mb, bool *estab,$/;"	f	file:
helper_recv_handler	re-0.5.6/src/udp/udp.c	/^static bool helper_recv_handler(struct sa *src,$/;"	f	file:
helper_send_handler	re-0.5.6/src/tcp/tcp.c	/^static bool helper_send_handler(int *err, struct mbuf *mb, void *arg)$/;"	f	file:
helper_send_handler	re-0.5.6/src/udp/udp.c	/^static bool helper_send_handler(int *err, struct sa *dst,$/;"	f	file:
helpers	re-0.5.6/src/tcp/tcp.c	/^	struct list helpers;  \/**< List of TCP-helpers               *\/$/;"	m	struct:tcp_conn	typeref:struct:tcp_conn::list	file:
helpers	re-0.5.6/src/udp/udp.c	/^	struct list helpers; \/**< List of UDP Helpers         *\/$/;"	m	struct:udp_sock	typeref:struct:udp_sock::list	file:
hex_chars	re-0.5.6/src/fmt/unicode.c	/^static const char *hex_chars = "0123456789ABCDEF";$/;"	v	file:
hexdump	re-0.5.6/src/fmt/hexdump.c	/^void hexdump(FILE *f, const void *p, size_t len)$/;"	f
hi	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t hi;  \/**< Seconds since 0h UTC on 1 January 1900 *\/$/;"	m	struct:ntp_time
hide	baresip/modules/directfb/directfb.c	/^static void hide(struct vidisp_st *st)$/;"	f	file:
hide	baresip/modules/sdl2/sdl.c	/^static void hide(struct vidisp_st *st)$/;"	f	file:
hide	baresip/modules/x11/x11.c	/^static void hide(struct vidisp_st *st)$/;"	f	file:
hideh	baresip/src/core.h	/^	vidisp_hide_h   *hideh;$/;"	m	struct:vidisp
history	rem-0.5.2/include/rem_fir.h	/^	int16_t history[256];  \/**< Previous samples *\/$/;"	m	struct:fir
hmac	re-0.5.6/src/hmac/apple/hmac.c	/^struct hmac {$/;"	s	file:
hmac	re-0.5.6/src/hmac/hmac.c	/^struct hmac {$/;"	s	file:
hmac	re-0.5.6/src/hmac/openssl/hmac.c	/^struct hmac {$/;"	s	file:
hmac	re-0.5.6/src/srtp/srtp.h	/^		struct hmac *hmac;  \/**< HMAC Context                      *\/$/;"	m	struct:srtp::comp	typeref:struct:srtp::comp::hmac
hmac_create	re-0.5.6/src/hmac/apple/hmac.c	/^int hmac_create(struct hmac **hmacp, enum hmac_hash hash,$/;"	f
hmac_create	re-0.5.6/src/hmac/hmac.c	/^int hmac_create(struct hmac **hmacp, enum hmac_hash hash,$/;"	f
hmac_create	re-0.5.6/src/hmac/openssl/hmac.c	/^int hmac_create(struct hmac **hmacp, enum hmac_hash hash,$/;"	f
hmac_digest	re-0.5.6/src/hmac/apple/hmac.c	/^int hmac_digest(struct hmac *hmac, uint8_t *md, size_t md_len,$/;"	f
hmac_digest	re-0.5.6/src/hmac/hmac.c	/^int hmac_digest(struct hmac *hmac, uint8_t *md, size_t md_len,$/;"	f
hmac_digest	re-0.5.6/src/hmac/openssl/hmac.c	/^int hmac_digest(struct hmac *hmac, uint8_t *md, size_t md_len,$/;"	f
hmac_hash	re-0.5.6/include/re_hmac.h	/^enum hmac_hash {$/;"	g
hmac_sha1	re-0.5.6/src/hmac/hmac_sha1.c	/^void hmac_sha1(const uint8_t *k,  \/* secret key *\/$/;"	f
hmv1	baresip/modules/avcodec/h26x.h	/^	unsigned hmv1:7;  \/\/ horizontal motion vector$/;"	m	struct:h263_hdr
hmv2	baresip/modules/avcodec/h26x.h	/^	unsigned hmv2:7;$/;"	m	struct:h263_hdr
hold	baresip/modules/gtk/call_window.c	/^		GtkWidget *hangup, *transfer, *hold, *mute;$/;"	m	struct:call_window::__anon77	file:
hold_prev_call	baresip/modules/menu/menu.c	/^static int hold_prev_call(struct re_printf *pf, void *arg)$/;"	f	file:
host	baresip/modules/natbd/natbd.c	/^	char host[256];$/;"	m	struct:natbd	file:
host	baresip/modules/rst/rst.c	/^	char *host;$/;"	m	struct:rst	file:
host	re-0.5.6/include/re_uri.h	/^	struct pl host;      \/**< Hostname or IP-address            *\/$/;"	m	struct:uri	typeref:struct:uri::pl
host	re-0.5.6/src/http/client.c	/^	char *host;$/;"	m	struct:http_req	file:
host	re-0.5.6/src/sip/request.c	/^	char *host;$/;"	m	struct:sip_request	file:
hph	re-0.5.6/src/natbd/hairpinning.c	/^	nat_hairpinning_h *hph;  \/**< Result handler          *\/$/;"	m	struct:nat_hairpinning	file:
hstdin	baresip/modules/wincons/wincons.c	/^	HANDLE hstdin;$/;"	m	struct:ui_st	file:
ht	re-0.5.6/include/re_odict.h	/^	struct hash *ht;$/;"	m	struct:odict	typeref:struct:odict::hash
ht	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct hash *ht;$/;"	m	struct:dtls_sock	typeref:struct:dtls_sock::hash	file:
ht_ack	re-0.5.6/src/sipsess/sipsess.h	/^	struct hash *ht_ack;$/;"	m	struct:sipsess_sock	typeref:struct:sipsess_sock::hash
ht_aor	baresip/test/sip/sipsrv.h	/^	struct hash *ht_aor;$/;"	m	struct:sip_server	typeref:struct:sip_server::hash
ht_conn	re-0.5.6/src/http/client.c	/^	struct hash *ht_conn;$/;"	m	struct:http_cli	typeref:struct:http_cli::hash	file:
ht_conn	re-0.5.6/src/sip/sip.h	/^	struct hash *ht_conn;$/;"	m	struct:sip	typeref:struct:sip::hash
ht_ctrans	re-0.5.6/src/sip/sip.h	/^	struct hash *ht_ctrans;$/;"	m	struct:sip	typeref:struct:sip::hash
ht_device	baresip/modules/aubridge/aubridge.c	/^struct hash *ht_device;$/;"	v	typeref:struct:hash
ht_disp	baresip/modules/vidbridge/vidbridge.c	/^struct hash *ht_disp;$/;"	v	typeref:struct:hash
ht_dom	baresip/test/sip/sipsrv.h	/^	struct hash *ht_dom;$/;"	m	struct:sip_server	typeref:struct:sip_server::hash
ht_not	re-0.5.6/src/sipevent/sipevent.h	/^	struct hash *ht_not;$/;"	m	struct:sipevent_sock	typeref:struct:sipevent_sock::hash
ht_numb	re-0.5.6/src/turn/chan.c	/^	struct hash *ht_numb;$/;"	m	struct:channels	typeref:struct:channels::hash	file:
ht_peer	re-0.5.6/src/turn/chan.c	/^	struct hash *ht_peer;$/;"	m	struct:channels	typeref:struct:channels::hash	file:
ht_query	re-0.5.6/src/dns/client.c	/^	struct hash *ht_query;$/;"	m	struct:dnsc	typeref:struct:dnsc::hash	file:
ht_sess	re-0.5.6/src/sipsess/sipsess.h	/^	struct hash *ht_sess;$/;"	m	struct:sipsess_sock	typeref:struct:sipsess_sock::hash
ht_src	baresip/modules/vidbridge/vidbridge.c	/^struct hash *ht_src;$/;"	v	typeref:struct:hash
ht_strans	re-0.5.6/src/sip/sip.h	/^	struct hash *ht_strans;$/;"	m	struct:sip	typeref:struct:sip::hash
ht_strans_mrg	re-0.5.6/src/sip/sip.h	/^	struct hash *ht_strans_mrg;$/;"	m	struct:sip	typeref:struct:sip::hash
ht_sub	re-0.5.6/src/sipevent/sipevent.h	/^	struct hash *ht_sub;$/;"	m	struct:sipevent_sock	typeref:struct:sipevent_sock::hash
ht_tcpconn	re-0.5.6/src/dns/client.c	/^	struct hash *ht_tcpconn;$/;"	m	struct:dnsc	typeref:struct:dnsc::hash	file:
ht_udpconn	re-0.5.6/src/sip/sip.h	/^	struct hash *ht_udpconn;$/;"	m	struct:sip	typeref:struct:sip::hash
ht_usr	baresip/test/sip/sipsrv.h	/^	struct hash *ht_usr;$/;"	m	struct:domain	typeref:struct:domain::hash
html_print_cmd	baresip/modules/httpd/httpd.c	/^static int html_print_cmd(struct re_printf *pf, const struct pl *prm)$/;"	f	file:
html_print_head	baresip/modules/httpd/httpd.c	/^static int html_print_head(struct re_printf *pf, void *unused)$/;"	f	file:
html_print_raw	baresip/modules/httpd/httpd.c	/^static int html_print_raw(struct re_printf *pf, const struct pl *prm)$/;"	f	file:
http_auth	re-0.5.6/include/re_http.h	/^struct http_auth {$/;"	s
http_auth_check	re-0.5.6/src/http/auth.c	/^bool http_auth_check(const struct pl *hval, const struct pl *method,$/;"	f
http_auth_check_request	re-0.5.6/src/http/auth.c	/^bool http_auth_check_request(const struct http_msg *msg,$/;"	f
http_auth_h	re-0.5.6/include/re_http.h	/^typedef int (http_auth_h)(const struct pl *username, uint8_t *ha1, void *arg);$/;"	t
http_auth_print_challenge	re-0.5.6/src/http/auth.c	/^int http_auth_print_challenge(struct re_printf *pf,$/;"	f
http_chunk	re-0.5.6/src/http/http.h	/^struct http_chunk {$/;"	s
http_chunk_decode	re-0.5.6/src/http/chunk.c	/^int http_chunk_decode(struct http_chunk *chunk, struct mbuf *mb, size_t *size)$/;"	f
http_cli	re-0.5.6/src/http/client.c	/^struct http_cli {$/;"	s	file:
http_client_alloc	re-0.5.6/src/http/client.c	/^int http_client_alloc(struct http_cli **clip, struct dnsc *dnsc)$/;"	f
http_conn	re-0.5.6/src/http/server.c	/^struct http_conn {$/;"	s	file:
http_conn_close	re-0.5.6/src/http/server.c	/^void http_conn_close(struct http_conn *conn)$/;"	f
http_conn_h	re-0.5.6/include/re_http.h	/^typedef void (http_conn_h)(struct tcp_conn *tc, struct tls_conn *sc,$/;"	t
http_conn_handler	re-0.5.6/src/websock/websock.c	/^static void http_conn_handler(struct tcp_conn *tc, struct tls_conn *sc,$/;"	f	file:
http_conn_peer	re-0.5.6/src/http/server.c	/^const struct sa *http_conn_peer(const struct http_conn *conn)$/;"	f
http_conn_tcp	re-0.5.6/src/http/server.c	/^struct tcp_conn *http_conn_tcp(struct http_conn *conn)$/;"	f
http_conn_tls	re-0.5.6/src/http/server.c	/^struct tls_conn *http_conn_tls(struct http_conn *conn)$/;"	f
http_creply	re-0.5.6/src/http/server.c	/^int http_creply(struct http_conn *conn, uint16_t scode, const char *reason,$/;"	f
http_data_h	re-0.5.6/include/re_http.h	/^typedef int  (http_data_h)(const uint8_t *buf, size_t size,$/;"	t
http_ereply	re-0.5.6/src/http/server.c	/^int http_ereply(struct http_conn *conn, uint16_t scode, const char *reason)$/;"	f
http_hdr	re-0.5.6/include/re_http.h	/^struct http_hdr {$/;"	s
http_hdr_h	re-0.5.6/include/re_http.h	/^typedef bool(http_hdr_h)(const struct http_hdr *hdr, void *arg);$/;"	t
http_hdrid	re-0.5.6/include/re_http.h	/^enum http_hdrid {$/;"	g
http_listen	re-0.5.6/src/http/server.c	/^int http_listen(struct http_sock **sockp, const struct sa *laddr,$/;"	f
http_msg	re-0.5.6/include/re_http.h	/^struct http_msg {$/;"	s
http_msg_decode	re-0.5.6/src/http/msg.c	/^int http_msg_decode(struct http_msg **msgp, struct mbuf *mb, bool req)$/;"	f
http_msg_hdr	re-0.5.6/src/http/msg.c	/^const struct http_hdr *http_msg_hdr(const struct http_msg *msg,$/;"	f
http_msg_hdr_apply	re-0.5.6/src/http/msg.c	/^const struct http_hdr *http_msg_hdr_apply(const struct http_msg *msg,$/;"	f
http_msg_hdr_count	re-0.5.6/src/http/msg.c	/^uint32_t http_msg_hdr_count(const struct http_msg *msg, enum http_hdrid id)$/;"	f
http_msg_hdr_has_value	re-0.5.6/src/http/msg.c	/^bool http_msg_hdr_has_value(const struct http_msg *msg, enum http_hdrid id,$/;"	f
http_msg_print	re-0.5.6/src/http/msg.c	/^int http_msg_print(struct re_printf *pf, const struct http_msg *msg)$/;"	f
http_msg_xhdr	re-0.5.6/src/http/msg.c	/^const struct http_hdr *http_msg_xhdr(const struct http_msg *msg,$/;"	f
http_msg_xhdr_apply	re-0.5.6/src/http/msg.c	/^const struct http_hdr *http_msg_xhdr_apply(const struct http_msg *msg,$/;"	f
http_msg_xhdr_count	re-0.5.6/src/http/msg.c	/^uint32_t http_msg_xhdr_count(const struct http_msg *msg, const char *name)$/;"	f
http_msg_xhdr_has_value	re-0.5.6/src/http/msg.c	/^bool http_msg_xhdr_has_value(const struct http_msg *msg, const char *name,$/;"	f
http_reply	re-0.5.6/src/http/server.c	/^int http_reply(struct http_conn *conn, uint16_t scode, const char *reason,$/;"	f
http_req	re-0.5.6/src/http/client.c	/^struct http_req {$/;"	s	file:
http_req_h	re-0.5.6/include/re_http.h	/^typedef void (http_req_h)(struct http_conn *conn, const struct http_msg *msg,$/;"	t
http_req_handler	baresip/modules/httpd/httpd.c	/^static void http_req_handler(struct http_conn *conn,$/;"	f	file:
http_req_set_conn_handler	re-0.5.6/src/http/client.c	/^void http_req_set_conn_handler(struct http_req *req, http_conn_h *connh)$/;"	f
http_request	re-0.5.6/src/http/client.c	/^int http_request(struct http_req **reqp, struct http_cli *cli, const char *met,$/;"	f
http_resp_h	re-0.5.6/include/re_http.h	/^typedef void (http_resp_h)(int err, const struct http_msg *msg, void *arg);$/;"	t
http_resp_handler	re-0.5.6/src/websock/websock.c	/^static void http_resp_handler(int err, const struct http_msg *msg, void *arg)$/;"	f	file:
http_sock	re-0.5.6/src/http/server.c	/^struct http_sock {$/;"	s	file:
http_sock_tcp	re-0.5.6/src/http/server.c	/^struct tcp_sock *http_sock_tcp(struct http_sock *sock)$/;"	f
http_vreply	re-0.5.6/src/http/server.c	/^static int http_vreply(struct http_conn *conn, uint16_t scode,$/;"	f	file:
httpauth_digest_chall	re-0.5.6/include/re_httpauth.h	/^struct httpauth_digest_chall {$/;"	s
httpauth_digest_challenge_decode	re-0.5.6/src/httpauth/digest.c	/^int httpauth_digest_challenge_decode(struct httpauth_digest_chall *chall,$/;"	f
httpauth_digest_resp	re-0.5.6/include/re_httpauth.h	/^struct httpauth_digest_resp {$/;"	s
httpauth_digest_response_auth	re-0.5.6/src/httpauth/digest.c	/^int httpauth_digest_response_auth(const struct httpauth_digest_resp *resp,$/;"	f
httpauth_digest_response_decode	re-0.5.6/src/httpauth/digest.c	/^int httpauth_digest_response_decode(struct httpauth_digest_resp *resp,$/;"	f
httpd	baresip/modules/httpd/httpd.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(httpd) = {$/;"	v	typeref:struct:DECL_EXPORTS
https_listen	re-0.5.6/src/http/server.c	/^int https_listen(struct http_sock **sockp, const struct sa *laddr,$/;"	f
httpsock	baresip/modules/httpd/httpd.c	/^static struct http_sock *httpsock;$/;"	v	typeref:struct:http_sock	file:
i	baresip/modules/av1/decode.c	/^	unsigned i:1;$/;"	m	struct:hdr	file:
i	baresip/modules/avcodec/h26x.h	/^	unsigned i:1;      \/**< 1 bit  - 0=intra-coded, 1=inter-coded       *\/$/;"	m	struct:h263_hdr
i	baresip/modules/vp8/decode.c	/^	unsigned i:1;$/;"	m	struct:hdr	file:
i	baresip/modules/vp9/decode.c	/^	unsigned i:1;  \/* I: Picture ID (PID) present                *\/$/;"	m	struct:hdr	file:
i	rem-0.5.2/util/genfir.py	/^i = 0$/;"	v
ic	baresip/modules/avformat/avformat.c	/^	AVFormatContext *ic;$/;"	m	struct:vidsrc_st	file:
ice	baresip/modules/ice/ice.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(ice) = {$/;"	v	typeref:struct:DECL_EXPORTS
ice	baresip/modules/ice/ice.c	/^} ice = {$/;"	v	typeref:struct:__anon45	file:
ice_attr_cand	re-0.5.6/src/ice/icesdp.c	/^const char ice_attr_cand[]        = "candidate";$/;"	v
ice_attr_lite	re-0.5.6/src/ice/icesdp.c	/^const char ice_attr_lite[]        = "ice-lite";$/;"	v
ice_attr_mismatch	re-0.5.6/src/ice/icesdp.c	/^const char ice_attr_mismatch[]    = "ice-mismatch";$/;"	v
ice_attr_pwd	re-0.5.6/src/ice/icesdp.c	/^const char ice_attr_pwd[]         = "ice-pwd";$/;"	v
ice_attr_remote_cand	re-0.5.6/src/ice/icesdp.c	/^const char ice_attr_remote_cand[] = "remote-candidates";$/;"	v
ice_attr_ufrag	re-0.5.6/src/ice/icesdp.c	/^const char ice_attr_ufrag[]       = "ice-ufrag";$/;"	v
ice_calc_pair_prio	re-0.5.6/src/ice/util.c	/^uint64_t ice_calc_pair_prio(uint32_t g, uint32_t d)$/;"	f
ice_cand	re-0.5.6/src/ice/ice.h	/^struct ice_cand {$/;"	s
ice_cand_attr	re-0.5.6/include/re_ice.h	/^struct ice_cand_attr {$/;"	s
ice_cand_attr_decode	re-0.5.6/src/ice/icesdp.c	/^int ice_cand_attr_decode(struct ice_cand_attr *cand, const char *val)$/;"	f
ice_cand_attr_encode	re-0.5.6/src/ice/icesdp.c	/^int ice_cand_attr_encode(struct re_printf *pf,$/;"	f
ice_cand_calc_prio	re-0.5.6/src/ice/util.c	/^uint32_t ice_cand_calc_prio(enum ice_cand_type type, uint16_t local,$/;"	f
ice_cand_encode	re-0.5.6/src/ice/icesdp.c	/^int ice_cand_encode(struct re_printf *pf, const struct ice_cand *cand)$/;"	f
ice_cand_name2type	re-0.5.6/src/ice/icestr.c	/^enum ice_cand_type ice_cand_name2type(const char *name)$/;"	f
ice_cand_type	re-0.5.6/include/re_ice.h	/^enum ice_cand_type {$/;"	g
ice_cand_type2name	re-0.5.6/src/ice/icestr.c	/^const char *ice_cand_type2name(enum ice_cand_type type)$/;"	f
ice_candpair	re-0.5.6/src/ice/ice.h	/^struct ice_candpair {$/;"	s
ice_candpair_set_states	re-0.5.6/src/ice/chklist.c	/^void ice_candpair_set_states(struct icem *icem)$/;"	f
ice_candpair_state	re-0.5.6/include/re_ice.h	/^enum ice_candpair_state {$/;"	g
ice_candpair_state2name	re-0.5.6/src/ice/icestr.c	/^const char *ice_candpair_state2name(enum ice_candpair_state st)$/;"	f
ice_checkl_state	re-0.5.6/src/ice/ice.h	/^enum ice_checkl_state {$/;"	g
ice_checkl_state2name	re-0.5.6/src/ice/icestr.c	/^const char *ice_checkl_state2name(enum ice_checkl_state cst)$/;"	f
ice_compid	re-0.5.6/include/re_ice.h	/^enum ice_compid {$/;"	g
ice_conf	re-0.5.6/include/re_ice.h	/^struct ice_conf {$/;"	s
ice_connchk_h	re-0.5.6/include/re_ice.h	/^typedef void (ice_connchk_h)(int err, bool update, void *arg);$/;"	t
ice_determine_role	re-0.5.6/src/ice/icem.c	/^static void ice_determine_role(struct icem *icem, enum ice_role role)$/;"	f	file:
ice_list_unique	re-0.5.6/src/ice/util.c	/^uint32_t ice_list_unique(struct list *list, list_unique_h *uh)$/;"	f
ice_mode	re-0.5.6/include/re_ice.h	/^enum ice_mode {$/;"	g
ice_mode2name	re-0.5.6/src/ice/icestr.c	/^const char *ice_mode2name(enum ice_mode mode)$/;"	f
ice_nomination	re-0.5.6/include/re_ice.h	/^enum ice_nomination {$/;"	g
ice_printf	baresip/modules/ice/ice.c	/^static void ice_printf(struct mnat_media *m, const char *fmt, ...)$/;"	f	file:
ice_remotecands_avail	re-0.5.6/src/ice/icesdp.c	/^bool ice_remotecands_avail(const struct icem *icem)$/;"	f
ice_remotecands_encode	re-0.5.6/src/ice/icesdp.c	/^int ice_remotecands_encode(struct re_printf *pf, const struct icem *icem)$/;"	f
ice_role	re-0.5.6/include/re_ice.h	/^enum ice_role {$/;"	g
ice_role2name	re-0.5.6/src/ice/icestr.c	/^const char *ice_role2name(enum ice_role role)$/;"	f
ice_sdp_decode	re-0.5.6/src/ice/icesdp.c	/^int ice_sdp_decode(struct icem *icem, const char *name, const char *value)$/;"	f
ice_start	baresip/modules/ice/ice.c	/^static int ice_start(struct mnat_sess *sess)$/;"	f	file:
ice_switch_local_role	re-0.5.6/src/ice/util.c	/^void ice_switch_local_role(struct icem *icem)$/;"	f
ice_tcptype	re-0.5.6/include/re_ice.h	/^enum ice_tcptype {$/;"	g
ice_tcptype_name	re-0.5.6/src/ice/icesdp.c	/^static const char *ice_tcptype_name(enum ice_tcptype tcptype)$/;"	f	file:
ice_tcptype_resolve	re-0.5.6/src/ice/icesdp.c	/^static enum ice_tcptype ice_tcptype_resolve(const struct pl *pl)$/;"	f	file:
ice_transp	re-0.5.6/src/ice/ice.h	/^enum ice_transp {$/;"	g
icecomp_debug	re-0.5.6/src/ice/comp.c	/^int icecomp_debug(struct re_printf *pf, const struct icem_comp *comp)$/;"	f
icecomp_printf	re-0.5.6/src/ice/comp.c	/^void icecomp_printf(struct icem_comp *comp, const char *fmt, ...)$/;"	f
icem	baresip/modules/ice/ice.c	/^	struct icem *icem;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::icem	file:
icem	re-0.5.6/src/ice/ice.h	/^	struct icem *icem;           \/**< Parent ICE media                  *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::icem
icem	re-0.5.6/src/ice/ice.h	/^	struct icem *icem;           \/**< Pointer to parent ICE media        *\/$/;"	m	struct:ice_candpair	typeref:struct:ice_candpair::icem
icem	re-0.5.6/src/ice/ice.h	/^struct icem {$/;"	s
icem_add_chan	re-0.5.6/src/ice/icem.c	/^int icem_add_chan(struct icem *icem, unsigned compid, const struct sa *raddr)$/;"	f
icem_alloc	re-0.5.6/src/ice/icem.c	/^int  icem_alloc(struct icem **icemp,$/;"	f
icem_cand_add	re-0.5.6/src/ice/icem.c	/^int icem_cand_add(struct icem *icem, unsigned compid, uint16_t lprio,$/;"	f
icem_cand_default	re-0.5.6/src/ice/icem.c	/^const struct sa *icem_cand_default(struct icem *icem, unsigned compid)$/;"	f
icem_cand_find	re-0.5.6/src/ice/cand.c	/^struct ice_cand *icem_cand_find(const struct list *lst, unsigned compid,$/;"	f
icem_cand_print	re-0.5.6/src/ice/cand.c	/^int icem_cand_print(struct re_printf *pf, const struct ice_cand *cand)$/;"	f
icem_cand_redund_elim	re-0.5.6/src/ice/icem.c	/^void icem_cand_redund_elim(struct icem *icem)$/;"	f
icem_cand_type	re-0.5.6/src/ice/cand.c	/^enum ice_cand_type icem_cand_type(const struct ice_cand *cand)$/;"	f
icem_candpair_alloc	re-0.5.6/src/ice/candpair.c	/^int icem_candpair_alloc(struct ice_candpair **cpp, struct icem *icem,$/;"	f
icem_candpair_cancel	re-0.5.6/src/ice/candpair.c	/^void icem_candpair_cancel(struct ice_candpair *cp)$/;"	f
icem_candpair_clone	re-0.5.6/src/ice/candpair.c	/^int icem_candpair_clone(struct ice_candpair **cpp, struct ice_candpair *cp0,$/;"	f
icem_candpair_cmp	re-0.5.6/src/ice/candpair.c	/^bool icem_candpair_cmp(const struct ice_candpair *cp1,$/;"	f
icem_candpair_cmp_fnd	re-0.5.6/src/ice/candpair.c	/^bool icem_candpair_cmp_fnd(const struct ice_candpair *cp1,$/;"	f
icem_candpair_debug	re-0.5.6/src/ice/candpair.c	/^int icem_candpair_debug(struct re_printf *pf, const struct ice_candpair *cp)$/;"	f
icem_candpair_failed	re-0.5.6/src/ice/candpair.c	/^void icem_candpair_failed(struct ice_candpair *cp, int err, uint16_t scode)$/;"	f
icem_candpair_find	re-0.5.6/src/ice/candpair.c	/^struct ice_candpair *icem_candpair_find(const struct list *lst,$/;"	f
icem_candpair_find_compid	re-0.5.6/src/ice/candpair.c	/^struct ice_candpair *icem_candpair_find_compid(const struct list *lst,$/;"	f
icem_candpair_find_rcand	re-0.5.6/src/ice/candpair.c	/^struct ice_candpair *icem_candpair_find_rcand(struct icem *icem,$/;"	f
icem_candpair_find_st	re-0.5.6/src/ice/candpair.c	/^struct ice_candpair *icem_candpair_find_st(const struct list *lst,$/;"	f
icem_candpair_iscompleted	re-0.5.6/src/ice/candpair.c	/^bool icem_candpair_iscompleted(const struct ice_candpair *cp)$/;"	f
icem_candpair_make_valid	re-0.5.6/src/ice/candpair.c	/^void icem_candpair_make_valid(struct ice_candpair *cp)$/;"	f
icem_candpair_prio_order	re-0.5.6/src/ice/candpair.c	/^void icem_candpair_prio_order(struct list *lst)$/;"	f
icem_candpair_set_state	re-0.5.6/src/ice/candpair.c	/^void icem_candpair_set_state(struct ice_candpair *cp,$/;"	f
icem_candpairs_debug	re-0.5.6/src/ice/candpair.c	/^int icem_candpairs_debug(struct re_printf *pf, const struct list *list)$/;"	f
icem_candpairs_flush	re-0.5.6/src/ice/candpair.c	/^void icem_candpairs_flush(struct list *lst, enum ice_cand_type type,$/;"	f
icem_cands_debug	re-0.5.6/src/ice/cand.c	/^int icem_cands_debug(struct re_printf *pf, const struct list *lst)$/;"	f
icem_checkl	re-0.5.6/src/ice/icem.c	/^struct list *icem_checkl(const struct icem *icem)$/;"	f
icem_checklist_form	re-0.5.6/src/ice/chklist.c	/^int icem_checklist_form(struct icem *icem)$/;"	f
icem_checklist_update	re-0.5.6/src/ice/chklist.c	/^void icem_checklist_update(struct icem *icem)$/;"	f
icem_comp	re-0.5.6/src/ice/ice.h	/^struct icem_comp {$/;"	s
icem_comp_add	re-0.5.6/src/ice/icem.c	/^int icem_comp_add(struct icem *icem, unsigned compid, void *sock)$/;"	f
icem_comp_alloc	re-0.5.6/src/ice/comp.c	/^int icem_comp_alloc(struct icem_comp **cp, struct icem *icem, int id,$/;"	f
icem_comp_find	re-0.5.6/src/ice/comp.c	/^struct icem_comp *icem_comp_find(const struct icem *icem, unsigned compid)$/;"	f
icem_comp_keepalive	re-0.5.6/src/ice/comp.c	/^void icem_comp_keepalive(struct icem_comp *comp, bool enable)$/;"	f
icem_comp_set_default_cand	re-0.5.6/src/ice/comp.c	/^int icem_comp_set_default_cand(struct icem_comp *comp)$/;"	f
icem_comp_set_default_rcand	re-0.5.6/src/ice/comp.c	/^void icem_comp_set_default_rcand(struct icem_comp *comp,$/;"	f
icem_comp_set_selected	re-0.5.6/src/ice/comp.c	/^void icem_comp_set_selected(struct icem_comp *comp, struct ice_candpair *cp)$/;"	f
icem_comps_set_default_cand	re-0.5.6/src/ice/icem.c	/^int icem_comps_set_default_cand(struct icem *icem)$/;"	f
icem_conf	re-0.5.6/src/ice/icem.c	/^struct ice_conf *icem_conf(struct icem *icem)$/;"	f
icem_conncheck_continue	re-0.5.6/src/ice/connchk.c	/^void icem_conncheck_continue(struct icem *icem)$/;"	f
icem_conncheck_schedule_check	re-0.5.6/src/ice/connchk.c	/^void icem_conncheck_schedule_check(struct icem *icem)$/;"	f
icem_conncheck_send	re-0.5.6/src/ice/connchk.c	/^int icem_conncheck_send(struct ice_candpair *cp, bool use_cand, bool trigged)$/;"	f
icem_conncheck_start	re-0.5.6/src/ice/connchk.c	/^int icem_conncheck_start(struct icem *icem)$/;"	f
icem_conncheck_stop	re-0.5.6/src/ice/connchk.c	/^void icem_conncheck_stop(struct icem *icem, int err)$/;"	f
icem_debug	re-0.5.6/src/ice/icem.c	/^int icem_debug(struct re_printf *pf, const struct icem *icem)$/;"	f
icem_destructor	re-0.5.6/src/ice/icem.c	/^static void icem_destructor(void *data)$/;"	f	file:
icem_gather_relay	baresip/modules/ice/ice.c	/^static int icem_gather_relay(struct mnat_media *m,$/;"	f	file:
icem_gather_srflx	baresip/modules/ice/ice.c	/^static int icem_gather_srflx(struct mnat_media *m)$/;"	f	file:
icem_lcand_add	re-0.5.6/src/ice/cand.c	/^int icem_lcand_add(struct icem *icem, struct ice_cand *base,$/;"	f
icem_lcand_add_base	re-0.5.6/src/ice/cand.c	/^int icem_lcand_add_base(struct icem *icem, unsigned compid, uint16_t lprio,$/;"	f
icem_lcand_addr	re-0.5.6/src/ice/cand.c	/^const struct sa *icem_lcand_addr(const struct ice_cand *cand)$/;"	f
icem_lcand_base	re-0.5.6/src/ice/cand.c	/^struct ice_cand *icem_lcand_base(struct ice_cand *lcand)$/;"	f
icem_lcand_find_checklist	re-0.5.6/src/ice/cand.c	/^struct ice_cand *icem_lcand_find_checklist(const struct icem *icem,$/;"	f
icem_lcandl	re-0.5.6/src/ice/icem.c	/^struct list *icem_lcandl(const struct icem *icem)$/;"	f
icem_lite_set_default_candidates	re-0.5.6/src/ice/icem.c	/^int icem_lite_set_default_candidates(struct icem *icem)$/;"	f
icem_local_role	re-0.5.6/src/ice/icem.c	/^enum ice_role icem_local_role(const struct icem *icem)$/;"	f
icem_mismatch	re-0.5.6/src/ice/icem.c	/^bool icem_mismatch(const struct icem *icem)$/;"	f
icem_printf	re-0.5.6/src/ice/icem.c	/^void icem_printf(struct icem *icem, const char *fmt, ...)$/;"	f
icem_rcand_add	re-0.5.6/src/ice/cand.c	/^int icem_rcand_add(struct icem *icem, enum ice_cand_type type, unsigned compid,$/;"	f
icem_rcand_add_prflx	re-0.5.6/src/ice/cand.c	/^int icem_rcand_add_prflx(struct ice_cand **rcp, struct icem *icem,$/;"	f
icem_rcandl	re-0.5.6/src/ice/icem.c	/^struct list *icem_rcandl(const struct icem *icem)$/;"	f
icem_sdp_decode	re-0.5.6/src/ice/icesdp.c	/^int icem_sdp_decode(struct icem *icem, const char *name, const char *value)$/;"	f
icem_selected_laddr	re-0.5.6/src/ice/chklist.c	/^const struct sa *icem_selected_laddr(const struct icem *icem, unsigned compid)$/;"	f
icem_selected_lcand	re-0.5.6/src/ice/chklist.c	/^const struct ice_cand *icem_selected_lcand(const struct icem *icem,$/;"	f
icem_selected_rcand	re-0.5.6/src/ice/chklist.c	/^const struct ice_cand *icem_selected_rcand(const struct icem *icem,$/;"	f
icem_set_conf	re-0.5.6/src/ice/icem.c	/^void icem_set_conf(struct icem *icem, const struct ice_conf *conf)$/;"	f
icem_set_name	re-0.5.6/src/ice/icem.c	/^void icem_set_name(struct icem *icem, const char *name)$/;"	f
icem_set_role	re-0.5.6/src/ice/icem.c	/^void icem_set_role(struct icem *icem, enum ice_role role)$/;"	f
icem_set_turn_client	re-0.5.6/src/ice/comp.c	/^int icem_set_turn_client(struct icem *icem, unsigned compid,$/;"	f
icem_stun	re-0.5.6/src/ice/icem.c	/^struct stun *icem_stun(struct icem *icem)$/;"	f
icem_stund_recv	re-0.5.6/src/ice/stunsrv.c	/^int icem_stund_recv(struct icem_comp *comp, const struct sa *src,$/;"	f
icem_update	re-0.5.6/src/ice/icem.c	/^void icem_update(struct icem *icem)$/;"	f
icem_validl	re-0.5.6/src/ice/icem.c	/^struct list *icem_validl(const struct icem *icem)$/;"	f
icem_verify_support	re-0.5.6/src/ice/icem.c	/^bool icem_verify_support(struct icem *icem, unsigned compid,$/;"	f
ich	rem-0.5.2/include/rem_auresamp.h	/^	unsigned och, ich;     \/**< Input\/output channel count *\/$/;"	m	struct:auresamp
icy_printf	baresip/modules/rst/video.c	/^static void icy_printf(cairo_t *cr, int x, int y, double size,$/;"	f	file:
id	baresip/include/baresip.h	/^	const char *id;  \/**< Media Context identifier *\/$/;"	m	struct:media_ctx
id	baresip/include/baresip.h	/^	const char *id;$/;"	m	struct:menc
id	baresip/modules/gzrtp/session.h	/^	int id() const { return m_id; }$/;"	f	class:Session
id	baresip/modules/ice/ice.c	/^		unsigned id;$/;"	m	struct:mnat_media::comp	file:
id	baresip/modules/natpmp/natpmp.c	/^		unsigned id;$/;"	m	struct:mnat_media::comp	file:
id	baresip/modules/pcp/pcp.c	/^		unsigned id;$/;"	m	struct:mnat_media::comp	file:
id	baresip/modules/rst/rst.c	/^	const char *id;$/;"	m	struct:rst	file:
id	baresip/src/core.h	/^	const char *id;$/;"	m	struct:mnat
id	baresip/src/core.h	/^	unsigned id:4;$/;"	m	struct:rtpext
id	baresip/src/reg.c	/^	int id;                      \/**< Registration ID (for SIP outbound) *\/$/;"	m	struct:reg	file:
id	re-0.5.6/include/re_dns.h	/^	uint16_t id;$/;"	m	struct:dnshdr
id	re-0.5.6/include/re_http.h	/^	enum http_hdrid id;    \/**< HTTP Header id (unique) *\/$/;"	m	struct:http_hdr	typeref:enum:http_hdr::http_hdrid
id	re-0.5.6/include/re_sdp.h	/^	char *id;$/;"	m	struct:sdp_format
id	re-0.5.6/include/re_sdp.h	/^	uint32_t id;$/;"	m	struct:sdp_extmap
id	re-0.5.6/include/re_sip.h	/^	enum sip_hdrid id;     \/**< SIP Header id (unique) *\/$/;"	m	struct:sip_hdr	typeref:enum:sip_hdr::sip_hdrid
id	re-0.5.6/include/re_sipevent.h	/^	struct pl id;$/;"	m	struct:sipevent_event	typeref:struct:sipevent_event::pl
id	re-0.5.6/src/dns/client.c	/^	uint16_t id;$/;"	m	struct:dns_query	file:
id	re-0.5.6/src/ice/ice.h	/^	unsigned id;                 \/**< Component ID                      *\/$/;"	m	struct:icem_comp
id	re-0.5.6/src/mqueue/mqueue.c	/^	int id;$/;"	m	struct:msg	file:
id	re-0.5.6/src/sdp/sdp.h	/^	uint32_t id;$/;"	m	struct:sdp_session
id	re-0.5.6/src/sipevent/sipevent.h	/^	char *id;$/;"	m	struct:sipnot
id	re-0.5.6/src/sipevent/sipevent.h	/^	char *id;$/;"	m	struct:sipsub
id	rem-0.5.2/src/aufile/wave.c	/^	uint8_t id[4];$/;"	m	struct:wav_chunk	file:
idle_timeout	re-0.5.6/include/re_dns.h	/^	uint32_t idle_timeout;  \/* in [ms] *\/$/;"	m	struct:dnsc_conf
if_debug_handler	re-0.5.6/src/net/if.c	/^static bool if_debug_handler(const char *ifname, const struct sa *sa,$/;"	f	file:
if_getaddr_handler	re-0.5.6/src/net/if.c	/^static bool if_getaddr_handler(const char *ifname,$/;"	f	file:
if_getname_handler	re-0.5.6/src/net/if.c	/^static bool if_getname_handler(const char *ifname, const struct sa *sa,$/;"	f	file:
if_handler	baresip/modules/ice/ice.c	/^static bool if_handler(const char *ifname, const struct sa *sa, void *arg)$/;"	f	file:
if_list_gaa	re-0.5.6/src/net/win32/wif.c	/^static int if_list_gaa(net_ifaddr_h *ifh, void *arg)$/;"	f	file:
if_list_gai	re-0.5.6/src/net/win32/wif.c	/^static int if_list_gai(net_ifaddr_h *ifh, void *arg)$/;"	f	file:
ifentry	re-0.5.6/src/net/if.c	/^struct ifentry {$/;"	s	file:
ifname	baresip/include/baresip.h	/^	char ifname[16];        \/**< Bind to interface (optional)   *\/$/;"	m	struct:config_net
ifname	baresip/src/net.c	/^	char ifname[16];$/;"	m	struct:network	file:
ifname	re-0.5.6/src/ice/ice.h	/^	char *ifname;                \/**< Network interface, for diagnostics *\/$/;"	m	struct:ice_cand
ifname	re-0.5.6/src/net/if.c	/^	char *ifname;  \/**< Interface name *\/$/;"	m	struct:ifentry	file:
ifname	re-0.5.6/src/net/linux/rt.c	/^	char ifname[IFNAMSIZ];  \/**< Interface name                 *\/$/;"	m	struct:net_rt	file:
ifname	re-0.5.6/src/net/rt.c	/^	char *ifname;$/;"	m	struct:net_rt	file:
ifname6	baresip/src/net.c	/^	char ifname6[16];$/;"	m	struct:network	file:
ilbc	baresip/modules/ilbc/ilbc.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(ilbc) = {$/;"	v	typeref:struct:DECL_EXPORTS
ilbc	baresip/modules/ilbc/ilbc.c	/^static struct aucodec ilbc = {$/;"	v	typeref:struct:aucodec	file:
ilbc_fmtp	baresip/modules/ilbc/ilbc.c	/^static char ilbc_fmtp[32];$/;"	v	file:
image	baresip/modules/x11/x11.c	/^	XImage *image;$/;"	m	struct:vidisp_st	file:
image	baresip/modules/x11grab/x11grab.c	/^	XImage *image;$/;"	m	struct:vidsrc_st	file:
img_copy_plane	baresip/modules/sdl/util.c	/^static void img_copy_plane(uint8_t *dst, int dst_wrap,$/;"	f	file:
in	re-0.5.6/include/re_sa.h	/^		struct sockaddr_in in;$/;"	m	union:sa::__anon176	typeref:struct:sa::__anon176::sockaddr_in
in6	re-0.5.6/include/re_sa.h	/^		struct sockaddr_in6 in6;$/;"	m	union:sa::__anon176	typeref:struct:sa::__anon176::sockaddr_in6
in6_xor_tid	re-0.5.6/src/stun/addr.c	/^static void in6_xor_tid(uint8_t *in6, const uint8_t *tid)$/;"	f	file:
in_range	baresip/include/baresip.h	/^static inline bool in_range(const struct range *rng, uint32_t val)$/;"	f
inband_fec	baresip/modules/opus/opus.h	/^	opus_int32 inband_fec;$/;"	m	struct:opus_param
incoming_call_menus	baresip/modules/gtk/gtk_mod.c	/^	GSList *incoming_call_menus;$/;"	m	struct:gtk_mod	file:
index	baresip/modules/auloop/auloop.c	/^	uint32_t index;$/;"	m	struct:audio_loop	file:
index	rem-0.5.2/include/rem_fir.h	/^	unsigned index;        \/**< Sample index *\/$/;"	m	struct:fir
index2bit	re-0.5.6/include/re_bitv.h	/^static inline bitv_t index2bit(uint32_t i)$/;"	f
index2offset	re-0.5.6/include/re_bitv.h	/^static inline uint32_t index2offset(uint32_t i)$/;"	f
indh	re-0.5.6/src/stun/stun.h	/^	stun_ind_h *indh;$/;"	m	struct:stun
inet_ntop	re-0.5.6/src/sa/ntop.c	/^const char* inet_ntop(int af, const void *src, char *dst, size_t size)$/;"	f
inet_ntop4	re-0.5.6/src/sa/ntop.c	/^inet_ntop4(const u_char *src, char *dst, size_t size)$/;"	f	file:
inet_ntop6	re-0.5.6/src/sa/ntop.c	/^inet_ntop6(const u_char *src, char *dst, size_t size)$/;"	f	file:
inet_pton	re-0.5.6/src/sa/pton.c	/^static int inet_pton(int af, const char *src, void *dst)$/;"	f	file:
inet_pton4	re-0.5.6/src/sa/pton.c	/^inet_pton4(const char *src, u_char *dst)$/;"	f	file:
inet_pton6	re-0.5.6/src/sa/pton.c	/^inet_pton6(const char *src, u_char *dst)$/;"	f	file:
info	baresip/src/log.c	/^	bool info;$/;"	m	struct:__anon22	file:
info	baresip/src/log.c	/^void info(const char *fmt, ...)$/;"	f
info_handler	re-0.5.6/src/sipsess/listen.c	/^static void info_handler(struct sipsess_sock *sock, const struct sip_msg *msg)$/;"	f	file:
info_msg	baresip/modules/gzrtp/messages.cpp	/^static const char *info_msg(int32_t subcode)$/;"	f	file:
info_request	re-0.5.6/src/sipsess/info.c	/^static int info_request(struct sipsess_request *req)$/;"	f	file:
info_resp_handler	re-0.5.6/src/sipsess/info.c	/^static void info_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
infoh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_info_h *infoh;$/;"	m	struct:sipsess
init	re-0.5.6/include/re_mod.h	/^	mod_init_h *init;    \/**< Module init handler     *\/$/;"	m	struct:mod_export
init_contacts_menu	baresip/modules/gtk/gtk_mod.c	/^static void init_contacts_menu(struct gtk_mod *mod)$/;"	f	file:
init_decoder	baresip/modules/avcodec/decode.c	/^static int init_decoder(struct viddec_state *st, const char *name)$/;"	f	file:
init_encoder	baresip/modules/avcodec/encode.c	/^static int init_encoder(struct videnc_state *st)$/;"	f	file:
init_mmap	baresip/modules/v4l2/v4l2.c	/^static int init_mmap(struct vidsrc_st *st, const char *dev_name)$/;"	f	file:
init_mmap	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int init_mmap(struct vidsrc_st *st, int fd)$/;"	f	file:
inited	re-0.5.6/src/net/sock.c	/^static bool inited = false;$/;"	v	file:
inited	re-0.5.6/src/sys/rand.c	/^static bool inited = false;$/;"	v	file:
initialized	rem-0.5.2/src/vidmix/vidmix.c	/^	bool initialized;$/;"	m	struct:vidmix	file:
inline	re-0.5.6/include/re_types.h	96;"	d
input_callback	baresip/modules/audiounit/recorder.c	/^static OSStatus input_callback(void *inRefCon,$/;"	f	file:
input_thread	baresip/modules/wincons/wincons.c	/^static DWORD WINAPI input_thread(LPVOID arg)$/;"	f	file:
insmod_handler	baresip/src/baresip.c	/^static int insmod_handler(struct re_printf *pf, void *arg)$/;"	f	file:
inspos_handler	re-0.5.6/src/tmr/tmr.c	/^static bool inspos_handler(struct le *le, void *arg)$/;"	f	file:
inspos_handler_0	re-0.5.6/src/tmr/tmr.c	/^static bool inspos_handler_0(struct le *le, void *arg)$/;"	f	file:
inst	baresip/modules/isac/isac.c	/^	ISACStruct *inst;$/;"	m	struct:audec_state	file:
inst	baresip/modules/isac/isac.c	/^	ISACStruct *inst;$/;"	m	struct:auenc_state	file:
instance	baresip/test/sip/sipsrv.h	/^	unsigned instance;$/;"	m	struct:sip_server
int16_t	re-0.5.6/include/re_types.h	/^typedef signed short int          int16_t;$/;"	t
int32_t	re-0.5.6/include/re_types.h	/^typedef signed int                int32_t;$/;"	t
int64_t	re-0.5.6/include/re_types.h	/^typedef signed long long int      int64_t;$/;"	t
int8_t	re-0.5.6/include/re_types.h	/^typedef char                    int8_t;$/;"	t
int8_t	re-0.5.6/include/re_types.h	/^typedef signed char             int8_t;$/;"	t
int_port	baresip/modules/natpmp/libnatpmp.h	/^			uint16_t int_port;$/;"	m	struct:natpmp_resp::__anon70::__anon71
int_port	baresip/modules/natpmp/natpmp.c	/^		uint16_t int_port;$/;"	m	struct:mnat_media::comp	file:
integer	re-0.5.6/include/re_json.h	/^		int64_t integer;$/;"	m	union:json_value::__anon192
integer	re-0.5.6/include/re_odict.h	/^		int64_t integer;       \/* ODICT_INT    *\/$/;"	m	union:odict_entry::__anon172
intermediate_buffer	baresip/modules/mpa/decode.c	/^	int16_t intermediate_buffer[MPA_FRAMESIZE*2];$/;"	m	struct:audec_state	file:
intermediate_buffer	baresip/modules/mpa/encode.c	/^	int16_t intermediate_buffer[MPA_FRAMESIZE*6];$/;"	m	struct:auenc_state	file:
internal	baresip/modules/x11/x11.c	/^	bool internal;$/;"	m	struct:vidisp_st	file:
internal_answer_handler	re-0.5.6/src/sipsess/sess.c	/^static int internal_answer_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
internal_appsink_new_buffer	baresip/modules/gst_video/encode.c	/^static void internal_appsink_new_buffer(GstElement *sink,$/;"	f	file:
internal_appsrc_start_feed	baresip/modules/gst_video/encode.c	/^static void internal_appsrc_start_feed(GstElement * pipeline, guint size,$/;"	f	file:
internal_appsrc_stop_feed	baresip/modules/gst_video/encode.c	/^static void internal_appsrc_stop_feed(GstElement * pipeline,$/;"	f	file:
internal_bus_watch_handler	baresip/modules/gst_video/encode.c	/^static void internal_bus_watch_handler(struct videnc_state *st)$/;"	f	file:
internal_close_handler	re-0.5.6/src/sipevent/notify.c	/^static void internal_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
internal_close_handler	re-0.5.6/src/sipevent/subscribe.c	/^static void internal_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
internal_close_handler	re-0.5.6/src/sipsess/sess.c	/^static void internal_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
internal_close_handler	re-0.5.6/src/websock/websock.c	/^static void internal_close_handler(int err, void *arg)$/;"	f	file:
internal_connect_handler	re-0.5.6/src/sipsess/listen.c	/^static void internal_connect_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
internal_establish_handler	re-0.5.6/src/sipsess/sess.c	/^static void internal_establish_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
internal_notify_handler	re-0.5.6/src/sipevent/subscribe.c	/^static void internal_notify_handler(struct sip *sip, const struct sip_msg *msg,$/;"	f	file:
internal_offer_handler	re-0.5.6/src/sipsess/sess.c	/^static int internal_offer_handler(struct mbuf **descp,$/;"	f	file:
internal_progress_handler	re-0.5.6/src/sipsess/sess.c	/^static void internal_progress_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
internal_resp_handler	re-0.5.6/src/sipsess/request.c	/^static void internal_resp_handler(int err, const struct sip_msg *msg,$/;"	f	file:
internal_thread	baresip/modules/gst_video/encode.c	/^static void *internal_thread(void *arg)$/;"	f	file:
internal_transport_handler	re-0.5.6/src/sip/transp.c	/^static void internal_transport_handler(int err, void *arg)$/;"	f	file:
interrupt_handler	baresip/modules/audiounit/player.c	/^static void interrupt_handler(bool interrupted, void *arg)$/;"	f	file:
interrupt_handler	baresip/modules/audiounit/recorder.c	/^static void interrupt_handler(bool interrupted, void *arg)$/;"	f	file:
interruptionListener	baresip/modules/audiounit/audiounit.c	/^static void interruptionListener(void *data, UInt32 inInterruptionState)$/;"	f	file:
interruptionListener	baresip/modules/coreaudio/coreaudio.c	/^static void interruptionListener(void *data, UInt32 inInterruptionState)$/;"	f	file:
interval	baresip/modules/natbd/natbd.c	/^	uint32_t interval;$/;"	m	struct:natbd	file:
interval	baresip/src/net.c	/^	uint32_t interval;$/;"	m	struct:network	file:
interval	re-0.5.6/src/natbd/lifetime.c	/^	struct nat_lifetime_interval interval;  \/**< Lifetime intervals     *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::nat_lifetime_interval	file:
interval	re-0.5.6/src/stun/keepalive.c	/^	uint32_t interval;        \/**< Refresh interval in seconds          *\/$/;"	m	struct:stun_keepalive	file:
inth	baresip/modules/audiounit/sess.c	/^	audiosess_int_h *inth;$/;"	m	struct:audiosess_st	file:
inuse	baresip/modules/winwave/play.c	/^	size_t inuse;$/;"	m	struct:auplay_st	file:
inuse	baresip/modules/winwave/src.c	/^	size_t inuse;$/;"	m	struct:ausrc_st	file:
invite	re-0.5.6/src/sip/ctrans.c	/^	bool invite;$/;"	m	struct:sip_ctrans	file:
invite	re-0.5.6/src/sip/strans.c	/^	bool invite;$/;"	m	struct:sip_strans	file:
invite	re-0.5.6/src/sipsess/connect.c	/^static int invite(struct sipsess *sess)$/;"	f	file:
invite_handler	re-0.5.6/src/sipsess/listen.c	/^static void invite_handler(struct sipsess_sock *sock,$/;"	f	file:
invite_resp_handler	re-0.5.6/src/sipsess/connect.c	/^static void invite_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
invite_response	re-0.5.6/src/sip/ctrans.c	/^static void invite_response(struct sip_ctrans *ct, const struct sip_msg *msg)$/;"	f	file:
invite_timeout	baresip/src/call.c	/^static void invite_timeout(void *arg)$/;"	f	file:
ip	re-0.5.6/include/re_stun.h	/^	bool ip;$/;"	m	struct:stun_change_req
ip	re-0.5.6/src/net/if.c	/^	struct sa *ip; \/**< IP address     *\/$/;"	m	struct:ifentry	typeref:struct:ifentry::sa	file:
ipchange_handler	baresip/src/net.c	/^static void ipchange_handler(void *arg)$/;"	f	file:
irate	rem-0.5.2/include/rem_auresamp.h	/^	uint32_t orate, irate; \/**< Input\/output sample rate *\/$/;"	m	struct:auresamp
is_cellular	baresip/modules/ice/ice.c	/^static bool is_cellular(const struct sa *laddr)$/;"	f	file:
is_complete	baresip/modules/natpmp/natpmp.c	/^static void is_complete(struct mnat_sess *sess)$/;"	f	file:
is_complete	baresip/modules/pcp/pcp.c	/^static void is_complete(struct mnat_sess *sess)$/;"	f	file:
is_hnv_unreserved	re-0.5.6/src/uri/uric.c	/^static bool is_hnv_unreserved(char c)$/;"	f	file:
is_hvalue	re-0.5.6/src/uri/uric.c	/^static bool is_hvalue(char c)$/;"	f	file:
is_keyframe	baresip/modules/av1/decode.c	/^static inline bool is_keyframe(struct mbuf *mb)$/;"	f	file:
is_keyframe	baresip/modules/vp8/decode.c	/^static inline bool is_keyframe(struct mbuf *mb)$/;"	f	file:
is_keyframe	baresip/modules/vp9/decode.c	/^static inline bool is_keyframe(const struct mbuf *mb)$/;"	f	file:
is_long	baresip/src/cmd.c	/^	bool is_long;$/;"	m	struct:cmd_ctx	file:
is_mark	re-0.5.6/src/uri/uric.c	/^static bool is_mark(int c)$/;"	f	file:
is_number	re-0.5.6/src/json/decode.c	/^static bool is_number(long double *d, bool *isfloat, const struct pl *pl)$/;"	f	file:
is_param_unreserved	re-0.5.6/src/uri/uric.c	/^static bool is_param_unreserved(char c)$/;"	f	file:
is_paramchar	re-0.5.6/src/uri/uric.c	/^static bool is_paramchar(char c)$/;"	f	file:
is_password	re-0.5.6/src/uri/uric.c	/^static bool is_password(char c)$/;"	f	file:
is_rtcp_packet	baresip/modules/dtls_srtp/srtp.c	/^static inline bool is_rtcp_packet(const struct mbuf *mb)$/;"	f	file:
is_rtcp_packet	baresip/modules/libsrtp/srtp.c	/^static bool is_rtcp_packet(const struct mbuf *mb)$/;"	f	file:
is_rtcp_packet	baresip/modules/srtp/srtp.c	/^static bool is_rtcp_packet(const struct mbuf *mb)$/;"	f	file:
is_rtp	baresip/modules/dtls_srtp/dtls_srtp.h	/^	bool is_rtp;$/;"	m	struct:comp
is_rtp_or_rtcp	baresip/modules/dtls_srtp/srtp.c	/^static inline bool is_rtp_or_rtcp(const struct mbuf *mb)$/;"	f	file:
is_rtp_or_rtcp	baresip/modules/libsrtp/srtp.c	/^static bool is_rtp_or_rtcp(const struct mbuf *mb)$/;"	f	file:
is_rtp_or_rtcp	baresip/modules/srtp/srtp.c	/^static bool is_rtp_or_rtcp(const struct mbuf *mb)$/;"	f	file:
is_set	baresip/src/core.h	/^	bool is_set;$/;"	m	struct:timestamp_recv
is_string	re-0.5.6/src/json/decode.c	/^static bool is_string(struct pl *c, const struct pl *pl)$/;"	f	file:
is_unreserved	re-0.5.6/src/uri/uric.c	/^static bool is_unreserved(char c)$/;"	f	file:
is_user	re-0.5.6/src/uri/uric.c	/^static bool is_user(char c)$/;"	f	file:
is_user_unreserved	re-0.5.6/src/uri/uric.c	/^static bool is_user_unreserved(int c)$/;"	f	file:
isac	baresip/modules/isac/isac.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(isac) = {$/;"	v	typeref:struct:DECL_EXPORTS
isacv	baresip/modules/isac/isac.c	/^static struct aucodec isacv[] = {$/;"	v	typeref:struct:aucodec	file:
iscompleted	re-0.5.6/src/ice/chklist.c	/^static bool iscompleted(const struct icem *icem)$/;"	f	file:
isinf	re-0.5.6/src/fmt/print.c	15;"	d	file:
isinf	re-0.5.6/src/fmt/print.c	23;"	d	file:
isinf	re-0.5.6/src/fmt/print.c	24;"	d	file:
isnan	re-0.5.6/src/fmt/print.c	18;"	d	file:
isnan	re-0.5.6/src/fmt/print.c	25;"	d	file:
isnan	re-0.5.6/src/fmt/print.c	26;"	d	file:
itemv	re-0.5.6/include/re_rtp.h	/^			struct rtcp_sdes_item *itemv;  \/**< SDES items       *\/$/;"	m	struct:rtcp_msg::__anon181::rtcp_sdes	typeref:struct:rtcp_msg::__anon181::rtcp_sdes::rtcp_sdes_item
iv	re-0.5.6/src/aes/openssl/aes.c	/^	uint8_t iv[AES_BLOCK_SIZE];$/;"	m	struct:aes	file:
ival	re-0.5.6/src/stun/ctrans.c	/^	uint32_t ival;$/;"	m	struct:stun_ctrans	file:
jack	baresip/modules/jack/jack.c	/^const struct mod_export DECL_EXPORTS(jack) = {$/;"	v	typeref:struct:DECL_EXPORTS
jack_play_alloc	baresip/modules/jack/jack_play.c	/^int jack_play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
jack_src_alloc	baresip/modules/jack/jack_src.c	/^int jack_src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
jbuf	baresip/src/core.h	/^	struct jbuf *jbuf;       \/**< Jitter Buffer for incoming RTP        *\/$/;"	m	struct:stream	typeref:struct:stream::jbuf
jbuf	re-0.5.6/src/jbuf/jbuf.c	/^struct jbuf {$/;"	s	file:
jbuf_alloc	re-0.5.6/src/jbuf/jbuf.c	/^int jbuf_alloc(struct jbuf **jbp, uint32_t min, uint32_t max)$/;"	f
jbuf_debug	re-0.5.6/src/jbuf/jbuf.c	/^int jbuf_debug(struct re_printf *pf, const struct jbuf *jb)$/;"	f
jbuf_del	baresip/include/baresip.h	/^	struct range jbuf_del;  \/**< Delay, number of frames        *\/$/;"	m	struct:config_avt	typeref:struct:config_avt::range
jbuf_destructor	re-0.5.6/src/jbuf/jbuf.c	/^static void jbuf_destructor(void *data)$/;"	f	file:
jbuf_flush	re-0.5.6/src/jbuf/jbuf.c	/^void jbuf_flush(struct jbuf *jb)$/;"	f
jbuf_get	re-0.5.6/src/jbuf/jbuf.c	/^int jbuf_get(struct jbuf *jb, struct rtp_header *hdr, void **mem)$/;"	f
jbuf_put	re-0.5.6/src/jbuf/jbuf.c	/^int jbuf_put(struct jbuf *jb, const struct rtp_header *hdr, void *mem)$/;"	f
jbuf_started	baresip/src/core.h	/^	bool jbuf_started;       \/**< True if jitter-buffer was started     *\/$/;"	m	struct:stream
jbuf_stat	re-0.5.6/include/re_jbuf.h	/^struct jbuf_stat {$/;"	s
jbuf_stats	re-0.5.6/src/jbuf/jbuf.c	/^int jbuf_stats(const struct jbuf *jb, struct jbuf_stat *jstat)$/;"	f
jfs	re-0.5.6/include/re_tmr.h	/^	uint64_t jfs;       \/**< Jiffies for timeout *\/$/;"	m	struct:tmr
jfs_ref	re-0.5.6/src/rtp/sess.c	/^	uint64_t jfs_ref;    \/**< Timer ticks at RTP timestamp reference *\/$/;"	m	struct:txstat	file:
jit	re-0.5.6/include/re_rtp.h	/^		uint32_t jit;   \/**< Rx Inter-Arrival Jitter in [us] *\/$/;"	m	struct:rtcp_stats::__anon191
jit	re-0.5.6/include/re_rtp.h	/^		uint32_t jit;   \/**< Tx Inter-arrival Jitter in [us] *\/$/;"	m	struct:rtcp_stats::__anon190
jit	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t jit;             \/**< Jitter in [us]                      *\/$/;"	m	struct:rtp_member
jitter	re-0.5.6/include/re_rtp.h	/^	uint32_t jitter;          \/**< Interarrival jitter             *\/$/;"	m	struct:rtcp_rr
jitter	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t jitter;          \/**< Estimated jitter                    *\/$/;"	m	struct:rtp_source
json_array_entry_h	re-0.5.6/include/re_json.h	/^typedef int (json_array_entry_h)(unsigned idx,$/;"	t
json_array_h	re-0.5.6/include/re_json.h	/^typedef int (json_array_h)(const char *name, unsigned idx,$/;"	t
json_decode	re-0.5.6/src/json/decode.c	/^int json_decode(const char *str, size_t len, unsigned maxdepth,$/;"	f
json_decode_odict	re-0.5.6/src/json/decode_odict.c	/^int json_decode_odict(struct odict **op, uint32_t hash_size, const char *str,$/;"	f
json_encode_odict	re-0.5.6/src/json/encode.c	/^int json_encode_odict(struct re_printf *pf, const struct odict *o)$/;"	f
json_handlers	re-0.5.6/include/re_json.h	/^struct json_handlers {$/;"	s
json_object_entry_h	re-0.5.6/include/re_json.h	/^typedef int (json_object_entry_h)(const char *name,$/;"	t
json_object_h	re-0.5.6/include/re_json.h	/^typedef int (json_object_h)(const char *name, unsigned idx,$/;"	t
json_typ	re-0.5.6/include/re_json.h	/^enum json_typ {$/;"	g
json_value	re-0.5.6/include/re_json.h	/^struct json_value {$/;"	s
k	baresip/modules/av1/decode.c	/^	unsigned k:1;$/;"	m	struct:hdr	file:
k	baresip/modules/vp8/decode.c	/^	unsigned k:1;$/;"	m	struct:hdr	file:
k_s	re-0.5.6/src/srtp/srtp.h	/^		union vect128 k_s;  \/**< Derived salting key (14 bytes)    *\/$/;"	m	struct:srtp::comp	typeref:union:srtp::comp::vect128
ka	re-0.5.6/src/sipreg/reg.c	/^	struct sip_keepalive *ka;$/;"	m	struct:sipreg	typeref:struct:sipreg::sip_keepalive	file:
ka_interval	re-0.5.6/src/sip/keepalive_udp.c	/^	uint32_t ka_interval;$/;"	m	struct:sip_udpconn	file:
ka_interval	re-0.5.6/src/sip/transp.c	/^	uint32_t ka_interval;$/;"	m	struct:sip_conn	file:
kah	re-0.5.6/src/sip/sip.h	/^	sip_keepalive_h *kah;$/;"	m	struct:sip_keepalive
kaint	re-0.5.6/src/websock/websock.c	/^	unsigned kaint;$/;"	m	struct:websock_conn	file:
kal	re-0.5.6/src/sip/keepalive_udp.c	/^	struct list kal;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::list	file:
kal	re-0.5.6/src/sip/transp.c	/^	struct list kal;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::list	file:
kap	re-0.5.6/src/sip/sip.h	/^	struct sip_keepalive **kap;$/;"	m	struct:sip_keepalive	typeref:struct:sip_keepalive::sip_keepalive
keepalive_destructor	re-0.5.6/src/stun/keepalive.c	/^static void keepalive_destructor(void *data)$/;"	f	file:
keepalive_handler	re-0.5.6/src/sipreg/reg.c	/^static void keepalive_handler(int err, void *arg)$/;"	f	file:
keepalive_handler	re-0.5.6/src/websock/websock.c	/^static void keepalive_handler(void *arg)$/;"	f	file:
key	baresip/include/baresip.h	/^	char key;         \/**< Short command          *\/$/;"	m	struct:cmd
key	baresip/include/baresip.h	/^	char key;         \/**< Which key was pressed  *\/$/;"	m	struct:cmd_arg
key	re-0.5.6/include/re_odict.h	/^	char *key;$/;"	m	struct:odict_entry
key	re-0.5.6/src/aes/apple/aes.c	/^	uint8_t key[64];$/;"	m	struct:aes	file:
key	re-0.5.6/src/aes/openssl/aes.c	/^	AES_KEY key;$/;"	m	struct:aes	file:
key	re-0.5.6/src/dns/rrlist.c	/^	uint32_t key;$/;"	m	struct:sort	file:
key	re-0.5.6/src/hmac/apple/hmac.c	/^	uint8_t key[KEY_SIZE];$/;"	m	struct:hmac	file:
key	re-0.5.6/src/hmac/hmac.c	/^	uint8_t key[SHA_DIGEST_LENGTH];$/;"	m	struct:hmac	file:
key	re-0.5.6/src/stun/ctrans.c	/^	uint8_t *key;$/;"	m	struct:stun_ctrans	file:
key_bytes	re-0.5.6/src/aes/apple/aes.c	/^	size_t key_bytes;$/;"	m	struct:aes	file:
key_info	baresip/modules/libsrtp/sdes.h	/^	struct pl key_info;$/;"	m	struct:crypto	typeref:struct:crypto::pl
key_info	baresip/modules/srtp/sdes.h	/^	struct pl key_info;$/;"	m	struct:crypto	typeref:struct:crypto::pl
key_len	re-0.5.6/src/hmac/apple/hmac.c	/^	size_t key_len;$/;"	m	struct:hmac	file:
key_len	re-0.5.6/src/hmac/hmac.c	/^	size_t key_len;$/;"	m	struct:hmac	file:
key_method	baresip/modules/libsrtp/sdes.h	/^	struct pl key_method;$/;"	m	struct:crypto	typeref:struct:crypto::pl
key_method	baresip/modules/srtp/sdes.h	/^	struct pl key_method;$/;"	m	struct:crypto	typeref:struct:crypto::pl
key_rx	baresip/modules/libsrtp/srtp.c	/^	uint8_t key_rx[32];$/;"	m	struct:menc_st	file:
key_rx	baresip/modules/srtp/srtp.c	/^	uint8_t key_rx[32];$/;"	m	struct:menc_st	file:
key_tx	baresip/modules/libsrtp/srtp.c	/^	uint8_t key_tx[32];  \/* 32 for alignment, only 30 used *\/$/;"	m	struct:menc_st	file:
key_tx	baresip/modules/srtp/srtp.c	/^	uint8_t key_tx[32];$/;"	m	struct:menc_st	file:
keyidx	baresip/modules/av1/decode.c	/^	unsigned keyidx:5;$/;"	m	struct:hdr	file:
keyidx	baresip/modules/vp8/decode.c	/^	unsigned keyidx:5;$/;"	m	struct:hdr	file:
keylen	re-0.5.6/src/stun/ctrans.c	/^	size_t keylen;$/;"	m	struct:stun_ctrans	file:
keytype2int	re-0.5.6/src/tls/openssl/tls.c	/^static int keytype2int(enum tls_keytype type)$/;"	f	file:
keyv	rem-0.5.2/src/dtmf/dec.c	/^static const char keyv[4][4] = {{'1', '2', '3', 'A'},$/;"	v	file:
kqfd	re-0.5.6/src/main/main.c	/^	int kqfd;$/;"	m	struct:re	file:
l	baresip/modules/av1/decode.c	/^	unsigned l:1;$/;"	m	struct:hdr	file:
l	baresip/modules/vp8/decode.c	/^	unsigned l:1;$/;"	m	struct:hdr	file:
l	baresip/modules/vp9/decode.c	/^	unsigned l:1;  \/* L: Layer indices present                   *\/$/;"	m	struct:hdr	file:
l	re-0.5.6/include/re_fmt.h	/^	size_t l;       \/**< Length of string  *\/$/;"	m	struct:pl
l	re-0.5.6/src/fmt/print.c	/^	size_t l;$/;"	m	struct:dyn_print	file:
l16	baresip/modules/l16/l16.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(l16) = {$/;"	v	typeref:struct:DECL_EXPORTS
l16v	baresip/modules/l16/l16.c	/^static struct aucodec l16v[NR_CODECS] = {$/;"	v	typeref:struct:aucodec	file:
label	baresip/modules/vidinfo/vidinfo.h	/^	char *label;$/;"	m	struct:panel
laddr	baresip/modules/ice/ice.c	/^		struct sa laddr;$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::sa	file:
laddr	baresip/src/core.h	/^	struct sa laddr;$/;"	m	struct:call_prm	typeref:struct:call_prm::sa
laddr	baresip/src/core.h	/^	struct sip_addr laddr;       \/**< Decoded SIP address                *\/$/;"	m	struct:account	typeref:struct:account::sip_addr
laddr	baresip/src/net.c	/^	struct sa laddr;$/;"	m	struct:network	typeref:struct:network::sa	file:
laddr	re-0.5.6/src/natbd/mapping.c	/^	struct sa laddr;          \/**< Local IP address and port *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::sa	file:
laddr	re-0.5.6/src/sdp/sdp.h	/^	struct sa laddr;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::sa
laddr	re-0.5.6/src/sdp/sdp.h	/^	struct sa laddr;$/;"	m	struct:sdp_session	typeref:struct:sdp_session::sa
laddr	re-0.5.6/src/sip/transp.c	/^	struct sa laddr;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::sa	file:
laddr	re-0.5.6/src/sip/transp.c	/^	struct sa laddr;$/;"	m	struct:sip_transport	typeref:struct:sip_transport::sa	file:
laddr	re-0.5.6/src/sipreg/reg.c	/^	struct sa laddr;$/;"	m	struct:sipreg	typeref:struct:sipreg::sa	file:
laddr6	baresip/src/net.c	/^	struct sa laddr6;$/;"	m	struct:network	typeref:struct:network::sa	file:
laddr_rtcp	re-0.5.6/src/sdp/sdp.h	/^	struct sa laddr_rtcp;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::sa
laddr_sip	baresip/test/call.c	/^	struct sa laddr_sip;$/;"	m	struct:fixture	typeref:struct:fixture::sa	file:
last	baresip/src/core.h	/^	uint32_t last;$/;"	m	struct:timestamp_recv
last_call_win	baresip/modules/gtk/call_window.c	/^static struct call_window *last_call_win = NULL;$/;"	v	typeref:struct:call_window	file:
last_dec	baresip/modules/gtk/call_window.c	/^static struct vumeter_dec *last_dec = NULL;$/;"	v	typeref:struct:vumeter_dec	file:
last_enc	baresip/modules/gtk/call_window.c	/^static struct vumeter_enc *last_enc = NULL;$/;"	v	typeref:struct:vumeter_enc	file:
last_scode	re-0.5.6/include/re_sip.h	/^	uint16_t last_scode;$/;"	m	struct:sip_loopstate
last_scode	re-0.5.6/src/turn/turnc.h	/^	uint16_t last_scode;$/;"	m	struct:loop_state
last_seq	re-0.5.6/include/re_rtp.h	/^	uint32_t last_seq;        \/**< Extended last seq. no. received *\/$/;"	m	struct:rtcp_rr
last_sr	re-0.5.6/src/rtp/rtcp.h	/^	struct ntp_time last_sr;  \/**< NTP Timestamp from last SR received *\/$/;"	m	struct:rtp_source	typeref:struct:rtp_source::ntp_time
last_time	baresip/modules/x11/x11.c	/^	Time last_time;$/;"	m	struct:vidisp_st	file:
lattrl	re-0.5.6/src/sdp/sdp.h	/^	struct list lattrl;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::list
lattrl	re-0.5.6/src/sdp/sdp.h	/^	struct list lattrl;$/;"	m	struct:sdp_session	typeref:struct:sdp_session::list
layer	baresip/modules/directfb/directfb.c	/^	IDirectFBDisplayLayer *layer;  \/**< Display layer         *\/$/;"	m	struct:vidisp_st	file:
layer	baresip/modules/mpa/mpa.h	/^	unsigned layer;$/;"	m	struct:mpa_param
layer	re-0.5.6/src/ice/ice.h	/^	int layer;                   \/**< Protocol layer                     *\/$/;"	m	struct:icem
layer	re-0.5.6/src/tcp/tcp.c	/^	int layer;$/;"	m	struct:tcp_helper	file:
layer	re-0.5.6/src/udp/udp.c	/^	int layer;$/;"	m	struct:udp_helper	file:
lbwv	re-0.5.6/src/sdp/sdp.h	/^	int32_t lbwv[SDP_BANDWIDTH_MAX];$/;"	m	struct:sdp_media
lbwv	re-0.5.6/src/sdp/sdp.h	/^	int32_t lbwv[SDP_BANDWIDTH_MAX];$/;"	m	struct:sdp_session
lcand	re-0.5.6/src/ice/ice.h	/^	struct ice_cand *lcand;      \/**< Local candidate                    *\/$/;"	m	struct:ice_candpair	typeref:struct:ice_candpair::ice_cand
lcandl	re-0.5.6/src/ice/ice.h	/^	struct list lcandl;          \/**< List of local candidates           *\/$/;"	m	struct:icem	typeref:struct:icem::list
lconfid	baresip/src/bfcp.c	/^	uint32_t lconfid;$/;"	m	struct:bfcp	file:
ldir	re-0.5.6/src/sdp/sdp.h	/^	enum sdp_dir ldir;$/;"	m	struct:sdp_media	typeref:enum:sdp_media::sdp_dir
le	baresip/include/baresip.h	/^	struct le le;          \/**< Linked-list element                   *\/$/;"	m	struct:ui	typeref:struct:ui::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:aucodec	typeref:struct:aucodec::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:aufilt	typeref:struct:aufilt::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:aufilt_dec_st	typeref:struct:aufilt_dec_st::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:aufilt_enc_st	typeref:struct:aufilt_enc_st::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:log	typeref:struct:log::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:menc	typeref:struct:menc::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:vidcodec	typeref:struct:vidcodec::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:vidfilt	typeref:struct:vidfilt::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:vidfilt_dec_st	typeref:struct:vidfilt_dec_st::le
le	baresip/include/baresip.h	/^	struct le le;$/;"	m	struct:vidfilt_enc_st	typeref:struct:vidfilt_enc_st::le
le	baresip/modules/aubridge/device.c	/^	struct le le;$/;"	m	struct:device	typeref:struct:device::le	file:
le	baresip/modules/audiounit/sess.c	/^	struct le le;$/;"	m	struct:audiosess_st	typeref:struct:audiosess_st::le	file:
le	baresip/modules/b2bua/b2bua.c	/^	struct le le;$/;"	m	struct:session	typeref:struct:session::le	file:
le	baresip/modules/echo/echo.c	/^	struct le le;$/;"	m	struct:session	typeref:struct:session::le	file:
le	baresip/modules/ice/ice.c	/^	struct le le;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::le	file:
le	baresip/modules/mwi/mwi.c	/^	struct le le;$/;"	m	struct:mwi	typeref:struct:mwi::le	file:
le	baresip/modules/natpmp/natpmp.c	/^	struct le le;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::le	file:
le	baresip/modules/pcp/pcp.c	/^	struct le le;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::le	file:
le	baresip/modules/pcp/pcp.c	/^	struct le le;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::le	file:
le	baresip/modules/presence/notifier.c	/^	struct le le;$/;"	m	struct:notifier	typeref:struct:notifier::le	file:
le	baresip/modules/presence/publisher.c	/^	struct le le;$/;"	m	struct:publisher	typeref:struct:publisher::le	file:
le	baresip/modules/presence/subscriber.c	/^	struct le le;$/;"	m	struct:presence	typeref:struct:presence::le	file:
le	baresip/modules/stun/stun.c	/^	struct le le;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::le	file:
le	baresip/modules/turn/turn.c	/^	struct le le;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::le	file:
le	baresip/modules/v4l2_codec/v4l2_codec.c	/^	struct le le;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::le	file:
le	baresip/modules/vidbridge/vidbridge.h	/^	struct le le;$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::le
le	baresip/modules/vidbridge/vidbridge.h	/^	struct le le;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::le
le	baresip/src/call.c	/^	struct le le;             \/**< Linked list element                  *\/$/;"	m	struct:call	typeref:struct:call::le	file:
le	baresip/src/cmd.c	/^	struct le le;$/;"	m	struct:cmd_sort	typeref:struct:cmd_sort::le	file:
le	baresip/src/cmd.c	/^	struct le le;$/;"	m	struct:cmds	typeref:struct:cmds::le	file:
le	baresip/src/contact.c	/^	struct le le;$/;"	m	struct:contact	typeref:struct:contact::le	file:
le	baresip/src/core.h	/^	struct le         le;$/;"	m	struct:vidsrc	typeref:struct:vidsrc::le
le	baresip/src/core.h	/^	struct le        le;$/;"	m	struct:auplay	typeref:struct:auplay::le
le	baresip/src/core.h	/^	struct le        le;$/;"	m	struct:ausrc	typeref:struct:ausrc::le
le	baresip/src/core.h	/^	struct le        le;$/;"	m	struct:vidisp	typeref:struct:vidisp::le
le	baresip/src/core.h	/^	struct le le;            \/**< Linked list element                   *\/$/;"	m	struct:stream	typeref:struct:stream::le
le	baresip/src/core.h	/^	struct le le;$/;"	m	struct:mnat	typeref:struct:mnat::le
le	baresip/src/message.c	/^	struct le le;$/;"	m	struct:message_lsnr	typeref:struct:message_lsnr::le	file:
le	baresip/src/play.c	/^	struct le le;$/;"	m	struct:play	typeref:struct:play::le	file:
le	baresip/src/reg.c	/^	struct le le;                \/**< Linked list element                *\/$/;"	m	struct:reg	typeref:struct:reg::le	file:
le	baresip/src/ua.c	/^	struct le le;                \/**< Linked list element                *\/$/;"	m	struct:ua	typeref:struct:ua::le	file:
le	baresip/src/ua.c	/^	struct le le;$/;"	m	struct:ua_eh	typeref:struct:ua_eh::le	file:
le	baresip/src/video.c	/^	struct le le;$/;"	m	struct:vidqent	typeref:struct:vidqent::le	file:
le	baresip/test/sip/sipsrv.h	/^	struct le le;$/;"	m	struct:location	typeref:struct:location::le
le	re-0.5.6/include/re_bfcp.h	/^	struct le le;$/;"	m	struct:bfcp_attr	typeref:struct:bfcp_attr::le
le	re-0.5.6/include/re_dns.h	/^	struct le le;$/;"	m	struct:dnsrr	typeref:struct:dnsrr::le
le	re-0.5.6/include/re_http.h	/^	struct le le;          \/**< Linked-list element     *\/$/;"	m	struct:http_hdr	typeref:struct:http_hdr::le
le	re-0.5.6/include/re_list.h	/^struct le {$/;"	s
le	re-0.5.6/include/re_odict.h	/^	struct le le, he;$/;"	m	struct:odict_entry	typeref:struct:odict_entry::le
le	re-0.5.6/include/re_sdp.h	/^	struct le le;$/;"	m	struct:sdp_format	typeref:struct:sdp_format::le
le	re-0.5.6/include/re_sip.h	/^	struct le le;          \/**< Linked-list element    *\/$/;"	m	struct:sip_hdr	typeref:struct:sip_hdr::le
le	re-0.5.6/include/re_stun.h	/^	struct le le;$/;"	m	struct:stun_attr	typeref:struct:stun_attr::le
le	re-0.5.6/include/re_tmr.h	/^	struct le le;       \/**< Linked list element *\/$/;"	m	struct:tmr	typeref:struct:tmr::le
le	re-0.5.6/src/bfcp/request.c	/^	struct le le;$/;"	m	struct:bfcp_ctrans	typeref:struct:bfcp_ctrans::le	file:
le	re-0.5.6/src/dns/client.c	/^	struct le le;$/;"	m	struct:dns_query	typeref:struct:dns_query::le	file:
le	re-0.5.6/src/dns/client.c	/^	struct le le;$/;"	m	struct:tcpconn	typeref:struct:tcpconn::le	file:
le	re-0.5.6/src/http/client.c	/^	struct le le;$/;"	m	struct:http_req	typeref:struct:http_req::le	file:
le	re-0.5.6/src/http/server.c	/^	struct le le;$/;"	m	struct:http_conn	typeref:struct:http_conn::le	file:
le	re-0.5.6/src/ice/ice.h	/^	struct le le;                \/**< Linked-list element               *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::le
le	re-0.5.6/src/ice/ice.h	/^	struct le le;                \/**< List element                       *\/$/;"	m	struct:ice_cand	typeref:struct:ice_cand::le
le	re-0.5.6/src/ice/ice.h	/^	struct le le;                \/**< List element                       *\/$/;"	m	struct:ice_candpair	typeref:struct:ice_candpair::le
le	re-0.5.6/src/jbuf/jbuf.c	/^	struct le le;           \/**< Linked list element       *\/$/;"	m	struct:frame	typeref:struct:frame::le	file:
le	re-0.5.6/src/mem/mem.c	/^	struct le le;       \/**< Linked list element   *\/$/;"	m	struct:mem	typeref:struct:mem::le	file:
le	re-0.5.6/src/mod/mod.c	/^	struct le le;                 \/**< Linked list element *\/$/;"	m	struct:mod	typeref:struct:mod::le	file:
le	re-0.5.6/src/rtp/rtcp.h	/^	struct le le;             \/**< Hash-table element                  *\/$/;"	m	struct:rtp_member	typeref:struct:rtp_member::le
le	re-0.5.6/src/sdp/attr.c	/^	struct le le;$/;"	m	struct:sdp_attr	typeref:struct:sdp_attr::le	file:
le	re-0.5.6/src/sdp/sdp.h	/^	struct le le;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::le
le	re-0.5.6/src/sip/auth.c	/^	struct le le;$/;"	m	struct:realm	typeref:struct:realm::le	file:
le	re-0.5.6/src/sip/request.c	/^	struct le le;$/;"	m	struct:sip_request	typeref:struct:sip_request::le	file:
le	re-0.5.6/src/sip/sip.h	/^	struct le le;$/;"	m	struct:sip_keepalive	typeref:struct:sip_keepalive::le
le	re-0.5.6/src/sip/sip.h	/^	struct le le;$/;"	m	struct:sip_lsnr	typeref:struct:sip_lsnr::le
le	re-0.5.6/src/sip/transp.c	/^	struct le le;$/;"	m	struct:sip_connqent	typeref:struct:sip_connqent::le	file:
le	re-0.5.6/src/sip/transp.c	/^	struct le le;$/;"	m	struct:sip_transport	typeref:struct:sip_transport::le	file:
le	re-0.5.6/src/sipsess/reply.c	/^	struct le le;$/;"	m	struct:sipsess_reply	typeref:struct:sipsess_reply::le	file:
le	re-0.5.6/src/sipsess/sipsess.h	/^	struct le le;$/;"	m	struct:sipsess_request	typeref:struct:sipsess_request::le
le	re-0.5.6/src/srtp/srtp.h	/^	struct le le;              \/**< Linked-list element                *\/$/;"	m	struct:srtp_stream	typeref:struct:srtp_stream::le
le	re-0.5.6/src/stun/ctrans.c	/^	struct le le;$/;"	m	struct:stun_ctrans	typeref:struct:stun_ctrans::le	file:
le	re-0.5.6/src/tcp/tcp.c	/^	struct le le;$/;"	m	struct:tcp_helper	typeref:struct:tcp_helper::le	file:
le	re-0.5.6/src/tcp/tcp.c	/^	struct le le;$/;"	m	struct:tcp_qent	typeref:struct:tcp_qent::le	file:
le	re-0.5.6/src/udp/udp.c	/^	struct le le;$/;"	m	struct:udp_helper	typeref:struct:udp_helper::le	file:
le	rem-0.5.2/src/aubuf/aubuf.c	/^	struct le le;$/;"	m	struct:auframe	typeref:struct:auframe::le	file:
le	rem-0.5.2/src/aumix/aumix.c	/^	struct le le;$/;"	m	struct:aumix_source	typeref:struct:aumix_source::le	file:
le	rem-0.5.2/src/vidmix/vidmix.c	/^	struct le le;$/;"	m	struct:vidmix_source	typeref:struct:vidmix_source::le	file:
le_cur	baresip/modules/menu/menu.c	/^static struct le *le_cur;             \/**< Current User-Agent (struct ua) *\/$/;"	v	typeref:struct:le	file:
le_priv	re-0.5.6/include/re_dns.h	/^	struct le le_priv;$/;"	m	struct:dnsrr	typeref:struct:dnsrr::le
le_tc	re-0.5.6/src/dns/client.c	/^	struct le le_tc;$/;"	m	struct:dns_query	typeref:struct:dns_query::le	file:
len	baresip/src/core.h	/^	unsigned len:4;$/;"	m	struct:rtpext
len	re-0.5.6/include/re_bfcp.h	/^	size_t len;$/;"	m	struct:bfcp_errcode
len	re-0.5.6/include/re_bfcp.h	/^	uint16_t len;$/;"	m	struct:bfcp_msg
len	re-0.5.6/include/re_rtp.h	/^		uint16_t len;   \/**< Number of 32-bit words *\/$/;"	m	struct:rtp_header::__anon180
len	re-0.5.6/include/re_sa.h	/^	socklen_t len;$/;"	m	struct:sa
len	re-0.5.6/include/re_websock.h	/^	uint64_t len;$/;"	m	struct:websock_hdr
len	re-0.5.6/src/stun/stun.h	/^	uint16_t len;                \/**< Payload length *\/$/;"	m	struct:stun_hdr
len	re-0.5.6/src/turn/turnc.h	/^	uint16_t len;$/;"	m	struct:chan_hdr
length	baresip/modules/v4l2/v4l2.c	/^	size_t length;$/;"	m	struct:buffer	file:
length	re-0.5.6/include/re_rtp.h	/^		uint16_t length;         \/**< Packet length in words *\/$/;"	m	struct:rtcp_msg::rtcp_hdr
length	re-0.5.6/include/re_rtp.h	/^	uint8_t length;           \/**< Length of item (in octets)         *\/$/;"	m	struct:rtcp_sdes_item
length_modifier	re-0.5.6/src/fmt/print.c	/^enum length_modifier {$/;"	g	file:
level	baresip/include/baresip.h	/^	bool level;             \/**< Enable audio level indication  *\/$/;"	m	struct:config_audio
level	re-0.5.6/src/dbg/dbg.c	/^	int level;             \/**< Current debug level    *\/$/;"	m	struct:__anon141	file:
level_enabled	baresip/src/audio.c	/^	bool level_enabled;           \/**< Audio level RTP ext. enabled    *\/$/;"	m	struct:audio	file:
level_idc	baresip/modules/avcodec/encode.c	/^			uint32_t level_idc;$/;"	m	struct:videnc_state::__anon37::__anon39	file:
level_idc	baresip/modules/gst_video/encode.c	/^		uint32_t level_idc;$/;"	m	struct:videnc_state::__anon64	file:
level_idc	baresip/modules/gst_video1/encode.c	/^		uint32_t level_idc;$/;"	m	struct:videnc_state::__anon90	file:
level_last	baresip/src/audio.c	/^	double level_last;$/;"	m	struct:aurx	file:
level_set	baresip/src/audio.c	/^	bool level_set;$/;"	m	struct:aurx	file:
lf	re-0.5.6/src/http/http.h	/^	unsigned lf;$/;"	m	struct:http_chunk
lfmtl	re-0.5.6/src/sdp/sdp.h	/^	struct list lfmtl;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::list
lg	baresip/modules/cons/cons.c	/^static struct log lg = {$/;"	v	typeref:struct:log	file:
lg	baresip/modules/syslog/syslog.c	/^static struct log lg = {$/;"	v	typeref:struct:log	file:
lg	baresip/src/log.c	/^} lg = {$/;"	v	typeref:struct:__anon22	file:
lh	re-0.5.6/src/natbd/lifetime.c	/^	nat_lifetime_h *lh;                     \/**< Result handler         *\/$/;"	m	struct:nat_lifetime	file:
libre_close	re-0.5.6/src/main/init.c	/^void libre_close(void)$/;"	f
libre_init	re-0.5.6/src/main/init.c	/^int libre_init(void)$/;"	f
libsrtp	baresip/modules/libsrtp/srtp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(libsrtp) = {$/;"	v	typeref:struct:DECL_EXPORTS
libsrtp_sdes_decode_crypto	baresip/modules/libsrtp/sdes.c	/^int libsrtp_sdes_decode_crypto(struct crypto *c, const char *val)$/;"	f
libsrtp_sdes_encode_crypto	baresip/modules/libsrtp/sdes.c	/^int libsrtp_sdes_encode_crypto(struct sdp_media *m, uint32_t tag,$/;"	f
lifetime	baresip/modules/libsrtp/sdes.h	/^	struct pl lifetime;  \/* optional *\/$/;"	m	struct:crypto	typeref:struct:crypto::pl
lifetime	baresip/modules/natpmp/libnatpmp.h	/^			uint32_t lifetime;$/;"	m	struct:natpmp_resp::__anon70::__anon71
lifetime	baresip/modules/natpmp/natpmp.c	/^		uint32_t lifetime;$/;"	m	struct:mnat_media::comp	file:
lifetime	baresip/modules/srtp/sdes.h	/^	struct pl lifetime;  \/* optional *\/$/;"	m	struct:crypto	typeref:struct:crypto::pl
lifetime	re-0.5.6/include/re_stun.h	/^		uint32_t lifetime;$/;"	m	union:stun_attr::__anon174
lifetime	re-0.5.6/src/turn/turnc.h	/^	uint32_t lifetime;             \/**< Allocation lifetime in [seconds]*\/$/;"	m	struct:turnc
lifetime_destructor	re-0.5.6/src/natbd/lifetime.c	/^static void lifetime_destructor(void *data)$/;"	f	file:
line_h	rem-0.5.2/src/vidconv/vconv.c	/^typedef void (line_h)(unsigned xoffs, unsigned width, double rw,$/;"	t	file:
line_handler	baresip/modules/account/account.c	/^static int line_handler(const struct pl *addr, void *arg)$/;"	f	file:
linelen	baresip/modules/rst/video.c	/^static size_t linelen(const struct pl *pl)$/;"	f	file:
linenum	baresip/src/call.c	/^	uint32_t linenum;         \/**< Line number from 1 to N              *\/$/;"	m	struct:call	file:
linenum_are_sequential	baresip/test/call.c	/^static bool linenum_are_sequential(const struct ua *ua)$/;"	f	file:
linesize	rem-0.5.2/include/rem_vid.h	/^	uint16_t linesize[4];  \/**< Array of line-sizes *\/$/;"	m	struct:vidframe
linklocal_handler	re-0.5.6/src/net/if.c	/^static bool linklocal_handler(const char *ifname, const struct sa *sa,$/;"	f	file:
list	re-0.5.6/include/re_list.h	/^	struct list *list;  \/**< Parent list (NULL if not linked-in) *\/$/;"	m	struct:le	typeref:struct:le::list
list	re-0.5.6/include/re_list.h	/^struct list {$/;"	s
list_add_sorted	re-0.5.6/src/ice/candpair.c	/^static void list_add_sorted(struct list *list, struct ice_candpair *cp)$/;"	f	file:
list_append	re-0.5.6/src/list/list.c	/^void list_append(struct list *list, struct le *le, void *data)$/;"	f
list_apply	re-0.5.6/src/list/list.c	/^struct le *list_apply(const struct list *list, bool fwd,$/;"	f
list_apply_h	re-0.5.6/include/re_list.h	/^typedef bool (list_apply_h)(struct le *le, void *arg);$/;"	t
list_apply_handler	baresip/modules/aubridge/device.c	/^static bool list_apply_handler(struct le *le, void *arg)$/;"	f	file:
list_apply_handler	baresip/modules/vidbridge/disp.c	/^static bool list_apply_handler(struct le *le, void *arg)$/;"	f	file:
list_apply_handler	baresip/modules/vidbridge/src.c	/^static bool list_apply_handler(struct le *le, void *arg)$/;"	f	file:
list_clear	re-0.5.6/src/list/list.c	/^void list_clear(struct list *list)$/;"	f
list_contains	re-0.5.6/include/re_list.h	/^static inline bool list_contains(const struct list *list, const struct le *le)$/;"	f
list_count	re-0.5.6/src/list/list.c	/^uint32_t list_count(const struct list *list)$/;"	f
list_flush	re-0.5.6/src/list/list.c	/^void list_flush(struct list *list)$/;"	f
list_head	re-0.5.6/src/list/list.c	/^struct le *list_head(const struct list *list)$/;"	f
list_init	re-0.5.6/src/list/list.c	/^void list_init(struct list *list)$/;"	f
list_insert_after	re-0.5.6/src/list/list.c	/^void list_insert_after(struct list *list, struct le *le, struct le *ile,$/;"	f
list_insert_before	re-0.5.6/src/list/list.c	/^void list_insert_before(struct list *list, struct le *le, struct le *ile,$/;"	f
list_isempty	re-0.5.6/include/re_list.h	/^static inline bool list_isempty(const struct list *list)$/;"	f
list_ledata	re-0.5.6/include/re_list.h	/^static inline void *list_ledata(const struct le *le)$/;"	f
list_prepend	re-0.5.6/src/list/list.c	/^void list_prepend(struct list *list, struct le *le, void *data)$/;"	f
list_sort	re-0.5.6/src/list/list.c	/^void list_sort(struct list *list, list_sort_h *sh, void *arg)$/;"	f
list_sort_h	re-0.5.6/include/re_list.h	/^typedef bool (list_sort_h)(struct le *le1, struct le *le2, void *arg);$/;"	t
list_tail	re-0.5.6/src/list/list.c	/^struct le *list_tail(const struct list *list)$/;"	f
list_unique_h	re-0.5.6/src/ice/ice.h	/^typedef void * (list_unique_h)(struct le *le1, struct le *le2);$/;"	t
list_unlink	re-0.5.6/src/list/list.c	/^void list_unlink(struct le *le)$/;"	f
listener_destructor	baresip/src/message.c	/^static void listener_destructor(void *data)$/;"	f	file:
lix	re-0.5.6/src/srtp/srtp.h	/^	uint64_t lix;      \/**< Last received index             *\/$/;"	m	struct:replay
lmap	baresip/modules/syslog/syslog.c	/^static const int lmap[] = { LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERR };$/;"	v	file:
lmedial	re-0.5.6/src/sdp/sdp.h	/^	struct list lmedial;$/;"	m	struct:sdp_session	typeref:struct:sdp_session::list
lmode	re-0.5.6/src/ice/ice.h	/^	enum ice_mode lmode;         \/**< Local mode                         *\/$/;"	m	struct:icem	typeref:enum:icem::ice_mode
lo	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t lo;  \/**< Fraction of seconds                    *\/$/;"	m	struct:ntp_time
load_file	re-0.5.6/src/conf/conf.c	/^static int load_file(struct mbuf *mb, const char *filename)$/;"	f	file:
load_logo	baresip/modules/cairo/cairo.c	/^static int load_logo(struct vidsrc_st *st, const char *filename)$/;"	f	file:
load_module	baresip/src/module.c	/^static int load_module(struct mod **modp, const struct pl *modpath,$/;"	f	file:
local	baresip/include/baresip.h	/^	char local[64];         \/**< Local SIP Address              *\/$/;"	m	struct:config_sip
local	re-0.5.6/src/rtp/rtp.c	/^	struct sa local;        \/**< Local RTP Address     *\/$/;"	m	struct:rtp_sock	typeref:struct:rtp_sock::sa	file:
local_ftoa	re-0.5.6/src/fmt/print.c	/^static size_t local_ftoa(char *buf, double n, size_t dp)$/;"	f	file:
local_itoa	re-0.5.6/src/fmt/print.c	/^static uint32_t local_itoa(char *buf, uint64_t n, uint8_t base, bool uc)$/;"	f	file:
local_name	baresip/src/call.c	/^	char *local_name;         \/**< Local display name                   *\/$/;"	m	struct:call	file:
local_timeout	baresip/include/baresip.h	/^	uint32_t local_timeout; \/**< Incoming call timeout [sec] 0=off *\/$/;"	m	struct:config_call
local_ua	baresip/modules/avahi/avahi.c	/^	struct ua* local_ua;$/;"	m	struct:avahi_st	typeref:struct:avahi_st::ua	file:
local_uri	baresip/src/call.c	/^	char *local_uri;          \/**< Local SIP uri                        *\/$/;"	m	struct:call	file:
location	baresip/test/sip/sipsrv.h	/^struct location {$/;"	s
location_commit	baresip/test/sip/location.c	/^void location_commit(struct list *locl)$/;"	f
location_rollback	baresip/test/sip/location.c	/^void location_rollback(struct list *locl)$/;"	f
location_update	baresip/test/sip/location.c	/^int location_update(struct list *locl, const struct sip_msg *msg,$/;"	f
lock	baresip/modules/selfview/selfview.c	/^	struct lock *lock;          \/**< Protect frame         *\/$/;"	m	struct:selfview	typeref:struct:selfview::lock	file:
lock	baresip/src/play.c	/^	struct lock *lock;$/;"	m	struct:play	typeref:struct:play::lock	file:
lock	baresip/src/video.c	/^	struct lock *lock;                 \/**< Lock for decoder          *\/$/;"	m	struct:vrx	typeref:struct:vrx::lock	file:
lock	baresip/src/video.c	/^	struct lock *lock;                 \/**< Lock for encoder          *\/$/;"	m	struct:vtx	typeref:struct:vtx::lock	file:
lock	re-0.5.6/src/lock/lock.c	/^struct lock {$/;"	s	file:
lock	re-0.5.6/src/lock/rwlock.c	/^	pthread_rwlock_t lock;$/;"	m	struct:lock	file:
lock	re-0.5.6/src/lock/rwlock.c	/^struct lock {$/;"	s	file:
lock	re-0.5.6/src/lock/win32/lock.c	/^struct lock {$/;"	s	file:
lock	re-0.5.6/src/rtp/sess.c	/^	struct lock *lock;          \/**< Lock for txstat                     *\/$/;"	m	struct:rtcp_sess	typeref:struct:rtcp_sess::lock	file:
lock	rem-0.5.2/src/aubuf/aubuf.c	/^	struct lock *lock;$/;"	m	struct:aubuf	typeref:struct:aubuf::lock	file:
lock_alloc	re-0.5.6/src/lock/lock.c	/^int lock_alloc(struct lock **lp)$/;"	f
lock_alloc	re-0.5.6/src/lock/rwlock.c	/^int lock_alloc(struct lock **lp)$/;"	f
lock_alloc	re-0.5.6/src/lock/win32/lock.c	/^int lock_alloc(struct lock **lp)$/;"	f
lock_destructor	re-0.5.6/src/lock/lock.c	/^static void lock_destructor(void *data)$/;"	f	file:
lock_destructor	re-0.5.6/src/lock/rwlock.c	/^static void lock_destructor(void *data)$/;"	f	file:
lock_destructor	re-0.5.6/src/lock/win32/lock.c	/^static void lock_destructor(void *data)$/;"	f	file:
lock_read_get	re-0.5.6/src/lock/lock.c	/^void lock_read_get(struct lock *l)$/;"	f
lock_read_get	re-0.5.6/src/lock/rwlock.c	/^void lock_read_get(struct lock *l)$/;"	f
lock_read_get	re-0.5.6/src/lock/win32/lock.c	/^void lock_read_get(struct lock *l)$/;"	f
lock_read_try	re-0.5.6/src/lock/lock.c	/^int lock_read_try(struct lock *l)$/;"	f
lock_read_try	re-0.5.6/src/lock/rwlock.c	/^int lock_read_try(struct lock *l)$/;"	f
lock_read_try	re-0.5.6/src/lock/win32/lock.c	/^int lock_read_try(struct lock *l)$/;"	f
lock_rel	re-0.5.6/src/lock/lock.c	/^void lock_rel(struct lock *l)$/;"	f
lock_rel	re-0.5.6/src/lock/rwlock.c	/^void lock_rel(struct lock *l)$/;"	f
lock_rel	re-0.5.6/src/lock/win32/lock.c	/^void lock_rel(struct lock *l)$/;"	f
lock_tx	baresip/src/video.c	/^	struct lock *lock_tx;              \/**< Protect the sendq         *\/$/;"	m	struct:vtx	typeref:struct:vtx::lock	file:
lock_write_get	re-0.5.6/src/lock/lock.c	/^void lock_write_get(struct lock *l)$/;"	f
lock_write_get	re-0.5.6/src/lock/rwlock.c	/^void lock_write_get(struct lock *l)$/;"	f
lock_write_get	re-0.5.6/src/lock/win32/lock.c	/^void lock_write_get(struct lock *l)$/;"	f
lock_write_try	re-0.5.6/src/lock/lock.c	/^int lock_write_try(struct lock *l)$/;"	f
lock_write_try	re-0.5.6/src/lock/rwlock.c	/^int lock_write_try(struct lock *l)$/;"	f
lock_write_try	re-0.5.6/src/lock/win32/lock.c	/^int lock_write_try(struct lock *l)$/;"	f
locking_handler	re-0.5.6/src/main/openssl.c	/^static void locking_handler(int mode, int type, const char *file, int line)$/;"	f	file:
lockv	re-0.5.6/src/main/openssl.c	/^static pthread_mutex_t *lockv;$/;"	v	file:
locl	baresip/test/sip/sipsrv.h	/^	struct list locl;$/;"	m	struct:aor	typeref:struct:aor::list
loctmp	baresip/test/sip/location.c	/^struct loctmp {$/;"	s	file:
log	baresip/include/baresip.h	/^struct log {$/;"	s
log_enable_debug	baresip/src/log.c	/^void log_enable_debug(bool enable)$/;"	f
log_enable_info	baresip/src/log.c	/^void log_enable_info(bool enable)$/;"	f
log_enable_stderr	baresip/src/log.c	/^void log_enable_stderr(bool enable)$/;"	f
log_h	baresip/include/baresip.h	/^typedef void (log_h)(uint32_t level, const char *msg);$/;"	t
log_handler	baresip/modules/cons/cons.c	/^static void log_handler(uint32_t level, const char *msg)$/;"	f	file:
log_handler	baresip/modules/syslog/syslog.c	/^static void log_handler(uint32_t level, const char *msg)$/;"	f	file:
log_level	baresip/include/baresip.h	/^enum log_level {$/;"	g
log_register_handler	baresip/src/log.c	/^void log_register_handler(struct log *log)$/;"	f
log_unregister_handler	baresip/src/log.c	/^void log_unregister_handler(struct log *log)$/;"	f
logl	baresip/src/log.c	/^	struct list logl;$/;"	m	struct:__anon22	typeref:struct:__anon22::list	file:
loglv	baresip/src/log.c	/^void loglv(enum log_level level, const char *fmt, ...)$/;"	f
logo_height	baresip/modules/cairo/cairo.c	/^	double logo_height;$/;"	m	struct:vidsrc_st	file:
logo_width	baresip/modules/cairo/cairo.c	/^	double logo_width;$/;"	m	struct:vidsrc_st	file:
long_handler	baresip/test/cmd.c	/^static int long_handler(struct re_printf *pf, void *arg)$/;"	f	file:
longcmdv	baresip/test/cmd.c	/^static const struct cmd longcmdv[] = {$/;"	v	typeref:struct:cmd	file:
lookup	baresip/test/sip/domain.c	/^static struct domain *lookup(struct sip_server *srv, const struct pl *name)$/;"	f	file:
lookup_handler	re-0.5.6/src/dns/dname.c	/^static bool lookup_handler(struct le *le, void *arg)$/;"	f	file:
lookup_static_module	baresip/src/module.c	/^static const struct mod_export *lookup_static_module(const struct pl *pl)$/;"	f	file:
loop	baresip/modules/gst/gst.c	/^	GMainLoop *loop;$/;"	m	struct:ausrc_st	file:
loop	baresip/modules/gst1/gst.c	/^	GMainLoop *loop;$/;"	m	struct:ausrc_st	file:
loop_state	re-0.5.6/src/turn/turnc.h	/^struct loop_state {$/;"	s
lost	re-0.5.6/include/re_rtp.h	/^		int lost;       \/**< Rx RTP Packets Lost             *\/$/;"	m	struct:rtcp_stats::__anon191
lost	re-0.5.6/include/re_rtp.h	/^		int lost;       \/**< Tx RTP Packets Lost             *\/$/;"	m	struct:rtcp_stats::__anon190
lost	re-0.5.6/include/re_rtp.h	/^	int lost:24;              \/**< Cumul. no. pkts lost (signed!)  *\/$/;"	m	struct:rtcp_rr
lostcalc	baresip/src/stream.c	/^static inline int lostcalc(struct stream *s, uint16_t seq)$/;"	f	file:
lport	re-0.5.6/src/ice/ice.h	/^	uint16_t lport;              \/**< Local port number                 *\/$/;"	m	struct:icem_comp
lpwd	baresip/modules/ice/ice.c	/^	char lpwd[32];$/;"	m	struct:mnat_sess	file:
lpwd	re-0.5.6/src/ice/ice.h	/^	char *lpwd;                  \/**< Local Password                     *\/$/;"	m	struct:icem
lrole	re-0.5.6/src/ice/ice.h	/^	enum ice_role lrole;         \/**< Local role                         *\/$/;"	m	struct:icem	typeref:enum:icem::ice_role
ls	baresip/src/sipreq.c	/^	struct sip_loopstate ls;$/;"	m	struct:sip_req	typeref:struct:sip_req::sip_loopstate	file:
ls	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_loopstate ls;$/;"	m	struct:sipnot	typeref:struct:sipnot::sip_loopstate
ls	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_loopstate ls;$/;"	m	struct:sipsub	typeref:struct:sipsub::sip_loopstate
ls	re-0.5.6/src/sipreg/reg.c	/^	struct sip_loopstate ls;$/;"	m	struct:sipreg	typeref:struct:sipreg::sip_loopstate	file:
ls	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_loopstate ls;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip_loopstate
ls	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_loopstate ls;$/;"	m	struct:sipsess_request	typeref:struct:sipsess_request::sip_loopstate
ls	re-0.5.6/src/turn/chan.c	/^	struct loop_state ls;$/;"	m	struct:chan	typeref:struct:chan::loop_state	file:
ls	re-0.5.6/src/turn/perm.c	/^	struct loop_state ls;$/;"	m	struct:perm	typeref:struct:perm::loop_state	file:
ls	re-0.5.6/src/turn/turnc.h	/^	struct loop_state ls;          \/**< Loop state                      *\/$/;"	m	struct:turnc	typeref:struct:turnc::loop_state
lseq	re-0.5.6/src/sip/dialog.c	/^	uint32_t lseq;$/;"	m	struct:sip_dialog	file:
lsnr	baresip/modules/pcp/pcp.c	/^static struct pcp_listener *lsnr;$/;"	v	typeref:struct:pcp_listener	file:
lsnr	baresip/src/ua.c	/^	struct sip_lsnr *lsnr;         \/**< SIP Listener                    *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::sip_lsnr	file:
lsnr	baresip/test/sip/sipsrv.h	/^	struct sip_lsnr *lsnr;$/;"	m	struct:sip_server	typeref:struct:sip_server::sip_lsnr
lsnr	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_lsnr *lsnr;$/;"	m	struct:sipevent_sock	typeref:struct:sipevent_sock::sip_lsnr
lsnr_destructor	re-0.5.6/src/sip/sip.c	/^static void lsnr_destructor(void *arg)$/;"	f	file:
lsnr_req	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_lsnr *lsnr_req;$/;"	m	struct:sipsess_sock	typeref:struct:sipsess_sock::sip_lsnr
lsnr_resp	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_lsnr *lsnr_resp;$/;"	m	struct:sipsess_sock	typeref:struct:sipsess_sock::sip_lsnr
lsnrl	baresip/src/message.c	/^	struct list lsnrl;$/;"	m	struct:message	typeref:struct:message::list	file:
lsnrl	re-0.5.6/src/sip/sip.h	/^	struct list lsnrl;$/;"	m	struct:sip	typeref:struct:sip::list
lsnrp	re-0.5.6/src/sip/sip.h	/^	struct sip_lsnr **lsnrp;$/;"	m	struct:sip_lsnr	typeref:struct:sip_lsnr::sip_lsnr
lsr	re-0.5.6/include/re_rtp.h	/^	uint32_t lsr;             \/**< Last SR packet from this source *\/$/;"	m	struct:rtcp_rr
lst	re-0.5.6/include/re_odict.h	/^	struct list lst;$/;"	m	struct:odict	typeref:struct:odict::list
ltag	re-0.5.6/src/sip/dialog.c	/^	char *ltag;$/;"	m	struct:sip_dialog	file:
lufrag	baresip/modules/ice/ice.c	/^	char lufrag[8];$/;"	m	struct:mnat_sess	file:
lufrag	re-0.5.6/src/ice/ice.h	/^	char *lufrag;                \/**< Local Username fragment            *\/$/;"	m	struct:icem
luri	baresip/src/core.h	/^	struct uri luri;             \/**< Decoded AOR uri                    *\/$/;"	m	struct:account	typeref:struct:account::uri
luserid	baresip/src/bfcp.c	/^	uint16_t luserid;$/;"	m	struct:bfcp	file:
m	baresip/modules/ice/ice.c	/^		struct mnat_media *m;         \/* pointer to parent *\/$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::mnat_media	file:
m	re-0.5.6/include/re_rtp.h	/^	bool     m;         \/**< Marker bit             *\/$/;"	m	struct:rtp_header
m	re-0.5.6/src/lock/lock.c	/^	pthread_mutex_t m;$/;"	m	struct:lock	file:
m_auth	baresip/modules/gzrtp/stream.h	/^	uint64_t m_ok, m_decode, m_auth, m_replay;$/;"	m	class:SRTPStat
m_auth_burst	baresip/modules/gzrtp/stream.h	/^	uint64_t m_decode_burst, m_auth_burst, m_replay_burst;$/;"	m	class:SRTPStat
m_auth_tag_len	baresip/modules/gzrtp/srtp.h	/^	int32_t m_auth_tag_len;$/;"	m	class:Srtp
m_cc	baresip/modules/gzrtp/srtp.h	/^	CryptoContext *m_cc;$/;"	m	class:Srtp
m_cc_ctrl	baresip/modules/gzrtp/srtp.h	/^	CryptoContextCtrl *m_cc_ctrl;$/;"	m	class:Srtp
m_ciphers	baresip/modules/gzrtp/stream.h	/^	std::string m_sas, m_ciphers;$/;"	m	class:Stream
m_control	baresip/modules/gzrtp/stream.h	/^	const bool m_control;$/;"	m	class:SRTPStat
m_decode	baresip/modules/gzrtp/stream.h	/^	uint64_t m_ok, m_decode, m_auth, m_replay;$/;"	m	class:SRTPStat
m_decode_burst	baresip/modules/gzrtp/stream.h	/^	uint64_t m_decode_burst, m_auth_burst, m_replay_burst;$/;"	m	class:SRTPStat
m_encrypted	baresip/modules/gzrtp/session.h	/^	unsigned int m_encrypted;$/;"	m	class:Session
m_id	baresip/modules/gzrtp/session.h	/^	int m_id;$/;"	m	class:Session
m_local_ssrc	baresip/modules/gzrtp/stream.h	/^	uint32_t m_local_ssrc, m_peer_ssrc;$/;"	m	class:Stream
m_master	baresip/modules/gzrtp/session.h	/^	Stream *m_master;$/;"	m	class:Session
m_media_type	baresip/modules/gzrtp/stream.h	/^	StreamMediaType m_media_type;$/;"	m	class:Stream
m_ok	baresip/modules/gzrtp/stream.h	/^	uint64_t m_ok, m_decode, m_auth, m_replay;$/;"	m	class:SRTPStat
m_peer_ssrc	baresip/modules/gzrtp/stream.h	/^	uint32_t m_local_ssrc, m_peer_ssrc;$/;"	m	class:Stream
m_raddr	baresip/modules/gzrtp/stream.h	/^	struct sa m_raddr;$/;"	m	class:Stream	typeref:struct:Stream::sa
m_recv_srtp	baresip/modules/gzrtp/stream.h	/^	Srtp *m_send_srtp, *m_recv_srtp;$/;"	m	class:Stream
m_replay	baresip/modules/gzrtp/stream.h	/^	uint64_t m_ok, m_decode, m_auth, m_replay;$/;"	m	class:SRTPStat
m_replay_burst	baresip/modules/gzrtp/stream.h	/^	uint64_t m_decode_burst, m_auth_burst, m_replay_burst;$/;"	m	class:SRTPStat
m_rtcpsock	baresip/modules/gzrtp/stream.h	/^	struct udp_sock *m_rtpsock, *m_rtcpsock;$/;"	m	class:Stream	typeref:struct:Stream::
m_rtpsock	baresip/modules/gzrtp/stream.h	/^	struct udp_sock *m_rtpsock, *m_rtcpsock;$/;"	m	class:Stream	typeref:struct:Stream::udp_sock
m_sas	baresip/modules/gzrtp/stream.h	/^	std::string m_sas, m_ciphers;$/;"	m	class:Stream
m_send_mutex	baresip/modules/gzrtp/stream.h	/^	pthread_mutex_t m_send_mutex;$/;"	m	class:Stream
m_send_srtp	baresip/modules/gzrtp/stream.h	/^	Srtp *m_send_srtp, *m_recv_srtp;$/;"	m	class:Stream
m_session	baresip/modules/gzrtp/stream.h	/^	Session *m_session;$/;"	m	class:Stream
m_srtcp_stat	baresip/modules/gzrtp/stream.h	/^	SRTPStat m_srtp_stat, m_srtcp_stat;$/;"	m	class:Stream
m_srtp	baresip/modules/gzrtp/srtp.h	/^	struct srtp *m_srtp;$/;"	m	class:Srtp	typeref:struct:Srtp::srtp
m_srtp_stat	baresip/modules/gzrtp/stream.h	/^	SRTPStat m_srtp_stat, m_srtcp_stat;$/;"	m	class:Stream
m_start_parallel	baresip/modules/gzrtp/session.h	/^	const bool m_start_parallel;$/;"	m	class:Session
m_started	baresip/modules/gzrtp/stream.h	/^	bool m_started;$/;"	m	class:Stream
m_stream	baresip/modules/gzrtp/stream.h	/^	const Stream *m_stream;$/;"	m	class:SRTPStat
m_streams	baresip/modules/gzrtp/session.h	/^	std::vector<Stream *> m_streams;$/;"	m	class:Session
m_threshold	baresip/modules/gzrtp/stream.h	/^	const uint64_t m_threshold;$/;"	m	class:SRTPStat
m_uh_rtcp	baresip/modules/gzrtp/stream.h	/^	struct udp_helper *m_uh_rtcp;$/;"	m	class:Stream	typeref:struct:Stream::udp_helper
m_uh_rtp	baresip/modules/gzrtp/stream.h	/^	struct udp_helper *m_uh_rtp;$/;"	m	class:Stream	typeref:struct:Stream::udp_helper
m_zrtp	baresip/modules/gzrtp/stream.h	/^	ZRtp *m_zrtp;$/;"	m	class:Stream
m_zrtp_mutex	baresip/modules/gzrtp/stream.h	/^	pthread_mutex_t m_zrtp_mutex;$/;"	m	class:Stream
m_zrtp_seq	baresip/modules/gzrtp/stream.h	/^	uint16_t m_zrtp_seq;$/;"	m	class:Stream
m_zrtp_timer	baresip/modules/gzrtp/stream.h	/^	struct tmr m_zrtp_timer;$/;"	m	class:Stream	typeref:struct:Stream::tmr
maddr	re-0.5.6/src/sip/keepalive_udp.c	/^	struct sa maddr;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::sa	file:
magic	baresip/test/call.c	/^	uint32_t magic;$/;"	m	struct:fixture	file:
magic	baresip/test/ua.c	/^	uint32_t magic;$/;"	m	struct:test	file:
magic	re-0.5.6/src/mem/mem.c	/^	uint32_t magic;     \/**< Magic number          *\/$/;"	m	struct:mem	file:
magic	re-0.5.6/src/mqueue/mqueue.c	/^	uint32_t magic;$/;"	m	struct:msg	file:
magic	re-0.5.6/src/websock/websock.c	/^static const char magic[] = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";$/;"	v	file:
mah	re-0.5.6/src/stun/keepalive.c	/^	stun_mapped_addr_h *mah;  \/**< Mapped address handler               *\/$/;"	m	struct:stun_keepalive	file:
main	baresip/src/main.c	/^int main(int argc, char *argv[])$/;"	f
main	baresip/test/main.c	/^int main(int argc, char *argv[])$/;"	f
mand	re-0.5.6/include/re_bfcp.h	/^	bool mand;$/;"	m	struct:bfcp_attr
map	baresip/modules/natpmp/libnatpmp.h	/^		} map;$/;"	m	union:natpmp_resp::__anon70	typeref:struct:natpmp_resp::__anon70::__anon71
map	re-0.5.6/src/natbd/lifetime.c	/^	struct sa map;                          \/**< Mapped IP address\/port *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::sa	file:
map	re-0.5.6/src/natbd/mapping.c	/^	struct sa map[3];         \/**< XOR Mapped address\/ports  *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::sa	file:
map	re-0.5.6/src/stun/keepalive.c	/^	struct sa map;            \/**< Mapped IP address and port           *\/$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::sa	file:
mapped_addr	re-0.5.6/include/re_stun.h	/^		struct sa mapped_addr;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
mapped_handler1	baresip/modules/stun/stun.c	/^static void mapped_handler1(int err, const struct sa *map_addr, void *arg)$/;"	f	file:
mapped_handler2	baresip/modules/stun/stun.c	/^static void mapped_handler2(int err, const struct sa *map_addr, void *arg)$/;"	f	file:
mapped_send	re-0.5.6/src/natbd/hairpinning.c	/^static int mapped_send(struct nat_hairpinning *nh)$/;"	f	file:
mapping_destructor	re-0.5.6/src/natbd/mapping.c	/^static void mapping_destructor(void *data)$/;"	f	file:
mapping_send	re-0.5.6/src/natbd/mapping.c	/^static int mapping_send(struct nat_mapping *nm)$/;"	f	file:
marker	baresip/src/audio.c	/^	bool marker;                  \/**< Marker bit for outgoing RTP     *\/$/;"	m	struct:autx	file:
marker	baresip/src/video.c	/^	bool marker;$/;"	m	struct:vidqent	file:
mask	re-0.5.6/include/re_websock.h	/^	unsigned mask:1;$/;"	m	struct:websock_hdr
match_fmt	baresip/modules/sdl2/sdl.c	/^static uint32_t match_fmt(enum vidfmt fmt)$/;"	f	file:
match_fmt	baresip/modules/v4l2/v4l2.c	/^static enum vidfmt match_fmt(u_int32_t fmt)$/;"	f	file:
match_handler	re-0.5.6/src/stun/ctrans.c	/^static bool match_handler(struct le *le, void *arg)$/;"	f	file:
max	baresip/include/baresip.h	/^	uint32_t max;  \/**< Maximum number *\/$/;"	m	struct:range
max	re-0.5.6/include/re_natbd.h	/^	uint32_t max;  \/**< Maximum lifetime interval in [seconds] *\/$/;"	m	struct:nat_lifetime_interval
max	re-0.5.6/include/re_types.h	132;"	d
max	re-0.5.6/include/re_types.h	133;"	d
max	re-0.5.6/src/fmt/regex.c	/^	uint8_t max;  \/**< Maximum value *\/$/;"	m	struct:chr	file:
max	re-0.5.6/src/jbuf/jbuf.c	/^	uint32_t max;        \/**< [# frames] Maximum # of frames to buffer  *\/$/;"	m	struct:jbuf	file:
max_calls	baresip/include/baresip.h	/^	uint32_t max_calls;     \/**< Maximum number of calls, 0=unlimited *\/$/;"	m	struct:config_call
max_fs	baresip/include/baresip.h	/^	uint32_t max_fs;$/;"	m	struct:videnc_param
max_fs	baresip/modules/avcodec/encode.c	/^			uint32_t max_fs;$/;"	m	struct:videnc_state::__anon37::__anon39	file:
max_fs	baresip/modules/gst_video/encode.c	/^		uint32_t max_fs;$/;"	m	struct:videnc_state::__anon64	file:
max_fs	baresip/modules/gst_video1/encode.c	/^		uint32_t max_fs;$/;"	m	struct:videnc_state::__anon90	file:
max_fs	baresip/modules/vp8/vp8.h	/^	uint32_t max_fs;$/;"	m	struct:vp8_vidcodec
max_fs	baresip/modules/vp9/vp9.h	/^	uint32_t max_fs;$/;"	m	struct:vp9_vidcodec
max_seq	re-0.5.6/src/rtp/rtcp.h	/^	uint16_t max_seq;         \/**< Highest seq. number seen            *\/$/;"	m	struct:rtp_source
max_smbps	baresip/modules/avcodec/encode.c	/^			uint32_t max_smbps;$/;"	m	struct:videnc_state::__anon37::__anon39	file:
max_smbps	baresip/modules/gst_video/encode.c	/^		uint32_t max_smbps;$/;"	m	struct:videnc_state::__anon64	file:
max_smbps	baresip/modules/gst_video1/encode.c	/^		uint32_t max_smbps;$/;"	m	struct:videnc_state::__anon90	file:
max_sz	rem-0.5.2/src/aubuf/aubuf.c	/^	size_t max_sz;$/;"	m	struct:aubuf	file:
maxfds	re-0.5.6/src/main/main.c	/^	int maxfds;                  \/**< Maximum number of polling fds     *\/$/;"	m	struct:re	file:
maxfwd	re-0.5.6/include/re_sip.h	/^	struct pl maxfwd;      \/**< Cached Max-Forwards header           *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
mb	baresip/modules/av1/decode.c	/^	struct mbuf *mb;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::mbuf	file:
mb	baresip/modules/avcodec/decode.c	/^	struct mbuf *mb;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::mbuf	file:
mb	baresip/modules/avcodec/encode.c	/^	struct mbuf *mb;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::mbuf	file:
mb	baresip/modules/h265/decode.c	/^	struct mbuf *mb;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::mbuf	file:
mb	baresip/modules/natpmp/libnatpmp.c	/^	struct mbuf *mb;$/;"	m	struct:natpmp_req	typeref:struct:natpmp_req::mbuf	file:
mb	baresip/modules/rst/rst.c	/^	struct mbuf *mb;$/;"	m	struct:rst	typeref:struct:rst::mbuf	file:
mb	baresip/modules/v4l/v4l.c	/^	struct mbuf *mb;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::mbuf	file:
mb	baresip/modules/vp8/decode.c	/^	struct mbuf *mb;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::mbuf	file:
mb	baresip/modules/vp9/decode.c	/^	struct mbuf *mb;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::mbuf	file:
mb	baresip/modules/winwave/winwave.h	/^	struct mbuf *mb;$/;"	m	struct:dspbuf	typeref:struct:dspbuf::mbuf
mb	baresip/src/audio.c	/^	struct mbuf *mb;              \/**< Buffer for outgoing RTP packets *\/$/;"	m	struct:autx	typeref:struct:autx::mbuf	file:
mb	baresip/src/cmd.c	/^	struct mbuf *mb;$/;"	m	struct:cmd_ctx	typeref:struct:cmd_ctx::mbuf	file:
mb	baresip/src/play.c	/^	struct mbuf *mb;$/;"	m	struct:play	typeref:struct:play::mbuf	file:
mb	baresip/src/video.c	/^	struct mbuf *mb;$/;"	m	struct:vidqent	typeref:struct:vidqent::mbuf	file:
mb	re-0.5.6/include/re_http.h	/^	struct mbuf *mb;       \/**< Buffer containing the HTTP body        *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::mbuf
mb	re-0.5.6/include/re_sip.h	/^	struct mbuf *mb;       \/**< Buffer containing the SIP message    *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::mbuf
mb	re-0.5.6/include/re_stun.h	/^		struct mbuf mb;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::mbuf
mb	re-0.5.6/src/bfcp/bfcp.h	/^	struct mbuf *mb;$/;"	m	struct:bfcp_conn	typeref:struct:bfcp_conn::mbuf
mb	re-0.5.6/src/bfcp/request.c	/^	struct mbuf *mb;$/;"	m	struct:bfcp_ctrans	typeref:struct:bfcp_ctrans::mbuf	file:
mb	re-0.5.6/src/conf/conf.c	/^	struct mbuf *mb;$/;"	m	struct:conf	typeref:struct:conf::mbuf	file:
mb	re-0.5.6/src/dns/client.c	/^	struct mbuf *mb;$/;"	m	struct:tcpconn	typeref:struct:tcpconn::mbuf	file:
mb	re-0.5.6/src/dns/client.c	/^	struct mbuf mb;$/;"	m	struct:dns_query	typeref:struct:dns_query::mbuf	file:
mb	re-0.5.6/src/http/client.c	/^	struct mbuf *mb;$/;"	m	struct:http_req	typeref:struct:http_req::mbuf	file:
mb	re-0.5.6/src/http/server.c	/^	struct mbuf *mb;$/;"	m	struct:http_conn	typeref:struct:http_conn::mbuf	file:
mb	re-0.5.6/src/sip/ctrans.c	/^	struct mbuf *mb;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::mbuf	file:
mb	re-0.5.6/src/sip/dialog.c	/^	struct mbuf *mb;$/;"	m	struct:route_enc	typeref:struct:route_enc::mbuf	file:
mb	re-0.5.6/src/sip/dialog.c	/^	struct mbuf *mb;$/;"	m	struct:sip_dialog	typeref:struct:sip_dialog::mbuf	file:
mb	re-0.5.6/src/sip/request.c	/^	struct mbuf *mb;$/;"	m	struct:sip_request	typeref:struct:sip_request::mbuf	file:
mb	re-0.5.6/src/sip/strans.c	/^	struct mbuf *mb;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::mbuf	file:
mb	re-0.5.6/src/sip/transp.c	/^	struct mbuf *mb;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::mbuf	file:
mb	re-0.5.6/src/sip/transp.c	/^	struct mbuf *mb;$/;"	m	struct:sip_connqent	typeref:struct:sip_connqent::mbuf	file:
mb	re-0.5.6/src/sipevent/sipevent.h	/^	struct mbuf *mb;$/;"	m	struct:sipnot	typeref:struct:sipnot::mbuf
mb	re-0.5.6/src/sipsess/ack.c	/^	struct mbuf *mb;$/;"	m	struct:sipsess_ack	typeref:struct:sipsess_ack::mbuf	file:
mb	re-0.5.6/src/sipsess/reply.c	/^	struct mbuf *mb;$/;"	m	struct:sipsess_reply	typeref:struct:sipsess_reply::mbuf	file:
mb	re-0.5.6/src/stun/ctrans.c	/^	struct mbuf *mb;$/;"	m	struct:stun_ctrans	typeref:struct:stun_ctrans::mbuf	file:
mb	re-0.5.6/src/stun/msg.c	/^	struct mbuf *mb;$/;"	m	struct:stun_msg	typeref:struct:stun_msg::mbuf	file:
mb	re-0.5.6/src/tcp/tcp.c	/^	struct mbuf mb;$/;"	m	struct:tcp_qent	typeref:struct:tcp_qent::mbuf	file:
mb	re-0.5.6/src/telev/telev.c	/^	struct mbuf *mb;$/;"	m	struct:telev	typeref:struct:telev::mbuf	file:
mb	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct mbuf *mb;$/;"	m	struct:dtls_sock	typeref:struct:dtls_sock::mbuf	file:
mb	re-0.5.6/src/websock/websock.c	/^	struct mbuf *mb;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::mbuf	file:
mb	rem-0.5.2/src/aubuf/aubuf.c	/^	struct mbuf *mb;$/;"	m	struct:auframe	typeref:struct:auframe::mbuf	file:
mb_ack	re-0.5.6/src/sip/ctrans.c	/^	struct mbuf *mb_ack;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::mbuf	file:
mb_frag	baresip/modules/avcodec/encode.c	/^	struct mbuf *mb_frag;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::mbuf	file:
mb_samp	baresip/test/play.c	/^	struct mbuf *mb_samp;$/;"	m	struct:test	typeref:struct:test::mbuf	file:
mba	baresip/modules/avcodec/h26x.h	/^	unsigned mba:9;   \/\/ address$/;"	m	struct:h263_hdr
mbreq	re-0.5.6/src/http/client.c	/^	struct mbuf *mbreq;$/;"	m	struct:http_req	typeref:struct:http_req::mbuf	file:
mbuf	re-0.5.6/include/re_mbuf.h	/^struct mbuf {$/;"	s
mbuf_advance	re-0.5.6/include/re_mbuf.h	/^static inline void mbuf_advance(struct mbuf *mb, ssize_t n)$/;"	f
mbuf_alloc	re-0.5.6/src/mbuf/mbuf.c	/^struct mbuf *mbuf_alloc(size_t size)$/;"	f
mbuf_alloc_ref	re-0.5.6/src/mbuf/mbuf.c	/^struct mbuf *mbuf_alloc_ref(struct mbuf *mbr)$/;"	f
mbuf_buf	re-0.5.6/include/re_mbuf.h	/^static inline uint8_t *mbuf_buf(const struct mbuf *mb)$/;"	f
mbuf_debug	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_debug(struct re_printf *pf, const struct mbuf *mb)$/;"	f
mbuf_destructor	re-0.5.6/src/mbuf/mbuf.c	/^static void mbuf_destructor(void *data)$/;"	f	file:
mbuf_fill	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_fill(struct mbuf *mb, uint8_t c, size_t n)$/;"	f
mbuf_get_left	re-0.5.6/include/re_mbuf.h	/^static inline size_t mbuf_get_left(const struct mbuf *mb)$/;"	f
mbuf_get_space	re-0.5.6/include/re_mbuf.h	/^static inline size_t mbuf_get_space(const struct mbuf *mb)$/;"	f
mbuf_init	re-0.5.6/src/mbuf/mbuf.c	/^void mbuf_init(struct mbuf *mb)$/;"	f
mbuf_printf	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_printf(struct mbuf *mb, const char *fmt, ...)$/;"	f
mbuf_read_mem	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_read_mem(struct mbuf *mb, uint8_t *buf, size_t size)$/;"	f
mbuf_read_str	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_read_str(struct mbuf *mb, char *str, size_t size)$/;"	f
mbuf_read_u16	re-0.5.6/src/mbuf/mbuf.c	/^uint16_t mbuf_read_u16(struct mbuf *mb)$/;"	f
mbuf_read_u32	re-0.5.6/src/mbuf/mbuf.c	/^uint32_t mbuf_read_u32(struct mbuf *mb)$/;"	f
mbuf_read_u64	re-0.5.6/src/mbuf/mbuf.c	/^uint64_t mbuf_read_u64(struct mbuf *mb)$/;"	f
mbuf_read_u8	re-0.5.6/src/mbuf/mbuf.c	/^uint8_t mbuf_read_u8(struct mbuf *mb)$/;"	f
mbuf_reset	re-0.5.6/src/mbuf/mbuf.c	/^void mbuf_reset(struct mbuf *mb)$/;"	f
mbuf_resize	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_resize(struct mbuf *mb, size_t size)$/;"	f
mbuf_rewind	re-0.5.6/include/re_mbuf.h	/^static inline void mbuf_rewind(struct mbuf *mb)$/;"	f
mbuf_set_end	re-0.5.6/include/re_mbuf.h	/^static inline void mbuf_set_end(struct mbuf *mb, size_t end)$/;"	f
mbuf_set_pos	re-0.5.6/include/re_mbuf.h	/^static inline void mbuf_set_pos(struct mbuf *mb, size_t pos)$/;"	f
mbuf_shift	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_shift(struct mbuf *mb, ssize_t shift)$/;"	f
mbuf_skip_to_end	re-0.5.6/include/re_mbuf.h	/^static inline void mbuf_skip_to_end(struct mbuf *mb)$/;"	f
mbuf_strdup	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_strdup(struct mbuf *mb, char **strp, size_t len)$/;"	f
mbuf_trim	re-0.5.6/src/mbuf/mbuf.c	/^void mbuf_trim(struct mbuf *mb)$/;"	f
mbuf_vprintf	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_vprintf(struct mbuf *mb, const char *fmt, va_list ap)$/;"	f
mbuf_write_mem	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_mem(struct mbuf *mb, const uint8_t *buf, size_t size)$/;"	f
mbuf_write_pl	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_pl(struct mbuf *mb, const struct pl *pl)$/;"	f
mbuf_write_pl_skip	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_pl_skip(struct mbuf *mb, const struct pl *pl,$/;"	f
mbuf_write_str	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_str(struct mbuf *mb, const char *str)$/;"	f
mbuf_write_u16	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_u16(struct mbuf *mb, uint16_t v)$/;"	f
mbuf_write_u32	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_u32(struct mbuf *mb, uint32_t v)$/;"	f
mbuf_write_u64	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_u64(struct mbuf *mb, uint64_t v)$/;"	f
mbuf_write_u8	re-0.5.6/src/mbuf/mbuf.c	/^int mbuf_write_u8(struct mbuf *mb, uint8_t v)$/;"	f
mc	baresip/modules/dshow/dshow.cpp	/^	IMediaControl *mc;$/;"	m	struct:vidsrc_st	file:
mctrl_handle_media_control	baresip/src/mctrl.c	/^int mctrl_handle_media_control(struct pl *body, bool *pfu)$/;"	f
md5	re-0.5.6/src/md5/wrap.c	/^void md5(const uint8_t *d, size_t n, uint8_t *md)$/;"	f
md5_INCLUDED	re-0.5.6/src/md5/md5.h	51;"	d
md5_append	re-0.5.6/src/md5/md5.c	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_byte_t	re-0.5.6/src/md5/md5.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_finish	re-0.5.6/src/md5/md5.c	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_hash	re-0.5.6/src/turn/turnc.h	/^	uint8_t md5_hash[MD5_SIZE];    \/**< Cached MD5-sum of credentials   *\/$/;"	m	struct:turnc
md5_init	re-0.5.6/src/md5/md5.c	/^md5_init(md5_state_t *pms)$/;"	f
md5_printf	re-0.5.6/src/md5/wrap.c	/^int md5_printf(uint8_t *md, const char *fmt, ...)$/;"	f
md5_process	re-0.5.6/src/md5/md5.c	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	re-0.5.6/src/md5/md5.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	re-0.5.6/src/md5/md5.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	re-0.5.6/src/md5/md5.h	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t
me	re-0.5.6/src/mod/mod.c	/^	const struct mod_export *me;  \/**< Module exports      *\/$/;"	m	struct:mod	typeref:struct:mod::mod_export	file:
media	baresip/modules/natpmp/natpmp.c	/^		struct mnat_media *media;   \/* pointer to parent *\/$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::mnat_media	file:
media	baresip/modules/pcp/pcp.c	/^		struct mnat_media *media;  \/* pointer to parent *\/$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::mnat_media	file:
media_alloc	baresip/modules/dtls_srtp/dtls_srtp.c	/^static int media_alloc(struct menc_media **mp, struct menc_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/gzrtp/gzrtp.cpp	/^static int media_alloc(struct menc_media **stp, struct menc_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/ice/ice.c	/^static int media_alloc(struct mnat_media **mp, struct mnat_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/natpmp/natpmp.c	/^static int media_alloc(struct mnat_media **mp, struct mnat_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/pcp/pcp.c	/^static int media_alloc(struct mnat_media **mp, struct mnat_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/stun/stun.c	/^static int media_alloc(struct mnat_media **mp, struct mnat_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/turn/turn.c	/^static int media_alloc(struct mnat_media **mp, struct mnat_sess *sess,$/;"	f	file:
media_alloc	baresip/modules/zrtp/zrtp.c	/^static int media_alloc(struct menc_media **stp, struct menc_sess *sess,$/;"	f	file:
media_alloc	re-0.5.6/src/sdp/media.c	/^static int media_alloc(struct sdp_media **mp, struct list *list)$/;"	f	file:
media_attr_handler	baresip/modules/ice/ice.c	/^static bool media_attr_handler(const char *name, const char *value, void *arg)$/;"	f	file:
media_ctx	baresip/include/baresip.h	/^struct media_ctx {$/;"	s
media_decode	baresip/src/account.c	/^static int media_decode(struct account *acc, const struct pl *prm)$/;"	f	file:
media_decode	re-0.5.6/src/sdp/msg.c	/^static int media_decode(struct sdp_media **mp, struct sdp_session *sess,$/;"	f	file:
media_destructor	baresip/modules/gzrtp/gzrtp.cpp	/^static void media_destructor(void *arg)$/;"	f	file:
media_destructor	baresip/modules/ice/ice.c	/^static void media_destructor(void *arg)$/;"	f	file:
media_destructor	baresip/modules/natpmp/natpmp.c	/^static void media_destructor(void *arg)$/;"	f	file:
media_destructor	baresip/modules/pcp/pcp.c	/^static void media_destructor(void *arg)$/;"	f	file:
media_destructor	baresip/modules/stun/stun.c	/^static void media_destructor(void *arg)$/;"	f	file:
media_destructor	baresip/modules/turn/turn.c	/^static void media_destructor(void *arg)$/;"	f	file:
media_destructor	baresip/modules/zrtp/zrtp.c	/^static void media_destructor(void *arg)$/;"	f	file:
media_encode	re-0.5.6/src/sdp/msg.c	/^static int media_encode(const struct sdp_media *m, struct mbuf *mb, bool offer)$/;"	f	file:
media_name	baresip/modules/gzrtp/messages.cpp	/^const char *Stream::media_name() const$/;"	f	class:Stream
media_pwd_decode	re-0.5.6/src/ice/icesdp.c	/^static int media_pwd_decode(struct icem *icem, const char *value)$/;"	f	file:
media_refresh	baresip/modules/pcp/pcp.c	/^static void media_refresh(struct mnat_media *media)$/;"	f	file:
media_start	baresip/modules/dtls_srtp/dtls_srtp.c	/^static int media_start(struct dtls_srtp *st, struct sdp_media *sdpm)$/;"	f	file:
media_start	baresip/modules/ice/ice.c	/^static int media_start(struct mnat_sess *sess, struct mnat_media *m)$/;"	f	file:
media_start	baresip/modules/stun/stun.c	/^static int media_start(struct mnat_sess *sess, struct mnat_media *m)$/;"	f	file:
media_start	baresip/modules/turn/turn.c	/^static int media_start(struct mnat_sess *sess, struct mnat_media *m)$/;"	f	file:
media_ufrag_decode	re-0.5.6/src/ice/icesdp.c	/^static int media_ufrag_decode(struct icem *icem, const char *value)$/;"	f	file:
mediac	baresip/modules/ice/ice.c	/^	int mediac;$/;"	m	struct:mnat_sess	file:
mediac	baresip/modules/stun/stun.c	/^	int mediac;$/;"	m	struct:mnat_sess	file:
mediac	baresip/modules/turn/turn.c	/^	int mediac;$/;"	m	struct:mnat_sess	file:
mediah	baresip/include/baresip.h	/^	menc_media_h *mediah;$/;"	m	struct:menc
mediah	baresip/src/core.h	/^	mnat_media_h *mediah;$/;"	m	struct:mnat
medial	baresip/modules/ice/ice.c	/^	struct list medial;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::list	file:
medial	baresip/modules/natpmp/natpmp.c	/^	struct list medial;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::list	file:
medial	baresip/modules/pcp/pcp.c	/^	struct list medial;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::list	file:
medial	baresip/modules/stun/stun.c	/^	struct list medial;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::list	file:
medial	baresip/modules/turn/turn.c	/^	struct list medial;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::list	file:
medial	re-0.5.6/src/sdp/sdp.h	/^	struct list medial;$/;"	m	struct:sdp_session	typeref:struct:sdp_session::list
mem	re-0.5.6/src/jbuf/jbuf.c	/^	void *mem;              \/**< Reference counted pointer *\/$/;"	m	struct:frame	file:
mem	re-0.5.6/src/mem/mem.c	/^struct mem {$/;"	s	file:
mem_alloc	re-0.5.6/src/mem/mem.c	/^void *mem_alloc(size_t size, mem_destroy_h *dh)$/;"	f
mem_debug	re-0.5.6/src/mem/mem.c	/^void mem_debug(void)$/;"	f
mem_deref	re-0.5.6/src/mem/mem.c	/^void *mem_deref(void *data)$/;"	f
mem_destroy_h	re-0.5.6/include/re_mem.h	/^typedef void (mem_destroy_h)(void *data);$/;"	t
mem_get_stat	re-0.5.6/src/mem/mem.c	/^int mem_get_stat(struct memstat *mstat)$/;"	f
mem_lock	re-0.5.6/src/mem/mem.c	/^static inline void mem_lock(void)$/;"	f	file:
mem_lock	re-0.5.6/src/mem/mem.c	67;"	d	file:
mem_magic	re-0.5.6/src/mem/mem.c	/^static const uint32_t mem_magic = 0xe7fb9ac4;$/;"	v	file:
mem_mutex	re-0.5.6/src/mem/mem.c	/^static pthread_mutex_t mem_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mem_nrefs	re-0.5.6/src/mem/mem.c	/^uint32_t mem_nrefs(const void *data)$/;"	f
mem_realloc	re-0.5.6/src/mem/mem.c	/^void *mem_realloc(void *data, size_t size)$/;"	f
mem_reallocarray	re-0.5.6/src/mem/mem.c	/^void *mem_reallocarray(void *ptr, size_t nmemb, size_t membsize,$/;"	f
mem_ref	re-0.5.6/src/mem/mem.c	/^void *mem_ref(void *data)$/;"	f
mem_status	re-0.5.6/src/mem/mem.c	/^int mem_status(struct re_printf *pf, void *unused)$/;"	f
mem_threshold_set	re-0.5.6/src/mem/mem.c	/^void mem_threshold_set(ssize_t n)$/;"	f
mem_unlock	re-0.5.6/src/mem/mem.c	/^static inline void mem_unlock(void)$/;"	f	file:
mem_unlock	re-0.5.6/src/mem/mem.c	68;"	d	file:
mem_zalloc	re-0.5.6/src/mem/mem.c	/^void *mem_zalloc(size_t size, mem_destroy_h *dh)$/;"	f
member_add	re-0.5.6/src/rtp/member.c	/^struct rtp_member *member_add(struct hash *ht, uint32_t src)$/;"	f
member_find	re-0.5.6/src/rtp/member.c	/^struct rtp_member *member_find(struct hash *ht, uint32_t src)$/;"	f
memberc	re-0.5.6/src/rtp/sess.c	/^	uint32_t memberc;           \/**< Number of members                   *\/$/;"	m	struct:rtcp_sess	file:
members	re-0.5.6/src/rtp/sess.c	/^	struct hash *members;       \/**< Member table                        *\/$/;"	m	struct:rtcp_sess	typeref:struct:rtcp_sess::hash	file:
meml	re-0.5.6/src/mem/mem.c	/^static struct list meml = LIST_INIT;$/;"	v	typeref:struct:list	file:
memstat	re-0.5.6/include/re_mem.h	/^struct memstat {$/;"	s
memstat	re-0.5.6/src/mem/mem.c	/^static struct memstat memstat = {$/;"	v	typeref:struct:memstat	file:
menc	baresip/include/baresip.h	/^struct menc {$/;"	s
menc	baresip/src/core.h	/^	const struct menc *menc;     \/**< MENC module                        *\/$/;"	m	struct:account	typeref:struct:account::menc
menc	baresip/src/core.h	/^	const struct menc *menc; \/**< Media encryption module               *\/$/;"	m	struct:stream	typeref:struct:stream::menc
menc_error_h	baresip/include/baresip.h	/^typedef void (menc_error_h)(int err, void *arg);$/;"	t
menc_error_handler	baresip/src/call.c	/^static void menc_error_handler(int err, void *arg)$/;"	f	file:
menc_find	baresip/src/menc.c	/^const struct menc *menc_find(const struct list *mencl, const char *id)$/;"	f
menc_media	baresip/modules/gzrtp/gzrtp.cpp	/^struct menc_media {$/;"	s	file:
menc_media	baresip/modules/zrtp/zrtp.c	/^struct menc_media {$/;"	s	file:
menc_media_h	baresip/include/baresip.h	/^typedef int  (menc_media_h)(struct menc_media **mp, struct menc_sess *sess,$/;"	t
menc_register	baresip/src/menc.c	/^void menc_register(struct list *mencl, struct menc *menc)$/;"	f
menc_sess	baresip/modules/dtls_srtp/dtls_srtp.c	/^struct menc_sess {$/;"	s	file:
menc_sess	baresip/modules/gzrtp/gzrtp.cpp	/^struct menc_sess {$/;"	s	file:
menc_sess	baresip/modules/zrtp/zrtp.c	/^struct menc_sess {$/;"	s	file:
menc_sess_h	baresip/include/baresip.h	/^typedef int  (menc_sess_h)(struct menc_sess **sessp, struct sdp_session *sdp,$/;"	t
menc_srtp_mand	baresip/modules/libsrtp/srtp.c	/^static struct menc menc_srtp_mand = {$/;"	v	typeref:struct:menc	file:
menc_srtp_mand	baresip/modules/srtp/srtp.c	/^static struct menc menc_srtp_mand = {$/;"	v	typeref:struct:menc	file:
menc_srtp_mandf	baresip/modules/libsrtp/srtp.c	/^static struct menc menc_srtp_mandf = {$/;"	v	typeref:struct:menc	file:
menc_srtp_mandf	baresip/modules/srtp/srtp.c	/^static struct menc menc_srtp_mandf = {$/;"	v	typeref:struct:menc	file:
menc_srtp_opt	baresip/modules/libsrtp/srtp.c	/^static struct menc menc_srtp_opt = {$/;"	v	typeref:struct:menc	file:
menc_srtp_opt	baresip/modules/srtp/srtp.c	/^static struct menc menc_srtp_opt = {$/;"	v	typeref:struct:menc	file:
menc_st	baresip/modules/libsrtp/srtp.c	/^struct menc_st {$/;"	s	file:
menc_st	baresip/modules/srtp/srtp.c	/^struct menc_st {$/;"	s	file:
menc_unregister	baresip/src/menc.c	/^void menc_unregister(struct menc *menc)$/;"	f
menc_zrtp	baresip/modules/gzrtp/gzrtp.cpp	/^static struct menc menc_zrtp = {$/;"	v	typeref:struct:menc	file:
menc_zrtp	baresip/modules/zrtp/zrtp.c	/^static struct menc menc_zrtp = {$/;"	v	typeref:struct:menc	file:
mencid	baresip/src/core.h	/^	char *mencid;                \/**< Media encryption type              *\/$/;"	m	struct:account
mencl	baresip/src/baresip.c	/^	struct list mencl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
mencs	baresip/src/call.c	/^	struct menc_sess *mencs;  \/**< Media encryption session state       *\/$/;"	m	struct:call	typeref:struct:call::menc_sess	file:
mencs	baresip/src/core.h	/^	struct menc_sess *mencs; \/**< Media encryption session state        *\/$/;"	m	struct:stream	typeref:struct:stream::menc_sess
menu	baresip/modules/menu/menu.c	/^const struct mod_export DECL_EXPORTS(menu) = {$/;"	v	typeref:struct:DECL_EXPORTS
menu	baresip/modules/menu/menu.c	/^} menu;$/;"	v	typeref:struct:__anon72	file:
menu_on_about	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_about(GtkMenuItem *menuItem, gpointer arg)$/;"	f	file:
menu_on_account_toggled	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_account_toggled(GtkCheckMenuItem *menu_item,$/;"	f	file:
menu_on_dial	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_dial(GtkMenuItem *menuItem, gpointer arg)$/;"	f	file:
menu_on_dial_contact	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_dial_contact(GtkMenuItem *menuItem, gpointer arg)$/;"	f	file:
menu_on_incoming_call_answer	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_incoming_call_answer(GtkMenuItem *menuItem,$/;"	f	file:
menu_on_incoming_call_reject	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_incoming_call_reject(GtkMenuItem *menuItem,$/;"	f	file:
menu_on_presence_set	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_presence_set(GtkMenuItem *item, struct gtk_mod *mod)$/;"	f	file:
menu_on_quit	baresip/modules/gtk/gtk_mod.c	/^static void menu_on_quit(GtkMenuItem *menuItem, gpointer arg)$/;"	f	file:
menu_set_incall	baresip/modules/menu/menu.c	/^static int menu_set_incall(bool incall)$/;"	f	file:
mes	baresip/src/core.h	/^	struct menc_media *mes;  \/**< Media Encryption media state          *\/$/;"	m	struct:stream	typeref:struct:stream::menc_media
message	baresip/modules/gtk/gtk_mod.c	/^	struct message_lsnr *message;$/;"	m	struct:gtk_mod	typeref:struct:gtk_mod::message_lsnr	file:
message	baresip/modules/menu/menu.c	/^	struct message_lsnr *message;$/;"	m	struct:__anon72	typeref:struct:__anon72::message_lsnr	file:
message	baresip/src/baresip.c	/^	struct message *message;$/;"	m	struct:baresip	typeref:struct:baresip::message	file:
message	baresip/src/message.c	/^struct message {$/;"	s	file:
message	baresip/test/message.c	/^	struct message *message;$/;"	m	struct:endpoint	typeref:struct:endpoint::message	file:
message_callback	baresip/modules/mqtt/subscribe.c	/^static void message_callback(struct mosquitto *mosq, void *obj,$/;"	f	file:
message_handler	baresip/modules/gtk/gtk_mod.c	/^static void message_handler(const struct pl *peer, const struct pl *ctype,$/;"	f	file:
message_handler	baresip/modules/menu/menu.c	/^static void message_handler(const struct pl *peer, const struct pl *ctype,$/;"	f	file:
message_init	baresip/src/message.c	/^int message_init(struct message **messagep)$/;"	f
message_listen	baresip/src/message.c	/^int message_listen(struct message_lsnr **lsnrp, struct message *message,$/;"	f
message_lsnr	baresip/src/message.c	/^struct message_lsnr {$/;"	s	file:
message_recv_h	baresip/include/baresip.h	/^typedef void (message_recv_h)(const struct pl *peer, const struct pl *ctype,$/;"	t
message_recv_handler	baresip/test/message.c	/^static void message_recv_handler(const struct pl *peer, const struct pl *ctype,$/;"	f	file:
message_send	baresip/src/message.c	/^int message_send(struct ua *ua, const char *peer, const char *msg,$/;"	f
met	re-0.5.6/include/re_http.h	/^	struct pl met;         \/**< Request Method                         *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::pl
met	re-0.5.6/include/re_sip.h	/^	struct pl met;         \/**< Request method                       *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
met	re-0.5.6/include/re_sip.h	/^	struct pl met;$/;"	m	struct:sip_cseq	typeref:struct:sip_cseq::pl
met	re-0.5.6/src/sip/ctrans.c	/^	char *met;$/;"	m	struct:sip_ctrans	file:
met	re-0.5.6/src/sip/request.c	/^	char *met;$/;"	m	struct:sip_request	file:
met	re-0.5.6/src/stun/ctrans.c	/^	uint16_t met;$/;"	m	struct:stun_ctrans	file:
meta	baresip/modules/rst/rst.c	/^	char *meta;$/;"	m	struct:rst	file:
metaint	baresip/modules/rst/rst.c	/^	size_t metaint;$/;"	m	struct:rst	file:
metasz	baresip/modules/rst/rst.c	/^	size_t metasz;$/;"	m	struct:rst	file:
method	baresip/src/rtpkeep.c	/^	char *method;$/;"	m	struct:rtpkeep	file:
method	baresip/src/sipreq.c	/^	char *method;$/;"	m	struct:sip_req	file:
method	re-0.5.6/src/main/main.c	/^	enum poll_method method;     \/**< The current polling method        *\/$/;"	m	struct:re	typeref:enum:re::poll_method	file:
method_tcp	re-0.5.6/src/tls/openssl/tls.h	/^	BIO_METHOD *method_tcp;$/;"	m	struct:tls
method_udp	re-0.5.6/src/tls/openssl/tls.h	/^	BIO_METHOD *method_udp;$/;"	m	struct:tls
metric	baresip/src/core.h	/^struct metric {$/;"	s
metric_add_packet	baresip/src/metric.c	/^void metric_add_packet(struct metric *metric, size_t packetsize)$/;"	f
metric_avg_bitrate	baresip/src/metric.c	/^uint32_t metric_avg_bitrate(const struct metric *metric)$/;"	f
metric_init	baresip/src/metric.c	/^void metric_init(struct metric *metric)$/;"	f
metric_reset	baresip/src/metric.c	/^void metric_reset(struct metric *metric)$/;"	f
metric_rx	baresip/src/core.h	/^	struct metric metric_rx; \/**< Metrics for receiving                 *\/$/;"	m	struct:stream	typeref:struct:stream::metric
metric_start	baresip/src/metric.c	/^static void metric_start(struct metric *metric)$/;"	f	file:
metric_tx	baresip/src/core.h	/^	struct metric metric_tx; \/**< Metrics for transmit                  *\/$/;"	m	struct:stream	typeref:struct:stream::metric
mh	re-0.5.6/src/natbd/mapping.c	/^	nat_mapping_h *mh;        \/**< Result handler            *\/$/;"	m	struct:nat_mapping	file:
min	baresip/include/baresip.h	/^	uint32_t min;  \/**< Minimum number *\/$/;"	m	struct:range
min	re-0.5.6/include/re_natbd.h	/^	uint32_t min;  \/**< Minimum lifetime interval in [seconds] *\/$/;"	m	struct:nat_lifetime_interval
min	re-0.5.6/include/re_types.h	128;"	d
min	re-0.5.6/include/re_types.h	129;"	d
min	re-0.5.6/src/fmt/regex.c	/^	uint8_t min;  \/**< Minimum value *\/$/;"	m	struct:chr	file:
min	re-0.5.6/src/jbuf/jbuf.c	/^	uint32_t min;        \/**< [# frames] Minimum # of frames to buffer  *\/$/;"	m	struct:jbuf	file:
mismatch	re-0.5.6/src/ice/ice.h	/^	bool mismatch;               \/**< ICE mismatch flag                  *\/$/;"	m	struct:icem
mix	re-0.5.6/src/hash/func.c	165;"	d	file:
mix	rem-0.5.2/src/aumix/aumix.c	/^	struct aumix *mix;$/;"	m	struct:aumix_source	typeref:struct:aumix_source::aumix	file:
mix	rem-0.5.2/src/vidmix/vidmix.c	/^	struct vidmix *mix;$/;"	m	struct:vidmix_source	typeref:struct:vidmix_source::vidmix	file:
mk_sdes	re-0.5.6/src/rtp/sess.c	/^static int mk_sdes(struct rtcp_sess *sess, struct mbuf *mb)$/;"	f	file:
mk_sr	re-0.5.6/src/rtp/sess.c	/^static int mk_sr(struct rtcp_sess *sess, struct mbuf *mb)$/;"	f	file:
mkdigest	re-0.5.6/src/sip/auth.c	/^static int mkdigest(uint8_t *digest, const struct realm *realm,$/;"	f	file:
mkey	re-0.5.6/include/re_websock.h	/^	uint8_t mkey[4];$/;"	m	struct:websock_hdr
mki	baresip/modules/libsrtp/sdes.h	/^	struct pl mki;       \/* optional *\/$/;"	m	struct:crypto	typeref:struct:crypto::pl
mki	baresip/modules/srtp/sdes.h	/^	struct pl mki;       \/* optional *\/$/;"	m	struct:crypto	typeref:struct:crypto::pl
mname	re-0.5.6/include/re_dns.h	/^			char *mname;$/;"	m	struct:dnsrr::__anon154::__anon158
mnat	baresip/modules/ice/ice.c	/^static struct mnat *mnat;$/;"	v	typeref:struct:mnat	file:
mnat	baresip/modules/natpmp/natpmp.c	/^static struct mnat *mnat;$/;"	v	typeref:struct:mnat	file:
mnat	baresip/modules/pcp/pcp.c	/^static struct mnat *mnat;$/;"	v	typeref:struct:mnat	file:
mnat	baresip/modules/stun/stun.c	/^static struct mnat *mnat;$/;"	v	typeref:struct:mnat	file:
mnat	baresip/modules/turn/turn.c	/^static struct mnat *mnat;$/;"	v	typeref:struct:mnat	file:
mnat	baresip/src/core.h	/^	const struct mnat *mnat;     \/**< MNAT module                        *\/$/;"	m	struct:account	typeref:struct:account::mnat
mnat	baresip/src/core.h	/^struct mnat {$/;"	s
mnat_estab_h	baresip/include/baresip.h	/^typedef void (mnat_estab_h)(int err, uint16_t scode, const char *reason,$/;"	t
mnat_find	baresip/src/mnat.c	/^const struct mnat *mnat_find(const struct list *mnatl, const char *id)$/;"	f
mnat_handler	baresip/src/call.c	/^static void mnat_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
mnat_media	baresip/modules/ice/ice.c	/^struct mnat_media {$/;"	s	file:
mnat_media	baresip/modules/natpmp/natpmp.c	/^struct mnat_media {$/;"	s	file:
mnat_media	baresip/modules/pcp/pcp.c	/^struct mnat_media {$/;"	s	file:
mnat_media	baresip/modules/stun/stun.c	/^struct mnat_media {$/;"	s	file:
mnat_media	baresip/modules/turn/turn.c	/^struct mnat_media {$/;"	s	file:
mnat_media_h	baresip/include/baresip.h	/^typedef int (mnat_media_h)(struct mnat_media **mp, struct mnat_sess *sess,$/;"	t
mnat_register	baresip/src/mnat.c	/^int mnat_register(struct mnat **mnatp, struct list *mnatl,$/;"	f
mnat_sess	baresip/modules/ice/ice.c	/^struct mnat_sess {$/;"	s	file:
mnat_sess	baresip/modules/natpmp/natpmp.c	/^struct mnat_sess {$/;"	s	file:
mnat_sess	baresip/modules/pcp/pcp.c	/^struct mnat_sess {$/;"	s	file:
mnat_sess	baresip/modules/stun/stun.c	/^struct mnat_sess {$/;"	s	file:
mnat_sess	baresip/modules/turn/turn.c	/^struct mnat_sess {$/;"	s	file:
mnat_sess_h	baresip/include/baresip.h	/^typedef int (mnat_sess_h)(struct mnat_sess **sessp, struct dnsc *dnsc,$/;"	t
mnat_st	baresip/src/bfcp.c	/^	struct mnat_media *mnat_st;$/;"	m	struct:bfcp	typeref:struct:bfcp::mnat_media	file:
mnat_update_h	baresip/include/baresip.h	/^typedef int (mnat_update_h)(struct mnat_sess *sess);$/;"	t
mnat_wait	baresip/src/call.c	/^	bool mnat_wait;           \/**< Waiting for MNAT to establish        *\/$/;"	m	struct:call	file:
mnatid	baresip/src/core.h	/^	char *mnatid;                \/**< Media NAT handling                 *\/$/;"	m	struct:account
mnatl	baresip/src/baresip.c	/^	struct list mnatl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
mnats	baresip/src/call.c	/^	struct mnat_sess *mnats;  \/**< Media NAT session                    *\/$/;"	m	struct:call	typeref:struct:call::mnat_sess	file:
mns	baresip/src/core.h	/^	struct mnat_media *mns;  \/**< Media NAT traversal state             *\/$/;"	m	struct:stream	typeref:struct:stream::mnat_media
mock	baresip/test/mock/mock_auplay.c	/^} mock;$/;"	v	typeref:struct:__anon98	file:
mock_aucodec_register	baresip/test/mock/mock_aucodec.c	/^void mock_aucodec_register(void)$/;"	f
mock_aucodec_unregister	baresip/test/mock/mock_aucodec.c	/^void mock_aucodec_unregister(void)$/;"	f
mock_auplay_alloc	baresip/test/mock/mock_auplay.c	/^static int mock_auplay_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f	file:
mock_auplay_register	baresip/test/mock/mock_auplay.c	/^int mock_auplay_register(struct auplay **auplayp,$/;"	f
mock_ausrc_alloc	baresip/test/mock/mock_ausrc.c	/^static int mock_ausrc_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
mock_ausrc_register	baresip/test/mock/mock_ausrc.c	/^int mock_ausrc_register(struct ausrc **ausrcp)$/;"	f
mock_decode	baresip/test/mock/mock_vidcodec.c	/^static int mock_decode(struct viddec_state *vds, struct vidframe *frame,$/;"	f	file:
mock_decode_update	baresip/test/mock/mock_vidcodec.c	/^static int mock_decode_update(struct viddec_state **vdsp,$/;"	f	file:
mock_disp_alloc	baresip/test/mock/mock_vidisp.c	/^static int mock_disp_alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
mock_display	baresip/test/mock/mock_vidisp.c	/^static int mock_display(struct vidisp_st *st, const char *title,$/;"	f	file:
mock_encode	baresip/test/mock/mock_vidcodec.c	/^static int mock_encode(struct videnc_state *ves, bool update,$/;"	f	file:
mock_encode_update	baresip/test/mock/mock_vidcodec.c	/^static int mock_encode_update(struct videnc_state **vesp,$/;"	f	file:
mock_l16_decode	baresip/test/mock/mock_aucodec.c	/^static int mock_l16_decode(struct audec_state *st,$/;"	f	file:
mock_l16_encode	baresip/test/mock/mock_aucodec.c	/^static int mock_l16_encode(struct auenc_state *st, uint8_t *buf, size_t *len,$/;"	f	file:
mock_sample_h	baresip/test/test.h	/^typedef void (mock_sample_h)(const void *sampv, size_t sampc, void *arg);$/;"	t
mock_sample_handler	baresip/test/call.c	/^static void mock_sample_handler(const void *sampv, size_t sampc, void *arg)$/;"	f	file:
mock_vidcodec_register	baresip/test/mock/mock_vidcodec.c	/^void mock_vidcodec_register(void)$/;"	f
mock_vidcodec_unregister	baresip/test/mock/mock_vidcodec.c	/^void mock_vidcodec_unregister(void)$/;"	f
mock_vidisp_register	baresip/test/mock/mock_vidisp.c	/^int mock_vidisp_register(struct vidisp **vidispp)$/;"	f
mock_vidsrc_alloc	baresip/test/mock/mock_vidsrc.c	/^static int mock_vidsrc_alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
mock_vidsrc_register	baresip/test/mock/mock_vidsrc.c	/^int mock_vidsrc_register(struct vidsrc **vidsrcp)$/;"	f
mod	baresip/modules/gtk/call_window.c	/^	struct gtk_mod *mod;$/;"	m	struct:call_window	typeref:struct:call_window::gtk_mod	file:
mod	baresip/modules/gtk/dial_dialog.c	/^	struct gtk_mod *mod;$/;"	m	struct:dial_dialog	typeref:struct:dial_dialog::gtk_mod	file:
mod	re-0.5.6/src/mod/mod.c	/^struct mod {$/;"	s	file:
mod_add	re-0.5.6/src/mod/mod.c	/^int mod_add(struct mod **mp, const struct mod_export *me)$/;"	f
mod_avf	baresip/modules/avformat/avformat.c	/^static struct vidsrc *mod_avf;$/;"	v	typeref:struct:vidsrc	file:
mod_close	re-0.5.6/src/mod/mod.c	/^void mod_close(void)$/;"	f
mod_close_h	re-0.5.6/include/re_mod.h	/^typedef int (mod_close_h)(void);$/;"	t
mod_debug	re-0.5.6/src/mod/mod.c	/^int mod_debug(struct re_printf *pf, void *unused)$/;"	f
mod_destructor	re-0.5.6/src/mod/mod.c	/^static void mod_destructor(void *data)$/;"	f	file:
mod_export	re-0.5.6/include/re_mod.h	/^struct mod_export {$/;"	s
mod_export	re-0.5.6/src/mod/mod.c	/^const struct mod_export *mod_export(const struct mod *m)$/;"	f
mod_find	re-0.5.6/src/mod/mod.c	/^struct mod *mod_find(const char *name)$/;"	f
mod_gst_close	baresip/modules/gst/gst.c	/^static int mod_gst_close(void)$/;"	f	file:
mod_gst_close	baresip/modules/gst1/gst.c	/^static int mod_gst_close(void)$/;"	f	file:
mod_gst_init	baresip/modules/gst/gst.c	/^static int mod_gst_init(void)$/;"	f	file:
mod_gst_init	baresip/modules/gst1/gst.c	/^static int mod_gst_init(void)$/;"	f	file:
mod_init	re-0.5.6/src/mod/mod.c	/^void mod_init(void)$/;"	f
mod_init_h	re-0.5.6/include/re_mod.h	/^typedef int (mod_init_h)(void);$/;"	t
mod_list	re-0.5.6/src/mod/mod.c	/^struct list *mod_list(void)$/;"	f
mod_load	re-0.5.6/src/mod/mod.c	/^int mod_load(struct mod **mp, const char *name)$/;"	f
mod_obj	baresip/modules/gtk/gtk_mod.c	/^static struct gtk_mod mod_obj;$/;"	v	typeref:struct:gtk_mod	file:
mod_srtp_close	baresip/modules/libsrtp/srtp.c	/^static int mod_srtp_close(void)$/;"	f	file:
mod_srtp_close	baresip/modules/srtp/srtp.c	/^static int mod_srtp_close(void)$/;"	f	file:
mod_srtp_init	baresip/modules/libsrtp/srtp.c	/^static int mod_srtp_init(void)$/;"	f	file:
mod_srtp_init	baresip/modules/srtp/srtp.c	/^static int mod_srtp_init(void)$/;"	f	file:
mod_table	baresip/mk/win32/static.c	/^const struct mod_export *mod_table[] = {$/;"	v	typeref:struct:mod_export
mode	baresip/modules/ice/ice.c	/^	enum ice_mode mode;$/;"	m	struct:__anon45	typeref:enum:__anon45::ice_mode	file:
mode	baresip/modules/ilbc/ilbc.c	/^	int mode;$/;"	m	struct:audec_state	file:
mode	baresip/modules/ilbc/ilbc.c	/^	int mode;$/;"	m	struct:auenc_state	file:
mode	baresip/modules/mpa/mpa.h	/^		mode;$/;"	m	struct:mpa_param	typeref:enum:mpa_param::__anon28
mode	baresip/modules/wincons/wincons.c	/^	DWORD  mode;$/;"	m	struct:ui_st	file:
mode	rem-0.5.2/src/aufile/aufile.c	/^	enum aufile_mode mode;$/;"	m	struct:aufile	typeref:enum:aufile::aufile_mode	file:
mode_nb	baresip/modules/speex/speex.c	/^	int mode_nb;$/;"	m	struct:__anon83	file:
mode_wb	baresip/modules/speex/speex.c	/^	int mode_wb;$/;"	m	struct:__anon83	file:
modify_pending	re-0.5.6/src/sipsess/sipsess.h	/^	bool modify_pending;$/;"	m	struct:sipsess
modl	re-0.5.6/src/mod/mod.c	/^static struct list modl;  \/* struct mod *\/$/;"	v	typeref:struct:list	file:
module_app_handler	baresip/src/module.c	/^static int module_app_handler(const struct pl *val, void *arg)$/;"	f	file:
module_app_unload	baresip/src/module.c	/^void module_app_unload(void)$/;"	f
module_close	baresip/modules/account/account.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/amr/amr.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/aubridge/aubridge.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/audiounit/audiounit.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/aufile/aufile.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/auloop/auloop.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/av1/av1.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/avahi/avahi.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/avcodec/avcodec.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/avformat/avformat.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/b2bua/b2bua.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/bv32/bv32.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/cairo/cairo.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/codec2/codec2.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/contact/contact.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/coreaudio/coreaudio.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/daala/daala.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/debug_cmd/debug_cmd.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/directfb/directfb.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/dshow/dshow.cpp	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/dtls_srtp/dtls_srtp.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/dtmfio/dtmfio.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/echo/echo.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/evdev/evdev.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/fakevideo/fakevideo.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/g711/g711.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/g722/g722.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/g7221/g7221.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/g726/g726.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/gsm/gsm.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/gst_video/gst_video.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/gst_video1/gst_video.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/gtk/gtk_mod.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/gzrtp/gzrtp.cpp	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/h265/h265.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/httpd/httpd.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/ice/ice.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/ilbc/ilbc.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/isac/isac.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/jack/jack.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/l16/l16.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/menu/menu.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/mpa/mpa.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/mqtt/mqtt.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/mwi/mwi.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/natbd/natbd.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/natpmp/natpmp.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/omx/module.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/opengles/opengles.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/opensles/opensles.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/opus/opus.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/oss/oss.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/pcp/pcp.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/plc/plc.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/presence/presence.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/pulse/pulse.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/rst/rst.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/sdl/sdl.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/sdl2/sdl.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/selfview/selfview.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/silk/silk.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/snapshot/snapshot.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/sndfile/sndfile.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/speex_aec/speex_aec.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/speex_pp/speex_pp.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/stdio/stdio.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/stun/stun.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/swscale/swscale.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/syslog/syslog.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/turn/turn.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/vidbridge/vidbridge.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/vidinfo/vidinfo.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/vidloop/vidloop.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/vp8/vp8.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/vp9/vp9.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/vumeter/vumeter.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/wincons/wincons.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/x11/x11.c	/^static int module_close(void)$/;"	f	file:
module_close	baresip/modules/zrtp/zrtp.c	/^static int module_close(void)$/;"	f	file:
module_handler	baresip/src/module.c	/^static int module_handler(const struct pl *val, void *arg)$/;"	f	file:
module_init	baresip/modules/account/account.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/amr/amr.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/aubridge/aubridge.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/audiounit/audiounit.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/aufile/aufile.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/auloop/auloop.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/av1/av1.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/avahi/avahi.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/avcodec/avcodec.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/avformat/avformat.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/b2bua/b2bua.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/bv32/bv32.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/cairo/cairo.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/codec2/codec2.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/contact/contact.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/coreaudio/coreaudio.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/daala/daala.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/debug_cmd/debug_cmd.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/directfb/directfb.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/dshow/dshow.cpp	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/dtls_srtp/dtls_srtp.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/dtmfio/dtmfio.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/echo/echo.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/evdev/evdev.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/fakevideo/fakevideo.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/g711/g711.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/g722/g722.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/g7221/g7221.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/g726/g726.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/gsm/gsm.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/gst_video/gst_video.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/gst_video1/gst_video.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/gtk/gtk_mod.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/gzrtp/gzrtp.cpp	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/h265/h265.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/httpd/httpd.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/ice/ice.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/ilbc/ilbc.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/isac/isac.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/jack/jack.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/l16/l16.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/menu/menu.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/mpa/mpa.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/mqtt/mqtt.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/mwi/mwi.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/natbd/natbd.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/natpmp/natpmp.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/omx/module.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/opengles/opengles.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/opensles/opensles.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/opus/opus.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/oss/oss.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/pcp/pcp.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/plc/plc.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/presence/presence.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/pulse/pulse.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/rst/rst.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/sdl/sdl.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/sdl2/sdl.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/selfview/selfview.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/silk/silk.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/snapshot/snapshot.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/sndfile/sndfile.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/speex_aec/speex_aec.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/speex_pp/speex_pp.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/stdio/stdio.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/stun/stun.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/swscale/swscale.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/syslog/syslog.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/turn/turn.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/uuid/uuid.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/vidbridge/vidbridge.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/vidinfo/vidinfo.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/vidloop/vidloop.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/vp8/vp8.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/vp9/vp9.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/vumeter/vumeter.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/wincons/wincons.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/x11/x11.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/modules/zrtp/zrtp.c	/^static int module_init(void)$/;"	f	file:
module_init	baresip/src/module.c	/^int module_init(const struct conf *conf)$/;"	f
module_load	baresip/src/module.c	/^int module_load(const char *name)$/;"	f
module_preload	baresip/src/module.c	/^int module_preload(const char *module)$/;"	f
module_tmp_handler	baresip/src/module.c	/^static int module_tmp_handler(const struct pl *val, void *arg)$/;"	f	file:
module_unload	baresip/src/module.c	/^void module_unload(const char *name)$/;"	f
modulename	baresip/mk/mod.mk	/^modulename = $(lastword $(subst \/, ,$(dir $1)))$/;"	m
monv	re-0.5.6/src/fmt/time.c	/^static const char *monv[] = {"Jan", "Feb", "Mar", "Apr", "May", "Jun",$/;"	v	file:
mos_calculate	baresip/src/mos.c	/^double mos_calculate(double *r_factor, double rtt,$/;"	f
mosq	baresip/modules/mqtt/mqtt.h	/^	struct mosquitto *mosq;$/;"	m	struct:mqtt	typeref:struct:mqtt::mosquitto
mp3	baresip/modules/rst/audio.c	/^	mpg123_handle *mp3;$/;"	m	struct:ausrc_st	file:
mpa	baresip/modules/mpa/mpa.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(mpa) = {$/;"	v	typeref:struct:DECL_EXPORTS
mpa	baresip/modules/mpa/mpa.c	/^static struct aucodec mpa = {$/;"	v	typeref:struct:aucodec	file:
mpa_decode_fmtp	baresip/modules/mpa/sdp.c	/^void mpa_decode_fmtp(struct mpa_param *prm, const char *fmtp)$/;"	f
mpa_decode_frm	baresip/modules/mpa/decode.c	/^int mpa_decode_frm(struct audec_state *ads, int16_t *sampv, size_t *sampc,$/;"	f
mpa_decode_update	baresip/modules/mpa/decode.c	/^int mpa_decode_update(struct audec_state **adsp, const struct aucodec *ac,$/;"	f
mpa_encode_frm	baresip/modules/mpa/encode.c	/^int mpa_encode_frm(struct auenc_state *aes, uint8_t *buf, size_t *len,$/;"	f
mpa_encode_update	baresip/modules/mpa/encode.c	/^int mpa_encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f
mpa_param	baresip/modules/mpa/mpa.h	/^struct mpa_param {$/;"	s
mpg4	baresip/modules/avcodec/avcodec.c	/^static struct vidcodec mpg4 = {$/;"	v	typeref:struct:vidcodec	file:
mpg4_fmtp_enc	baresip/modules/avcodec/avcodec.c	/^static int mpg4_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f	file:
mpi	baresip/modules/avcodec/encode.c	/^	uint8_t mpi;        \/**< Minimum Picture Interval (1-32) *\/$/;"	m	struct:picsz	file:
mq	baresip/modules/gtk/call_window.c	/^	struct mqueue *mq;$/;"	m	struct:call_window	typeref:struct:call_window::mqueue	file:
mq	baresip/modules/gtk/gtk_mod.c	/^	struct mqueue *mq;$/;"	m	struct:gtk_mod	typeref:struct:gtk_mod::mqueue	file:
mq	baresip/modules/wincons/wincons.c	/^	struct mqueue *mq;$/;"	m	struct:ui_st	typeref:struct:ui_st::mqueue	file:
mqtt	baresip/modules/mqtt/mqtt.c	/^const struct mod_export DECL_EXPORTS(mqtt) = {$/;"	v	typeref:struct:DECL_EXPORTS
mqtt	baresip/modules/mqtt/mqtt.h	/^struct mqtt {$/;"	s
mqtt_publish_close	baresip/modules/mqtt/publish.c	/^void mqtt_publish_close(void)$/;"	f
mqtt_publish_init	baresip/modules/mqtt/publish.c	/^int mqtt_publish_init(struct mqtt *mqtt)$/;"	f
mqtt_publish_message	baresip/modules/mqtt/publish.c	/^int mqtt_publish_message(struct mqtt *mqtt, const char *topic,$/;"	f
mqtt_subscribe_close	baresip/modules/mqtt/subscribe.c	/^void mqtt_subscribe_close(void)$/;"	f
mqtt_subscribe_init	baresip/modules/mqtt/subscribe.c	/^int mqtt_subscribe_init(struct mqtt *mqtt)$/;"	f
mqtt_subscribe_start	baresip/modules/mqtt/subscribe.c	/^int mqtt_subscribe_start(struct mqtt *mqtt)$/;"	f
mqueue	re-0.5.6/src/mqueue/mqueue.c	/^struct mqueue {$/;"	s	file:
mqueue_alloc	re-0.5.6/src/mqueue/mqueue.c	/^int mqueue_alloc(struct mqueue **mqp, mqueue_h *h, void *arg)$/;"	f
mqueue_h	re-0.5.6/include/re_mqueue.h	/^typedef void (mqueue_h)(int id, void *data, void *arg);$/;"	t
mqueue_handler	baresip/modules/gtk/call_window.c	/^static void mqueue_handler(int id, void *data, void *arg)$/;"	f	file:
mqueue_handler	baresip/modules/gtk/gtk_mod.c	/^static void mqueue_handler(int id, void *data, void *arg)$/;"	f	file:
mqueue_handler	baresip/modules/wincons/wincons.c	/^static void mqueue_handler(int id, void *data, void *arg)$/;"	f	file:
mqueue_push	re-0.5.6/src/mqueue/mqueue.c	/^int mqueue_push(struct mqueue *mq, int id, void *data)$/;"	f
msg	re-0.5.6/src/http/client.c	/^	struct http_msg *msg;$/;"	m	struct:http_req	typeref:struct:http_req::http_msg	file:
msg	re-0.5.6/src/mqueue/mqueue.c	/^struct msg {$/;"	s	file:
msg	re-0.5.6/src/sip/strans.c	/^	struct sip_msg *msg;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::sip_msg	file:
msg	re-0.5.6/src/sipevent/listen.c	/^	const struct sip_msg *msg;$/;"	m	struct:subcmp	typeref:struct:subcmp::sip_msg	file:
msg	re-0.5.6/src/sipsess/reply.c	/^	const struct sip_msg *msg;$/;"	m	struct:sipsess_reply	typeref:struct:sipsess_reply::sip_msg	file:
msg	re-0.5.6/src/sipsess/sipsess.h	/^	const struct sip_msg *msg;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip_msg
msg_ctype	re-0.5.6/include/re_msg.h	/^struct msg_ctype {$/;"	s
msg_ctype_cmp	re-0.5.6/src/msg/ctype.c	/^bool msg_ctype_cmp(const struct msg_ctype *ctype,$/;"	f
msg_ctype_decode	re-0.5.6/src/msg/ctype.c	/^int msg_ctype_decode(struct msg_ctype *ctype, const struct pl *pl)$/;"	f
msg_integrity	re-0.5.6/include/re_stun.h	/^		uint8_t msg_integrity[20];$/;"	m	union:stun_attr::__anon174
msg_param_decode	re-0.5.6/src/msg/param.c	/^int msg_param_decode(const struct pl *pl, const char *name, struct pl *val)$/;"	f
msg_param_exists	re-0.5.6/src/msg/param.c	/^int msg_param_exists(const struct pl *pl, const char *name, struct pl *val)$/;"	f
msg_recv	re-0.5.6/src/natbd/hairpinning.c	/^static void msg_recv(struct nat_hairpinning *nh, int proto, void *sock,$/;"	f	file:
msg_recv	re-0.5.6/src/natbd/lifetime.c	/^static void msg_recv(struct stun *stun, const struct sa *src,$/;"	f	file:
msgh	baresip/modules/pcp/listener.c	/^	pcp_msg_h *msgh;$/;"	m	struct:pcp_listener	file:
msgh	re-0.5.6/src/sip/sip.h	/^	sip_msg_h *msgh;$/;"	m	struct:sip_lsnr
mtu	re-0.5.6/src/tls/openssl/tls_udp.c	/^	size_t mtu;$/;"	m	struct:dtls_sock	file:
multicast_update	re-0.5.6/src/udp/mcast.c	/^static int multicast_update(struct udp_sock *us, const struct sa *group,$/;"	f	file:
mute	baresip/modules/gtk/call_window.c	/^		GtkWidget *hangup, *transfer, *hold, *mute;$/;"	m	struct:call_window::__anon77	file:
mute_frame	baresip/src/video.c	/^	struct vidframe *mute_frame;       \/**< Frame with muted video    *\/$/;"	m	struct:vtx	typeref:struct:vtx::vidframe	file:
muted	baresip/src/audio.c	/^	bool muted;                   \/**< Audio source is muted           *\/$/;"	m	struct:autx	file:
muted	baresip/src/video.c	/^	bool muted;                        \/**< Muted flag                *\/$/;"	m	struct:vtx	file:
muted_frames	baresip/src/video.c	/^	int muted_frames;                  \/**< # of muted frames sent    *\/$/;"	m	struct:vtx	file:
mutex	baresip/modules/audiounit/player.c	/^	pthread_mutex_t mutex;$/;"	m	struct:auplay_st	file:
mutex	baresip/modules/audiounit/recorder.c	/^	pthread_mutex_t mutex;$/;"	m	struct:ausrc_st	file:
mutex	baresip/modules/coreaudio/player.c	/^	pthread_mutex_t mutex;$/;"	m	struct:auplay_st	file:
mutex	baresip/modules/coreaudio/recorder.c	/^	pthread_mutex_t mutex;$/;"	m	struct:ausrc_st	file:
mutex	baresip/modules/gst_video/encode.c	/^	pthread_mutex_t mutex;$/;"	m	struct:videnc_state	file:
mutex	baresip/modules/gst_video1/encode.c	/^			pthread_mutex_t mutex;$/;"	m	struct:videnc_state::__anon91::__anon92	file:
mutex	baresip/modules/gst_video1/encode.c	/^			pthread_mutex_t mutex;$/;"	m	struct:videnc_state::__anon91::__anon93	file:
mutex	baresip/modules/rst/video.c	/^	pthread_mutex_t mutex;$/;"	m	struct:vidsrc_st	file:
mutex	re-0.5.6/src/dbg/dbg.c	/^	pthread_mutex_t mutex; \/**< Thread locking         *\/$/;"	m	struct:__anon141	file:
mutex	re-0.5.6/src/main/main.c	/^	pthread_mutex_t mutex;       \/**< Mutex for thread synchronization  *\/$/;"	m	struct:re	file:
mutex	rem-0.5.2/src/aumix/aumix.c	/^	pthread_mutex_t mutex;$/;"	m	struct:aumix	file:
mutex	rem-0.5.2/src/vidmix/vidmix.c	/^	pthread_mutex_t mutex;$/;"	m	struct:vidmix_source	file:
mutexp	re-0.5.6/src/main/main.c	/^	pthread_mutex_t *mutexp;     \/**< Pointer to active mutex           *\/$/;"	m	struct:re	file:
mux	baresip/modules/dtls_srtp/dtls_srtp.c	/^	bool mux;$/;"	m	struct:dtls_srtp	file:
mwi	baresip/modules/mwi/mwi.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(mwi) = {$/;"	v	typeref:struct:DECL_EXPORTS
mwi	baresip/modules/mwi/mwi.c	/^struct mwi {$/;"	s	file:
mwi_find	baresip/modules/mwi/mwi.c	/^static struct mwi *mwi_find(const struct ua *ua)$/;"	f	file:
mwi_subscribe	baresip/modules/mwi/mwi.c	/^static int mwi_subscribe(struct ua *ua)$/;"	f	file:
mwil	baresip/modules/mwi/mwi.c	/^static struct list mwil;$/;"	v	typeref:struct:list	file:
mx	re-0.5.6/include/re_dns.h	/^		} mx;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon160
my_status	baresip/src/ua.c	/^	enum presence_status my_status; \/**< Presence Status                 *\/$/;"	m	struct:ua	typeref:enum:ua::presence_status	file:
mypower10	re-0.5.6/src/json/decode.c	/^static inline long double mypower10(uint64_t e)$/;"	f	file:
n	baresip/modules/natpmp/libnatpmp.c	/^	unsigned n;$/;"	m	struct:natpmp_req	file:
n	re-0.5.6/include/re_rtp.h	/^			uint32_t n;           \/**< Number of SDES items      *\/$/;"	m	struct:rtcp_msg::__anon181::rtcp_sdes
n	re-0.5.6/include/re_rtp.h	/^			uint32_t n;$/;"	m	struct:rtcp_msg::__anon181::__anon188
n	re-0.5.6/src/fmt/print.c	/^	size_t n;$/;"	m	struct:strm_print	file:
n	re-0.5.6/src/jbuf/jbuf.c	/^	uint32_t n;          \/**< [# frames] Current # of frames in buffer  *\/$/;"	m	struct:jbuf	file:
n_buffers	baresip/modules/v4l2/v4l2.c	/^	unsigned int   n_buffers;$/;"	m	struct:vidsrc_st	file:
n_bytes	baresip/modules/vp9/decode.c	/^	size_t n_bytes;$/;"	m	struct:viddec_state	file:
n_bytes	baresip/modules/vp9/encode.c	/^	size_t n_bytes;$/;"	m	struct:videnc_state	file:
n_bytes	baresip/src/core.h	/^	uint32_t n_bytes;$/;"	m	struct:metric
n_bytes_last	baresip/src/core.h	/^	uint32_t n_bytes_last;$/;"	m	struct:metric
n_closed	baresip/test/call.c	/^	unsigned n_closed;$/;"	m	struct:agent	file:
n_delta	baresip/modules/v4l2_codec/v4l2_codec.c	/^		unsigned n_delta;$/;"	m	struct:vidsrc_st::__anon84	file:
n_discard	baresip/src/audio.c	/^	uint64_t n_discard;$/;"	m	struct:aurx	file:
n_dtmf_recv	baresip/test/call.c	/^	unsigned n_dtmf_recv;$/;"	m	struct:agent	file:
n_dups	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_dups;       \/**< Number of duplicate frames detected     *\/$/;"	m	struct:jbuf_stat
n_err	baresip/src/core.h	/^	uint32_t n_err;$/;"	m	struct:metric
n_established	baresip/test/call.c	/^	unsigned n_established;$/;"	m	struct:agent	file:
n_flush	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_flush;      \/**< Number of times jitter buffer flushed   *\/$/;"	m	struct:jbuf_stat
n_frame	baresip/modules/daala/decode.c	/^		size_t n_frame;$/;"	m	struct:viddec_state::__anon80	file:
n_frame	baresip/modules/daala/encode.c	/^		size_t n_frame;$/;"	m	struct:videnc_state::__anon81	file:
n_frame	baresip/test/mock/mock_vidisp.c	/^	unsigned n_frame;$/;"	m	struct:vidisp_st	file:
n_frames	baresip/modules/vp9/decode.c	/^	unsigned n_frames;$/;"	m	struct:viddec_state	file:
n_frames	baresip/modules/vp9/encode.c	/^	unsigned n_frames;$/;"	m	struct:videnc_state	file:
n_get	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_get;        \/**< Number of frames got from jitter buffer *\/$/;"	m	struct:jbuf_stat
n_header	baresip/modules/daala/decode.c	/^		size_t n_header;$/;"	m	struct:viddec_state::__anon80	file:
n_header	baresip/modules/daala/encode.c	/^		size_t n_header;$/;"	m	struct:videnc_state::__anon81	file:
n_incoming	baresip/test/call.c	/^	unsigned n_incoming;$/;"	m	struct:agent	file:
n_intra	baresip/modules/vidloop/vidloop.c	/^	size_t n_intra;$/;"	m	struct:vstat	file:
n_intra	baresip/src/video.c	/^	unsigned n_intra;                  \/**< Intra-frames decoded      *\/$/;"	m	struct:vrx	file:
n_key	baresip/modules/avcodec/decode.c	/^		unsigned n_key;$/;"	m	struct:viddec_state::__anon35	file:
n_key	baresip/modules/v4l2_codec/v4l2_codec.c	/^		unsigned n_key;$/;"	m	struct:vidsrc_st::__anon84	file:
n_key_frames	baresip/modules/vp9/encode.c	/^	unsigned n_key_frames;$/;"	m	struct:videnc_state	file:
n_keyframe	baresip/modules/daala/decode.c	/^		size_t n_keyframe;$/;"	m	struct:viddec_state::__anon80	file:
n_keyframe	baresip/modules/daala/encode.c	/^		size_t n_keyframe;$/;"	m	struct:videnc_state::__anon81	file:
n_late	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_late;       \/**< Number of frames arriving too late      *\/$/;"	m	struct:jbuf_stat
n_lost	baresip/modules/avcodec/decode.c	/^		unsigned n_lost;$/;"	m	struct:viddec_state::__anon35	file:
n_lost	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_lost;       \/**< Number of lost frames                   *\/$/;"	m	struct:jbuf_stat
n_msg	baresip/test/message.c	/^	unsigned n_msg;$/;"	m	struct:endpoint	file:
n_nl	baresip/modules/natbd/natbd.c	/^	uint32_t n_nl;$/;"	m	struct:natbd	file:
n_oos	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_oos;        \/**< Number of out-of-sequence frames        *\/$/;"	m	struct:jbuf_stat
n_overflow	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_overflow;   \/**< Number of overflows                     *\/$/;"	m	struct:jbuf_stat
n_packet	baresip/modules/daala/decode.c	/^		size_t n_packet;$/;"	m	struct:viddec_state::__anon80	file:
n_packet	baresip/modules/daala/encode.c	/^		size_t n_packet;$/;"	m	struct:videnc_state::__anon81	file:
n_packets	baresip/src/core.h	/^	uint32_t n_packets;$/;"	m	struct:metric
n_picup	baresip/src/video.c	/^	unsigned n_picup;                  \/**< Picture updates sent      *\/$/;"	m	struct:vrx	file:
n_progress	baresip/test/call.c	/^	unsigned n_progress;$/;"	m	struct:agent	file:
n_put	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_put;        \/**< Number of frames put into jitter buffer *\/$/;"	m	struct:jbuf_stat
n_read	baresip/modules/auloop/auloop.c	/^	uint32_t n_read;$/;"	m	struct:audio_loop	file:
n_register_req	baresip/test/sip/sipsrv.h	/^	unsigned n_register_req;$/;"	m	struct:sip_server
n_resp	baresip/test/message.c	/^	unsigned n_resp;$/;"	m	struct:endpoint	file:
n_resp	baresip/test/ua.c	/^	unsigned n_resp;$/;"	m	struct:test	file:
n_underflow	re-0.5.6/include/re_jbuf.h	/^	uint32_t n_underflow;  \/**< Number of underflows                    *\/$/;"	m	struct:jbuf_stat
n_write	baresip/modules/auloop/auloop.c	/^	uint32_t n_write;$/;"	m	struct:audio_loop	file:
nack	re-0.5.6/include/re_rtp.h	/^		} nack;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon187
nack_pli	baresip/src/video.c	/^	bool nack_pli;          \/**< Send NACK\/PLI to peer                *\/$/;"	m	struct:video	file:
nadd	re-0.5.6/include/re_dns.h	/^	uint16_t nadd;$/;"	m	struct:dnshdr
nal_unit_type	baresip/modules/h265/h265.h	/^	unsigned nal_unit_type:6;          \/* NAL unit type (0-40)       *\/$/;"	m	struct:h265_nal
name	baresip/include/baresip.h	/^	const char *name;      \/**< Name of the UI-module                 *\/$/;"	m	struct:ui
name	baresip/include/baresip.h	/^	const char *name; \/**< Long command           *\/$/;"	m	struct:cmd
name	baresip/include/baresip.h	/^	const char *name;$/;"	m	struct:aucodec
name	baresip/include/baresip.h	/^	const char *name;$/;"	m	struct:aufilt
name	baresip/include/baresip.h	/^	const char *name;$/;"	m	struct:vidcodec
name	baresip/include/baresip.h	/^	const char *name;$/;"	m	struct:vidfilt
name	baresip/modules/aubridge/device.c	/^	char name[64];$/;"	m	struct:device	file:
name	baresip/modules/rst/rst.c	/^	char *name;$/;"	m	struct:rst	file:
name	baresip/src/core.h	/^	const char       *name;$/;"	m	struct:vidsrc
name	baresip/src/core.h	/^	const char      *name;$/;"	m	struct:auplay
name	baresip/src/core.h	/^	const char      *name;$/;"	m	struct:ausrc
name	baresip/src/core.h	/^	const char      *name;$/;"	m	struct:vidisp
name	baresip/test/main.c	/^	const char *name;$/;"	m	struct:test	file:
name	baresip/test/sip/sipsrv.h	/^	char *name;$/;"	m	struct:domain
name	baresip/test/sip/sipsrv.h	/^	char *name;$/;"	m	struct:user
name	re-0.5.6/include/re_dns.h	/^	char *name;$/;"	m	struct:dnsrr
name	re-0.5.6/include/re_http.h	/^	struct pl name;        \/**< HTTP Header name        *\/$/;"	m	struct:http_hdr	typeref:struct:http_hdr::pl
name	re-0.5.6/include/re_mod.h	/^	const char *name;    \/**< Module name             *\/$/;"	m	struct:mod_export
name	re-0.5.6/include/re_rtp.h	/^			char name[4];      \/**< Name (ASCII)               *\/$/;"	m	struct:rtcp_msg::__anon181::__anon185
name	re-0.5.6/include/re_sdp.h	/^	char *name;$/;"	m	struct:sdp_format
name	re-0.5.6/include/re_sdp.h	/^	struct pl name;$/;"	m	struct:sdp_extmap	typeref:struct:sdp_extmap::pl
name	re-0.5.6/include/re_sip.h	/^	struct pl name;        \/**< SIP Header name        *\/$/;"	m	struct:sip_hdr	typeref:struct:sip_hdr::pl
name	re-0.5.6/src/dns/client.c	/^	char *name;$/;"	m	struct:dns_query	file:
name	re-0.5.6/src/dns/client.c	/^	char *name;$/;"	m	struct:dnsquery	file:
name	re-0.5.6/src/dns/dname.c	/^	char *name;$/;"	m	struct:dname	file:
name	re-0.5.6/src/ice/ice.h	/^	char name[32];               \/**< Name of the media stream           *\/$/;"	m	struct:icem
name	re-0.5.6/src/sdp/attr.c	/^	char *name;$/;"	m	struct:sdp_attr	file:
name	re-0.5.6/src/sdp/sdp.h	/^	char *name;$/;"	m	struct:sdp_media
name	rem-0.5.2/include/rem_vid.h	/^	const char *name;$/;"	m	struct:vidfmt_desc
nans	re-0.5.6/include/re_dns.h	/^	uint16_t nans;$/;"	m	struct:dnshdr
naptr	re-0.5.6/include/re_dns.h	/^		} naptr;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon163
naptr_handler	re-0.5.6/src/sip/request.c	/^static void naptr_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
nat_filtering	re-0.5.6/src/natbd/filtering.c	/^struct nat_filtering {$/;"	s	file:
nat_filtering_alloc	re-0.5.6/src/natbd/filtering.c	/^int nat_filtering_alloc(struct nat_filtering **nfp, const struct sa *srv,$/;"	f
nat_filtering_h	re-0.5.6/include/re_natbd.h	/^typedef void (nat_filtering_h)(int err, enum nat_type filt, void *arg);$/;"	t
nat_filtering_handler	baresip/modules/natbd/natbd.c	/^static void nat_filtering_handler(int err, enum nat_type type, void *arg)$/;"	f	file:
nat_filtering_start	re-0.5.6/src/natbd/filtering.c	/^int nat_filtering_start(struct nat_filtering *nf)$/;"	f
nat_genalg	re-0.5.6/src/natbd/genalg.c	/^struct nat_genalg {$/;"	s	file:
nat_genalg_alloc	re-0.5.6/src/natbd/genalg.c	/^int nat_genalg_alloc(struct nat_genalg **ngp, const struct sa *srv, int proto,$/;"	f
nat_genalg_h	re-0.5.6/include/re_natbd.h	/^typedef void (nat_genalg_h)(int err, uint16_t scode, const char *reason,$/;"	t
nat_genalg_handler	baresip/modules/natbd/natbd.c	/^static void nat_genalg_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
nat_genalg_start	re-0.5.6/src/natbd/genalg.c	/^int nat_genalg_start(struct nat_genalg *ng)$/;"	f
nat_hairpinning	re-0.5.6/src/natbd/hairpinning.c	/^struct nat_hairpinning {$/;"	s	file:
nat_hairpinning_alloc	re-0.5.6/src/natbd/hairpinning.c	/^int nat_hairpinning_alloc(struct nat_hairpinning **nhp,$/;"	f
nat_hairpinning_h	re-0.5.6/include/re_natbd.h	/^typedef void (nat_hairpinning_h)(int err, bool supported, void *arg);$/;"	t
nat_hairpinning_handler	baresip/modules/natbd/natbd.c	/^static void nat_hairpinning_handler(int err, bool supported, void *arg)$/;"	f	file:
nat_hairpinning_start	re-0.5.6/src/natbd/hairpinning.c	/^int nat_hairpinning_start(struct nat_hairpinning *nh)$/;"	f
nat_lifetime	re-0.5.6/src/natbd/lifetime.c	/^struct nat_lifetime {$/;"	s	file:
nat_lifetime_alloc	re-0.5.6/src/natbd/lifetime.c	/^int nat_lifetime_alloc(struct nat_lifetime **nlp, const struct sa *srv,$/;"	f
nat_lifetime_h	re-0.5.6/include/re_natbd.h	/^typedef void (nat_lifetime_h)(int err, const struct nat_lifetime_interval *i,$/;"	t
nat_lifetime_handler	baresip/modules/natbd/natbd.c	/^static void nat_lifetime_handler(int err,$/;"	f	file:
nat_lifetime_interval	re-0.5.6/include/re_natbd.h	/^struct nat_lifetime_interval {$/;"	s
nat_lifetime_start	re-0.5.6/src/natbd/lifetime.c	/^int nat_lifetime_start(struct nat_lifetime *nl)$/;"	f
nat_mapping	re-0.5.6/src/natbd/mapping.c	/^struct nat_mapping {$/;"	s	file:
nat_mapping_alloc	re-0.5.6/src/natbd/mapping.c	/^int nat_mapping_alloc(struct nat_mapping **nmp, const struct sa *laddr,$/;"	f
nat_mapping_h	re-0.5.6/include/re_natbd.h	/^typedef void (nat_mapping_h)(int err, enum nat_type map, void *arg);$/;"	t
nat_mapping_handler	baresip/modules/natbd/natbd.c	/^static void nat_mapping_handler(int err, enum nat_type type, void *arg)$/;"	f	file:
nat_mapping_start	re-0.5.6/src/natbd/mapping.c	/^int nat_mapping_start(struct nat_mapping *nm)$/;"	f
nat_type	re-0.5.6/include/re_natbd.h	/^enum nat_type {$/;"	g
nat_type_str	re-0.5.6/src/natbd/natstr.c	/^const char *nat_type_str(enum nat_type type)$/;"	f
natbd	baresip/modules/natbd/natbd.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(natbd) = {$/;"	v	typeref:struct:DECL_EXPORTS
natbd	baresip/modules/natbd/natbd.c	/^struct natbd {$/;"	s	file:
natbd_alloc	baresip/modules/natbd/natbd.c	/^static int natbd_alloc(struct natbd **natbdp, uint32_t interval,$/;"	f	file:
natbd_start	baresip/modules/natbd/natbd.c	/^static int natbd_start(struct natbd *natbd)$/;"	f	file:
natbd_status	baresip/modules/natbd/natbd.c	/^static int natbd_status(struct re_printf *pf, void *arg)$/;"	f	file:
natbdv	baresip/modules/natbd/natbd.c	/^static struct natbd *natbdv[2];$/;"	v	typeref:struct:natbd	file:
natpmp	baresip/modules/natpmp/natpmp.c	/^		struct natpmp_req *natpmp;$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::natpmp_req	file:
natpmp	baresip/modules/natpmp/natpmp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(natpmp) = {$/;"	v	typeref:struct:DECL_EXPORTS
natpmp_ext	baresip/modules/natpmp/natpmp.c	/^static struct natpmp_req *natpmp_ext;$/;"	v	typeref:struct:natpmp_req	file:
natpmp_extaddr	baresip/modules/natpmp/natpmp.c	/^static struct sa natpmp_srv, natpmp_extaddr;$/;"	v	typeref:struct:	file:
natpmp_external_request	baresip/modules/natpmp/libnatpmp.c	/^int natpmp_external_request(struct natpmp_req **npp, const struct sa *srv,$/;"	f
natpmp_init	baresip/modules/natpmp/libnatpmp.c	/^static int natpmp_init(struct natpmp_req *np, const struct sa *srv,$/;"	f	file:
natpmp_mapping_request	baresip/modules/natpmp/libnatpmp.c	/^int natpmp_mapping_request(struct natpmp_req **npp, const struct sa *srv,$/;"	f
natpmp_op	baresip/modules/natpmp/libnatpmp.h	/^enum natpmp_op {$/;"	g
natpmp_req	baresip/modules/natpmp/libnatpmp.c	/^struct natpmp_req {$/;"	s	file:
natpmp_resp	baresip/modules/natpmp/libnatpmp.h	/^struct natpmp_resp {$/;"	s
natpmp_resp_h	baresip/modules/natpmp/libnatpmp.h	/^typedef void (natpmp_resp_h)(int err, const struct natpmp_resp *resp,$/;"	t
natpmp_resp_handler	baresip/modules/natpmp/natpmp.c	/^static void natpmp_resp_handler(int err, const struct natpmp_resp *resp,$/;"	f	file:
natpmp_result	baresip/modules/natpmp/libnatpmp.h	/^enum natpmp_result {$/;"	g
natpmp_srv	baresip/modules/natpmp/natpmp.c	/^static struct sa natpmp_srv, natpmp_extaddr;$/;"	v	typeref:struct:sa	file:
nauth	re-0.5.6/include/re_dns.h	/^	uint16_t nauth;$/;"	m	struct:dnshdr
nc	re-0.5.6/include/re_httpauth.h	/^	struct pl nc;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
nc	re-0.5.6/src/sip/auth.c	/^	uint32_t nc;$/;"	m	struct:realm	file:
need_conv	baresip/modules/vidloop/vidloop.c	/^	bool need_conv;$/;"	m	struct:video_loop	file:
need_conv	baresip/src/audio.c	/^	bool need_conv;               \/**< Sample format conversion needed *\/$/;"	m	struct:aurx	file:
need_conv	baresip/src/audio.c	/^	bool need_conv;               \/**< Sample format conversion needed *\/$/;"	m	struct:autx	file:
need_data_handler	baresip/modules/gst_video/encode.c	/^	gulong need_data_handler;$/;"	m	struct:videnc_state	file:
negotiated	baresip/modules/dtls_srtp/dtls_srtp.h	/^	bool negotiated;$/;"	m	struct:comp
net	baresip/include/baresip.h	/^	struct config_net net;$/;"	m	struct:config	typeref:struct:config::config_net
net	baresip/src/baresip.c	/^	struct network *net;$/;"	m	struct:baresip	typeref:struct:baresip::network	file:
net_af	baresip/src/net.c	/^int net_af(const struct network *net)$/;"	f
net_af2name	re-0.5.6/src/net/netstr.c	/^const char *net_af2name(int af)$/;"	f
net_alloc	baresip/src/net.c	/^int net_alloc(struct network **netp, const struct config_net *cfg, int af)$/;"	f
net_change	baresip/src/net.c	/^void net_change(struct network *net, uint32_t interval,$/;"	f
net_change_h	baresip/include/baresip.h	/^typedef void (net_change_h)(void *arg);$/;"	t
net_change_handler	baresip/src/ua.c	/^static void net_change_handler(void *arg)$/;"	f	file:
net_change_handler	baresip/test/net.c	/^static void net_change_handler(void *arg)$/;"	f	file:
net_check	baresip/src/net.c	/^bool net_check(struct network *net)$/;"	f
net_conn_h	re-0.5.6/include/re_net.h	/^typedef void (net_conn_h)(int err, uint32_t id);$/;"	t
net_debug	baresip/src/net.c	/^int net_debug(struct re_printf *pf, const struct network *net)$/;"	f
net_default_gateway_get	re-0.5.6/src/net/net.c	/^int net_default_gateway_get(int af, struct sa *gw)$/;"	f
net_default_source_addr_get	re-0.5.6/src/net/net.c	/^int net_default_source_addr_get(int af, struct sa *ip)$/;"	f
net_destructor	baresip/src/net.c	/^static void net_destructor(void *data)$/;"	f	file:
net_dns_srv_get	baresip/src/net.c	/^static int net_dns_srv_get(const struct network *net,$/;"	f	file:
net_dnsc	baresip/src/net.c	/^struct dnsc *net_dnsc(const struct network *net)$/;"	f
net_dnssrv_add	baresip/src/net.c	/^static int net_dnssrv_add(struct network *net, const struct sa *sa)$/;"	f	file:
net_domain	baresip/src/net.c	/^const char *net_domain(const struct network *net)$/;"	f
net_force_change	baresip/src/net.c	/^void net_force_change(struct network *net)$/;"	f
net_getifaddrs	re-0.5.6/src/net/ifaddrs.c	/^int net_getifaddrs(net_ifaddr_h *ifh, void *arg)$/;"	f
net_hostaddr	re-0.5.6/src/net/net.c	/^int net_hostaddr(int af, struct sa *ip)$/;"	f
net_if_apply	re-0.5.6/src/net/net.c	/^int net_if_apply(net_ifaddr_h *ifh, void *arg)$/;"	f
net_if_debug	re-0.5.6/src/net/if.c	/^int net_if_debug(struct re_printf *pf, void *unused)$/;"	f
net_if_getaddr	re-0.5.6/src/net/if.c	/^int net_if_getaddr(const char *ifname, int af, struct sa *ip)$/;"	f
net_if_getaddr4	re-0.5.6/src/net/posix/pif.c	/^int net_if_getaddr4(const char *ifname, int af, struct sa *ip)$/;"	f
net_if_getlinklocal	re-0.5.6/src/net/if.c	/^int net_if_getlinklocal(const char *ifname, int af, struct sa *ip)$/;"	f
net_if_getname	re-0.5.6/src/net/if.c	/^int net_if_getname(char *ifname, size_t sz, int af, const struct sa *ip)$/;"	f
net_if_list	re-0.5.6/src/net/posix/pif.c	/^int net_if_list(net_ifaddr_h *ifh, void *arg)$/;"	f
net_if_list	re-0.5.6/src/net/win32/wif.c	/^int net_if_list(net_ifaddr_h *ifh, void *arg)$/;"	f
net_ifaddr_h	re-0.5.6/include/re_net.h	/^typedef bool (net_ifaddr_h)(const char *ifname, const struct sa *sa,$/;"	t
net_inet_ntop	re-0.5.6/src/sa/ntop.c	/^int net_inet_ntop(const struct sa *sa, char *buf, int size)$/;"	f
net_inet_pton	re-0.5.6/src/sa/pton.c	/^int net_inet_pton(const char *addr, struct sa *sa)$/;"	f
net_laddr_af	baresip/src/net.c	/^const struct sa *net_laddr_af(const struct network *net, int af)$/;"	f
net_proto2name	re-0.5.6/src/net/netstr.c	/^const char *net_proto2name(int proto)$/;"	f
net_rt	re-0.5.6/src/net/linux/rt.c	/^struct net_rt {$/;"	s	file:
net_rt	re-0.5.6/src/net/rt.c	/^struct net_rt {$/;"	s	file:
net_rt_debug	re-0.5.6/src/net/rt.c	/^int net_rt_debug(struct re_printf *pf, void *unused)$/;"	f
net_rt_default_get	re-0.5.6/src/net/rt.c	/^int net_rt_default_get(int af, char *ifname, size_t size)$/;"	f
net_rt_h	re-0.5.6/include/re_net.h	/^typedef bool (net_rt_h)(const char *ifname, const struct sa *dst,$/;"	t
net_rt_handler	baresip/modules/natpmp/natpmp.c	/^static bool net_rt_handler(const char *ifname, const struct sa *dst,$/;"	f	file:
net_rt_handler	re-0.5.6/src/net/net.c	/^static bool net_rt_handler(const char *ifname, const struct sa *dst,$/;"	f	file:
net_rt_list	re-0.5.6/src/net/bsd/brt.c	/^int net_rt_list(net_rt_h *rth, void *arg)$/;"	f
net_rt_list	re-0.5.6/src/net/linux/rt.c	/^int net_rt_list(net_rt_h *rth, void *arg)$/;"	f
net_rt_list	re-0.5.6/src/net/rt.c	/^int net_rt_list(net_rt_h *rth, void *arg)$/;"	f
net_sock_close	re-0.5.6/src/net/sock.c	/^void net_sock_close(void)$/;"	f
net_sock_init	re-0.5.6/src/net/sock.c	/^int net_sock_init(void)$/;"	f
net_sockopt_blocking_set	re-0.5.6/src/net/sockopt.c	/^int net_sockopt_blocking_set(int fd, bool blocking)$/;"	f
net_sockopt_reuse_set	re-0.5.6/src/net/sockopt.c	/^int net_sockopt_reuse_set(int fd, bool reuse)$/;"	f
net_use_nameserver	baresip/src/net.c	/^int net_use_nameserver(struct network *net, const struct sa *ns)$/;"	f
network	baresip/src/net.c	/^struct network {$/;"	s	file:
new_buffer_handler	baresip/modules/gst_video/encode.c	/^	gulong new_buffer_handler;$/;"	m	struct:videnc_state	file:
new_call_window	baresip/modules/gtk/gtk_mod.c	/^static struct call_window *new_call_window(struct gtk_mod *mod,$/;"	f	file:
new_session	baresip/modules/b2bua/b2bua.c	/^static int new_session(struct call *call)$/;"	f	file:
new_session	baresip/modules/echo/echo.c	/^static int new_session(struct call *call)$/;"	f	file:
next	re-0.5.6/include/re_list.h	/^	struct le *next;    \/**< Next element                        *\/$/;"	m	struct:le	typeref:struct:le::le
nf	baresip/modules/natbd/natbd.c	/^	struct nat_filtering *nf;$/;"	m	struct:natbd	typeref:struct:natbd::nat_filtering	file:
nfds	re-0.5.6/src/main/main.c	/^	int nfds;                    \/**< Number of active file descriptors *\/$/;"	m	struct:re	file:
nframes	baresip/modules/jack/jack_play.c	/^	jack_nframes_t nframes;       \/* num frames per port (channel) *\/$/;"	m	struct:auplay_st	file:
nframes	baresip/modules/jack/jack_src.c	/^	jack_nframes_t nframes;       \/* num frames per port (channel) *\/$/;"	m	struct:ausrc_st	file:
nframes	baresip/modules/vidinfo/vidinfo.h	/^	unsigned nframes;$/;"	m	struct:panel
nh	baresip/modules/natbd/natbd.c	/^	struct nat_hairpinning *nh;$/;"	m	struct:natbd	typeref:struct:natbd::nat_hairpinning	file:
nl	baresip/modules/natbd/natbd.c	/^	struct nat_lifetime *nl;$/;"	m	struct:natbd	typeref:struct:natbd::nat_lifetime	file:
nm	baresip/modules/natbd/natbd.c	/^	struct nat_mapping *nm;$/;"	m	struct:natbd	typeref:struct:natbd::nat_mapping	file:
nom	baresip/modules/ice/ice.c	/^	enum ice_nomination nom;$/;"	m	struct:__anon45	typeref:enum:__anon45::ice_nomination	file:
nom	re-0.5.6/include/re_ice.h	/^	enum ice_nomination nom;  \/**< Nomination algorithm        *\/$/;"	m	struct:ice_conf	typeref:enum:ice_conf::ice_nomination
nominated	re-0.5.6/src/ice/ice.h	/^	bool nominated;              \/**< Nominated flag                     *\/$/;"	m	struct:ice_candpair
nonce	re-0.5.6/include/re_httpauth.h	/^	struct pl nonce;$/;"	m	struct:httpauth_digest_chall	typeref:struct:httpauth_digest_chall::pl
nonce	re-0.5.6/include/re_httpauth.h	/^	struct pl nonce;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
nonce	re-0.5.6/include/re_stun.h	/^		char *nonce;$/;"	m	union:stun_attr::__anon174
nonce	re-0.5.6/src/sip/auth.c	/^	char *nonce;$/;"	m	struct:realm	file:
nonce	re-0.5.6/src/turn/turnc.h	/^	char *nonce;                   \/**< Saved NONCE value from server   *\/$/;"	m	struct:turnc
nonce	re-0.5.6/src/websock/websock.c	/^	char nonce[24];$/;"	m	struct:websock_conn	file:
noref	baresip/modules/av1/decode.c	/^	unsigned noref:1;$/;"	m	struct:hdr	file:
noref	baresip/modules/vp8/decode.c	/^	unsigned noref:1;$/;"	m	struct:hdr	file:
normalize_uri	baresip/src/call.c	/^static int normalize_uri(char **out, const char *uri, const struct uri *luri)$/;"	f	file:
not	baresip/modules/presence/notifier.c	/^	struct sipnot *not;$/;"	m	struct:notifier	typeref:struct:notifier::sipnot	file:
not	baresip/src/call.c	/^	struct sipnot *not;       \/**< REFER\/NOTIFY client                  *\/$/;"	m	struct:call	typeref:struct:call::sipnot	file:
not_cmp_handler	re-0.5.6/src/sipevent/listen.c	/^static bool not_cmp_handler(struct le *le, void *arg)$/;"	f	file:
notifier	baresip/modules/presence/notifier.c	/^struct notifier {$/;"	s	file:
notifier_add	baresip/modules/presence/notifier.c	/^static int notifier_add(const struct sip_msg *msg, struct ua *ua)$/;"	f	file:
notifier_alloc	baresip/modules/presence/notifier.c	/^static int notifier_alloc(struct notifier **notp,$/;"	f	file:
notifier_close	baresip/modules/presence/notifier.c	/^void notifier_close(void)$/;"	f
notifier_init	baresip/modules/presence/notifier.c	/^int notifier_init(void)$/;"	f
notifier_update_status	baresip/modules/presence/notifier.c	/^void notifier_update_status(struct ua *ua)$/;"	f
notifierl	baresip/modules/presence/notifier.c	/^static struct list notifierl;$/;"	v	typeref:struct:list	file:
notify	baresip/modules/presence/notifier.c	/^static int notify(struct notifier *not, enum presence_status status)$/;"	f	file:
notify_handler	baresip/modules/mwi/mwi.c	/^static void notify_handler(struct sip *sip, const struct sip_msg *msg,$/;"	f	file:
notify_handler	baresip/modules/presence/subscriber.c	/^static void notify_handler(struct sip *sip, const struct sip_msg *msg,$/;"	f	file:
notify_handler	re-0.5.6/src/sipevent/listen.c	/^static void notify_handler(struct sipevent_sock *sock,$/;"	f	file:
notify_incoming_call	baresip/modules/gtk/gtk_mod.c	/^static void notify_incoming_call(struct gtk_mod *mod,$/;"	f	file:
notify_pending	re-0.5.6/src/sipevent/sipevent.h	/^	bool notify_pending;$/;"	m	struct:sipnot
notify_request	re-0.5.6/src/sipevent/notify.c	/^static int notify_request(struct sipnot *not, bool reset_ls)$/;"	f	file:
notify_timeout_handler	re-0.5.6/src/sipevent/subscribe.c	/^static void notify_timeout_handler(void *arg)$/;"	f	file:
notifyh	re-0.5.6/src/sipevent/sipevent.h	/^	sipsub_notify_h *notifyh;$/;"	m	struct:sipsub
npp	baresip/modules/natpmp/libnatpmp.c	/^	struct natpmp_req **npp;$/;"	m	struct:natpmp_req	typeref:struct:natpmp_req::natpmp_req	file:
nq	re-0.5.6/include/re_dns.h	/^	uint16_t nq;$/;"	m	struct:dnshdr
nr	re-0.5.6/src/turn/chan.c	/^	uint16_t nr;$/;"	m	struct:chan	file:
nr	re-0.5.6/src/turn/chan.c	/^	uint16_t nr;$/;"	m	struct:channels	file:
nr	re-0.5.6/src/turn/turnc.h	/^	uint16_t nr;$/;"	m	struct:chan_hdr
nread	rem-0.5.2/src/aufile/aufile.c	/^	size_t nread;$/;"	m	struct:aufile	file:
nrefs	re-0.5.6/src/mem/mem.c	/^	uint32_t nrefs;     \/**< Number of references  *\/$/;"	m	struct:mem	file:
nri	baresip/include/baresip.h	/^	unsigned nri:2;    \/**< 2 bits - nal_ref_idc                    *\/$/;"	m	struct:h264_hdr
ns	re-0.5.6/include/re_dns.h	/^		} ns;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon156
nsamp	baresip/modules/ilbc/ilbc.c	/^	uint32_t nsamp;$/;"	m	struct:audec_state	file:
nsc	baresip/include/baresip.h	/^	size_t nsc;             \/**< Number of DNS nameservers      *\/$/;"	m	struct:config_net
nsdname	re-0.5.6/include/re_dns.h	/^			char *nsdname;$/;"	m	struct:dnsrr::__anon154::__anon156
nsn	baresip/src/net.c	/^	uint32_t nsn;        \/**< Number of configured name servers *\/$/;"	m	struct:network	file:
nstun	baresip/modules/ice/ice.c	/^	int nstun;                   \/**< Number of pending STUN candidates  *\/$/;"	m	struct:mnat_media	file:
nsv	baresip/include/baresip.h	/^	} nsv[NET_MAX_NS];      \/**< Configured DNS nameservers     *\/$/;"	m	struct:config_net	typeref:struct:config_net::__anon24
nsv	baresip/src/net.c	/^	struct sa nsv[NET_MAX_NS];\/**< Configured name servers      *\/$/;"	m	struct:network	typeref:struct:network::sa	file:
ntp2unix	re-0.5.6/src/rtp/ntp.c	/^void ntp2unix(struct timeval *tv, const struct ntp_time *ntp)$/;"	f
ntp_compact	re-0.5.6/src/rtp/ntp.c	/^uint32_t ntp_compact(const struct ntp_time *ntp)$/;"	f
ntp_compact2us	re-0.5.6/src/rtp/ntp.c	/^uint64_t ntp_compact2us(uint32_t ntpc)$/;"	f
ntp_frac	re-0.5.6/include/re_rtp.h	/^			uint32_t ntp_frac;    \/**< NTP timestamp - fractions *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182
ntp_sec	re-0.5.6/include/re_rtp.h	/^			uint32_t ntp_sec;     \/**< NTP timestamp - seconds   *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182
ntp_time	re-0.5.6/src/rtp/rtcp.h	/^struct ntp_time {$/;"	s
ntp_time_get	re-0.5.6/src/rtp/ntp.c	/^int ntp_time_get(struct ntp_time *ntp)$/;"	f
ntx	re-0.5.6/src/dns/client.c	/^	uint32_t ntx;$/;"	m	struct:dns_query	file:
nuh_temporal_id_plus1	baresip/modules/h265/h265.h	/^	unsigned nuh_temporal_id_plus1:3;  \/* temporal identifier plus 1 *\/$/;"	m	struct:h265_nal
num	re-0.5.6/include/re_sip.h	/^	uint32_t num;$/;"	m	struct:sip_cseq
num_buffers	baresip/modules/omx/omx.h	/^	int num_buffers;$/;"	m	struct:omx_state
num_wraps	baresip/src/core.h	/^	unsigned num_wraps;$/;"	m	struct:timestamp_recv
numb_hash_cmp_handler	re-0.5.6/src/turn/chan.c	/^static bool numb_hash_cmp_handler(struct le *le, void *arg)$/;"	f	file:
number	re-0.5.6/include/re_rtp.h	/^					uint16_t number;$/;"	m	struct:rtcp_msg::__anon181::__anon188::__anon189::sli
nv12_to_rgb32	rem-0.5.2/src/vidconv/vconv.c	/^static void nv12_to_rgb32(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
nv12_to_yuv420p	rem-0.5.2/src/vidconv/vconv.c	/^static void nv12_to_yuv420p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
nv21_to_rgb32	rem-0.5.2/src/vidconv/vconv.c	/^static void nv21_to_rgb32(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
nv21_to_yuv420p	rem-0.5.2/src/vidconv/vconv.c	/^static void nv21_to_yuv420p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
nwritten	rem-0.5.2/src/aufile/aufile.c	/^	size_t nwritten;$/;"	m	struct:aufile	file:
object_entry	re-0.5.6/src/json/decode.c	/^static int object_entry(const struct pl *pl_name, const struct pl *pl_val,$/;"	f	file:
object_entry_handler	re-0.5.6/src/json/decode_odict.c	/^static int object_entry_handler(const char *name, const struct json_value *val,$/;"	f	file:
object_handler	re-0.5.6/src/json/decode_odict.c	/^static int object_handler(const char *name, unsigned idx,$/;"	f	file:
object_start	re-0.5.6/src/json/decode.c	/^static int object_start(const struct pl *pl_name, unsigned idx,$/;"	f	file:
och	rem-0.5.2/include/rem_auresamp.h	/^	unsigned och, ich;     \/**< Input\/output channel count *\/$/;"	m	struct:auresamp
odict	re-0.5.6/include/re_odict.h	/^		struct odict *odict;   \/* ODICT_OBJECT \/ ODICT_ARRAY *\/$/;"	m	union:odict_entry::__anon172	typeref:struct:odict_entry::__anon172::odict
odict	re-0.5.6/include/re_odict.h	/^struct odict {$/;"	s
odict_alloc	re-0.5.6/src/odict/odict.c	/^int odict_alloc(struct odict **op, uint32_t hash_size)$/;"	f
odict_count	re-0.5.6/src/odict/odict.c	/^size_t odict_count(const struct odict *o, bool nested)$/;"	f
odict_debug	re-0.5.6/src/odict/odict.c	/^int odict_debug(struct re_printf *pf, const struct odict *o)$/;"	f
odict_entry	re-0.5.6/include/re_odict.h	/^struct odict_entry {$/;"	s
odict_entry_add	re-0.5.6/src/odict/entry.c	/^int odict_entry_add(struct odict *o, const char *key,$/;"	f
odict_entry_debug	re-0.5.6/src/odict/entry.c	/^int odict_entry_debug(struct re_printf *pf, const struct odict_entry *e)$/;"	f
odict_entry_del	re-0.5.6/src/odict/entry.c	/^void odict_entry_del(struct odict *o, const char *key)$/;"	f
odict_lookup	re-0.5.6/src/odict/odict.c	/^const struct odict_entry *odict_lookup(const struct odict *o, const char *key)$/;"	f
odict_type	re-0.5.6/include/re_odict.h	/^enum odict_type {$/;"	g
odict_type_iscontainer	re-0.5.6/src/odict/type.c	/^bool odict_type_iscontainer(enum odict_type type)$/;"	f
odict_type_isreal	re-0.5.6/src/odict/type.c	/^bool odict_type_isreal(enum odict_type type)$/;"	f
odict_type_name	re-0.5.6/src/odict/type.c	/^const char *odict_type_name(enum odict_type type)$/;"	f
oeh	re-0.5.6/include/re_json.h	/^	json_object_entry_h *oeh;$/;"	m	struct:json_handlers
offerer	baresip/modules/dtls_srtp/dtls_srtp.c	/^	bool offerer;$/;"	m	struct:menc_sess	file:
offerer	baresip/modules/ice/ice.c	/^	bool offerer;$/;"	m	struct:mnat_sess	file:
offerh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_offer_h *offerh;$/;"	m	struct:sipsess
oh	re-0.5.6/include/re_json.h	/^	json_object_h *oh;$/;"	m	struct:json_handlers
ok	baresip/modules/gzrtp/stream.h	/^	uint64_t ok() { return m_ok; }$/;"	f	class:SRTPStat
omx	baresip/modules/omx/module.c	/^	struct omx_state* omx;$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::omx_state	file:
omx	baresip/modules/omx/module.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(omx) = {$/;"	v	typeref:struct:DECL_EXPORTS
omx	baresip/modules/omx/module.c	/^static struct omx_state omx;$/;"	v	typeref:struct:omx_state	file:
omx_deinit	baresip/modules/omx/omx.c	/^void omx_deinit(struct omx_state* st)$/;"	f
omx_display_disable	baresip/modules/omx/omx.c	/^void omx_display_disable(struct omx_state* st)$/;"	f
omx_display_enable	baresip/modules/omx/omx.c	/^int omx_display_enable(struct omx_state* st,$/;"	f
omx_display_flush_buffer	baresip/modules/omx/omx.c	/^int omx_display_flush_buffer(struct omx_state* st)$/;"	f
omx_display_input_buffer	baresip/modules/omx/omx.c	/^int omx_display_input_buffer(struct omx_state* st,$/;"	f
omx_init	baresip/modules/omx/omx.c	/^int omx_init(struct omx_state* st)$/;"	f
omx_state	baresip/modules/omx/omx.h	/^struct omx_state {$/;"	s
omx_vidisp_alloc	baresip/modules/omx/module.c	/^int omx_vidisp_alloc(struct vidisp_st **vp, const struct vidisp* vd,$/;"	f
omx_vidisp_display	baresip/modules/omx/module.c	/^int omx_vidisp_display(struct vidisp_st *st, const char *title,$/;"	f
on_dialog_response	baresip/modules/gtk/transfer_dialog.c	/^static void on_dialog_response(GtkDialog *dialog, gint response_id,$/;"	f	file:
on_hold	baresip/src/call.c	/^	bool on_hold;             \/**< True if call is on hold              *\/$/;"	m	struct:call	file:
on_secure	baresip/modules/gzrtp/session.cpp	/^void Session::on_secure(Stream *stream)$/;"	f	class:Session
on_send_packet	baresip/modules/zrtp/zrtp.c	/^static int on_send_packet(const zrtp_stream_t *stream,$/;"	f	file:
on_zrtp_secure	baresip/modules/zrtp/zrtp.c	/^static void on_zrtp_secure(zrtp_stream_t *stream)$/;"	f	file:
on_zrtp_security_event	baresip/modules/zrtp/zrtp.c	/^static void on_zrtp_security_event(zrtp_stream_t *stream,$/;"	f	file:
op	baresip/modules/natpmp/libnatpmp.h	/^	uint8_t op;$/;"	m	struct:natpmp_resp
opaque	re-0.5.6/include/re_httpauth.h	/^	struct pl opaque;$/;"	m	struct:httpauth_digest_chall	typeref:struct:httpauth_digest_chall::pl
opaque	re-0.5.6/src/sip/auth.c	/^	char *opaque;$/;"	m	struct:realm	file:
opcode	re-0.5.6/include/re_dns.h	/^	uint8_t opcode;$/;"	m	struct:dnshdr
opcode	re-0.5.6/include/re_websock.h	/^	unsigned opcode:4;$/;"	m	struct:websock_hdr
opcode	re-0.5.6/src/dns/client.c	/^	uint8_t opcode;$/;"	m	struct:dns_query	file:
open	baresip/modules/sdl/sdl.c	/^	bool open;$/;"	m	struct:__anon60	file:
open	baresip/src/conf.c	29;"	d	file:
open	re-0.5.6/src/conf/conf.c	23;"	d	file:
open_encoder	baresip/modules/av1/encode.c	/^static int open_encoder(struct videnc_state *ves, const struct vidsz *size)$/;"	f	file:
open_encoder	baresip/modules/avcodec/encode.c	/^static int open_encoder(struct videnc_state *st,$/;"	f	file:
open_encoder	baresip/modules/daala/encode.c	/^static int open_encoder(struct videnc_state *ves, const struct vidsz *size)$/;"	f	file:
open_encoder	baresip/modules/h265/encode.c	/^static int open_encoder(struct videnc_state *st, const struct vidsz *size)$/;"	f	file:
open_encoder	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int open_encoder(struct vidsrc_st *st, const char *device,$/;"	f	file:
open_encoder	baresip/modules/vp8/encode.c	/^static int open_encoder(struct videnc_state *ves, const struct vidsz *size)$/;"	f	file:
open_encoder	baresip/modules/vp9/encode.c	/^static int open_encoder(struct videnc_state *ves, const struct vidsz *size)$/;"	f	file:
open_encoder_x264	baresip/modules/avcodec/encode.c	/^static int open_encoder_x264(struct videnc_state *st, struct videnc_param *prm,$/;"	f	file:
openfile	baresip/modules/sndfile/sndfile.c	/^static SNDFILE *openfile(const struct aufilt_prm *prm, bool enc)$/;"	f	file:
opengles	baresip/modules/opengles/opengles.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(opengles) = {$/;"	v	typeref:struct:DECL_EXPORTS
opengles_addbuffers	baresip/modules/opengles/opengles.c	/^void opengles_addbuffers(struct vidisp_st *st)$/;"	f
opengles_alloc	baresip/modules/opengles/opengles.c	/^static int opengles_alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f	file:
opengles_display	baresip/modules/opengles/opengles.c	/^static int opengles_display(struct vidisp_st *st, const char *title,$/;"	f	file:
opengles_render	baresip/modules/opengles/opengles.c	/^void opengles_render(struct vidisp_st *st)$/;"	f
opensles	baresip/modules/opensles/opensles.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(opensles) = {$/;"	v	typeref:struct:DECL_EXPORTS
opensles_player_alloc	baresip/modules/opensles/player.c	/^int opensles_player_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
opensles_recorder_alloc	baresip/modules/opensles/recorder.c	/^int opensles_recorder_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
openssl_close	re-0.5.6/src/main/openssl.c	/^void openssl_close(void)$/;"	f
openssl_init	re-0.5.6/src/main/openssl.c	/^int openssl_init(void)$/;"	f
options_command	baresip/modules/menu/menu.c	/^static int options_command(struct re_printf *pf, void *arg)$/;"	f	file:
options_resp_h	baresip/include/baresip.h	/^typedef void (options_resp_h)(int err, const struct sip_msg *msg, void *arg);$/;"	t
options_resp_handler	baresip/modules/menu/menu.c	/^static void options_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
options_resp_handler	baresip/test/ua.c	/^static void options_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
opus	baresip/modules/opus/opus.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(opus) = {$/;"	v	typeref:struct:DECL_EXPORTS
opus	baresip/modules/opus/opus.c	/^static struct aucodec opus = {$/;"	v	typeref:struct:aucodec	file:
opus_decode_fmtp	baresip/modules/opus/sdp.c	/^void opus_decode_fmtp(struct opus_param *prm, const char *fmtp)$/;"	f
opus_decode_frm	baresip/modules/opus/decode.c	/^int opus_decode_frm(struct audec_state *ads, int16_t *sampv, size_t *sampc,$/;"	f
opus_decode_pkloss	baresip/modules/opus/decode.c	/^int opus_decode_pkloss(struct audec_state *ads, int16_t *sampv, size_t *sampc)$/;"	f
opus_decode_update	baresip/modules/opus/decode.c	/^int opus_decode_update(struct audec_state **adsp, const struct aucodec *ac,$/;"	f
opus_encode_frm	baresip/modules/opus/encode.c	/^int opus_encode_frm(struct auenc_state *aes, uint8_t *buf, size_t *len,$/;"	f
opus_encode_update	baresip/modules/opus/encode.c	/^int opus_encode_update(struct auenc_state **aesp, const struct aucodec *ac,$/;"	f
opus_fmtp_enc	baresip/modules/opus/opus.c	/^static int opus_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f	file:
opus_mirror	baresip/modules/opus/opus.c	/^static bool opus_mirror;$/;"	v	file:
opus_mirror_params	baresip/modules/opus/opus.c	/^void opus_mirror_params(const char *x)$/;"	f
opus_param	baresip/modules/opus/opus.h	/^struct opus_param {$/;"	s
or	rem-0.5.2/src/aubuf/aubuf.c	/^		size_t or;$/;"	m	struct:aubuf::__anon194	file:
orate	rem-0.5.2/include/rem_auresamp.h	/^	uint32_t orate, irate; \/**< Input\/output sample rate *\/$/;"	m	struct:auresamp
order	re-0.5.6/include/re_dns.h	/^			uint16_t order;$/;"	m	struct:dnsrr::__anon154::__anon163
orient	baresip/include/baresip.h	/^	int orient;       \/**< Wanted picture orientation (enum vidorient) *\/$/;"	m	struct:vidsrc_prm
orient	baresip/src/video.c	/^	enum vidorient orient;             \/**< Display orientation       *\/$/;"	m	struct:vrx	typeref:enum:vrx::vidorient	file:
osent	re-0.5.6/include/re_rtp.h	/^			uint32_t osent;       \/**< RTP octets sent           *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182
osent	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t osent;           \/**< RTP octets sent                     *\/$/;"	m	struct:rtp_source
osent	re-0.5.6/src/rtp/sess.c	/^	uint32_t osent;      \/**< Total number of RTP octets  sent *\/$/;"	m	struct:txstat	file:
oss	baresip/modules/oss/oss.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(oss) = {$/;"	v	typeref:struct:DECL_EXPORTS
oss_dev	baresip/modules/oss/oss.c	/^static char oss_dev[64] = "\/dev\/dsp";$/;"	v	file:
oss_reset	baresip/modules/oss/oss.c	/^static int oss_reset(int fd, uint32_t srate, uint8_t ch, int sampc,$/;"	f	file:
other	baresip/test/message.c	/^	struct endpoint *other;$/;"	m	struct:endpoint	typeref:struct:endpoint::endpoint	file:
other_addr	re-0.5.6/include/re_stun.h	/^		struct sa other_addr;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
other_call	baresip/modules/b2bua/b2bua.c	/^static struct call *other_call(struct session *sess, const struct call *call)$/;"	f	file:
out	baresip/modules/speex_aec/speex_aec.c	/^	int16_t *out;$/;"	m	struct:speex_st	file:
outboundv	baresip/src/core.h	/^	char *outboundv[2];          \/**< Optional SIP outbound proxies      *\/$/;"	m	struct:account
outgoing	baresip/src/call.c	/^	bool outgoing;            \/**< True if outgoing, false if incoming  *\/$/;"	m	struct:call	file:
outputMixObject	baresip/modules/opensles/player.c	/^	SLObjectItf outputMixObject;$/;"	m	struct:auplay_st	file:
output_callback	baresip/modules/audiounit/player.c	/^static OSStatus output_callback(void *inRefCon,$/;"	f	file:
output_comp	baresip/modules/audiounit/audiounit.c	/^AudioComponent output_comp = NULL;$/;"	v
output_comp	baresip/modules/audiounit/audiounit.h	/^AudioComponent output_comp;$/;"	v
output_handler	baresip/modules/cons/cons.c	/^static int output_handler(const char *str)$/;"	f	file:
output_handler	baresip/modules/httpd/httpd.c	/^static int output_handler(const char *str)$/;"	f	file:
output_handler	baresip/modules/stdio/stdio.c	/^static int output_handler(const char *str)$/;"	f	file:
output_handler	baresip/modules/wincons/wincons.c	/^static int output_handler(const char *str)$/;"	f	file:
outputh	baresip/include/baresip.h	/^	ui_output_h *outputh;  \/**< Handler for output strings (optional) *\/$/;"	m	struct:ui
overlay	baresip/modules/vidinfo/panel.c	/^static void overlay(struct vidframe *dst, unsigned yoffs, struct vidframe *src)$/;"	f	file:
owner	re-0.5.6/src/sipsess/sipsess.h	/^	bool owner;$/;"	m	struct:sipsess
p	baresip/modules/avcodec/h26x.h	/^	unsigned p:1;      \/**< 1 bit  - PB-frames, 0=mode B, 1=mode C      *\/$/;"	m	struct:h263_hdr
p	baresip/modules/vp9/decode.c	/^	unsigned p:1;  \/* P: Inter-picture predicted layer frame     *\/$/;"	m	struct:hdr	file:
p	re-0.5.6/include/re_fmt.h	/^	const char *p;  \/**< Pointer to string *\/$/;"	m	struct:pl
p	re-0.5.6/include/re_rtp.h	/^				void *p;$/;"	m	union:rtcp_msg::__anon181::__anon188::__anon189
p	re-0.5.6/include/re_rtp.h	/^		unsigned int p:1;        \/**< Padding flag           *\/$/;"	m	struct:rtcp_msg::rtcp_hdr
p	re-0.5.6/src/fmt/print.c	/^	char *p;$/;"	m	struct:dyn_print	file:
pa_close	baresip/modules/portaudio/portaudio.c	/^static int pa_close(void)$/;"	f	file:
pa_init	baresip/modules/portaudio/portaudio.c	/^static int pa_init(void)$/;"	f	file:
pace_next	re-0.5.6/src/ice/connchk.c	/^static void pace_next(struct icem *icem)$/;"	f	file:
pace_timeout	re-0.5.6/src/ice/connchk.c	/^static void pace_timeout(void *arg)$/;"	f	file:
packet_handler	baresip/modules/gst/gst.c	/^static void packet_handler(struct ausrc_st *st, GstBuffer *buffer)$/;"	f	file:
packet_handler	baresip/modules/gst1/gst.c	/^static void packet_handler(struct ausrc_st *st, GstBuffer *buffer)$/;"	f	file:
packet_handler	baresip/modules/vidloop/vidloop.c	/^static int packet_handler(bool marker, uint32_t rtp_ts,$/;"	f	file:
packet_handler	baresip/src/video.c	/^static int packet_handler(bool marker, uint32_t ts,$/;"	f	file:
packetization_mode	baresip/modules/avcodec/avcodec.c	/^static uint32_t packetization_mode(const char *fmtp)$/;"	f	file:
packetization_mode	baresip/modules/avcodec/encode.c	/^			uint32_t packetization_mode;$/;"	m	struct:videnc_state::__anon37::__anon39	file:
packetization_mode	baresip/modules/gst_video/encode.c	/^		uint32_t packetization_mode;$/;"	m	struct:videnc_state::__anon64	file:
packetization_mode	baresip/modules/gst_video1/encode.c	/^		uint32_t packetization_mode;$/;"	m	struct:videnc_state::__anon90	file:
packetization_mode	baresip/modules/v4l2_codec/v4l2_codec.c	/^static uint32_t packetization_mode(const char *fmtp)$/;"	f	file:
packetize	baresip/modules/av1/encode.c	/^static inline int packetize(bool marker, uint32_t rtp_ts,$/;"	f	file:
packetize	baresip/modules/h265/encode.c	/^static inline int packetize(bool marker, const uint8_t *buf, size_t len,$/;"	f	file:
packetize	baresip/modules/vp8/encode.c	/^static inline int packetize(bool marker, const uint8_t *buf, size_t len,$/;"	f	file:
packetize	baresip/modules/vp9/encode.c	/^static inline int packetize(struct videnc_state *ves,$/;"	f	file:
pad	re-0.5.6/include/re_rtp.h	/^	bool     pad;       \/**< Padding bit            *\/$/;"	m	struct:rtp_header
padding	re-0.5.6/include/re_sa.h	/^		uint8_t padding[28];$/;"	m	union:sa::__anon176
padding	re-0.5.6/include/re_stun.h	/^		struct mbuf padding;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::mbuf
paddr	re-0.5.6/src/sip/keepalive_udp.c	/^	struct sa paddr;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::sa	file:
paddr	re-0.5.6/src/sip/transp.c	/^	struct sa paddr;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::sa	file:
panel	baresip/modules/vidinfo/vidinfo.c	/^	struct panel *panel;$/;"	m	struct:vidinfo_dec	typeref:struct:vidinfo_dec::panel	file:
panel	baresip/modules/vidinfo/vidinfo.c	/^	struct panel *panel;$/;"	m	struct:vidinfo_enc	typeref:struct:vidinfo_enc::panel	file:
panel	baresip/modules/vidinfo/vidinfo.h	/^struct panel {$/;"	s
panel_add_frame	baresip/modules/vidinfo/panel.c	/^void panel_add_frame(struct panel *panel, uint64_t pts)$/;"	f
panel_alloc	baresip/modules/vidinfo/panel.c	/^int panel_alloc(struct panel **panelp, const char *label,$/;"	f
panel_draw	baresip/modules/vidinfo/panel.c	/^int panel_draw(struct panel *panel, struct vidframe *frame)$/;"	f
param	baresip/modules/h265/encode.c	/^	x265_param *param;$/;"	m	struct:videnc_state	file:
param	re-0.5.6/src/http/http.h	/^	bool param;$/;"	m	struct:http_chunk
param_algorithm	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_algorithm = PL("algorithm");$/;"	v	typeref:struct:pl	file:
param_cnonce	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_cnonce    = PL("cnonce");$/;"	v	typeref:struct:pl	file:
param_dstr	baresip/src/account.c	/^static int param_dstr(char **dstr, const struct pl *params, const char *name)$/;"	f	file:
param_handler	baresip/modules/avcodec/encode.c	/^static void param_handler(const struct pl *name, const struct pl *val,$/;"	f	file:
param_handler	baresip/modules/gst_video/encode.c	/^static void param_handler(const struct pl *name, const struct pl *val,$/;"	f	file:
param_handler	baresip/modules/gst_video1/encode.c	/^static void param_handler(const struct pl *name, const struct pl *val,$/;"	f	file:
param_handler	baresip/modules/speex/speex.c	/^static void param_handler(const struct pl *name, const struct pl *val,$/;"	f	file:
param_handler	re-0.5.6/src/uri/ucmp.c	/^static int param_handler(const struct pl *pname, const struct pl *pvalue,$/;"	f	file:
param_nc	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_nc        = PL("nc");$/;"	v	typeref:struct:pl	file:
param_nonce	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_nonce     = PL("nonce");$/;"	v	typeref:struct:pl	file:
param_opaque	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_opaque    = PL("opaque");$/;"	v	typeref:struct:pl	file:
param_qop	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_qop       = PL("qop");$/;"	v	typeref:struct:pl	file:
param_realm	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_realm     = PL("realm");$/;"	v	typeref:struct:pl	file:
param_response	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_response  = PL("response");$/;"	v	typeref:struct:pl	file:
param_stale	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_stale     = PL("stale");$/;"	v	typeref:struct:pl	file:
param_u32	baresip/src/account.c	/^static int param_u32(uint32_t *v, const struct pl *params, const char *name)$/;"	f	file:
param_uri	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_uri       = PL("uri");$/;"	v	typeref:struct:pl	file:
param_username	re-0.5.6/src/httpauth/digest.c	/^static const struct pl param_username  = PL("username");$/;"	v	typeref:struct:pl	file:
params	re-0.5.6/include/re_msg.h	/^	struct pl params;$/;"	m	struct:msg_ctype	typeref:struct:msg_ctype::pl
params	re-0.5.6/include/re_sdp.h	/^	char *params;$/;"	m	struct:sdp_format
params	re-0.5.6/include/re_sip.h	/^	struct pl params;$/;"	m	struct:sip_addr	typeref:struct:sip_addr::pl
params	re-0.5.6/include/re_sip.h	/^	struct pl params;$/;"	m	struct:sip_taddr	typeref:struct:sip_taddr::pl
params	re-0.5.6/include/re_sip.h	/^	struct pl params;$/;"	m	struct:sip_via	typeref:struct:sip_via::pl
params	re-0.5.6/include/re_sipevent.h	/^	struct pl params;$/;"	m	struct:sipevent_event	typeref:struct:sipevent_event::pl
params	re-0.5.6/include/re_sipevent.h	/^	struct pl params;$/;"	m	struct:sipevent_substate	typeref:struct:sipevent_substate::pl
params	re-0.5.6/include/re_uri.h	/^	struct pl params;    \/**< Optional URI-parameters           *\/$/;"	m	struct:uri	typeref:struct:uri::pl
params	re-0.5.6/src/sipreg/reg.c	/^	char *params;$/;"	m	struct:sipreg	file:
parse_resolv_conf	re-0.5.6/src/dns/ns.c	/^static int parse_resolv_conf(char *domain, size_t dsize,$/;"	f	file:
partid	baresip/modules/av1/decode.c	/^	unsigned partid:4;$/;"	m	struct:hdr	file:
partid	baresip/modules/vp8/decode.c	/^	unsigned partid:4;$/;"	m	struct:hdr	file:
partprovinfo	re-0.5.6/include/re_bfcp.h	/^		char *partprovinfo;$/;"	m	union:bfcp_attr::bfcp_union
pass	baresip/modules/ice/ice.c	/^	char *pass;$/;"	m	struct:mnat_sess	file:
pass	baresip/modules/turn/turn.c	/^	char *pass;$/;"	m	struct:mnat_sess	file:
pass	re-0.5.6/src/sip/auth.c	/^	char *pass;$/;"	m	struct:realm	file:
pass	re-0.5.6/src/tls/openssl/tls.h	/^	char *pass;  \/* password for private key *\/$/;"	m	struct:tls
password	re-0.5.6/include/re_uri.h	/^	struct pl password;  \/**< Optional password                 *\/$/;"	m	struct:uri	typeref:struct:uri::pl
password	re-0.5.6/src/turn/turnc.h	/^	char *password;                \/**< Authentication password         *\/$/;"	m	struct:turnc
password_cb	re-0.5.6/src/tls/openssl/tls.c	/^static int password_cb(char *buf, int size, int rwflag, void *userdata)$/;"	f	file:
path	baresip/modules/rst/rst.c	/^	char *path;$/;"	m	struct:rst	file:
path	re-0.5.6/include/re_http.h	/^	struct pl path;        \/**< Request path\/resource                  *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::pl
payload_decode	re-0.5.6/src/telev/telev.c	/^static int payload_decode(struct mbuf *mb, struct telev_fmt *fmt)$/;"	f	file:
payload_encode	re-0.5.6/src/telev/telev.c	/^static int payload_encode(struct mbuf *mb, int event, bool end, uint16_t dur)$/;"	f	file:
pb	baresip/modules/avcodec/h26x.h	/^	unsigned pb:1;               \/**< PB-frames mode                  *\/$/;"	m	struct:h263_strm
pcma	baresip/modules/g711/g711.c	/^static struct aucodec pcma = {$/;"	v	typeref:struct:aucodec	file:
pcma_decode	baresip/modules/g711/g711.c	/^static int pcma_decode(struct audec_state *ads, int16_t *sampv,$/;"	f	file:
pcma_encode	baresip/modules/g711/g711.c	/^static int pcma_encode(struct auenc_state *aes, uint8_t *buf,$/;"	f	file:
pcmu	baresip/modules/g711/g711.c	/^static struct aucodec pcmu = {$/;"	v	typeref:struct:aucodec	file:
pcmu_decode	baresip/modules/g711/g711.c	/^static int pcmu_decode(struct audec_state *ads, int16_t *sampv,$/;"	f	file:
pcmu_encode	baresip/modules/g711/g711.c	/^static int pcmu_encode(struct auenc_state *aes, uint8_t *buf,$/;"	f	file:
pcp	baresip/modules/pcp/pcp.c	/^		struct pcp_request *pcp;$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::pcp_request	file:
pcp	baresip/modules/pcp/pcp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(pcp) = {$/;"	v	typeref:struct:DECL_EXPORTS
pcp_listen	baresip/modules/pcp/listener.c	/^int pcp_listen(struct pcp_listener **plp, const struct sa *srv,$/;"	f
pcp_listener	baresip/modules/pcp/listener.c	/^struct pcp_listener {$/;"	s	file:
pcp_msg_h	baresip/modules/pcp/pcp.h	/^typedef void (pcp_msg_h)(const struct pcp_msg *msg, void *arg);$/;"	t
pcp_msg_handler	baresip/modules/pcp/pcp.c	/^static void pcp_msg_handler(const struct pcp_msg *msg, void *arg)$/;"	f	file:
pcp_resp_handler	baresip/modules/pcp/pcp.c	/^static void pcp_resp_handler(int err, struct pcp_msg *msg, void *arg)$/;"	f	file:
pcp_srv	baresip/modules/pcp/pcp.c	/^static struct sa pcp_srv;$/;"	v	typeref:struct:sa	file:
pdur	re-0.5.6/src/telev/telev.c	/^	uint16_t pdur;$/;"	m	struct:telev	file:
peer	baresip/src/video.c	/^	char *peer;             \/**< Peer URI                             *\/$/;"	m	struct:video	file:
peer	baresip/test/call.c	/^	struct agent *peer;$/;"	m	struct:agent	typeref:struct:agent::agent	file:
peer	re-0.5.6/src/http/server.c	/^	struct sa peer;$/;"	m	struct:http_conn	typeref:struct:http_conn::sa	file:
peer	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct sa peer;$/;"	m	struct:dtls_sock	typeref:struct:dtls_sock::sa	file:
peer	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct sa peer;$/;"	m	struct:tls_conn	typeref:struct:tls_conn::sa	file:
peer	re-0.5.6/src/turn/chan.c	/^	struct sa peer;$/;"	m	struct:chan	typeref:struct:chan::sa	file:
peer	re-0.5.6/src/turn/perm.c	/^	struct sa peer;$/;"	m	struct:perm	typeref:struct:perm::sa	file:
peer	re-0.5.6/src/websock/websock.c	/^	struct sa peer;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::sa	file:
peer_hash_cmp_handler	re-0.5.6/src/turn/chan.c	/^static bool peer_hash_cmp_handler(struct le *le, void *arg)$/;"	f	file:
peer_name	baresip/src/call.c	/^	char *peer_name;          \/**< Peer display name                    *\/$/;"	m	struct:call	file:
peer_uri	baresip/src/call.c	/^	char *peer_uri;           \/**< Peer SIP Address                     *\/$/;"	m	struct:call	file:
peerterm	re-0.5.6/src/sipsess/sipsess.h	/^	bool peerterm;$/;"	m	struct:sipsess
pei	baresip/modules/avcodec/h26x.h	/^	unsigned pei:1;              \/**< Extra Insertion Information     *\/$/;"	m	struct:h263_strm
perm	re-0.5.6/src/turn/perm.c	/^struct perm {$/;"	s	file:
perm_find	re-0.5.6/src/turn/perm.c	/^static struct perm *perm_find(const struct turnc *turnc, const struct sa *peer)$/;"	f	file:
perms	re-0.5.6/src/turn/turnc.h	/^	struct hash *perms;            \/**< Hash-table of permissions       *\/$/;"	m	struct:turnc	typeref:struct:turnc::hash
pf_null	baresip/test/cmd.c	/^static struct re_printf pf_null = {vprintf_null, 0};$/;"	v	typeref:struct:re_printf	file:
pfd	re-0.5.6/src/mqueue/mqueue.c	/^	int pfd[2];$/;"	m	struct:mqueue	file:
ph	re-0.5.6/src/dbg/dbg.c	/^	dbg_print_h *ph;       \/**< Optional print handler *\/$/;"	m	struct:__anon141	file:
ph	re-0.5.6/src/turn/perm.c	/^	turnc_perm_h *ph;$/;"	m	struct:perm	file:
pic_frz_rel	baresip/modules/avcodec/h26x.h	/^	unsigned pic_frz_rel:1;      \/**< Full Picture Freeze Release     *\/$/;"	m	struct:h263_strm
pic_type	baresip/modules/avcodec/h26x.h	/^	unsigned pic_type:1;         \/**< Picture Coding Type. 0=I, 1=P   *\/$/;"	m	struct:h263_strm
picid	baresip/modules/av1/decode.c	/^	uint16_t picid;$/;"	m	struct:hdr	file:
picid	baresip/modules/av1/encode.c	/^	uint16_t picid;$/;"	m	struct:videnc_state	file:
picid	baresip/modules/vp8/decode.c	/^	uint16_t picid;$/;"	m	struct:hdr	file:
picid	baresip/modules/vp8/encode.c	/^	uint16_t picid;$/;"	m	struct:videnc_state	file:
picid	baresip/modules/vp9/decode.c	/^	uint16_t picid;$/;"	m	struct:hdr	file:
picid	baresip/modules/vp9/encode.c	/^	uint16_t picid;$/;"	m	struct:videnc_state	file:
picid	re-0.5.6/include/re_rtp.h	/^					uint8_t picid;$/;"	m	struct:rtcp_msg::__anon181::__anon188::__anon189::sli
picsz	baresip/modules/avcodec/encode.c	/^struct picsz {$/;"	s	file:
picszn	baresip/modules/avcodec/encode.c	/^			uint32_t picszn;$/;"	m	struct:videnc_state::__anon37::__anon38	file:
picszv	baresip/modules/avcodec/encode.c	/^			struct picsz picszv[8];$/;"	m	struct:videnc_state::__anon37::__anon38	typeref:struct:videnc_state::__anon37::__anon38::picsz	file:
pict	baresip/modules/avcodec/decode.c	/^	AVFrame *pict;$/;"	m	struct:viddec_state	file:
pict	baresip/modules/avcodec/encode.c	/^	AVFrame *pict;$/;"	m	struct:videnc_state	file:
pict	baresip/modules/h265/decode.c	/^	AVFrame *pict;$/;"	m	struct:viddec_state	file:
picture_copy	baresip/modules/sdl/util.c	/^void picture_copy(uint8_t *data[4], uint16_t linesize[4],$/;"	f
picup	baresip/src/video.c	/^	bool picup;                        \/**< Send picture update       *\/$/;"	m	struct:vtx	file:
picup_tmr_handler	baresip/src/video.c	/^static void picup_tmr_handler(void *arg)$/;"	f	file:
pid	re-0.5.6/include/re_rtp.h	/^					uint16_t pid;$/;"	m	struct:rtcp_msg::__anon181::__anon188::__anon189::gnack
pipe	re-0.5.6/src/mqueue/win32/pipe.c	/^int pipe(int fds[2])$/;"	f
pipe_read	re-0.5.6/src/mqueue/mqueue.h	/^static inline ssize_t pipe_read(int s, void *buf, size_t len)$/;"	f
pipe_read	re-0.5.6/src/mqueue/win32/pipe.c	/^ssize_t pipe_read(int s, void *buf, size_t len)$/;"	f
pipe_write	re-0.5.6/src/mqueue/mqueue.h	/^static inline ssize_t pipe_write(int s, const void *buf, size_t len)$/;"	f
pipe_write	re-0.5.6/src/mqueue/win32/pipe.c	/^ssize_t pipe_write(int s, const void *buf, size_t len)$/;"	f
pipeline	baresip/modules/gst/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
pipeline	baresip/modules/gst1/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
pipeline	baresip/modules/gst_video/encode.c	/^	GstElement *pipeline, *source, *sink;$/;"	m	struct:videnc_state	file:
pipeline	baresip/modules/gst_video1/encode.c	/^		GstElement *pipeline;$/;"	m	struct:videnc_state::__anon91	file:
pipeline_close	baresip/modules/gst_video1/encode.c	/^static void pipeline_close(struct videnc_state *st)$/;"	f	file:
pipeline_init	baresip/modules/gst_video1/encode.c	/^static int pipeline_init(struct videnc_state *st, const struct vidsz *size)$/;"	f	file:
pipeline_push	baresip/modules/gst_video1/encode.c	/^static int pipeline_push(struct videnc_state *st, const struct vidframe *frame)$/;"	f	file:
pixfmt	baresip/modules/v4l2/v4l2.c	/^	u_int32_t pixfmt;$/;"	m	struct:vidsrc_st	file:
pixfmt	baresip/modules/x11/x11.c	/^	enum vidfmt pixfmt;$/;"	m	struct:vidisp_st	typeref:enum:vidisp_st::vidfmt	file:
pixfmt	baresip/modules/x11grab/x11grab.c	/^	enum vidfmt pixfmt;$/;"	m	struct:vidsrc_st	typeref:enum:vidsrc_st::vidfmt	file:
pkloss	baresip/modules/ilbc/ilbc.c	/^static int pkloss(struct audec_state *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
pkloss	baresip/modules/speex/speex.c	/^static int pkloss(struct audec_state *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
pkt_type	baresip/modules/gzrtp/stream.cpp	/^enum pkt_type {$/;"	g	file:
pkt_type	baresip/modules/zrtp/zrtp.c	/^enum pkt_type {$/;"	g	file:
pkth	baresip/modules/av1/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/avcodec/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/daala/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/gst_video/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/gst_video1/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/h265/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/v4l2_codec/v4l2_codec.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/vp8/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/modules/vp9/encode.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth	baresip/test/mock/mock_vidcodec.c	/^	videnc_packet_h *pkth;$/;"	m	struct:videnc_state	file:
pkth_arg	baresip/modules/gst_video/encode.c	/^	void *pkth_arg;$/;"	m	struct:videnc_state	file:
pktsize	baresip/include/baresip.h	/^	unsigned pktsize;  \/**< RTP packetsize in [bytes]  *\/$/;"	m	struct:videnc_param
pktsize	baresip/modules/av1/encode.c	/^	unsigned pktsize;$/;"	m	struct:videnc_state	file:
pktsize	baresip/modules/daala/encode.c	/^	unsigned pktsize;$/;"	m	struct:videnc_state	file:
pktsize	baresip/modules/gst_video/encode.c	/^	unsigned pktsize;$/;"	m	struct:videnc_state	file:
pktsize	baresip/modules/gst_video1/encode.c	/^		unsigned pktsize;$/;"	m	struct:videnc_state::__anon89	file:
pktsize	baresip/modules/h265/encode.c	/^	unsigned pktsize;$/;"	m	struct:videnc_state	file:
pktsize	baresip/modules/vp8/encode.c	/^	unsigned pktsize;$/;"	m	struct:videnc_state	file:
pktsize	baresip/modules/vp9/encode.c	/^	unsigned pktsize;$/;"	m	struct:videnc_state	file:
pl	re-0.5.6/include/re_fmt.h	/^struct pl {$/;"	s
pl_advance	re-0.5.6/include/re_fmt.h	/^static inline void pl_advance(struct pl *pl, ssize_t n)$/;"	f
pl_casecmp	re-0.5.6/src/fmt/pl.c	/^int pl_casecmp(const struct pl *pl1, const struct pl *pl2)$/;"	f
pl_cmp	re-0.5.6/src/fmt/pl.c	/^int pl_cmp(const struct pl *pl1, const struct pl *pl2)$/;"	f
pl_dup	re-0.5.6/src/fmt/pl.c	/^int pl_dup(struct pl *dst, const struct pl *src)$/;"	f
pl_float	re-0.5.6/src/fmt/pl.c	/^double pl_float(const struct pl *pl)$/;"	f
pl_isset	re-0.5.6/src/fmt/pl.c	/^bool pl_isset(const struct pl *pl)$/;"	f
pl_null	re-0.5.6/src/fmt/pl.c	/^const struct pl pl_null = {NULL, 0};$/;"	v	typeref:struct:pl
pl_set_mbuf	re-0.5.6/src/fmt/pl.c	/^void pl_set_mbuf(struct pl *pl, const struct mbuf *mb)$/;"	f
pl_set_str	re-0.5.6/src/fmt/pl.c	/^void pl_set_str(struct pl *pl, const char *str)$/;"	f
pl_strcasecmp	re-0.5.6/src/fmt/pl.c	/^int pl_strcasecmp(const struct pl *pl, const char *str)$/;"	f
pl_strchr	re-0.5.6/src/fmt/pl.c	/^const char *pl_strchr(const struct pl *pl, char c)$/;"	f
pl_strcmp	re-0.5.6/src/fmt/pl.c	/^int pl_strcmp(const struct pl *pl, const char *str)$/;"	f
pl_strcpy	re-0.5.6/src/fmt/pl.c	/^int pl_strcpy(const struct pl *pl, char *str, size_t size)$/;"	f
pl_strdup	re-0.5.6/src/fmt/pl.c	/^int pl_strdup(char **dst, const struct pl *src)$/;"	f
pl_u32	re-0.5.6/src/fmt/pl.c	/^uint32_t pl_u32(const struct pl *pl)$/;"	f
pl_u64	re-0.5.6/src/fmt/pl.c	/^uint64_t pl_u64(const struct pl *pl)$/;"	f
pl_x32	re-0.5.6/src/fmt/pl.c	/^uint32_t pl_x32(const struct pl *pl)$/;"	f
pl_x64	re-0.5.6/src/fmt/pl.c	/^uint64_t pl_x64(const struct pl *pl)$/;"	f
plane_index	rem-0.5.2/include/rem_vid.h	/^	unsigned plane_index:2;$/;"	m	struct:vidfmt_compdesc
planes	rem-0.5.2/include/rem_vid.h	/^	uint8_t planes;$/;"	m	struct:vidfmt_desc
play	baresip/modules/menu/menu.c	/^	struct play *play;$/;"	m	struct:__anon72	typeref:struct:__anon72::play	file:
play	baresip/src/play.c	/^struct play {$/;"	s	file:
play_alloc	baresip/modules/aubridge/play.c	/^int play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
play_alloc	baresip/modules/oss/oss.c	/^static int play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f	file:
play_alloc	baresip/modules/portaudio/portaudio.c	/^static int play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f	file:
play_alloc	baresip/modules/sndio/sndio.c	/^static int play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f	file:
play_dev	baresip/include/baresip.h	/^	char play_dev[128];     \/**< Audio playback device          *\/$/;"	m	struct:config_audio
play_file	baresip/src/play.c	/^int play_file(struct play **playp, struct player *player,$/;"	f
play_fmt	baresip/include/baresip.h	/^	int play_fmt;           \/**< Audio playback sample format   *\/$/;"	m	struct:config_audio
play_fmt	baresip/src/audio.c	/^	enum aufmt play_fmt;          \/**< Sample format for audio playback*\/$/;"	m	struct:aurx	typeref:enum:aurx::aufmt	file:
play_handler	baresip/modules/coreaudio/player.c	/^static void play_handler(void *userData, AudioQueueRef outQ,$/;"	f	file:
play_init	baresip/src/play.c	/^int play_init(struct player **playerp)$/;"	f
play_mod	baresip/include/baresip.h	/^	char play_mod[16];      \/**< Audio playback module          *\/$/;"	m	struct:config_audio
play_packet	baresip/modules/gst/gst.c	/^static void play_packet(struct ausrc_st *st)$/;"	f	file:
play_packet	baresip/modules/gst1/gst.c	/^static void play_packet(struct ausrc_st *st)$/;"	f	file:
play_path	baresip/src/play.c	/^	char play_path[FS_PATH_MAX];$/;"	m	struct:player	file:
play_set_path	baresip/src/play.c	/^void play_set_path(struct player *player, const char *path)$/;"	f
play_thread	baresip/modules/aufile/aufile.c	/^static void *play_thread(void *arg)$/;"	f	file:
play_thread	baresip/modules/oss/oss.c	/^static void *play_thread(void *arg)$/;"	f	file:
play_thread	baresip/modules/rst/audio.c	/^static void *play_thread(void *arg)$/;"	f	file:
play_tone	baresip/src/play.c	/^int play_tone(struct play **playp, struct player *player,$/;"	f
player	baresip/src/baresip.c	/^	struct player *player;$/;"	m	struct:baresip	typeref:struct:baresip::player	file:
player	baresip/src/play.c	/^struct player {$/;"	s	file:
player_destructor	baresip/src/play.c	/^static void player_destructor(void *data)$/;"	f	file:
playl	baresip/src/play.c	/^	struct list playl;$/;"	m	struct:player	typeref:struct:player::list	file:
playp	baresip/src/play.c	/^	struct play **playp;$/;"	m	struct:play	typeref:struct:play::play	file:
plc	baresip/modules/bv32/bv32.c	/^static int plc(struct audec_state *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
plc	baresip/modules/isac/isac.c	/^static int plc(struct audec_state *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
plc	baresip/modules/plc/plc.c	/^	plc_state_t plc;$/;"	m	struct:plc_st	file:
plc	baresip/modules/plc/plc.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(plc) = {$/;"	v	typeref:struct:DECL_EXPORTS
plc	baresip/modules/plc/plc.c	/^static struct aufilt plc = {$/;"	v	typeref:struct:aufilt	file:
plc	baresip/modules/silk/silk.c	/^static int plc(struct audec_state *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
plc_st	baresip/modules/plc/plc.c	/^struct plc_st {$/;"	s	file:
plch	baresip/include/baresip.h	/^	audec_plc_h    *plch;$/;"	m	struct:aucodec
png_filename	baresip/modules/snapshot/png_vf.c	/^static char *png_filename(const struct tm *tmx, const char *name,$/;"	f	file:
png_save_free	baresip/modules/snapshot/png_vf.c	/^static void png_save_free(png_structp png_ptr, png_byte **png_row_pointers,$/;"	f	file:
png_save_vidframe	baresip/modules/snapshot/png_vf.c	/^int png_save_vidframe(const struct vidframe *vf, const char *path)$/;"	f
policy_rx	baresip/modules/libsrtp/srtp.c	/^	srtp_policy_t policy_tx, policy_rx;$/;"	m	struct:menc_st	file:
policy_tx	baresip/modules/libsrtp/srtp.c	/^	srtp_policy_t policy_tx, policy_rx;$/;"	m	struct:menc_st	file:
poll	baresip/modules/avahi/avahi.c	/^	AvahiSimplePoll* poll;$/;"	m	struct:avahi_st	file:
poll_aubuf_tx	baresip/src/audio.c	/^static void poll_aubuf_tx(struct audio *a)$/;"	f	file:
poll_close	re-0.5.6/src/main/main.c	/^static void poll_close(struct re *re)$/;"	f	file:
poll_init	re-0.5.6/src/main/main.c	/^static int poll_init(struct re *re)$/;"	f	file:
poll_method	re-0.5.6/include/re_main.h	/^enum poll_method {$/;"	g
poll_method_best	re-0.5.6/src/main/method.c	/^enum poll_method poll_method_best(void)$/;"	f
poll_method_name	re-0.5.6/src/main/method.c	/^const char *poll_method_name(enum poll_method method)$/;"	f
poll_method_set	re-0.5.6/src/main/main.c	/^int poll_method_set(enum poll_method method)$/;"	f
poll_method_type	re-0.5.6/src/main/method.c	/^int poll_method_type(enum poll_method *method, const struct pl *name)$/;"	f
poll_setup	re-0.5.6/src/main/main.c	/^static int poll_setup(struct re *re)$/;"	f	file:
poll_timer	baresip/modules/avahi/avahi.c	/^	struct tmr poll_timer;$/;"	m	struct:avahi_st	typeref:struct:avahi_st::tmr	file:
polling	re-0.5.6/src/main/main.c	/^	bool polling;                \/**< Is polling flag                   *\/$/;"	m	struct:re	file:
pooll	re-0.5.6/src/jbuf/jbuf.c	/^	struct list pooll;   \/**< List of free frames in pool               *\/$/;"	m	struct:jbuf	typeref:struct:jbuf::list	file:
popup_menu	baresip/modules/gtk/gtk_mod.c	/^static void popup_menu(struct gtk_mod *mod, GtkMenuPositionFunc position,$/;"	f	file:
port	baresip/modules/natbd/natbd.c	/^	uint16_t port;$/;"	m	struct:natbd	file:
port	baresip/modules/rst/rst.c	/^	uint16_t port;$/;"	m	struct:rst	file:
port	re-0.5.6/include/re_dns.h	/^			uint16_t port;$/;"	m	struct:dnsrr::__anon154::__anon162
port	re-0.5.6/include/re_stun.h	/^	bool port;$/;"	m	struct:stun_change_req
port	re-0.5.6/include/re_uri.h	/^	uint16_t port;       \/**< Port number                       *\/$/;"	m	struct:uri
port	re-0.5.6/src/http/client.c	/^	uint16_t port;$/;"	m	struct:http_req	file:
port	re-0.5.6/src/sip/request.c	/^	uint16_t port;$/;"	m	struct:sip_request	file:
port	re-0.5.6/src/stun/dnsdisc.c	/^	uint16_t port;         \/**< Default Port            *\/$/;"	m	struct:stun_dns	file:
portaudio	baresip/modules/portaudio/portaudio.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(portaudio) = {$/;"	v	typeref:struct:DECL_EXPORTS
portv	baresip/modules/jack/jack_play.c	/^	jack_port_t *portv[2];$/;"	m	struct:auplay_st	file:
portv	baresip/modules/jack/jack_src.c	/^	jack_port_t *portv[2];$/;"	m	struct:ausrc_st	file:
pos	baresip/modules/winwave/play.c	/^	int pos;$/;"	m	struct:auplay_st	file:
pos	baresip/modules/winwave/src.c	/^	int pos;$/;"	m	struct:ausrc_st	file:
pos	re-0.5.6/include/re_mbuf.h	/^	size_t pos;     \/**< Position in buffer *\/$/;"	m	struct:mbuf
pos	re-0.5.6/src/dns/dname.c	/^	size_t pos;$/;"	m	struct:dname	file:
pos	re-0.5.6/src/stun/ctrans.c	/^	size_t pos;$/;"	m	struct:stun_ctrans	file:
pp_conf	baresip/modules/speex_pp/speex_pp.c	/^} pp_conf = {$/;"	v	typeref:struct:__anon75	file:
pprio	re-0.5.6/src/ice/ice.h	/^	uint64_t pprio;              \/**< Pair priority                      *\/$/;"	m	struct:ice_candpair
pquant	baresip/modules/avcodec/h26x.h	/^	unsigned pquant:5;           \/**< Quantizer Information           *\/$/;"	m	struct:h263_strm
pref	re-0.5.6/include/re_dns.h	/^			uint16_t pref;$/;"	m	struct:dnsrr::__anon154::__anon160
pref	re-0.5.6/include/re_dns.h	/^			uint16_t pref;$/;"	m	struct:dnsrr::__anon154::__anon163
prefer_ipv6	baresip/src/ua.c	/^	bool prefer_ipv6;              \/**< Force IPv6 transport            *\/$/;"	m	struct:__anon7	file:
preferred_suite	baresip/modules/srtp/srtp.c	/^static const char *preferred_suite = aes_cm_128_hmac_sha1_80;$/;"	v	file:
prefix	re-0.5.6/src/net/rt.c	/^	int prefix;$/;"	m	struct:net_rt	file:
preproc	baresip/modules/speex_pp/speex_pp.c	/^static struct aufilt preproc = {$/;"	v	typeref:struct:aufilt	file:
preproc	baresip/modules/speex_pp/speex_pp.c	/^struct preproc {$/;"	s	file:
presence	baresip/modules/presence/presence.c	/^const struct mod_export DECL_EXPORTS(presence) = {$/;"	v	typeref:struct:DECL_EXPORTS
presence	baresip/modules/presence/subscriber.c	/^struct presence {$/;"	s	file:
presence_alloc	baresip/modules/presence/subscriber.c	/^static int presence_alloc(struct contact *contact)$/;"	f	file:
presence_status	baresip/include/baresip.h	/^enum presence_status {$/;"	g
presence_status_str	baresip/modules/presence/notifier.c	/^static const char *presence_status_str(enum presence_status st)$/;"	f	file:
presence_status_str	baresip/modules/presence/publisher.c	/^static const char *presence_status_str(enum presence_status st)$/;"	f	file:
presencel	baresip/modules/presence/subscriber.c	/^static struct list presencel;$/;"	v	typeref:struct:list	file:
prev	re-0.5.6/include/re_list.h	/^	struct le *prev;    \/**< Previous element                    *\/$/;"	m	struct:le	typeref:struct:le::le
prfx_hex	re-0.5.6/src/fmt/print.c	/^static const char prfx_hex[]  = "0x";$/;"	v	file:
prfx_neg	re-0.5.6/src/fmt/print.c	/^static const char prfx_neg[]  = "-";$/;"	v	file:
pri	re-0.5.6/include/re_dns.h	/^			uint16_t pri;$/;"	m	struct:dnsrr::__anon154::__anon162
prim	re-0.5.6/include/re_bfcp.h	/^	enum bfcp_prim prim;$/;"	m	struct:bfcp_msg	typeref:enum:bfcp_msg::bfcp_prim
prim	re-0.5.6/src/bfcp/bfcp.h	/^	enum bfcp_prim prim;$/;"	m	struct:bfcp_strans	typeref:enum:bfcp_strans::bfcp_prim
primc	re-0.5.6/include/re_bfcp.h	/^	size_t primc;$/;"	m	struct:bfcp_supprim
primv	re-0.5.6/include/re_bfcp.h	/^	enum bfcp_prim *primv;$/;"	m	struct:bfcp_supprim	typeref:enum:bfcp_supprim::bfcp_prim
print_caps	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int print_caps(int fd, unsigned width, unsigned height)$/;"	f	file:
print_commands	baresip/modules/menu/menu.c	/^static int print_commands(struct re_printf *pf, void *unused)$/;"	f	file:
print_contact	baresip/test/sip/sipsrv.c	/^static int print_contact(struct re_printf *pf, const struct aor *aor)$/;"	f	file:
print_contacts	baresip/modules/contact/contact.c	/^static int print_contacts(struct re_printf *pf, void *unused)$/;"	f	file:
print_content	re-0.5.6/src/sipevent/notify.c	/^static int print_content(struct re_printf *pf, const struct sipnot *not)$/;"	f	file:
print_duration	baresip/src/call.c	/^static int print_duration(struct re_printf *pf, const struct call *call)$/;"	f	file:
print_err	re-0.5.6/src/ice/connchk.c	/^static int print_err(struct re_printf *pf, const int *err)$/;"	f	file:
print_error	re-0.5.6/src/tls/openssl/tls.c	/^static int print_error(const char *str, size_t len, void *unused)$/;"	f	file:
print_event	re-0.5.6/src/sipevent/notify.c	/^static int print_event(struct re_printf *pf, const struct sipnot *not)$/;"	f	file:
print_event	re-0.5.6/src/sipevent/subscribe.c	/^static int print_event(struct re_printf *pf, const struct sipsub *sub)$/;"	f	file:
print_events	baresip/modules/evdev/print.c	/^void print_events(int fd)$/;"	f
print_handler	baresip/modules/cons/cons.c	/^static int print_handler(const char *p, size_t size, void *arg)$/;"	f	file:
print_handler	baresip/modules/mqtt/subscribe.c	/^static int print_handler(const char *p, size_t size, void *arg)$/;"	f	file:
print_handler	baresip/modules/stdio/stdio.c	/^static int print_handler(const char *p, size_t size, void *arg)$/;"	f	file:
print_handler	baresip/modules/wincons/wincons.c	/^static int print_handler(const char *p, size_t size, void *arg)$/;"	f	file:
print_handler	re-0.5.6/src/fmt/print.c	/^static int print_handler(const char *p, size_t size, void *arg)$/;"	f	file:
print_handler_dyn	re-0.5.6/src/fmt/print.c	/^static int print_handler_dyn(const char *p, size_t size, void *arg)$/;"	f	file:
print_handler_stream	re-0.5.6/src/fmt/print.c	/^static int print_handler_stream(const char *p, size_t size, void *arg)$/;"	f	file:
print_keys	baresip/modules/evdev/print.c	/^void print_keys(int fd)$/;"	f
print_leds	baresip/modules/evdev/print.c	/^void print_leds(int fd)$/;"	f
print_message	baresip/modules/gzrtp/messages.cpp	/^void Stream::print_message(GnuZrtpCodes::MessageSeverity severity,$/;"	f	class:Stream
print_name	baresip/modules/evdev/print.c	/^void print_name(int fd)$/;"	f
print_populated	baresip/src/conf.c	/^static void print_populated(const char *what, uint32_t n)$/;"	f	file:
print_rtp_stats	baresip/src/stream.c	/^static void print_rtp_stats(const struct stream *s)$/;"	f	file:
print_scode	baresip/src/reg.c	/^static const char *print_scode(uint16_t scode)$/;"	f	file:
print_stats	baresip/modules/auloop/auloop.c	/^static void print_stats(struct audio_loop *al)$/;"	f	file:
print_status	baresip/modules/vidloop/vidloop.c	/^static void print_status(struct video_loop *vl)$/;"	f	file:
print_substate	re-0.5.6/src/sipevent/notify.c	/^static int print_substate(struct re_printf *pf, const struct sipnot *not)$/;"	f	file:
print_summary	baresip/src/call.c	/^static void print_summary(const struct call *call)$/;"	f	file:
print_system_info	baresip/modules/debug_cmd/debug_cmd.c	/^static int print_system_info(struct re_printf *pf, void *arg)$/;"	f	file:
print_video_input	baresip/modules/v4l2/v4l2.c	/^static void print_video_input(const struct vidsrc_st *st)$/;"	f	file:
print_vumeter	baresip/modules/vumeter/vumeter.c	/^static void print_vumeter(int pos, int color, double value)$/;"	f	file:
prio	re-0.5.6/include/re_ice.h	/^	uint32_t prio;            \/**< Priority of this candidate           *\/$/;"	m	struct:ice_cand_attr
prio	re-0.5.6/src/ice/ice.h	/^	uint32_t prio;               \/**< Priority of this candidate         *\/$/;"	m	struct:ice_cand
priority	re-0.5.6/include/re_bfcp.h	/^		enum bfcp_priority priority;$/;"	m	union:bfcp_attr::bfcp_union	typeref:enum:bfcp_attr::bfcp_union::bfcp_priority
priority	re-0.5.6/include/re_stun.h	/^		uint32_t priority;$/;"	m	union:stun_attr::__anon174
prm	baresip/include/baresip.h	/^	char *prm;        \/**< Optional parameter     *\/$/;"	m	struct:cmd_arg
prm	baresip/modules/alsa/alsa_play.c	/^	struct auplay_prm prm;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay_prm	file:
prm	baresip/modules/alsa/alsa_src.c	/^	struct ausrc_prm prm;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc_prm	file:
prm	baresip/modules/aubridge/aubridge.h	/^	struct auplay_prm prm;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay_prm
prm	baresip/modules/aubridge/aubridge.h	/^	struct ausrc_prm prm;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc_prm
prm	baresip/modules/cairo/cairo.c	/^	struct vidsrc_prm prm;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc_prm	file:
prm	baresip/modules/gst/gst.c	/^	struct ausrc_prm prm;       \/**< Read parameters         *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc_prm	file:
prm	baresip/modules/gst1/gst.c	/^	struct ausrc_prm prm;       \/**< Read parameters         *\/$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc_prm	file:
prm	baresip/modules/jack/jack_play.c	/^	struct auplay_prm prm;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay_prm	file:
prm	baresip/modules/jack/jack_src.c	/^	struct ausrc_prm prm;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc_prm	file:
prm	baresip/modules/rst/video.c	/^	struct vidsrc_prm prm;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc_prm	file:
prm	baresip/test/mock/mock_auplay.c	/^	struct auplay_prm prm;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::auplay_prm	file:
prm	baresip/test/mock/mock_ausrc.c	/^	struct ausrc_prm prm;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::ausrc_prm	file:
prm	re-0.5.6/include/re_http.h	/^	struct pl prm;         \/**< Request parameters                     *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::pl
prm	rem-0.5.2/src/aufile/aufile.c	/^	struct aufile_prm prm;$/;"	m	struct:aufile	typeref:struct:aufile::aufile_prm	file:
probation	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t probation;       \/**< Sequ. packets till source is valid  *\/$/;"	m	struct:rtp_source
probing	re-0.5.6/src/natbd/lifetime.c	/^	bool probing;                           \/**< Probing flag           *\/$/;"	m	struct:nat_lifetime	file:
process	baresip/modules/cairo/cairo.c	/^static void process(struct vidsrc_st *st)$/;"	f	file:
process_handler	baresip/modules/jack/jack_play.c	/^static int process_handler(jack_nframes_t nframes, void *arg)$/;"	f	file:
process_handler	baresip/modules/jack/jack_src.c	/^static int process_handler(jack_nframes_t nframes, void *arg)$/;"	f	file:
profile_idc	baresip/modules/avcodec/encode.c	/^			uint32_t profile_idc;$/;"	m	struct:videnc_state::__anon37::__anon39	file:
profile_idc	baresip/modules/gst_video/encode.c	/^		uint32_t profile_idc;$/;"	m	struct:videnc_state::__anon64	file:
profile_idc	baresip/modules/gst_video1/encode.c	/^		uint32_t profile_idc;$/;"	m	struct:videnc_state::__anon90	file:
profile_iop	baresip/modules/avcodec/encode.c	/^			uint32_t profile_iop;$/;"	m	struct:videnc_state::__anon37::__anon39	file:
profile_iop	baresip/modules/gst_video/encode.c	/^		uint32_t profile_iop;$/;"	m	struct:videnc_state::__anon64	file:
profile_iop	baresip/modules/gst_video1/encode.c	/^		uint32_t profile_iop;$/;"	m	struct:videnc_state::__anon90	file:
progress	baresip/modules/gtk/call_window.c	/^	} progress;$/;"	m	struct:call_window	typeref:struct:call_window::__anon78	file:
progrh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_progr_h *progrh;$/;"	m	struct:sipsess
propListener	baresip/modules/audiounit/sess.c	/^static void propListener(void *inClientData, AudioSessionPropertyID inID,$/;"	f	file:
protect	baresip/modules/gzrtp/srtp.cpp	/^int Srtp::protect(struct mbuf *mb)$/;"	f	class:Srtp
protect_ctrl	baresip/modules/gzrtp/srtp.cpp	/^int Srtp::protect_ctrl(struct mbuf *mb)$/;"	f	class:Srtp
protect_int	baresip/modules/gzrtp/srtp.cpp	/^int Srtp::protect_int(struct mbuf *mb, bool control)$/;"	f	class:Srtp
proto	baresip/include/baresip.h	/^	char proto[16];         \/**< BFCP Transport (optional)      *\/$/;"	m	struct:config_bfcp
proto	baresip/modules/natbd/natbd.c	/^	int proto;$/;"	m	struct:natbd	file:
proto	baresip/modules/stun/stun.c	/^	int proto;$/;"	m	struct:mnat_media	file:
proto	baresip/modules/turn/turn.c	/^	int proto;$/;"	m	struct:mnat_media	file:
proto	re-0.5.6/include/re_ice.h	/^	int proto;                \/**< Transport protocol                   *\/$/;"	m	struct:ice_cand_attr
proto	re-0.5.6/src/ice/ice.h	/^	int proto;                   \/**< Transport protocol                 *\/$/;"	m	struct:icem
proto	re-0.5.6/src/natbd/genalg.c	/^	int proto;              \/**< IP protocol               *\/$/;"	m	struct:nat_genalg	file:
proto	re-0.5.6/src/natbd/hairpinning.c	/^	int proto;               \/**< IP Protocol             *\/$/;"	m	struct:nat_hairpinning	file:
proto	re-0.5.6/src/natbd/mapping.c	/^	int proto;                \/**< IP Protocol               *\/$/;"	m	struct:nat_mapping	file:
proto	re-0.5.6/src/rtp/rtp.c	/^	int proto;              \/**< Transport Protocol    *\/$/;"	m	struct:rtp_sock	file:
proto	re-0.5.6/src/sdp/sdp.h	/^	char *proto;$/;"	m	struct:sdp_media
proto	re-0.5.6/src/stun/ctrans.c	/^	int proto;$/;"	m	struct:stun_ctrans	file:
proto	re-0.5.6/src/stun/keepalive.c	/^	int proto;$/;"	m	struct:stun_keepalive	file:
proto	re-0.5.6/src/turn/turnc.h	/^	int proto;                     \/**< Transport protocol              *\/$/;"	m	struct:turnc
protov	re-0.5.6/src/sdp/sdp.h	/^	char *protov[8];$/;"	m	struct:sdp_media
provrecv	re-0.5.6/src/sip/request.c	/^	bool provrecv;$/;"	m	struct:sip_request	file:
psc	baresip/modules/avcodec/h26x.h	/^	uint8_t psc[2];              \/**< Picture Start Code (PSC)        *\/$/;"	m	struct:h263_strm
psent	re-0.5.6/include/re_rtp.h	/^			uint32_t psent;       \/**< RTP packets sent          *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182
psent	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t psent;           \/**< RTP packets sent                    *\/$/;"	m	struct:rtp_source
psent	re-0.5.6/src/rtp/sess.c	/^	uint32_t psent;      \/**< Total number of RTP packets sent *\/$/;"	m	struct:txstat	file:
pseq	baresip/src/core.h	/^	uint32_t pseq;           \/**< Sequence number for incoming RTP      *\/$/;"	m	struct:stream
psize	baresip/modules/gst/gst.c	/^	size_t psize;               \/**< Packet size in bytes    *\/$/;"	m	struct:ausrc_st	file:
psize	baresip/modules/gst1/gst.c	/^	size_t psize;               \/**< Packet size in bytes    *\/$/;"	m	struct:ausrc_st	file:
psize	baresip/src/audio.c	/^	size_t psize;                 \/**< Packet size for sending         *\/$/;"	m	struct:autx	file:
psrv	re-0.5.6/src/turn/turnc.h	/^	struct sa psrv;                \/**< Previous TURN Server address    *\/$/;"	m	struct:turnc	typeref:struct:turnc::sa
pt	baresip/include/baresip.h	/^	const char *pt;$/;"	m	struct:aucodec
pt	baresip/include/baresip.h	/^	const char *pt;$/;"	m	struct:vidcodec
pt	baresip/src/audio.c	/^	int pt;                       \/**< Payload type for incoming RTP   *\/$/;"	m	struct:aurx	file:
pt	baresip/src/video.c	/^	uint8_t pt;$/;"	m	struct:vidqent	file:
pt	re-0.5.6/include/re_rtp.h	/^		unsigned int pt:8;       \/**< RTCP packet type       *\/$/;"	m	struct:rtcp_msg::rtcp_hdr
pt	re-0.5.6/include/re_rtp.h	/^	uint8_t  pt;        \/**< Payload type           *\/$/;"	m	struct:rtp_header
pt	re-0.5.6/include/re_sdp.h	/^	int pt;$/;"	m	struct:sdp_format
pt_enc	baresip/src/core.h	/^	int pt_enc;              \/**< Payload type for encoding             *\/$/;"	m	struct:stream
pt_handler	baresip/src/audio.c	/^static int pt_handler(struct audio *a, uint8_t pt_old, uint8_t pt_new)$/;"	f	file:
pt_handler	baresip/src/video.c	/^static int pt_handler(struct video *v, uint8_t pt_old, uint8_t pt_new)$/;"	f	file:
pt_key	re-0.5.6/src/main/main.c	/^static pthread_key_t  pt_key;$/;"	v	file:
pt_once	re-0.5.6/src/main/main.c	/^static pthread_once_t pt_once = PTHREAD_ONCE_INIT;$/;"	v	file:
pt_rx	baresip/src/video.c	/^	int pt_rx;                         \/**< Incoming RTP payload type *\/$/;"	m	struct:vrx	file:
ptime	baresip/include/baresip.h	/^	uint32_t   ptime;       \/**< Wanted packet-time in [ms] *\/$/;"	m	struct:auplay_prm
ptime	baresip/include/baresip.h	/^	uint32_t   ptime;       \/**< Wanted packet-time in [ms] *\/$/;"	m	struct:ausrc_prm
ptime	baresip/include/baresip.h	/^	uint32_t ptime;       \/**< Wanted packet-time in [ms]   *\/$/;"	m	struct:aufilt_prm
ptime	baresip/include/baresip.h	/^	uint32_t ptime;  \/**< Packet time in [ms]   *\/$/;"	m	struct:auenc_param
ptime	baresip/modules/aufile/aufile.c	/^	uint32_t ptime;$/;"	m	struct:ausrc_st	file:
ptime	baresip/modules/coreaudio/recorder.c	/^	unsigned int ptime;$/;"	m	struct:ausrc_st	file:
ptime	baresip/modules/pulse/recorder.c	/^	uint32_t ptime;$/;"	m	struct:ausrc_st	file:
ptime	baresip/modules/rst/audio.c	/^	uint32_t ptime;$/;"	m	struct:ausrc_st	file:
ptime	baresip/src/audio.c	/^	uint32_t ptime;               \/**< Packet time for receiving       *\/$/;"	m	struct:aurx	file:
ptime	baresip/src/audio.c	/^	uint32_t ptime;               \/**< Packet time for sending         *\/$/;"	m	struct:autx	file:
ptime	baresip/src/core.h	/^	uint32_t ptime;              \/**< Configured packet time in [ms]     *\/$/;"	m	struct:account
ptime	re-0.5.6/src/telev/telev.c	/^	uint32_t ptime;$/;"	m	struct:telev	file:
ptime	rem-0.5.2/src/aumix/aumix.c	/^	uint32_t ptime;$/;"	m	struct:aumix	file:
ptr	re-0.5.6/include/re_dns.h	/^		} ptr;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon159
ptrdname	re-0.5.6/include/re_dns.h	/^			char *ptrdname;$/;"	m	struct:dnsrr::__anon154::__anon159
pts	baresip/modules/av1/encode.c	/^	aom_codec_pts_t pts;$/;"	m	struct:videnc_state	file:
pts	baresip/modules/avcodec/encode.c	/^	int64_t pts;$/;"	m	struct:videnc_state	file:
pts	baresip/modules/daala/encode.c	/^	int64_t pts;$/;"	m	struct:videnc_state	file:
pts	baresip/modules/h265/encode.c	/^	int64_t pts;$/;"	m	struct:videnc_state	file:
pts	baresip/modules/vp8/encode.c	/^	vpx_codec_pts_t pts;$/;"	m	struct:videnc_state	file:
pts	baresip/modules/vp9/encode.c	/^	vpx_codec_pts_t pts;$/;"	m	struct:videnc_state	file:
pts	baresip/test/mock/mock_vidcodec.c	/^	int64_t pts;$/;"	m	struct:videnc_state	file:
pts_prev	baresip/modules/vidinfo/vidinfo.h	/^	uint64_t pts_prev;$/;"	m	struct:panel
pub_gruu	baresip/src/ua.c	/^	char *pub_gruu;              \/**< SIP Public GRUU                    *\/$/;"	m	struct:ua	file:
pub_ua_event_handler	baresip/modules/presence/publisher.c	/^static void pub_ua_event_handler(struct ua *ua,$/;"	f	file:
pubint	baresip/src/core.h	/^	uint32_t pubint;             \/**< Publication interval in [seconds]  *\/$/;"	m	struct:account
publ	baresip/modules/presence/publisher.c	/^static struct list publ = LIST_INIT;$/;"	v	typeref:struct:list	file:
publish	baresip/modules/presence/publisher.c	/^static int publish(struct publisher *pub)$/;"	f	file:
publisher	baresip/modules/presence/publisher.c	/^struct publisher {$/;"	s	file:
publisher_alloc	baresip/modules/presence/publisher.c	/^static int publisher_alloc(struct ua *ua)$/;"	f	file:
publisher_close	baresip/modules/presence/publisher.c	/^void publisher_close(void)$/;"	f
publisher_init	baresip/modules/presence/publisher.c	/^int publisher_init(void)$/;"	f
publisher_update_status	baresip/modules/presence/publisher.c	/^void publisher_update_status(struct ua *ua)$/;"	f
pulse	baresip/modules/pulse/pulse.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(pulse) = {$/;"	v	typeref:struct:DECL_EXPORTS
pulse_player_alloc	baresip/modules/pulse/player.c	/^int pulse_player_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
pulse_recorder_alloc	baresip/modules/pulse/recorder.c	/^int pulse_recorder_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
purge_relayed	re-0.5.6/src/ice/icem.c	/^static void purge_relayed(struct icem *icem, struct icem_comp *comp)$/;"	f	file:
pwd_decode	re-0.5.6/src/ice/icesdp.c	/^static int pwd_decode(struct icem *icem, const char *value)$/;"	f	file:
q	baresip/test/sip/location.c	/^	double q;$/;"	m	struct:loctmp	file:
q	baresip/test/sip/sipsrv.h	/^	double q;$/;"	m	struct:location
q1	rem-0.5.2/include/rem_goertzel.h	/^	double q1;   \/**< current state *\/$/;"	m	struct:goertzel
q2	rem-0.5.2/include/rem_goertzel.h	/^	double q2;   \/**< previous state *\/$/;"	m	struct:goertzel
qent	re-0.5.6/src/sip/ctrans.c	/^	struct sip_connqent *qent;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::sip_connqent	file:
qent_destructor	re-0.5.6/src/sip/transp.c	/^static void qent_destructor(void *arg)$/;"	f	file:
qent_destructor	re-0.5.6/src/tcp/tcp.c	/^static void qent_destructor(void *arg)$/;"	f	file:
qentp	re-0.5.6/src/sip/transp.c	/^	struct sip_connqent **qentp;$/;"	m	struct:sip_connqent	typeref:struct:sip_connqent::sip_connqent	file:
qh	re-0.5.6/src/dns/client.c	/^	dns_query_h *qh;$/;"	m	struct:dns_query	file:
ql	re-0.5.6/src/dns/client.c	/^	struct list ql;$/;"	m	struct:tcpconn	typeref:struct:tcpconn::list	file:
ql	re-0.5.6/src/sip/transp.c	/^	struct list ql;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::list	file:
qop	re-0.5.6/include/re_httpauth.h	/^	struct pl qop;$/;"	m	struct:httpauth_digest_chall	typeref:struct:httpauth_digest_chall::pl
qop	re-0.5.6/include/re_httpauth.h	/^	struct pl qop;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
qop	re-0.5.6/src/sip/auth.c	/^	char *qop;$/;"	m	struct:realm	file:
qp	re-0.5.6/src/dns/client.c	/^	struct dns_query **qp; \/* app ref *\/$/;"	m	struct:dns_query	typeref:struct:dns_query::dns_query	file:
qpos	re-0.5.6/include/re_bfcp.h	/^	uint8_t qpos;$/;"	m	struct:bfcp_reqstatus
qr	re-0.5.6/include/re_dns.h	/^	bool qr;$/;"	m	struct:dnshdr
quality	baresip/modules/speex/speex.c	/^	int quality;$/;"	m	struct:__anon83	file:
quant	baresip/modules/avcodec/h26x.h	/^	unsigned quant:5; \/\/=0 for GOB header$/;"	m	struct:h263_hdr
query	re-0.5.6/src/dns/client.c	/^static int query(struct dns_query **qp, struct dnsc *dnsc, uint8_t opcode,$/;"	f	file:
query_abort	re-0.5.6/src/dns/client.c	/^static void query_abort(struct dns_query *q)$/;"	f	file:
query_buffer	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int query_buffer(int fd)$/;"	f	file:
query_close_handler	re-0.5.6/src/dns/client.c	/^static bool query_close_handler(struct le *le, void *arg)$/;"	f	file:
query_cmp_handler	re-0.5.6/src/dns/client.c	/^static bool query_cmp_handler(struct le *le, void *arg)$/;"	f	file:
query_destructor	re-0.5.6/src/dns/client.c	/^static void query_destructor(void *data)$/;"	f	file:
query_handler	re-0.5.6/src/dns/client.c	/^static void query_handler(struct dns_query *q, int err,$/;"	f	file:
query_handler	re-0.5.6/src/http/client.c	/^static void query_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
query_hash_size	re-0.5.6/include/re_dns.h	/^	uint32_t query_hash_size;$/;"	m	struct:dnsc_conf
queue	baresip/modules/coreaudio/player.c	/^	AudioQueueRef queue;$/;"	m	struct:auplay_st	file:
queue	baresip/modules/coreaudio/recorder.c	/^	AudioQueueRef queue;$/;"	m	struct:ausrc_st	file:
r	baresip/include/baresip.h	/^	unsigned r:1;      \/**< The Reserved bit MUST be equal to 0     *\/$/;"	m	struct:h264_fu
r	baresip/modules/avcodec/h26x.h	/^	unsigned r:4;      \/**< 4 bits - Reserved (zero)                    *\/$/;"	m	struct:h263_hdr
r	re-0.5.6/include/re_bfcp.h	/^	unsigned r:1;$/;"	m	struct:bfcp_msg
r	re-0.5.6/include/re_rtp.h	/^	} r;$/;"	m	struct:rtcp_msg	typeref:union:rtcp_msg::__anon181
r	re-0.5.6/include/re_stun.h	/^	bool r;$/;"	m	struct:stun_even_port
ra	re-0.5.6/include/re_dns.h	/^	bool ra;$/;"	m	struct:dnshdr
raddr	baresip/modules/zrtp/zrtp.c	/^	struct sa raddr;$/;"	m	struct:menc_media	typeref:struct:menc_media::sa	file:
raddr	re-0.5.6/src/sdp/sdp.h	/^	struct sa raddr;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::sa
raddr	re-0.5.6/src/sdp/sdp.h	/^	struct sa raddr;$/;"	m	struct:sdp_session	typeref:struct:sdp_session::sa
raddr_rtcp	re-0.5.6/src/sdp/sdp.h	/^	struct sa raddr_rtcp;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::sa
rand_bytes	re-0.5.6/src/sys/rand.c	/^void rand_bytes(uint8_t *p, size_t size)$/;"	f
rand_char	re-0.5.6/src/sys/rand.c	/^char rand_char(void)$/;"	f
rand_init	re-0.5.6/src/sys/rand.c	/^void rand_init(void)$/;"	f
rand_str	re-0.5.6/src/sys/rand.c	/^void rand_str(char *str, size_t size)$/;"	f
rand_u16	re-0.5.6/src/sys/rand.c	/^uint16_t rand_u16(void)$/;"	f
rand_u32	re-0.5.6/src/sys/rand.c	/^uint32_t rand_u32(void)$/;"	f
rand_u64	re-0.5.6/src/sys/rand.c	/^uint64_t rand_u64(void)$/;"	f
range	baresip/include/baresip.h	/^struct range {$/;"	s
range_print	baresip/src/config.c	/^static int range_print(struct re_printf *pf, const struct range *rng)$/;"	f	file:
ratio	rem-0.5.2/include/rem_auresamp.h	/^	unsigned ratio;        \/**< Resample ratio *\/$/;"	m	struct:auresamp
rattrl	re-0.5.6/src/sdp/sdp.h	/^	struct list rattrl;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::list
rattrl	re-0.5.6/src/sdp/sdp.h	/^	struct list rattrl;$/;"	m	struct:sdp_session	typeref:struct:sdp_session::list
rbwv	re-0.5.6/src/sdp/sdp.h	/^	int32_t rbwv[SDP_BANDWIDTH_MAX];$/;"	m	struct:sdp_media
rbwv	re-0.5.6/src/sdp/sdp.h	/^	int32_t rbwv[SDP_BANDWIDTH_MAX];$/;"	m	struct:sdp_session
rc	re-0.5.6/include/re_ice.h	/^	uint32_t rc;              \/**< STUN Retransmission Count   *\/$/;"	m	struct:ice_conf
rc	re-0.5.6/include/re_stun.h	/^	uint32_t rc;   \/**< Rc Retransmission count (default 7)    *\/$/;"	m	struct:stun_conf
rcand	re-0.5.6/src/ice/ice.h	/^	struct ice_cand *rcand;      \/**< Remote candidate                   *\/$/;"	m	struct:ice_candpair	typeref:struct:ice_candpair::ice_cand
rcandl	re-0.5.6/src/ice/ice.h	/^	struct list rcandl;          \/**< List of remote candidates          *\/$/;"	m	struct:icem	typeref:struct:icem::list
rcode	re-0.5.6/include/re_dns.h	/^	uint8_t rcode;$/;"	m	struct:dnshdr
rd	re-0.5.6/include/re_dns.h	/^	bool rd;$/;"	m	struct:dnshdr
rdata	re-0.5.6/include/re_dns.h	/^	} rdata;$/;"	m	struct:dnsrr	typeref:union:dnsrr::__anon154
rdir	re-0.5.6/src/sdp/sdp.h	/^	enum sdp_dir rdir;$/;"	m	struct:sdp_media	typeref:enum:sdp_media::sdp_dir
rdir	re-0.5.6/src/sdp/sdp.h	/^	enum sdp_dir rdir;$/;"	m	struct:sdp_session	typeref:enum:sdp_session::sdp_dir
rdlen	re-0.5.6/include/re_dns.h	/^	uint16_t rdlen;$/;"	m	struct:dnsrr
rdy	baresip/modules/winwave/play.c	/^	volatile bool rdy;$/;"	m	struct:auplay_st	file:
rdy	baresip/modules/winwave/src.c	/^	volatile bool rdy;$/;"	m	struct:ausrc_st	file:
re	re-0.5.6/src/main/main.c	/^struct re {$/;"	s	file:
re_cancel	re-0.5.6/src/main/main.c	/^void re_cancel(void)$/;"	f
re_debug	re-0.5.6/src/main/main.c	/^int re_debug(struct re_printf *pf, void *unused)$/;"	f
re_fprintf	re-0.5.6/src/fmt/print.c	/^int re_fprintf(FILE *stream, const char *fmt, ...)$/;"	f
re_get	re-0.5.6/src/main/main.c	/^static struct re *re_get(void)$/;"	f	file:
re_hprintf	re-0.5.6/src/fmt/print.c	/^int re_hprintf(struct re_printf *pf, const char *fmt, ...)$/;"	f
re_lock	re-0.5.6/src/main/main.c	/^static inline void re_lock(struct re *re)$/;"	f	file:
re_lock	re-0.5.6/src/main/main.c	219;"	d	file:
re_main	re-0.5.6/src/main/main.c	/^int re_main(re_signal_h *signalh)$/;"	f
re_main_timeout	baresip/test/test.c	/^int re_main_timeout(uint32_t timeout_ms)$/;"	f
re_once	re-0.5.6/src/main/main.c	/^static void re_once(void)$/;"	f	file:
re_printf	re-0.5.6/include/re_fmt.h	/^struct re_printf {$/;"	s
re_printf	re-0.5.6/src/fmt/print.c	/^int re_printf(const char *fmt, ...)$/;"	f
re_printf_h	re-0.5.6/include/re_fmt.h	/^typedef int(re_printf_h)(struct re_printf *pf, void *arg);$/;"	t
re_regex	re-0.5.6/src/fmt/regex.c	/^int re_regex(const char *ptr, size_t len, const char *expr, ...)$/;"	f
re_sdprintf	re-0.5.6/src/fmt/print.c	/^int re_sdprintf(char **strp, const char *fmt, ...)$/;"	f
re_set_mutex	re-0.5.6/src/main/main.c	/^void re_set_mutex(void *mutexp)$/;"	f
re_signal_h	re-0.5.6/include/re_main.h	/^typedef void (re_signal_h)(int sig);$/;"	t
re_snprintf	re-0.5.6/src/fmt/print.c	/^int re_snprintf(char *str, size_t size, const char *fmt, ...)$/;"	f
re_thread_close	re-0.5.6/src/main/main.c	/^void re_thread_close(void)$/;"	f
re_thread_enter	re-0.5.6/src/main/main.c	/^void re_thread_enter(void)$/;"	f
re_thread_init	re-0.5.6/src/main/main.c	/^int re_thread_init(void)$/;"	f
re_thread_leave	re-0.5.6/src/main/main.c	/^void re_thread_leave(void)$/;"	f
re_unlock	re-0.5.6/src/main/main.c	/^static inline void re_unlock(struct re *re)$/;"	f	file:
re_unlock	re-0.5.6/src/main/main.c	220;"	d	file:
re_vfprintf	re-0.5.6/src/fmt/print.c	/^int re_vfprintf(FILE *stream, const char *fmt, va_list ap)$/;"	f
re_vhprintf	re-0.5.6/src/fmt/print.c	/^int re_vhprintf(const char *fmt, va_list ap, re_vprintf_h *vph, void *arg)$/;"	f
re_vprintf	re-0.5.6/src/fmt/print.c	/^int re_vprintf(const char *fmt, va_list ap)$/;"	f
re_vprintf_h	re-0.5.6/include/re_fmt.h	/^typedef int(re_vprintf_h)(const char *p, size_t size, void *arg);$/;"	t
re_vsdprintf	re-0.5.6/src/fmt/print.c	/^int re_vsdprintf(char **strp, const char *fmt, va_list ap)$/;"	f
re_vsnprintf	re-0.5.6/src/fmt/print.c	/^int re_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)$/;"	f
read	baresip/modules/alsa/alsa_src.c	/^	snd_pcm_t *read;$/;"	m	struct:ausrc_st	file:
read	baresip/src/conf.c	30;"	d	file:
read	re-0.5.6/src/conf/conf.c	24;"	d	file:
read_callback	baresip/modules/portaudio/portaudio.c	/^static int read_callback(const void *inputBuffer, void *outputBuffer,$/;"	f	file:
read_file	baresip/modules/aufile/aufile.c	/^static int read_file(struct ausrc_st *st)$/;"	f	file:
read_frame	baresip/modules/v4l2/v4l2.c	/^static int read_frame(struct vidsrc_st *st)$/;"	f	file:
read_handler	baresip/modules/auloop/auloop.c	/^static void read_handler(const void *sampv, size_t sampc, void *arg)$/;"	f	file:
read_handler	baresip/modules/v4l2_codec/v4l2_codec.c	/^static void read_handler(int flags, void *arg)$/;"	f	file:
read_sock	re-0.5.6/src/net/linux/rt.c	/^static int read_sock(int fd, uint8_t *buf, size_t size, int seq, int pid)$/;"	f	file:
read_stream_open	baresip/modules/portaudio/portaudio.c	/^static int read_stream_open(struct ausrc_st *st, const struct ausrc_prm *prm,$/;"	f	file:
read_stream_open	baresip/modules/winwave/src.c	/^static int read_stream_open(struct ausrc_st *st, const struct ausrc_prm *prm,$/;"	f	file:
read_thread	baresip/modules/alsa/alsa_src.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/avformat/avformat.c	/^static void *read_thread(void *data)$/;"	f	file:
read_thread	baresip/modules/cairo/cairo.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/fakevideo/fakevideo.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/pulse/recorder.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/sndio/sndio.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/v4l/v4l.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/v4l2/v4l2.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_thread	baresip/modules/x11grab/x11grab.c	/^static void *read_thread(void *arg)$/;"	f	file:
read_u16	rem-0.5.2/src/aufile/wave.c	/^static int read_u16(FILE *f, uint16_t *v)$/;"	f	file:
read_u32	rem-0.5.2/src/aufile/wave.c	/^static int read_u32(FILE *f, uint32_t *v)$/;"	f	file:
ready	baresip/modules/portaudio/portaudio.c	/^	volatile bool ready;$/;"	m	struct:auplay_st	file:
ready	baresip/modules/portaudio/portaudio.c	/^	volatile bool ready;$/;"	m	struct:ausrc_st	file:
realm	baresip/test/sip/sipsrv.h	/^	char realm[256];$/;"	m	struct:auth
realm	re-0.5.6/include/re_http.h	/^	const char *realm;$/;"	m	struct:http_auth
realm	re-0.5.6/include/re_httpauth.h	/^	struct pl realm;$/;"	m	struct:httpauth_digest_chall	typeref:struct:httpauth_digest_chall::pl
realm	re-0.5.6/include/re_httpauth.h	/^	struct pl realm;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
realm	re-0.5.6/include/re_stun.h	/^		char *realm;$/;"	m	union:stun_attr::__anon174
realm	re-0.5.6/src/sip/auth.c	/^	char *realm;$/;"	m	struct:realm	file:
realm	re-0.5.6/src/sip/auth.c	/^struct realm {$/;"	s	file:
realm	re-0.5.6/src/turn/turnc.h	/^	char *realm;                   \/**< Saved REALM value from server   *\/$/;"	m	struct:turnc
realm_destructor	re-0.5.6/src/sip/auth.c	/^static void realm_destructor(void *arg)$/;"	f	file:
realml	re-0.5.6/src/sip/auth.c	/^	struct list realml;$/;"	m	struct:sip_auth	typeref:struct:sip_auth::list	file:
realtime_enable	baresip/src/realtime.c	/^int realtime_enable(bool enable, int fps)$/;"	f
reason	re-0.5.6/include/re_http.h	/^	struct pl reason;      \/**< Response Reason phrase                 *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::pl
reason	re-0.5.6/include/re_rtp.h	/^			char *reason;      \/**< Reason for leaving (opt.)    *\/$/;"	m	struct:rtcp_msg::__anon181::__anon184
reason	re-0.5.6/include/re_sip.h	/^	struct pl reason;      \/**< Response reason phrase               *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
reason	re-0.5.6/include/re_sipevent.h	/^	enum sipevent_reason reason;$/;"	m	struct:sipevent_substate	typeref:enum:sipevent_substate::sipevent_reason
reason	re-0.5.6/include/re_stun.h	/^	char *reason;$/;"	m	struct:stun_errcode
reason	re-0.5.6/src/sipevent/sipevent.h	/^	enum sipevent_reason reason;$/;"	m	struct:sipnot	typeref:enum:sipnot::sipevent_reason
rebuild_fds	re-0.5.6/src/main/main.c	/^static int rebuild_fds(struct re *re)$/;"	f	file:
recBufferQueue	baresip/modules/opensles/recorder.c	/^	SLAndroidSimpleBufferQueueItf recBufferQueue;$/;"	m	struct:ausrc_st	file:
recObject	baresip/modules/opensles/recorder.c	/^	SLObjectItf recObject;$/;"	m	struct:ausrc_st	file:
recRecord	baresip/modules/opensles/recorder.c	/^	SLRecordItf recRecord;$/;"	m	struct:ausrc_st	file:
received	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t received;        \/**< Packets received                    *\/$/;"	m	struct:rtp_source
received_prior	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t received_prior;  \/**< Packet received at last interval    *\/$/;"	m	struct:rtp_source
reconnect	baresip/modules/rst/rst.c	/^static void reconnect(void *arg)$/;"	f	file:
record_handler	baresip/modules/coreaudio/recorder.c	/^static void record_handler(void *userData, AudioQueueRef inQ,$/;"	f	file:
record_route_handler	re-0.5.6/src/sip/dialog.c	/^static bool record_route_handler(const struct sip_hdr *hdr,$/;"	f	file:
record_thread	baresip/modules/oss/oss.c	/^static void *record_thread(void *arg)$/;"	f	file:
recv_handler	baresip/modules/dtls_srtp/srtp.c	/^static bool recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	baresip/modules/libsrtp/srtp.c	/^static bool recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	baresip/modules/rst/rst.c	/^static void recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	baresip/modules/srtp/srtp.c	/^static bool recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	re-0.5.6/src/http/client.c	/^static void recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	re-0.5.6/src/http/server.c	/^static void recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static bool recv_handler(int *err, struct mbuf *mb, bool *estab, void *arg)$/;"	f	file:
recv_handler	re-0.5.6/src/tls/openssl/tls_udp.c	/^static bool recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
recv_handler	re-0.5.6/src/websock/websock.c	/^static void recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
recv_zrtp	baresip/modules/gzrtp/stream.cpp	/^bool Stream::recv_zrtp(struct mbuf *mb)$/;"	f	class:Stream
recvh	baresip/src/message.c	/^	message_recv_h *recvh;$/;"	m	struct:message_lsnr	file:
recvh	re-0.5.6/src/bfcp/bfcp.h	/^	bfcp_recv_h *recvh;$/;"	m	struct:bfcp_conn
recvh	re-0.5.6/src/rtp/rtp.c	/^	rtp_recv_h *recvh;      \/**< RTP Receive handler   *\/$/;"	m	struct:rtp_sock	file:
recvh	re-0.5.6/src/tcp/tcp.c	/^	tcp_helper_recv_h *recvh;$/;"	m	struct:tcp_helper	file:
recvh	re-0.5.6/src/tcp/tcp.c	/^	tcp_recv_h *recvh;    \/**< Data receive handler              *\/$/;"	m	struct:tcp_conn	file:
recvh	re-0.5.6/src/tls/openssl/tls_udp.c	/^	dtls_recv_h *recvh;$/;"	m	struct:tls_conn	file:
recvh	re-0.5.6/src/udp/udp.c	/^	udp_helper_recv_h *recvh;$/;"	m	struct:udp_helper	file:
recvh	re-0.5.6/src/websock/websock.c	/^	websock_recv_h *recvh;$/;"	m	struct:websock_conn	file:
redial_attempts	baresip/modules/menu/menu.c	/^	uint32_t redial_attempts;     \/**< Number of re-dial attempts     *\/$/;"	m	struct:__anon72	file:
redial_delay	baresip/modules/menu/menu.c	/^	uint32_t redial_delay;        \/**< Redial delay in [seconds]      *\/$/;"	m	struct:__anon72	file:
redial_handler	baresip/modules/menu/menu.c	/^static void redial_handler(void *arg)$/;"	f	file:
redial_reset	baresip/modules/menu/menu.c	/^static void redial_reset(void)$/;"	f	file:
ref	re-0.5.6/include/re_sdp.h	/^	bool ref;$/;"	m	struct:sdp_format
ref	re-0.5.6/src/sip/auth.c	/^	bool ref;$/;"	m	struct:sip_auth	file:
refer	re-0.5.6/src/sipevent/sipevent.h	/^	bool refer;$/;"	m	struct:sipsub
refer_cseq	re-0.5.6/src/sipevent/sipevent.h	/^	int32_t refer_cseq;$/;"	m	struct:sipsub
refer_handler	re-0.5.6/src/sipsess/listen.c	/^static void refer_handler(struct sipsess_sock *sock, const struct sip_msg *msg)$/;"	f	file:
refer_hdrs	re-0.5.6/src/sipevent/sipevent.h	/^	char *refer_hdrs;$/;"	m	struct:sipsub
referh	re-0.5.6/src/sipsess/sipsess.h	/^	sipsess_refer_h *referh;$/;"	m	struct:sipsess
refresh	baresip/modules/presence/publisher.c	/^	unsigned int refresh;$/;"	m	struct:publisher	file:
refresh	re-0.5.6/include/re_dns.h	/^			uint32_t refresh;$/;"	m	struct:dnsrr::__anon154::__anon158
refresh_comp_laddr	baresip/modules/ice/ice.c	/^static bool refresh_comp_laddr(struct mnat_media *m, unsigned id,$/;"	f	file:
refresh_laddr	baresip/modules/ice/ice.c	/^static bool refresh_laddr(struct mnat_media *m,$/;"	f	file:
refresh_request	re-0.5.6/src/turn/turnc.c	/^static int refresh_request(struct turnc *t, uint32_t lifetime, bool reset_ls,$/;"	f	file:
refresh_resp_handler	re-0.5.6/src/turn/turnc.c	/^static void refresh_resp_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
refresh_session	baresip/modules/pcp/pcp.c	/^static void refresh_session(struct mnat_sess *sess, uint32_t epoch_time)$/;"	f	file:
refresh_timeout	baresip/modules/natpmp/natpmp.c	/^static void refresh_timeout(void *arg)$/;"	f	file:
refresh_timer	re-0.5.6/src/turn/turnc.c	/^static void refresh_timer(struct turnc *turnc)$/;"	f	file:
reg	baresip/src/reg.c	/^struct reg {$/;"	s	file:
reg	baresip/test/ua.c	/^static int reg(enum sip_transp tp)$/;"	f	file:
reg_add	baresip/src/reg.c	/^int reg_add(struct list *lst, struct ua *ua, int regid)$/;"	f
reg_auth	baresip/test/ua.c	/^static int reg_auth(enum sip_transp tp)$/;"	f	file:
reg_auth_dns	baresip/test/ua.c	/^static int reg_auth_dns(enum sip_transp tp)$/;"	f	file:
reg_debug	baresip/src/reg.c	/^int reg_debug(struct re_printf *pf, const struct reg *reg)$/;"	f
reg_dns	baresip/test/ua.c	/^static int reg_dns(enum sip_transp tp)$/;"	f	file:
reg_isok	baresip/src/reg.c	/^bool reg_isok(const struct reg *reg)$/;"	f
reg_register	baresip/src/reg.c	/^int reg_register(struct reg *reg, const char *reg_uri, const char *params,$/;"	f
reg_status	baresip/src/reg.c	/^int reg_status(struct re_printf *pf, const struct reg *reg)$/;"	f
reg_unregister	baresip/src/reg.c	/^void reg_unregister(struct reg *reg)$/;"	f
regexp	re-0.5.6/include/re_dns.h	/^			char *regexp;$/;"	m	struct:dnsrr::__anon154::__anon163
regid	re-0.5.6/src/sipreg/reg.c	/^	int regid;$/;"	m	struct:sipreg	file:
regint	baresip/src/core.h	/^	uint32_t regint;             \/**< Registration interval in [seconds] *\/$/;"	m	struct:account
register_handler	baresip/src/reg.c	/^static void register_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
registered	re-0.5.6/src/sipreg/reg.c	/^	bool registered;$/;"	m	struct:sipreg	file:
regl	baresip/src/ua.c	/^	struct list regl;            \/**< List of Register clients           *\/$/;"	m	struct:ua	typeref:struct:ua::list	file:
regq	baresip/src/core.h	/^	char *regq;                  \/**< Registration Q-value               *\/$/;"	m	struct:account
reinvite_handler	re-0.5.6/src/sipsess/listen.c	/^static void reinvite_handler(struct sipsess_sock *sock,$/;"	f	file:
reinvite_resp_handler	re-0.5.6/src/sipsess/modify.c	/^static void reinvite_resp_handler(int err, const struct sip_msg *msg,$/;"	f	file:
reject_activated	baresip/modules/gtk/gtk_mod.c	/^static void reject_activated(GSimpleAction *action, GVariant *parameter,$/;"	f	file:
rel	re-0.5.6/src/ice/ice.h	/^	struct sa rel;               \/**< Related IP address and port number *\/$/;"	m	struct:ice_cand	typeref:struct:ice_cand::sa
rel_addr	re-0.5.6/include/re_ice.h	/^	struct sa rel_addr;       \/**< Related transport address (optional) *\/$/;"	m	struct:ice_cand_attr	typeref:struct:ice_cand_attr::sa
rel_addr_str	re-0.5.6/src/ice/icesdp.c	/^static const char rel_addr_str[] = "raddr";$/;"	v	file:
rel_port_str	re-0.5.6/src/ice/icesdp.c	/^static const char rel_port_str[] = "rport";$/;"	v	file:
reload_config	baresip/modules/debug_cmd/debug_cmd.c	/^static int reload_config(struct re_printf *pf, void *arg)$/;"	f	file:
remove_contact_by_dname	baresip/modules/avahi/avahi.c	/^static void remove_contact_by_dname(const char* dname)$/;"	f	file:
renderbuffer	baresip/modules/opengles/opengles.h	/^	GLuint renderbuffer;$/;"	m	struct:vidisp_st
renderer	baresip/modules/sdl2/sdl.c	/^	SDL_Renderer *renderer;         \/**< SDL Renderer          *\/$/;"	m	struct:vidisp_st	file:
repeat	baresip/src/play.c	/^	int repeat;$/;"	m	struct:play	file:
replace	re-0.5.6/include/re_dns.h	/^			char *replace;$/;"	m	struct:dnsrr::__anon154::__anon163
replay	re-0.5.6/src/srtp/srtp.h	/^struct replay {$/;"	s
replay_rtcp	re-0.5.6/src/srtp/srtp.h	/^	struct replay replay_rtcp; \/**< recv -- replay protection for RTCP *\/$/;"	m	struct:srtp_stream	typeref:struct:srtp_stream::replay
replay_rtp	re-0.5.6/src/srtp/srtp.h	/^	struct replay replay_rtp;  \/**< recv -- replay protection for RTP  *\/$/;"	m	struct:srtp_stream	typeref:struct:srtp_stream::replay
reply_recv	re-0.5.6/src/dns/client.c	/^static int reply_recv(struct dnsc *dnsc, struct mbuf *mb)$/;"	f	file:
replyl	re-0.5.6/src/sipsess/sipsess.h	/^	struct list replyl;$/;"	m	struct:sipsess	typeref:struct:sipsess::list
report_key	baresip/modules/stdio/stdio.c	/^static void report_key(struct ui_st *ui, char key)$/;"	f	file:
report_key	baresip/modules/wincons/wincons.c	/^static void report_key(struct ui_st *ui, char key)$/;"	f	file:
reportkey	baresip/modules/evdev/evdev.c	/^static void reportkey(struct ui_st *st, int ascii)$/;"	f	file:
req	baresip/src/sipreq.c	/^	struct sip_request *req;$/;"	m	struct:sip_req	typeref:struct:sip_req::sip_request	file:
req	re-0.5.6/include/re_sip.h	/^	bool req;              \/**< True if Request, False if Response  *\/$/;"	m	struct:sip_msg
req	re-0.5.6/src/http/client.c	/^	struct http_req *req;$/;"	m	struct:conn	typeref:struct:conn::http_req	file:
req	re-0.5.6/src/sip/ctrans.c	/^	struct sip_msg *req;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::sip_msg	file:
req	re-0.5.6/src/sip/sip.h	/^	bool req;$/;"	m	struct:sip_lsnr
req	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_request *req;$/;"	m	struct:sipnot	typeref:struct:sipnot::sip_request
req	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip_request *req;$/;"	m	struct:sipsub	typeref:struct:sipsub::sip_request
req	re-0.5.6/src/sipreg/reg.c	/^	struct sip_request *req;$/;"	m	struct:sipreg	typeref:struct:sipreg::sip_request	file:
req	re-0.5.6/src/sipsess/ack.c	/^	struct sip_request *req;$/;"	m	struct:sipsess_ack	typeref:struct:sipsess_ack::sip_request	file:
req	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_request *req;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip_request
req	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_request *req;$/;"	m	struct:sipsess_request	typeref:struct:sipsess_request::sip_request
req	re-0.5.6/src/websock/websock.c	/^	struct http_req *req;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::http_req	file:
req_addr_family	re-0.5.6/include/re_stun.h	/^		uint8_t req_addr_family;$/;"	m	union:stun_attr::__anon174
req_close	re-0.5.6/src/http/client.c	/^static void req_close(struct http_req *req, int err,$/;"	f	file:
req_connect	re-0.5.6/src/http/client.c	/^static int req_connect(struct http_req *req)$/;"	f	file:
req_destructor	re-0.5.6/src/http/client.c	/^static void req_destructor(void *arg)$/;"	f	file:
req_recv	re-0.5.6/src/http/client.c	/^static int req_recv(struct http_req *req, struct mbuf *mb, bool *last)$/;"	f	file:
req_transport	re-0.5.6/include/re_stun.h	/^		uint8_t req_transport;$/;"	m	union:stun_attr::__anon174
reqbyid	re-0.5.6/include/re_bfcp.h	/^		uint16_t reqbyid;$/;"	m	union:bfcp_attr::bfcp_union
reqh	re-0.5.6/src/http/server.c	/^	http_req_h *reqh;$/;"	m	struct:http_sock	file:
reql	re-0.5.6/src/http/client.c	/^	struct list reql;$/;"	m	struct:http_cli	typeref:struct:http_cli::list	file:
reql	re-0.5.6/src/sip/sip.h	/^	struct list reql;$/;"	m	struct:sip	typeref:struct:sip::list
reqp	re-0.5.6/src/http/client.c	/^	struct http_req **reqp;$/;"	m	struct:http_req	typeref:struct:http_req::http_req	file:
reqp	re-0.5.6/src/sip/request.c	/^	struct sip_request **reqp;$/;"	m	struct:sip_request	typeref:struct:sip_request::sip_request	file:
reqstatus	re-0.5.6/include/re_bfcp.h	/^		struct bfcp_reqstatus reqstatus;$/;"	m	union:bfcp_attr::bfcp_union	typeref:struct:bfcp_attr::bfcp_union::bfcp_reqstatus
request	baresip/src/sipreq.c	/^static int request(struct sip_req *sr)$/;"	f	file:
request	re-0.5.6/src/sip/request.c	/^static int request(struct sip_request *req, enum sip_transp tp,$/;"	f	file:
request	re-0.5.6/src/sipevent/subscribe.c	/^static int request(struct sipsub *sub, bool reset_ls)$/;"	f	file:
request	re-0.5.6/src/sipreg/reg.c	/^static int request(struct sipreg *reg, bool reset_ls)$/;"	f	file:
request_copy	re-0.5.6/src/sip/ctrans.c	/^static int request_copy(struct mbuf **mbp, struct sip_ctrans *ct,$/;"	f	file:
request_handler	baresip/src/message.c	/^static bool request_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
request_handler	baresip/src/ua.c	/^static bool request_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
request_handler	re-0.5.6/src/sip/strans.c	/^static bool request_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
request_handler	re-0.5.6/src/sipevent/listen.c	/^static bool request_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
request_handler	re-0.5.6/src/sipsess/listen.c	/^static bool request_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
request_master	baresip/modules/gzrtp/session.cpp	/^bool Session::request_master(Stream *stream)$/;"	f	class:Session
request_next	re-0.5.6/src/sip/request.c	/^static int request_next(struct sip_request *req)$/;"	f	file:
request_picture_update	baresip/src/video.c	/^static void request_picture_update(struct vrx *vrx)$/;"	f	file:
requestl	re-0.5.6/src/sipsess/sipsess.h	/^	struct list requestl;$/;"	m	struct:sipsess	typeref:struct:sipsess::list
require_handler	baresip/src/ua.c	/^static bool require_handler(const struct sip_hdr *hdr,$/;"	f	file:
res_hp	baresip/modules/natbd/natbd.c	/^	int res_hp;$/;"	m	struct:natbd	file:
res_nf	baresip/modules/natbd/natbd.c	/^	enum nat_type res_nf;$/;"	m	struct:natbd	typeref:enum:natbd::nat_type	file:
res_nl	baresip/modules/natbd/natbd.c	/^	struct nat_lifetime_interval res_nl;$/;"	m	struct:natbd	typeref:struct:natbd::nat_lifetime_interval	file:
res_nm	baresip/modules/natbd/natbd.c	/^	enum nat_type res_nm;$/;"	m	struct:natbd	typeref:enum:natbd::nat_type	file:
resamp	baresip/src/audio.c	/^	struct auresamp resamp;       \/**< Optional resampler for DSP      *\/$/;"	m	struct:aurx	typeref:struct:aurx::auresamp	file:
resamp	baresip/src/audio.c	/^	struct auresamp resamp;       \/**< Optional resampler for DSP      *\/$/;"	m	struct:autx	typeref:struct:autx::auresamp	file:
resample	rem-0.5.2/include/rem_auresamp.h	/^	auresamp_h *resample;  \/**< Resample handler *\/$/;"	m	struct:auresamp
resampler	baresip/modules/mpa/decode.c	/^	SpeexResamplerState *resampler;$/;"	m	struct:audec_state	file:
resampler	baresip/modules/mpa/encode.c	/^	SpeexResamplerState *resampler;$/;"	m	struct:auenc_state	file:
reset	baresip/modules/gzrtp/stream.cpp	/^void SRTPStat::reset()$/;"	f	class:SRTPStat
resizeh	baresip/modules/sdl/sdl.c	/^	vidisp_resize_h *resizeh;       \/**< Screen resize handler *\/$/;"	m	struct:__anon60	file:
resolve_aufmt	baresip/src/config.c	/^static enum aufmt resolve_aufmt(const struct pl *fmt)$/;"	f	file:
resolve_callback	baresip/modules/avahi/avahi.c	/^static void resolve_callback($/;"	f	file:
resolve_mode	baresip/modules/speex/speex.c	/^static const SpeexMode *resolve_mode(uint32_t srate)$/;"	f	file:
resolve_suite	baresip/modules/srtp/srtp.c	/^static enum srtp_suite resolve_suite(const char *suite)$/;"	f	file:
resolved	re-0.5.6/src/stun/dnsdisc.c	/^static void resolved(const struct stun_dns *dns, int err)$/;"	f	file:
resp_decode	baresip/modules/natpmp/libnatpmp.c	/^static int resp_decode(struct natpmp_resp *resp, struct mbuf *mb)$/;"	f	file:
resp_handler	baresip/src/sipreq.c	/^static void resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
resp_handler	re-0.5.6/src/sipsess/ack.c	/^static void resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
resp_origin	re-0.5.6/include/re_stun.h	/^		struct sa resp_origin;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
resp_port	re-0.5.6/include/re_stun.h	/^		uint16_t resp_port;$/;"	m	union:stun_attr::__anon174
resph	baresip/modules/natpmp/libnatpmp.c	/^	natpmp_resp_h *resph;$/;"	m	struct:natpmp_req	file:
resph	baresip/src/sipreq.c	/^	sip_resp_h *resph;$/;"	m	struct:sip_req	file:
resph	re-0.5.6/src/bfcp/request.c	/^	bfcp_resp_h *resph;$/;"	m	struct:bfcp_ctrans	file:
resph	re-0.5.6/src/http/client.c	/^	http_resp_h *resph;$/;"	m	struct:http_req	file:
resph	re-0.5.6/src/sip/ctrans.c	/^	sip_resp_h *resph;$/;"	m	struct:sip_ctrans	file:
resph	re-0.5.6/src/sip/request.c	/^	sip_resp_h *resph;$/;"	m	struct:sip_request	file:
resph	re-0.5.6/src/sipreg/reg.c	/^	sip_resp_h *resph;$/;"	m	struct:sipreg	file:
resph	re-0.5.6/src/sipsess/sipsess.h	/^	sip_resp_h *resph;$/;"	m	struct:sipsess_request
resph	re-0.5.6/src/stun/ctrans.c	/^	stun_resp_h *resph;$/;"	m	struct:stun_ctrans	file:
response	re-0.5.6/include/re_httpauth.h	/^	struct pl response;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
response_decode	re-0.5.6/src/httpauth/digest.c	/^static void response_decode(const struct pl *name, const struct pl *val,$/;"	f	file:
response_handler	baresip/modules/presence/publisher.c	/^static void response_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
response_handler	re-0.5.6/src/sip/ctrans.c	/^static bool response_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
response_handler	re-0.5.6/src/sip/request.c	/^static void response_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
response_handler	re-0.5.6/src/sipevent/notify.c	/^static void response_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
response_handler	re-0.5.6/src/sipevent/subscribe.c	/^static void response_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
response_handler	re-0.5.6/src/sipreg/reg.c	/^static void response_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
response_handler	re-0.5.6/src/sipsess/listen.c	/^static bool response_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
result	baresip/modules/natpmp/libnatpmp.h	/^	uint16_t result;$/;"	m	struct:natpmp_resp
resume_call	baresip/src/ua.c	/^static void resume_call(struct ua *ua)$/;"	f	file:
retransmit_handler	re-0.5.6/src/sip/ctrans.c	/^static void retransmit_handler(void *arg)$/;"	f	file:
retransmit_handler	re-0.5.6/src/sip/strans.c	/^static void retransmit_handler(void *arg)$/;"	f	file:
retransmit_handler	re-0.5.6/src/sipsess/reply.c	/^static void retransmit_handler(void *arg)$/;"	f	file:
retry	re-0.5.6/include/re_dns.h	/^			uint32_t retry;$/;"	m	struct:dnsrr::__anon154::__anon158
retry_after	re-0.5.6/include/re_sipevent.h	/^	struct pl retry_after;$/;"	m	struct:sipevent_substate	typeref:struct:sipevent_substate::pl
retry_after	re-0.5.6/src/sipevent/sipevent.h	/^	uint32_t retry_after;$/;"	m	struct:sipnot
rfactor_to_mos	baresip/src/mos.c	/^static double rfactor_to_mos(double r)$/;"	f	file:
rfmtl	re-0.5.6/src/sdp/sdp.h	/^	struct list rfmtl;$/;"	m	struct:sdp_media	typeref:struct:sdp_media::list
rgb2u	rem-0.5.2/include/rem_vid.h	/^static inline int rgb2u(uint8_t r, uint8_t g, uint8_t b)$/;"	f
rgb2v	rem-0.5.2/include/rem_vid.h	/^static inline int rgb2v(uint8_t r, uint8_t g, uint8_t b)$/;"	f
rgb2y	rem-0.5.2/include/rem_vid.h	/^static inline int rgb2y(uint8_t r, uint8_t g, uint8_t b)$/;"	f
rgb32_to_yuv420p	rem-0.5.2/src/vidconv/vconv.c	/^static void rgb32_to_yuv420p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
rgb32_to_yuv444p	rem-0.5.2/src/vidconv/vconv.c	/^static void rgb32_to_yuv444p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
rh	baresip/modules/alsa/alsa_src.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/aubridge/aubridge.h	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st
rh	baresip/modules/audiounit/recorder.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/aufile/aufile.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/coreaudio/recorder.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/gst/gst.c	/^	ausrc_read_h *rh;           \/**< Read handler            *\/$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/gst1/gst.c	/^	ausrc_read_h *rh;           \/**< Read handler            *\/$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/jack/jack_src.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/opensles/recorder.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/oss/oss.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/portaudio/portaudio.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/pulse/recorder.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/rst/audio.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/sndio/sndio.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/modules/winwave/src.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	baresip/test/mock/mock_ausrc.c	/^	ausrc_read_h *rh;$/;"	m	struct:ausrc_st	file:
rh	re-0.5.6/src/udp/udp.c	/^	udp_recv_h *rh;      \/**< Receive handler             *\/$/;"	m	struct:udp_sock	file:
ringback_disabled	baresip/modules/menu/menu.c	/^	bool ringback_disabled;	      \/**< no ringback on sip 180 respons *\/$/;"	m	struct:__anon72	file:
rm	baresip/test/sip/sipsrv.h	/^	bool rm;$/;"	m	struct:location
rm	re-0.5.6/include/re_stun.h	/^	uint32_t rm;   \/**< Rm Max retransmissions (default 16)    *\/$/;"	m	struct:stun_conf
rmmod_handler	baresip/src/baresip.c	/^static int rmmod_handler(struct re_printf *pf, void *arg)$/;"	f	file:
rmode	re-0.5.6/src/ice/ice.h	/^	enum ice_mode rmode;         \/**< Remote mode                        *\/$/;"	m	struct:icem	typeref:enum:icem::ice_mode
rname	re-0.5.6/include/re_dns.h	/^			char *rname;$/;"	m	struct:dnsrr::__anon154::__anon158
roc	re-0.5.6/src/srtp/srtp.h	/^	uint32_t roc;              \/**< send\/recv Roll-Over Counter (ROC)  *\/$/;"	m	struct:srtp_stream
rol	re-0.5.6/src/sha/sha1.c	95;"	d	file:
rot	re-0.5.6/src/hash/func.c	163;"	d	file:
rotate	baresip/test/test.h	/^	bool rotate;$/;"	m	struct:dns_server
route	re-0.5.6/src/sip/dialog.c	/^	struct uri route;$/;"	m	struct:sip_dialog	typeref:struct:sip_dialog::uri	file:
route_enc	re-0.5.6/src/sip/dialog.c	/^struct route_enc {$/;"	s	file:
route_handler	re-0.5.6/src/sip/ctrans.c	/^static bool route_handler(const struct sip_hdr *hdr, const struct sip_msg *msg,$/;"	f	file:
rparams	re-0.5.6/include/re_sdp.h	/^	char *rparams;$/;"	m	struct:sdp_format
rpwd	re-0.5.6/src/ice/ice.h	/^	char *rpwd;                  \/**< Remote Password                    *\/$/;"	m	struct:icem
rr	re-0.5.6/include/re_rtp.h	/^		} rr;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon183
rr_append_handler	re-0.5.6/src/sip/request.c	/^static bool rr_append_handler(struct dnsrr *rr, void *arg)$/;"	f	file:
rr_cache_handler	re-0.5.6/src/sip/request.c	/^static bool rr_cache_handler(struct dnsrr *rr, void *arg)$/;"	f	file:
rr_destructor	re-0.5.6/src/dns/rr.c	/^static void rr_destructor(void *data)$/;"	f	file:
rr_handler	re-0.5.6/src/http/client.c	/^static bool rr_handler(struct dnsrr *rr, void *arg)$/;"	f	file:
rr_naptr_handler	re-0.5.6/src/sip/request.c	/^static bool rr_naptr_handler(struct dnsrr *rr, void *arg)$/;"	f	file:
rr_unlink_handler	re-0.5.6/src/dns/client.c	/^static bool rr_unlink_handler(struct le *le, void *arg)$/;"	f	file:
rrd_append	baresip/modules/vidinfo/panel.c	/^static void rrd_append(struct panel *panel, uint64_t val)$/;"	f	file:
rrd_get_average	baresip/modules/vidinfo/panel.c	/^static int rrd_get_average(struct panel *panel, uint64_t *average)$/;"	f	file:
rrd_sum	baresip/modules/vidinfo/vidinfo.h	/^	uint64_t rrd_sum;$/;"	m	struct:panel
rrdc	baresip/modules/vidinfo/vidinfo.h	/^	size_t rrdc;$/;"	m	struct:panel
rrdsz	baresip/modules/vidinfo/vidinfo.h	/^	size_t rrdsz;$/;"	m	struct:panel
rrdv	baresip/modules/vidinfo/vidinfo.h	/^	uint64_t *rrdv;$/;"	m	struct:panel
rrl	baresip/test/test.h	/^	struct list rrl;$/;"	m	struct:dns_server	typeref:struct:dns_server::list
rrlist_apply	re-0.5.6/src/dns/rrlist.c	/^static struct dnsrr *rrlist_apply(struct list *rrl, const char *name,$/;"	f	file:
rrlv	re-0.5.6/src/dns/client.c	/^	struct list rrlv[3];$/;"	m	struct:dns_query	typeref:struct:dns_query::list	file:
rrv	re-0.5.6/include/re_rtp.h	/^			struct rtcp_rr *rrv;  \/**< Reception report blocks   *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182	typeref:struct:rtcp_msg::__anon181::__anon182::rtcp_rr
rrv	re-0.5.6/include/re_rtp.h	/^			struct rtcp_rr *rrv;  \/**< Reception report blocks   *\/$/;"	m	struct:rtcp_msg::__anon181::__anon183	typeref:struct:rtcp_msg::__anon181::__anon183::rtcp_rr
rs	re-0.5.6/src/rtp/sess.c	/^	struct rtp_sock *rs;        \/**< RTP Socket                          *\/$/;"	m	struct:rtcp_sess	typeref:struct:rtcp_sess::rtp_sock	file:
rseq	re-0.5.6/src/sip/dialog.c	/^	uint32_t rseq;$/;"	m	struct:sip_dialog	file:
rst	baresip/modules/rst/audio.c	/^	struct rst *rst;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::rst	file:
rst	baresip/modules/rst/rst.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(rst) = {$/;"	v	typeref:struct:DECL_EXPORTS
rst	baresip/modules/rst/rst.c	/^struct rst {$/;"	s	file:
rst	baresip/modules/rst/video.c	/^	struct rst *rst;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::rst	file:
rst_alloc	baresip/modules/rst/rst.c	/^int rst_alloc(struct rst **rstp, const char *dev)$/;"	f
rst_audio_close	baresip/modules/rst/audio.c	/^void rst_audio_close(void)$/;"	f
rst_audio_feed	baresip/modules/rst/audio.c	/^void rst_audio_feed(struct ausrc_st *st, const uint8_t *buf, size_t sz)$/;"	f
rst_audio_init	baresip/modules/rst/audio.c	/^int rst_audio_init(void)$/;"	f
rst_connect	baresip/modules/rst/rst.c	/^static int rst_connect(struct rst *rst)$/;"	f	file:
rst_set_audio	baresip/modules/rst/rst.c	/^void rst_set_audio(struct rst *rst, struct ausrc_st *st)$/;"	f
rst_set_video	baresip/modules/rst/rst.c	/^void rst_set_video(struct rst *rst, struct vidsrc_st *st)$/;"	f
rst_video_close	baresip/modules/rst/video.c	/^void rst_video_close(void)$/;"	f
rst_video_init	baresip/modules/rst/video.c	/^int rst_video_init(void)$/;"	f
rst_video_update	baresip/modules/rst/video.c	/^void rst_video_update(struct vidsrc_st *st, const char *name, const char *meta)$/;"	f
rsv1	re-0.5.6/include/re_websock.h	/^	unsigned rsv1:1;$/;"	m	struct:websock_hdr
rsv2	re-0.5.6/include/re_websock.h	/^	unsigned rsv2:1;$/;"	m	struct:websock_hdr
rsv3	re-0.5.6/include/re_websock.h	/^	unsigned rsv3:1;$/;"	m	struct:websock_hdr
rsv_token	re-0.5.6/include/re_stun.h	/^		uint64_t rsv_token;$/;"	m	union:stun_attr::__anon174
rt_debug_handler	re-0.5.6/src/net/rt.c	/^static bool rt_debug_handler(const char *ifname, const struct sa *dst,$/;"	f	file:
rt_default_get_handler	re-0.5.6/src/net/rt.c	/^static bool rt_default_get_handler(const char *_ifname, const struct sa *dst,$/;"	f	file:
rt_parse	re-0.5.6/src/net/linux/rt.c	/^static int rt_parse(const struct nlmsghdr *nlhdr, struct net_rt *rt)$/;"	f	file:
rtag	re-0.5.6/src/sip/dialog.c	/^	char *rtag;$/;"	m	struct:sip_dialog	file:
rtcp	baresip/src/core.h	/^	bool rtcp;               \/**< Enable RTCP                           *\/$/;"	m	struct:stream
rtcp	re-0.5.6/src/rtp/rtp.c	/^	struct rtcp_sess *rtcp; \/**< RTCP Session          *\/$/;"	m	struct:rtp_sock	typeref:struct:rtp_sock::rtcp_sess	file:
rtcp	re-0.5.6/src/srtp/srtp.h	/^	} rtp, rtcp;$/;"	m	struct:srtp	typeref:struct:srtp::comp
rtcp_debug	re-0.5.6/src/rtp/sess.c	/^int rtcp_debug(struct re_printf *pf, const struct rtp_sock *rs)$/;"	f
rtcp_decode	re-0.5.6/src/rtp/pkt.c	/^int rtcp_decode(struct rtcp_msg **msgp, struct mbuf *mb)$/;"	f
rtcp_destructor	re-0.5.6/src/rtp/pkt.c	/^static void rtcp_destructor(void *data)$/;"	f	file:
rtcp_enable	baresip/include/baresip.h	/^	bool rtcp_enable;       \/**< RTCP is enabled                *\/$/;"	m	struct:config_avt
rtcp_enable	re-0.5.6/src/rtp/sess.c	/^int rtcp_enable(struct rtcp_sess *sess, bool enabled, const char *cname)$/;"	f
rtcp_enable_mux	re-0.5.6/src/rtp/rtp.c	/^void rtcp_enable_mux(struct rtp_sock *rs, bool enabled)$/;"	f
rtcp_encode	re-0.5.6/src/rtp/pkt.c	/^int rtcp_encode(struct mbuf *mb, enum rtcp_type type, uint32_t count, ...)$/;"	f
rtcp_encode_h	re-0.5.6/src/rtp/rtcp.h	/^typedef int (rtcp_encode_h)(struct mbuf *mb, void *arg);$/;"	t
rtcp_handler	baresip/src/stream.c	/^static void rtcp_handler(const struct sa *src, struct rtcp_msg *msg, void *arg)$/;"	f	file:
rtcp_handler	baresip/src/video.c	/^static void rtcp_handler(struct rtcp_msg *msg, void *arg)$/;"	f	file:
rtcp_handler	re-0.5.6/src/rtp/sess.c	/^void rtcp_handler(struct rtcp_sess *sess, struct rtcp_msg *msg)$/;"	f
rtcp_hdr	re-0.5.6/include/re_rtp.h	/^	struct rtcp_hdr {$/;"	s	struct:rtcp_msg
rtcp_hdr_decode	re-0.5.6/src/rtp/pkt.c	/^int rtcp_hdr_decode(struct mbuf *mb, struct rtcp_hdr *hdr)$/;"	f
rtcp_hdr_encode	re-0.5.6/src/rtp/pkt.c	/^int rtcp_hdr_encode(struct mbuf *mb, uint8_t count, enum rtcp_type type,$/;"	f
rtcp_index	re-0.5.6/src/srtp/srtp.h	/^	uint32_t rtcp_index;       \/**< RTCP-index for sending (31-bits)   *\/$/;"	m	struct:srtp_stream
rtcp_msg	re-0.5.6/include/re_rtp.h	/^struct rtcp_msg {$/;"	s
rtcp_msg_print	re-0.5.6/src/rtp/rtcp.c	/^int rtcp_msg_print(struct re_printf *pf, const struct rtcp_msg *msg)$/;"	f
rtcp_mux	baresip/include/baresip.h	/^	bool rtcp_mux;          \/**< RTP\/RTCP multiplexing          *\/$/;"	m	struct:config_avt
rtcp_mux	baresip/src/core.h	/^	bool rtcp_mux;           \/**< RTP\/RTCP multiplex supported by peer  *\/$/;"	m	struct:stream
rtcp_mux	re-0.5.6/src/rtp/rtp.c	/^	bool rtcp_mux;          \/**< RTP\/RTCP multiplexing *\/$/;"	m	struct:rtp_sock	file:
rtcp_peer	re-0.5.6/src/rtp/rtp.c	/^	struct sa rtcp_peer;    \/**< RTCP address of Peer  *\/$/;"	m	struct:rtp_sock	typeref:struct:rtp_sock::sa	file:
rtcp_psfb	re-0.5.6/include/re_rtp.h	/^enum rtcp_psfb {$/;"	g
rtcp_psfb_decode	re-0.5.6/src/rtp/fb.c	/^int rtcp_psfb_decode(struct mbuf *mb, struct rtcp_msg *msg)$/;"	f
rtcp_psfb_sli_encode	re-0.5.6/src/rtp/fb.c	/^int rtcp_psfb_sli_encode(struct mbuf *mb, uint16_t first, uint16_t number,$/;"	f
rtcp_quick_send	re-0.5.6/src/rtp/rtcp.c	/^static int rtcp_quick_send(struct rtp_sock *rs, enum rtcp_type type,$/;"	f	file:
rtcp_recv_h	re-0.5.6/include/re_rtp.h	/^typedef void (rtcp_recv_h)(const struct sa *src, struct rtcp_msg *msg,$/;"	t
rtcp_recv_handler	re-0.5.6/src/rtp/rtp.c	/^static void rtcp_recv_handler(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
rtcp_rr	re-0.5.6/include/re_rtp.h	/^struct rtcp_rr {$/;"	s
rtcp_rr_alloc	re-0.5.6/src/rtp/rr.c	/^int rtcp_rr_alloc(struct rtcp_rr **rrp, size_t count)$/;"	f
rtcp_rr_decode	re-0.5.6/src/rtp/rr.c	/^int rtcp_rr_decode(struct mbuf *mb, struct rtcp_rr *rr)$/;"	f
rtcp_rr_encode	re-0.5.6/src/rtp/rr.c	/^int rtcp_rr_encode(struct mbuf *mb, const struct rtcp_rr *rr)$/;"	f
rtcp_rtpfb	re-0.5.6/include/re_rtp.h	/^enum rtcp_rtpfb {$/;"	g
rtcp_rtpfb_decode	re-0.5.6/src/rtp/fb.c	/^int rtcp_rtpfb_decode(struct mbuf *mb, struct rtcp_msg *msg)$/;"	f
rtcp_rtpfb_gnack_encode	re-0.5.6/src/rtp/fb.c	/^int rtcp_rtpfb_gnack_encode(struct mbuf *mb, uint16_t pid, uint16_t blp)$/;"	f
rtcp_sdes	re-0.5.6/include/re_rtp.h	/^		struct rtcp_sdes {$/;"	s	union:rtcp_msg::__anon181
rtcp_sdes_decode	re-0.5.6/src/rtp/sdes.c	/^int rtcp_sdes_decode(struct mbuf *mb, struct rtcp_sdes *sdes)$/;"	f
rtcp_sdes_encode	re-0.5.6/src/rtp/sdes.c	/^int rtcp_sdes_encode(struct mbuf *mb, uint32_t src, uint32_t itemc, ...)$/;"	f
rtcp_sdes_item	re-0.5.6/include/re_rtp.h	/^struct rtcp_sdes_item {$/;"	s
rtcp_sdes_name	re-0.5.6/src/rtp/rtcp.c	/^const char *rtcp_sdes_name(enum rtcp_sdes_type sdes)$/;"	f
rtcp_sdes_type	re-0.5.6/include/re_rtp.h	/^enum rtcp_sdes_type {$/;"	g
rtcp_send	re-0.5.6/src/rtp/rtp.c	/^int rtcp_send(struct rtp_sock *rs, struct mbuf *mb)$/;"	f
rtcp_send_app	re-0.5.6/src/rtp/rtcp.c	/^int rtcp_send_app(struct rtp_sock *rs, const char name[4],$/;"	f
rtcp_send_fir	re-0.5.6/src/rtp/rtcp.c	/^int rtcp_send_fir(struct rtp_sock *rs, uint32_t ssrc)$/;"	f
rtcp_send_nack	re-0.5.6/src/rtp/rtcp.c	/^int rtcp_send_nack(struct rtp_sock *rs, uint16_t fsn, uint16_t blp)$/;"	f
rtcp_send_pli	re-0.5.6/src/rtp/rtcp.c	/^int rtcp_send_pli(struct rtp_sock *rs, uint32_t fb_ssrc)$/;"	f
rtcp_sess	re-0.5.6/src/rtp/sess.c	/^struct rtcp_sess {$/;"	s	file:
rtcp_sess_alloc	re-0.5.6/src/rtp/sess.c	/^int rtcp_sess_alloc(struct rtcp_sess **sessp, struct rtp_sock *rs)$/;"	f
rtcp_sess_rx_rtp	re-0.5.6/src/rtp/sess.c	/^void rtcp_sess_rx_rtp(struct rtcp_sess *sess, uint16_t seq, uint32_t ts,$/;"	f
rtcp_sess_tx_rtp	re-0.5.6/src/rtp/sess.c	/^void rtcp_sess_tx_rtp(struct rtcp_sess *sess, uint32_t ts, size_t payload_size)$/;"	f
rtcp_set_srate	re-0.5.6/src/rtp/sess.c	/^void rtcp_set_srate(struct rtp_sock *rs, uint32_t srate_tx, uint32_t srate_rx)$/;"	f
rtcp_set_srate_rx	re-0.5.6/src/rtp/sess.c	/^void rtcp_set_srate_rx(struct rtp_sock *rs, uint32_t srate_rx)$/;"	f
rtcp_set_srate_tx	re-0.5.6/src/rtp/sess.c	/^void rtcp_set_srate_tx(struct rtp_sock *rs, uint32_t srate_tx)$/;"	f
rtcp_sock	re-0.5.6/src/rtp/rtp.c	/^void *rtcp_sock(const struct rtp_sock *rs)$/;"	f
rtcp_start	re-0.5.6/src/rtp/rtp.c	/^void rtcp_start(struct rtp_sock *rs, const char *cname,$/;"	f
rtcp_stats	baresip/src/core.h	/^	struct rtcp_stats rtcp_stats;\/**< RTCP statistics                   *\/$/;"	m	struct:stream	typeref:struct:stream::rtcp_stats
rtcp_stats	re-0.5.6/include/re_rtp.h	/^struct rtcp_stats {$/;"	s
rtcp_stats	re-0.5.6/src/rtp/sess.c	/^int rtcp_stats(struct rtp_sock *rs, uint32_t ssrc, struct rtcp_stats *stats)$/;"	f
rtcp_type	re-0.5.6/include/re_rtp.h	/^enum rtcp_type {$/;"	g
rtcp_type_name	re-0.5.6/src/rtp/rtcp.c	/^const char *rtcp_type_name(enum rtcp_type type)$/;"	f
rtcp_vencode	re-0.5.6/src/rtp/pkt.c	/^int rtcp_vencode(struct mbuf *mb, enum rtcp_type type, uint32_t count,$/;"	f
rtcph	baresip/src/core.h	/^	stream_rtcp_h *rtcph;    \/**< Stream RTCP handler                   *\/$/;"	m	struct:stream
rtcph	re-0.5.6/src/rtp/rtp.c	/^	rtcp_recv_h *rtcph;     \/**< RTCP Receive handler  *\/$/;"	m	struct:rtp_sock	file:
rtcpsock	baresip/modules/libsrtp/srtp.c	/^	void *rtcpsock;$/;"	m	struct:menc_st	file:
rtcpsock	baresip/modules/srtp/srtp.c	/^	void *rtcpsock;$/;"	m	struct:menc_st	file:
rtcpsock	baresip/modules/zrtp/zrtp.c	/^	void *rtcpsock;$/;"	m	struct:menc_media	file:
rto	re-0.5.6/include/re_ice.h	/^	uint32_t rto;             \/**< STUN Retransmission TimeOut *\/$/;"	m	struct:ice_conf
rto	re-0.5.6/include/re_stun.h	/^	uint32_t rto;  \/**< RTO Retransmission TimeOut [ms]        *\/$/;"	m	struct:stun_conf
rtp	baresip/src/core.h	/^	struct rtp_sock *rtp;    \/**< RTP Socket                            *\/$/;"	m	struct:stream	typeref:struct:stream::rtp_sock
rtp	baresip/src/rtpkeep.c	/^	struct rtp_sock *rtp;$/;"	m	struct:rtpkeep	typeref:struct:rtpkeep::rtp_sock	file:
rtp	re-0.5.6/src/srtp/srtp.h	/^	} rtp, rtcp;$/;"	m	struct:srtp	typeref:struct:srtp::comp
rtp_alloc	re-0.5.6/src/rtp/rtp.c	/^int rtp_alloc(struct rtp_sock **rsp)$/;"	f
rtp_bw	baresip/include/baresip.h	/^	struct range rtp_bw;    \/**< RTP Bandwidth range [bit\/s]    *\/$/;"	m	struct:config_avt	typeref:struct:config_avt::range
rtp_debug	re-0.5.6/src/rtp/rtp.c	/^int rtp_debug(struct re_printf *pf, const struct rtp_sock *rs)$/;"	f
rtp_decode	re-0.5.6/src/rtp/rtp.c	/^int rtp_decode(struct rtp_sock *rs, struct mbuf *mb,$/;"	f
rtp_encode	re-0.5.6/src/rtp/rtp.c	/^int rtp_encode(struct rtp_sock *rs, bool ext, bool marker, uint8_t pt,$/;"	f
rtp_handler	baresip/src/stream.c	/^static void rtp_handler(const struct sa *src, const struct rtp_header *hdr,$/;"	f	file:
rtp_hdr_decode	re-0.5.6/src/rtp/rtp.c	/^int rtp_hdr_decode(struct rtp_header *hdr, struct mbuf *mb)$/;"	f
rtp_hdr_encode	re-0.5.6/src/rtp/rtp.c	/^int rtp_hdr_encode(struct mbuf *mb, const struct rtp_header *hdr)$/;"	f
rtp_header	re-0.5.6/include/re_rtp.h	/^struct rtp_header {$/;"	s
rtp_listen	re-0.5.6/src/rtp/rtp.c	/^int rtp_listen(struct rtp_sock **rsp, int proto, const struct sa *ip,$/;"	f
rtp_local	re-0.5.6/src/rtp/rtp.c	/^const struct sa *rtp_local(const struct rtp_sock *rs)$/;"	f
rtp_member	re-0.5.6/src/rtp/rtcp.h	/^struct rtp_member {$/;"	s
rtp_peer	re-0.5.6/src/rtp/rtcp.h	/^	struct sa rtp_peer;       \/**< IP-address of the RTP source        *\/$/;"	m	struct:rtp_source	typeref:struct:rtp_source::sa
rtp_ports	baresip/include/baresip.h	/^	struct range rtp_ports; \/**< RTP port range                 *\/$/;"	m	struct:config_avt	typeref:struct:config_avt::range
rtp_recv_h	re-0.5.6/include/re_rtp.h	/^typedef void (rtp_recv_h)(const struct sa *src, const struct rtp_header *hdr,$/;"	t
rtp_rtcp_sess	re-0.5.6/src/rtp/rtp.c	/^struct rtcp_sess *rtp_rtcp_sess(const struct rtp_sock *rs)$/;"	f
rtp_rx_bytes	re-0.5.6/src/rtp/rtcp.h	/^	size_t rtp_rx_bytes;      \/**< Number of RTP bytes received        *\/$/;"	m	struct:rtp_source
rtp_send	re-0.5.6/src/rtp/rtp.c	/^int rtp_send(struct rtp_sock *rs, const struct sa *dst, bool ext,$/;"	f
rtp_send_data	baresip/src/h264.c	/^static int rtp_send_data(const uint8_t *hdr, size_t hdr_sz,$/;"	f	file:
rtp_sess_ssrc	re-0.5.6/src/rtp/rtp.c	/^uint32_t rtp_sess_ssrc(const struct rtp_sock *rs)$/;"	f
rtp_sock	re-0.5.6/src/rtp/rtp.c	/^struct rtp_sock {$/;"	s	file:
rtp_sock	re-0.5.6/src/rtp/rtp.c	/^void *rtp_sock(const struct rtp_sock *rs)$/;"	f
rtp_source	re-0.5.6/src/rtp/rtcp.h	/^struct rtp_source {$/;"	s
rtp_stats	baresip/include/baresip.h	/^	bool rtp_stats;         \/**< Enable RTP statistics          *\/$/;"	m	struct:config_avt
rtp_timeout	baresip/include/baresip.h	/^	uint32_t rtp_timeout;   \/**< RTP Timeout in seconds (0=off) *\/$/;"	m	struct:config_avt
rtp_timeout_ms	baresip/src/call.c	/^	uint32_t rtp_timeout_ms;  \/**< RTP Timeout in [ms]                  *\/$/;"	m	struct:call	file:
rtp_timeout_ms	baresip/src/core.h	/^	uint32_t rtp_timeout_ms; \/**< RTP Timeout value in [ms]             *\/$/;"	m	struct:stream
rtp_tmr_handler	baresip/src/video.c	/^static void rtp_tmr_handler(void *arg)$/;"	f	file:
rtp_tos	baresip/include/baresip.h	/^	uint8_t rtp_tos;        \/**< Type-of-Service for outg. RTP  *\/$/;"	m	struct:config_avt
rtp_ts	re-0.5.6/include/re_rtp.h	/^			uint32_t rtp_ts;      \/**< RTP timestamp             *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182
rtp_ts	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t rtp_ts;          \/**< RTP timestamp                       *\/$/;"	m	struct:rtp_source
rtpext	baresip/src/core.h	/^struct rtpext {$/;"	s
rtpext_decode	baresip/src/rtpext.c	/^int rtpext_decode(struct rtpext *ext, struct mbuf *mb)$/;"	f
rtpext_encode	baresip/src/rtpext.c	/^int rtpext_encode(struct mbuf *mb, unsigned id, unsigned len,$/;"	f
rtpext_hdr_encode	baresip/src/rtpext.c	/^int rtpext_hdr_encode(struct mbuf *mb, size_t num_bytes)$/;"	f
rtph	baresip/src/core.h	/^	stream_rtp_h *rtph;      \/**< Stream RTP handler                    *\/$/;"	m	struct:stream
rtpkeep	baresip/src/core.h	/^	char *rtpkeep;               \/**< RTP Keepalive mechanism            *\/$/;"	m	struct:account
rtpkeep	baresip/src/core.h	/^	struct rtpkeep *rtpkeep; \/**< RTP Keepalive                         *\/$/;"	m	struct:stream	typeref:struct:stream::rtpkeep
rtpkeep	baresip/src/rtpkeep.c	/^struct rtpkeep {$/;"	s	file:
rtpkeep_alloc	baresip/src/rtpkeep.c	/^int rtpkeep_alloc(struct rtpkeep **rkp, const char *method, int proto,$/;"	f
rtpkeep_refresh	baresip/src/rtpkeep.c	/^void rtpkeep_refresh(struct rtpkeep *rk, uint32_t ts)$/;"	f
rtpsock	baresip/modules/libsrtp/srtp.c	/^	void *rtpsock;$/;"	m	struct:menc_st	file:
rtpsock	baresip/modules/srtp/srtp.c	/^	void *rtpsock;$/;"	m	struct:menc_st	file:
rtpsock	baresip/modules/zrtp/zrtp.c	/^	void *rtpsock;$/;"	m	struct:menc_media	file:
rtt	re-0.5.6/include/re_rtp.h	/^	uint32_t rtt;           \/**< Current Round-Trip Time in [us] *\/$/;"	m	struct:rtcp_stats
rtt	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t rtt;             \/**< Round-trip time in [us]             *\/$/;"	m	struct:rtp_member
rufrag	re-0.5.6/src/ice/ice.h	/^	char *rufrag;                \/**< Remote Username fragment           *\/$/;"	m	struct:icem
run	baresip/modules/alsa/alsa_play.c	/^	bool run;$/;"	m	struct:auplay_st	file:
run	baresip/modules/alsa/alsa_src.c	/^	bool run;$/;"	m	struct:ausrc_st	file:
run	baresip/modules/aubridge/device.c	/^	volatile bool run;$/;"	m	struct:device	file:
run	baresip/modules/aufile/aufile.c	/^	bool run;$/;"	m	struct:ausrc_st	file:
run	baresip/modules/avformat/avformat.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/modules/cairo/cairo.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/modules/fakevideo/fakevideo.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/modules/gst/gst.c	/^	bool run;                   \/**< Running flag            *\/$/;"	m	struct:ausrc_st	file:
run	baresip/modules/gst1/gst.c	/^	bool run;                   \/**< Running flag            *\/$/;"	m	struct:ausrc_st	file:
run	baresip/modules/gst_video/encode.c	/^	int run;$/;"	m	struct:videnc_state	file:
run	baresip/modules/gtk/gtk_mod.c	/^	bool run;$/;"	m	struct:gtk_mod	file:
run	baresip/modules/oss/oss.c	/^	bool run;$/;"	m	struct:auplay_st	file:
run	baresip/modules/oss/oss.c	/^	bool run;$/;"	m	struct:ausrc_st	file:
run	baresip/modules/pulse/player.c	/^	bool run;$/;"	m	struct:auplay_st	file:
run	baresip/modules/pulse/recorder.c	/^	bool run;$/;"	m	struct:ausrc_st	file:
run	baresip/modules/rst/audio.c	/^	bool run;$/;"	m	struct:ausrc_st	file:
run	baresip/modules/rst/video.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/modules/sndio/sndio.c	/^	int run;$/;"	m	struct:auplay_st	file:
run	baresip/modules/sndio/sndio.c	/^	int run;$/;"	m	struct:ausrc_st	file:
run	baresip/modules/v4l/v4l.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/modules/v4l2/v4l2.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/modules/wincons/wincons.c	/^	bool run;$/;"	m	struct:ui_st	file:
run	baresip/modules/x11grab/x11grab.c	/^	bool run;$/;"	m	struct:vidsrc_st	file:
run	baresip/src/audio.c	/^			bool run;     \/**< Audio transmit thread running   *\/$/;"	m	struct:autx::__anon12::__anon13	file:
run	rem-0.5.2/src/aumix/aumix.c	/^	bool run;$/;"	m	struct:aumix	file:
run	rem-0.5.2/src/vidmix/vidmix.c	/^	bool run;$/;"	m	struct:vidmix_source	file:
run_one_test	baresip/test/main.c	/^static int run_one_test(const struct test *test)$/;"	f	file:
run_tests	baresip/test/main.c	/^static int run_tests(void)$/;"	f	file:
running	re-0.5.6/src/jbuf/jbuf.c	/^	bool running;        \/**< Jitter buffer is running                  *\/$/;"	m	struct:jbuf	file:
ruri	re-0.5.6/include/re_sip.h	/^	struct pl ruri;        \/**< Raw request URI                      *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
rwlock	rem-0.5.2/src/vidmix/vidmix.c	/^	pthread_rwlock_t rwlock;$/;"	m	struct:vidmix	file:
rx	baresip/modules/dtls_srtp/dtls_srtp.h	/^	struct srtp_stream *rx;$/;"	m	struct:comp	typeref:struct:comp::srtp_stream
rx	baresip/src/audio.c	/^	struct aurx rx;               \/**< Receive                         *\/$/;"	m	struct:audio	typeref:struct:audio::aurx	file:
rx	re-0.5.6/include/re_rtp.h	/^	} rx;$/;"	m	struct:rtcp_stats	typeref:struct:rtcp_stats::__anon191
rx_end	re-0.5.6/src/telev/telev.c	/^	bool rx_end;$/;"	m	struct:telev	file:
rx_event	re-0.5.6/src/telev/telev.c	/^	int rx_event;$/;"	m	struct:telev	file:
rx_len	re-0.5.6/src/http/client.c	/^	size_t rx_len;$/;"	m	struct:http_req	file:
rx_presz	re-0.5.6/src/udp/udp.c	/^	size_t rx_presz;     \/**< Preallocated rx buffer size *\/$/;"	m	struct:udp_sock	file:
rxsz	re-0.5.6/src/tcp/tcp.c	/^	size_t rxsz;          \/**< Maximum receive chunk size        *\/$/;"	m	struct:tcp_conn	file:
rxsz	re-0.5.6/src/udp/udp.c	/^	size_t rxsz;         \/**< Maximum receive chunk size  *\/$/;"	m	struct:udp_sock	file:
s	baresip/include/baresip.h	/^	unsigned s:1;      \/**< Start bit                               *\/$/;"	m	struct:h264_fu
s	baresip/modules/avcodec/h26x.h	/^	unsigned s:1;      \/**< 1 bit  - Syntax-based Arithmetic Coding     *\/$/;"	m	struct:h263_hdr
s	baresip/modules/h265/decode.c	/^	unsigned s:1;$/;"	m	struct:fu	file:
s	baresip/modules/pulse/player.c	/^	pa_simple *s;$/;"	m	struct:auplay_st	file:
s	baresip/modules/pulse/recorder.c	/^	pa_simple *s;$/;"	m	struct:ausrc_st	file:
s	re-0.5.6/src/rtp/rtcp.h	/^	struct rtp_source *s;     \/**< RTP source state                    *\/$/;"	m	struct:rtp_member	typeref:struct:rtp_member::rtp_source
s_l	re-0.5.6/src/srtp/srtp.h	/^	uint16_t s_l;              \/**< send\/recv -- highest SEQ number    *\/$/;"	m	struct:srtp_stream
s_l_set	re-0.5.6/src/srtp/srtp.h	/^	bool s_l_set;              \/**< True if s_l has been set           *\/$/;"	m	struct:srtp_stream
s_mqtt	baresip/modules/mqtt/mqtt.c	/^static struct mqtt s_mqtt;$/;"	v	typeref:struct:mqtt	file:
s_sessl	baresip/modules/gzrtp/session.cpp	/^std::vector<Session *> Session::s_sessl;$/;"	m	class:Session	file:
s_sessl	baresip/modules/gzrtp/session.h	/^	static std::vector<Session *> s_sessl;$/;"	m	class:Session
s_zrtp_config	baresip/modules/gzrtp/gzrtp.cpp	/^static ZRTPConfig *s_zrtp_config = NULL;$/;"	v	file:
sa	re-0.5.6/include/re_sa.h	/^		struct sockaddr sa;$/;"	m	union:sa::__anon176	typeref:struct:sa::__anon176::sockaddr
sa	re-0.5.6/include/re_sa.h	/^struct sa {$/;"	s
sa	re-0.5.6/include/re_stun.h	/^		struct sa sa;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
sa_af	re-0.5.6/src/sa/sa.c	/^int sa_af(const struct sa *sa)$/;"	f
sa_cmp	re-0.5.6/src/sa/sa.c	/^bool sa_cmp(const struct sa *l, const struct sa *r, int flag)$/;"	f
sa_cpy	re-0.5.6/src/sa/sa.c	/^void sa_cpy(struct sa *dst, const struct sa *src)$/;"	f
sa_decode	re-0.5.6/src/sa/sa.c	/^int sa_decode(struct sa *sa, const char *str, size_t len)$/;"	f
sa_flag	re-0.5.6/include/re_sa.h	/^enum sa_flag {$/;"	g
sa_hash	re-0.5.6/src/sa/sa.c	/^uint32_t sa_hash(const struct sa *sa, int flag)$/;"	f
sa_in	re-0.5.6/src/sa/sa.c	/^uint32_t sa_in(const struct sa *sa)$/;"	f
sa_in6	re-0.5.6/src/sa/sa.c	/^void sa_in6(const struct sa *sa, uint8_t *addr)$/;"	f
sa_init	re-0.5.6/src/sa/sa.c	/^void sa_init(struct sa *sa, int af)$/;"	f
sa_is_any	re-0.5.6/src/sa/sa.c	/^bool sa_is_any(const struct sa *sa)$/;"	f
sa_is_linklocal	re-0.5.6/src/sa/sa.c	/^bool sa_is_linklocal(const struct sa *sa)$/;"	f
sa_is_loopback	re-0.5.6/src/sa/sa.c	/^bool sa_is_loopback(const struct sa *sa)$/;"	f
sa_isset	re-0.5.6/src/sa/sa.c	/^bool sa_isset(const struct sa *sa, int flag)$/;"	f
sa_ntop	re-0.5.6/src/sa/sa.c	/^int sa_ntop(const struct sa *sa, char *buf, int size)$/;"	f
sa_port	re-0.5.6/src/sa/sa.c	/^uint16_t sa_port(const struct sa *sa)$/;"	f
sa_print_addr	re-0.5.6/src/sa/printaddr.c	/^int sa_print_addr(struct re_printf *pf, const struct sa *sa)$/;"	f
sa_set	re-0.5.6/src/sa/sa.c	/^int sa_set(struct sa *sa, const struct pl *addr, uint16_t port)$/;"	f
sa_set_in	re-0.5.6/src/sa/sa.c	/^void sa_set_in(struct sa *sa, uint32_t addr, uint16_t port)$/;"	f
sa_set_in6	re-0.5.6/src/sa/sa.c	/^void sa_set_in6(struct sa *sa, const uint8_t *addr, uint16_t port)$/;"	f
sa_set_port	re-0.5.6/src/sa/sa.c	/^void sa_set_port(struct sa *sa, uint16_t port)$/;"	f
sa_set_sa	re-0.5.6/src/sa/sa.c	/^int sa_set_sa(struct sa *sa, const struct sockaddr *s)$/;"	f
sa_set_str	re-0.5.6/src/sa/sa.c	/^int sa_set_str(struct sa *sa, const char *addr, uint16_t port)$/;"	f
sac	baresip/modules/avcodec/h26x.h	/^	unsigned sac:1;              \/**< Syntax-based Arithmetic Coding  *\/$/;"	m	struct:h263_strm
sampc	baresip/modules/alsa/alsa_play.c	/^	size_t sampc;$/;"	m	struct:auplay_st	file:
sampc	baresip/modules/alsa/alsa_src.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/aufile/aufile.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/auloop/auloop.c	/^	size_t sampc;$/;"	m	struct:audio_loop	file:
sampc	baresip/modules/gst/gst.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/gst1/gst.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/jack/jack_play.c	/^	size_t sampc;             \/* includes number of channels *\/$/;"	m	struct:auplay_st	file:
sampc	baresip/modules/jack/jack_src.c	/^	size_t sampc;             \/* includes number of channels *\/$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/opensles/player.c	/^	size_t   sampc;$/;"	m	struct:auplay_st	file:
sampc	baresip/modules/opensles/recorder.c	/^	size_t   sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/oss/oss.c	/^	size_t sampc;$/;"	m	struct:auplay_st	file:
sampc	baresip/modules/oss/oss.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/plc/plc.c	/^	size_t sampc;$/;"	m	struct:plc_st	file:
sampc	baresip/modules/pulse/player.c	/^	size_t sampc;$/;"	m	struct:auplay_st	file:
sampc	baresip/modules/pulse/recorder.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/rst/audio.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/modules/sndio/sndio.c	/^	size_t sampc;$/;"	m	struct:auplay_st	file:
sampc	baresip/modules/sndio/sndio.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sampc	baresip/test/mock/mock_auplay.c	/^	size_t sampc;$/;"	m	struct:auplay_st	file:
sampc	baresip/test/mock/mock_ausrc.c	/^	size_t sampc;$/;"	m	struct:ausrc_st	file:
sample_handler	baresip/test/play.c	/^static void sample_handler(const void *sampv, size_t sampc, void *arg)$/;"	f	file:
sampleh	baresip/test/mock/mock_auplay.c	/^	mock_sample_h *sampleh;$/;"	m	struct:__anon98	file:
samplerate	baresip/modules/mpa/encode.c	/^	int channels, samplerate;$/;"	m	struct:auenc_state	file:
samplerate	baresip/modules/mpa/mpa.h	/^	unsigned samplerate;$/;"	m	struct:mpa_param
sampsz	baresip/modules/audiounit/player.c	/^	uint32_t sampsz;$/;"	m	struct:auplay_st	file:
sampsz	baresip/modules/audiounit/recorder.c	/^	uint32_t sampsz;$/;"	m	struct:ausrc_st	file:
sampsz	baresip/modules/pulse/player.c	/^	size_t sampsz;$/;"	m	struct:auplay_st	file:
sampsz	baresip/modules/pulse/recorder.c	/^	size_t sampsz;$/;"	m	struct:ausrc_st	file:
sampsz	baresip/modules/rst/audio.c	/^	size_t sampsz;$/;"	m	struct:ausrc_st	file:
sampv	baresip/modules/alsa/alsa_play.c	/^	void *sampv;$/;"	m	struct:auplay_st	file:
sampv	baresip/modules/alsa/alsa_src.c	/^	void *sampv;$/;"	m	struct:ausrc_st	file:
sampv	baresip/modules/auloop/auloop.c	/^	int16_t *sampv;$/;"	m	struct:audio_loop	file:
sampv	baresip/modules/jack/jack_play.c	/^	int16_t *sampv;$/;"	m	struct:auplay_st	file:
sampv	baresip/modules/jack/jack_src.c	/^	int16_t *sampv;$/;"	m	struct:ausrc_st	file:
sampv	baresip/modules/opensles/player.c	/^	int16_t *sampv[N_PLAY_QUEUE_BUFFERS];$/;"	m	struct:auplay_st	file:
sampv	baresip/modules/opensles/recorder.c	/^	int16_t *sampv[N_REC_QUEUE_BUFFERS];$/;"	m	struct:ausrc_st	file:
sampv	baresip/modules/oss/oss.c	/^	int16_t *sampv;$/;"	m	struct:auplay_st	file:
sampv	baresip/modules/oss/oss.c	/^	int16_t *sampv;$/;"	m	struct:ausrc_st	file:
sampv	baresip/modules/pulse/player.c	/^	void *sampv;$/;"	m	struct:auplay_st	file:
sampv	baresip/modules/pulse/recorder.c	/^	void *sampv;$/;"	m	struct:ausrc_st	file:
sampv	baresip/modules/sndio/sndio.c	/^	int16_t *sampv;$/;"	m	struct:auplay_st	file:
sampv	baresip/modules/sndio/sndio.c	/^	int16_t *sampv;$/;"	m	struct:ausrc_st	file:
sampv	baresip/src/audio.c	/^	int16_t *sampv;               \/**< Sample buffer                   *\/$/;"	m	struct:aurx	file:
sampv	baresip/src/audio.c	/^	int16_t *sampv;               \/**< Sample buffer                   *\/$/;"	m	struct:autx	file:
sampv	baresip/test/mock/mock_auplay.c	/^	void *sampv;$/;"	m	struct:auplay_st	file:
sampv	baresip/test/mock/mock_ausrc.c	/^	void *sampv;$/;"	m	struct:ausrc_st	file:
sampv_rs	baresip/src/audio.c	/^	int16_t *sampv_rs;            \/**< Sample buffer for resampler     *\/$/;"	m	struct:aurx	file:
sampv_rs	baresip/src/audio.c	/^	int16_t *sampv_rs;            \/**< Sample buffer for resampler     *\/$/;"	m	struct:autx	file:
sas_verified	baresip/modules/gzrtp/stream.cpp	/^bool Stream::sas_verified()$/;"	f	class:Stream
saturate_add16	rem-0.5.2/include/rem_dsp.h	/^static inline int16_t saturate_add16(int32_t a, int32_t b)$/;"	f
saturate_s15	rem-0.5.2/include/rem_dsp.h	/^static inline int16_t saturate_s15(int32_t a)$/;"	f
saturate_s16	rem-0.5.2/include/rem_dsp.h	/^static inline int16_t saturate_s16(int32_t a)$/;"	f
saturate_sub16	rem-0.5.2/include/rem_dsp.h	/^static inline int16_t saturate_sub16(int32_t a, int32_t b)$/;"	f
saturate_u8	rem-0.5.2/include/rem_dsp.h	/^static inline uint8_t saturate_u8(int32_t a)$/;"	f
sbio_in	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	BIO *sbio_in;$/;"	m	struct:tls_conn	file:
sbio_in	re-0.5.6/src/tls/openssl/tls_udp.c	/^	BIO *sbio_in;$/;"	m	struct:tls_conn	file:
sbio_out	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	BIO *sbio_out;$/;"	m	struct:tls_conn	file:
sbio_out	re-0.5.6/src/tls/openssl/tls_udp.c	/^	BIO *sbio_out;$/;"	m	struct:tls_conn	file:
sbit	baresip/modules/avcodec/h26x.h	/^	unsigned sbit:3;   \/**< 3 bits - Start Bit Position (SBIT)          *\/$/;"	m	struct:h263_hdr
sc	re-0.5.6/src/http/client.c	/^	struct tls_conn *sc;$/;"	m	struct:conn	typeref:struct:conn::tls_conn	file:
sc	re-0.5.6/src/http/server.c	/^	struct tls_conn *sc;$/;"	m	struct:http_conn	typeref:struct:http_conn::tls_conn	file:
sc	re-0.5.6/src/sip/transp.c	/^	struct tls_conn *sc;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::tls_conn	file:
sc	re-0.5.6/src/websock/websock.c	/^	struct tls_conn *sc;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::tls_conn	file:
sc3	baresip/modules/h265/fmt.c	/^static const uint8_t sc3[3] = {0, 0, 1};$/;"	v	file:
sc4	baresip/modules/h265/fmt.c	/^static const uint8_t sc4[4] = {0, 0, 0, 1};$/;"	v	file:
schedule	re-0.5.6/src/rtp/sess.c	/^static void schedule(struct rtcp_sess *sess)$/;"	f	file:
scheme	re-0.5.6/include/re_uri.h	/^	struct pl scheme;    \/**< URI scheme e.g. "sip:" "sips:"    *\/$/;"	m	struct:uri	typeref:struct:uri::pl
scode	baresip/src/call.c	/^	uint16_t scode;           \/**< Termination status code              *\/$/;"	m	struct:call	file:
scode	baresip/src/reg.c	/^	uint16_t scode;              \/**< Registration status code           *\/$/;"	m	struct:reg	file:
scode	re-0.5.6/include/re_http.h	/^	uint16_t scode;        \/**< Response Status code                   *\/$/;"	m	struct:http_msg
scode	re-0.5.6/include/re_sip.h	/^	uint16_t scode;        \/**< Response status code                 *\/$/;"	m	struct:sip_msg
scode	re-0.5.6/src/ice/ice.h	/^	uint16_t scode;              \/**< Saved STUN code, if failed         *\/$/;"	m	struct:ice_candpair
sconf	baresip/modules/speex/speex.c	/^} sconf = {$/;"	v	typeref:struct:__anon83	file:
screen	baresip/modules/sdl/sdl.c	/^	SDL_Surface *screen;            \/**< SDL Surface           *\/$/;"	m	struct:__anon60	file:
sdes_decode_crypto	baresip/modules/srtp/sdes.c	/^int sdes_decode_crypto(struct crypto *c, const char *val)$/;"	f
sdes_encode_crypto	baresip/modules/srtp/sdes.c	/^int sdes_encode_crypto(struct sdp_media *m, uint32_t tag, const char *suite,$/;"	f
sdes_encode_handler	re-0.5.6/src/rtp/sess.c	/^static int sdes_encode_handler(struct mbuf *mb, void *arg)$/;"	f	file:
sdesv	re-0.5.6/include/re_rtp.h	/^		} *sdesv;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::rtcp_sdes
sdl	baresip/modules/sdl/sdl.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(sdl) = {$/;"	v	typeref:struct:DECL_EXPORTS
sdl	baresip/modules/sdl/sdl.c	/^} sdl;$/;"	v	typeref:struct:__anon60	file:
sdl2	baresip/modules/sdl2/sdl.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(sdl2) = {$/;"	v	typeref:struct:DECL_EXPORTS
sdl_close	baresip/modules/sdl/sdl.c	/^static void sdl_close(void)$/;"	f	file:
sdl_open	baresip/modules/sdl/sdl.c	/^static int sdl_open(void)$/;"	f	file:
sdl_reset	baresip/modules/sdl/sdl.c	/^static void sdl_reset(void)$/;"	f	file:
sdl_reset	baresip/modules/sdl2/sdl.c	/^static void sdl_reset(struct vidisp_st *st)$/;"	f	file:
sdp	baresip/include/baresip.h	/^	struct config_sdp sdp;$/;"	m	struct:config	typeref:struct:config::config_sdp
sdp	baresip/modules/dtls_srtp/dtls_srtp.c	/^	struct sdp_session *sdp;$/;"	m	struct:menc_sess	typeref:struct:menc_sess::sdp_session	file:
sdp	baresip/modules/ice/ice.c	/^	struct sdp_session *sdp;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::sdp_session	file:
sdp	baresip/src/call.c	/^	struct sdp_session *sdp;  \/**< SDP Session                          *\/$/;"	m	struct:call	typeref:struct:call::sdp_session	file:
sdp	baresip/src/core.h	/^	struct sdp_media *sdp;   \/**< SDP Media line                        *\/$/;"	m	struct:stream	typeref:struct:stream::sdp_media
sdp	baresip/src/rtpkeep.c	/^	struct sdp_media *sdp;$/;"	m	struct:rtpkeep	typeref:struct:rtpkeep::sdp_media	file:
sdp_attr	re-0.5.6/src/sdp/attr.c	/^struct sdp_attr {$/;"	s	file:
sdp_attr_add	re-0.5.6/src/sdp/attr.c	/^int sdp_attr_add(struct list *lst, struct pl *name, struct pl *val)$/;"	f
sdp_attr_addv	re-0.5.6/src/sdp/attr.c	/^int sdp_attr_addv(struct list *lst, const char *name, const char *val,$/;"	f
sdp_attr_apply	re-0.5.6/src/sdp/attr.c	/^const char *sdp_attr_apply(const struct list *lst, const char *name,$/;"	f
sdp_attr_crypto	baresip/modules/libsrtp/sdes.c	/^static const char sdp_attr_crypto[] = "crypto";$/;"	v	file:
sdp_attr_crypto	baresip/modules/srtp/sdes.c	/^const char sdp_attr_crypto[] = "crypto";$/;"	v
sdp_attr_debug	re-0.5.6/src/sdp/attr.c	/^int sdp_attr_debug(struct re_printf *pf, const struct sdp_attr *attr)$/;"	f
sdp_attr_del	re-0.5.6/src/sdp/attr.c	/^void sdp_attr_del(const struct list *lst, const char *name)$/;"	f
sdp_attr_fmtp	re-0.5.6/src/sdp/str.c	/^const char sdp_attr_fmtp[]     = "fmtp";      \/**< fmtp                 *\/$/;"	v
sdp_attr_h	re-0.5.6/include/re_sdp.h	/^typedef bool(sdp_attr_h)(const char *name, const char *value, void *arg);$/;"	t
sdp_attr_handler	baresip/modules/ice/ice.c	/^static bool sdp_attr_handler(const char *name, const char *value, void *arg)$/;"	f	file:
sdp_attr_handler	baresip/modules/libsrtp/srtp.c	/^static bool sdp_attr_handler(const char *name, const char *value, void *arg)$/;"	f	file:
sdp_attr_handler	baresip/modules/srtp/srtp.c	/^static bool sdp_attr_handler(const char *name, const char *value, void *arg)$/;"	f	file:
sdp_attr_maxptime	re-0.5.6/src/sdp/str.c	/^const char sdp_attr_maxptime[] = "maxptime";  \/**< maxptime             *\/$/;"	v
sdp_attr_print	re-0.5.6/src/sdp/attr.c	/^int sdp_attr_print(struct re_printf *pf, const struct sdp_attr *attr)$/;"	f
sdp_attr_ptime	re-0.5.6/src/sdp/str.c	/^const char sdp_attr_ptime[]    = "ptime";     \/**< ptime                *\/$/;"	v
sdp_attr_rtcp	re-0.5.6/src/sdp/str.c	/^const char sdp_attr_rtcp[]     = "rtcp";      \/**< rtcp                 *\/$/;"	v
sdp_attr_rtpmap	re-0.5.6/src/sdp/str.c	/^const char sdp_attr_rtpmap[]   = "rtpmap";    \/**< rtpmap               *\/$/;"	v
sdp_bandwidth	re-0.5.6/include/re_sdp.h	/^enum sdp_bandwidth {$/;"	g
sdp_bandwidth_name	re-0.5.6/src/sdp/str.c	/^const char *sdp_bandwidth_name(enum sdp_bandwidth type)$/;"	f
sdp_decode	baresip/modules/gzrtp/stream.cpp	/^int Stream::sdp_decode(const struct sdp_media *sdpm)$/;"	f	class:Stream
sdp_decode	re-0.5.6/src/sdp/msg.c	/^int sdp_decode(struct sdp_session *sess, struct mbuf *mb, bool offer)$/;"	f
sdp_decode_multipart	baresip/src/sdp.c	/^int sdp_decode_multipart(const struct pl *ctype_prm, struct mbuf *mb)$/;"	f
sdp_dir	re-0.5.6/include/re_sdp.h	/^enum sdp_dir {$/;"	g
sdp_dir_name	re-0.5.6/src/sdp/str.c	/^const char *sdp_dir_name(enum sdp_dir dir)$/;"	f
sdp_enc	baresip/modules/libsrtp/srtp.c	/^static int sdp_enc(struct menc_st *st, struct sdp_media *m,$/;"	f	file:
sdp_enc	baresip/modules/srtp/srtp.c	/^static int sdp_enc(struct menc_st *st, struct sdp_media *m,$/;"	f	file:
sdp_encode	baresip/modules/gzrtp/stream.cpp	/^int Stream::sdp_encode(struct sdp_media *sdpm)$/;"	f	class:Stream
sdp_encode	re-0.5.6/src/sdp/msg.c	/^int sdp_encode(struct mbuf **mbp, struct sdp_session *sess, bool offer)$/;"	f
sdp_extmap	re-0.5.6/include/re_sdp.h	/^struct sdp_extmap {$/;"	s
sdp_extmap_decode	re-0.5.6/src/sdp/util.c	/^int sdp_extmap_decode(struct sdp_extmap *ext, const char *val)$/;"	f
sdp_fingerprint_decode	baresip/src/sdp.c	/^int sdp_fingerprint_decode(const char *attr, struct pl *hash,$/;"	f
sdp_fmtp_cmp_h	re-0.5.6/include/re_sdp.h	/^typedef bool(sdp_fmtp_cmp_h)(const char *params1, const char *params2,$/;"	t
sdp_fmtp_enc_h	re-0.5.6/include/re_sdp.h	/^typedef int(sdp_fmtp_enc_h)(struct mbuf *mb, const struct sdp_format *fmt,$/;"	t
sdp_format	re-0.5.6/include/re_sdp.h	/^struct sdp_format {$/;"	s
sdp_format_add	re-0.5.6/src/sdp/format.c	/^int sdp_format_add(struct sdp_format **fmtp, struct sdp_media *m,$/;"	f
sdp_format_cmp	re-0.5.6/src/sdp/format.c	/^bool sdp_format_cmp(const struct sdp_format *fmt1,$/;"	f
sdp_format_debug	re-0.5.6/src/sdp/format.c	/^int sdp_format_debug(struct re_printf *pf, const struct sdp_format *fmt)$/;"	f
sdp_format_find	re-0.5.6/src/sdp/format.c	/^struct sdp_format *sdp_format_find(const struct list *lst, const struct pl *id)$/;"	f
sdp_format_h	re-0.5.6/include/re_sdp.h	/^typedef bool(sdp_format_h)(struct sdp_format *fmt, void *arg);$/;"	t
sdp_format_radd	re-0.5.6/src/sdp/format.c	/^int sdp_format_radd(struct sdp_media *m, const struct pl *id)$/;"	f
sdp_format_set_params	re-0.5.6/src/sdp/format.c	/^int sdp_format_set_params(struct sdp_format *fmt, const char *params, ...)$/;"	f
sdp_media	re-0.5.6/src/sdp/sdp.h	/^struct sdp_media {$/;"	s
sdp_media_add	re-0.5.6/src/sdp/media.c	/^int sdp_media_add(struct sdp_media **mp, struct sdp_session *sess,$/;"	f
sdp_media_align_formats	re-0.5.6/src/sdp/media.c	/^void sdp_media_align_formats(struct sdp_media *m, bool offer)$/;"	f
sdp_media_audio	re-0.5.6/src/sdp/str.c	/^const char sdp_media_audio[]   = "audio";     \/**< Media type 'audio'   *\/$/;"	v
sdp_media_debug	re-0.5.6/src/sdp/media.c	/^int sdp_media_debug(struct re_printf *pf, const struct sdp_media *m)$/;"	f
sdp_media_del_lattr	re-0.5.6/src/sdp/media.c	/^void sdp_media_del_lattr(struct sdp_media *m, const char *name)$/;"	f
sdp_media_dir	re-0.5.6/src/sdp/media.c	/^enum sdp_dir sdp_media_dir(const struct sdp_media *m)$/;"	f
sdp_media_enc_h	re-0.5.6/include/re_sdp.h	/^typedef int(sdp_media_enc_h)(struct mbuf *mb, bool offer, void *arg);$/;"	t
sdp_media_find	re-0.5.6/src/sdp/media.c	/^struct sdp_media *sdp_media_find(const struct sdp_session *sess,$/;"	f
sdp_media_find_unused_pt	baresip/src/sdp.c	/^int sdp_media_find_unused_pt(const struct sdp_media *m)$/;"	f
sdp_media_format	re-0.5.6/src/sdp/media.c	/^struct sdp_format *sdp_media_format(const struct sdp_media *m,$/;"	f
sdp_media_format_apply	re-0.5.6/src/sdp/media.c	/^struct sdp_format *sdp_media_format_apply(const struct sdp_media *m,$/;"	f
sdp_media_format_cycle	baresip/src/sdp.c	/^const struct sdp_format *sdp_media_format_cycle(struct sdp_media *m)$/;"	f
sdp_media_format_lst	re-0.5.6/src/sdp/media.c	/^const struct list *sdp_media_format_lst(const struct sdp_media *m, bool local)$/;"	f
sdp_media_has_media	baresip/src/sdp.c	/^bool sdp_media_has_media(const struct sdp_media *m)$/;"	f
sdp_media_laddr	re-0.5.6/src/sdp/media.c	/^const struct sa *sdp_media_laddr(const struct sdp_media *m)$/;"	f
sdp_media_ldir	re-0.5.6/src/sdp/media.c	/^enum sdp_dir sdp_media_ldir(const struct sdp_media *m)$/;"	f
sdp_media_lformat	re-0.5.6/src/sdp/media.c	/^const struct sdp_format *sdp_media_lformat(const struct sdp_media *m, int pt)$/;"	f
sdp_media_name	re-0.5.6/src/sdp/media.c	/^const char *sdp_media_name(const struct sdp_media *m)$/;"	f
sdp_media_proto	re-0.5.6/src/sdp/media.c	/^const char *sdp_media_proto(const struct sdp_media *m)$/;"	f
sdp_media_proto_cmp	re-0.5.6/src/sdp/media.c	/^bool sdp_media_proto_cmp(struct sdp_media *m, const struct pl *proto,$/;"	f
sdp_media_radd	re-0.5.6/src/sdp/media.c	/^int sdp_media_radd(struct sdp_media **mp, struct sdp_session *sess,$/;"	f
sdp_media_raddr	re-0.5.6/src/sdp/media.c	/^const struct sa *sdp_media_raddr(const struct sdp_media *m)$/;"	f
sdp_media_raddr_rtcp	re-0.5.6/src/sdp/media.c	/^void sdp_media_raddr_rtcp(const struct sdp_media *m, struct sa *raddr)$/;"	f
sdp_media_rattr	re-0.5.6/src/sdp/media.c	/^const char *sdp_media_rattr(const struct sdp_media *m, const char *name)$/;"	f
sdp_media_rattr_apply	re-0.5.6/src/sdp/media.c	/^const char *sdp_media_rattr_apply(const struct sdp_media *m, const char *name,$/;"	f
sdp_media_rattr_u32	baresip/src/sdp.c	/^uint32_t sdp_media_rattr_u32(const struct sdp_media *m, const char *name)$/;"	f
sdp_media_rbandwidth	re-0.5.6/src/sdp/media.c	/^int32_t sdp_media_rbandwidth(const struct sdp_media *m,$/;"	f
sdp_media_rdir	re-0.5.6/src/sdp/media.c	/^enum sdp_dir sdp_media_rdir(const struct sdp_media *m)$/;"	f
sdp_media_rformat	re-0.5.6/src/sdp/media.c	/^const struct sdp_format *sdp_media_rformat(const struct sdp_media *m,$/;"	f
sdp_media_rport	re-0.5.6/src/sdp/media.c	/^uint16_t sdp_media_rport(const struct sdp_media *m)$/;"	f
sdp_media_rreset	re-0.5.6/src/sdp/media.c	/^void sdp_media_rreset(struct sdp_media *m)$/;"	f
sdp_media_session_rattr	re-0.5.6/src/sdp/media.c	/^const char *sdp_media_session_rattr(const struct sdp_media *m,$/;"	f
sdp_media_set_alt_protos	re-0.5.6/src/sdp/media.c	/^int sdp_media_set_alt_protos(struct sdp_media *m, unsigned protoc, ...)$/;"	f
sdp_media_set_disabled	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_disabled(struct sdp_media *m, bool disabled)$/;"	f
sdp_media_set_encode_handler	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_encode_handler(struct sdp_media *m, sdp_media_enc_h *ench,$/;"	f
sdp_media_set_fmt_ignore	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_fmt_ignore(struct sdp_media *m, bool fmt_ignore)$/;"	f
sdp_media_set_laddr	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_laddr(struct sdp_media *m, const struct sa *laddr)$/;"	f
sdp_media_set_laddr_rtcp	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_laddr_rtcp(struct sdp_media *m, const struct sa *laddr)$/;"	f
sdp_media_set_lattr	re-0.5.6/src/sdp/media.c	/^int sdp_media_set_lattr(struct sdp_media *m, bool replace,$/;"	f
sdp_media_set_lbandwidth	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_lbandwidth(struct sdp_media *m, enum sdp_bandwidth type,$/;"	f
sdp_media_set_ldir	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_ldir(struct sdp_media *m, enum sdp_dir dir)$/;"	f
sdp_media_set_lport	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_lport(struct sdp_media *m, uint16_t port)$/;"	f
sdp_media_set_lport_rtcp	re-0.5.6/src/sdp/media.c	/^void sdp_media_set_lport_rtcp(struct sdp_media *m, uint16_t port)$/;"	f
sdp_media_text	re-0.5.6/src/sdp/str.c	/^const char sdp_media_text[]    = "text";      \/**< Media type 'text'    *\/$/;"	v
sdp_media_video	re-0.5.6/src/sdp/str.c	/^const char sdp_media_video[]   = "video";     \/**< Media type 'video'   *\/$/;"	v
sdp_proto	baresip/include/baresip.h	/^	const char *sdp_proto;$/;"	m	struct:menc
sdp_proto_rtpavp	re-0.5.6/src/sdp/str.c	/^const char sdp_proto_rtpavp[]  = "RTP\/AVP";   \/**< RTP Profile          *\/$/;"	v
sdp_proto_rtpsavp	re-0.5.6/src/sdp/str.c	/^const char sdp_proto_rtpsavp[] = "RTP\/SAVP";  \/**< Secure RTP Profile   *\/$/;"	v
sdp_rattr	baresip/src/sdp.c	/^const char *sdp_rattr(const struct sdp_session *s, const struct sdp_media *m,$/;"	f
sdp_session	re-0.5.6/src/sdp/sdp.h	/^struct sdp_session {$/;"	s
sdp_session_alloc	re-0.5.6/src/sdp/session.c	/^int sdp_session_alloc(struct sdp_session **sessp, const struct sa *laddr)$/;"	f
sdp_session_debug	re-0.5.6/src/sdp/session.c	/^int sdp_session_debug(struct re_printf *pf, const struct sdp_session *sess)$/;"	f
sdp_session_del_lattr	re-0.5.6/src/sdp/session.c	/^void sdp_session_del_lattr(struct sdp_session *sess, const char *name)$/;"	f
sdp_session_lbandwidth	re-0.5.6/src/sdp/session.c	/^int32_t sdp_session_lbandwidth(const struct sdp_session *sess,$/;"	f
sdp_session_medial	re-0.5.6/src/sdp/session.c	/^const struct list *sdp_session_medial(const struct sdp_session *sess,$/;"	f
sdp_session_rattr	re-0.5.6/src/sdp/session.c	/^const char *sdp_session_rattr(const struct sdp_session *sess, const char *name)$/;"	f
sdp_session_rattr_apply	re-0.5.6/src/sdp/session.c	/^const char *sdp_session_rattr_apply(const struct sdp_session *sess,$/;"	f
sdp_session_rbandwidth	re-0.5.6/src/sdp/session.c	/^int32_t sdp_session_rbandwidth(const struct sdp_session *sess,$/;"	f
sdp_session_rreset	re-0.5.6/src/sdp/session.c	/^void sdp_session_rreset(struct sdp_session *sess)$/;"	f
sdp_session_set_laddr	re-0.5.6/src/sdp/session.c	/^void sdp_session_set_laddr(struct sdp_session *sess, const struct sa *laddr)$/;"	f
sdp_session_set_lattr	re-0.5.6/src/sdp/session.c	/^int sdp_session_set_lattr(struct sdp_session *sess, bool replace,$/;"	f
sdp_session_set_lbandwidth	re-0.5.6/src/sdp/session.c	/^void sdp_session_set_lbandwidth(struct sdp_session *sess,$/;"	f
sdpm	baresip/modules/dtls_srtp/dtls_srtp.c	/^	struct sdp_media *sdpm;$/;"	m	struct:dtls_srtp	typeref:struct:dtls_srtp::sdp_media	file:
sdpm	baresip/modules/ice/ice.c	/^	struct sdp_media *sdpm;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sdp_media	file:
sdpm	baresip/modules/libsrtp/srtp.c	/^	struct sdp_media *sdpm;$/;"	m	struct:menc_st	typeref:struct:menc_st::sdp_media	file:
sdpm	baresip/modules/natpmp/natpmp.c	/^	struct sdp_media *sdpm;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sdp_media	file:
sdpm	baresip/modules/pcp/pcp.c	/^	struct sdp_media *sdpm;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sdp_media	file:
sdpm	baresip/modules/srtp/srtp.c	/^	struct sdp_media *sdpm;$/;"	m	struct:menc_st	typeref:struct:menc_st::sdp_media	file:
sdpm	baresip/modules/stun/stun.c	/^	struct sdp_media *sdpm;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sdp_media	file:
sdpm	baresip/modules/turn/turn.c	/^	struct sdp_media *sdpm;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::sdp_media	file:
sdpm	baresip/src/bfcp.c	/^	struct sdp_media *sdpm;$/;"	m	struct:bfcp	typeref:struct:bfcp::sdp_media	file:
sdprattr_contains	baresip/src/video.c	/^static bool sdprattr_contains(struct stream *s, const char *name,$/;"	f	file:
secret	baresip/test/sip/sipsrv.h	/^	uint64_t secret;$/;"	m	struct:sip_server
secret	re-0.5.6/src/http/auth.c	/^static uint64_t secret;$/;"	v	file:
secret_set	re-0.5.6/src/http/auth.c	/^static bool secret_set;$/;"	v	file:
secure	re-0.5.6/src/http/client.c	/^	bool secure;$/;"	m	struct:http_req	file:
selfview	baresip/modules/selfview/selfview.c	/^	struct selfview *selfview;  \/**< Ref. to shared state  *\/$/;"	m	struct:selfview_dec	typeref:struct:selfview_dec::selfview	file:
selfview	baresip/modules/selfview/selfview.c	/^	struct selfview *selfview;  \/**< Ref. to shared state  *\/$/;"	m	struct:selfview_enc	typeref:struct:selfview_enc::selfview	file:
selfview	baresip/modules/selfview/selfview.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(selfview) = {$/;"	v	typeref:struct:DECL_EXPORTS
selfview	baresip/modules/selfview/selfview.c	/^struct selfview {$/;"	s	file:
selfview	rem-0.5.2/src/vidmix/vidmix.c	/^	bool selfview;$/;"	m	struct:vidmix_source	file:
selfview_alloc	baresip/modules/selfview/selfview.c	/^static int selfview_alloc(struct selfview **selfviewp, void **ctx)$/;"	f	file:
selfview_dec	baresip/modules/selfview/selfview.c	/^struct selfview_dec {$/;"	s	file:
selfview_enc	baresip/modules/selfview/selfview.c	/^struct selfview_enc {$/;"	s	file:
selfview_pip	baresip/modules/selfview/selfview.c	/^static struct vidfilt selfview_pip = {$/;"	v	typeref:struct:vidfilt	file:
selfview_size	baresip/modules/selfview/selfview.c	/^static struct vidsz selfview_size = {0, 0};$/;"	v	typeref:struct:vidsz	file:
selfview_win	baresip/modules/selfview/selfview.c	/^static struct vidfilt selfview_win = {$/;"	v	typeref:struct:vidfilt	file:
sendDataZRTP	baresip/modules/gzrtp/stream.cpp	/^int32_t Stream::sendDataZRTP(const uint8_t* data, int32_t length)$/;"	f	class:Stream
sendInfo	baresip/modules/gzrtp/stream.cpp	/^void Stream::sendInfo(GnuZrtpCodes::MessageSeverity severity, int32_t subCode)$/;"	f	class:Stream
send_binding_request	baresip/modules/ice/ice.c	/^static int send_binding_request(struct mnat_media *m, struct comp *comp)$/;"	f	file:
send_bye_packet	re-0.5.6/src/rtp/sess.c	/^static int send_bye_packet(struct rtcp_sess *sess)$/;"	f	file:
send_handler	baresip/modules/dtls_srtp/srtp.c	/^static bool send_handler(int *err, struct sa *dst, struct mbuf *mb, void *arg)$/;"	f	file:
send_handler	baresip/modules/libsrtp/srtp.c	/^static bool send_handler(int *err, struct sa *dst, struct mbuf *mb, void *arg)$/;"	f	file:
send_handler	baresip/modules/srtp/srtp.c	/^static bool send_handler(int *err, struct sa *dst, struct mbuf *mb, void *arg)$/;"	f	file:
send_handler	re-0.5.6/src/sipevent/notify.c	/^static int send_handler(enum sip_transp tp, const struct sa *src,$/;"	f	file:
send_handler	re-0.5.6/src/sipevent/subscribe.c	/^static int send_handler(enum sip_transp tp, const struct sa *src,$/;"	f	file:
send_handler	re-0.5.6/src/sipreg/reg.c	/^static int send_handler(enum sip_transp tp, const struct sa *src,$/;"	f	file:
send_handler	re-0.5.6/src/sipsess/ack.c	/^static int send_handler(enum sip_transp tp, const struct sa *src,$/;"	f	file:
send_handler	re-0.5.6/src/sipsess/connect.c	/^static int send_handler(enum sip_transp tp, const struct sa *src,$/;"	f	file:
send_handler	re-0.5.6/src/sipsess/modify.c	/^static int send_handler(enum sip_transp tp, const struct sa *src,$/;"	f	file:
send_handler	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static bool send_handler(int *err, struct mbuf *mb, void *arg)$/;"	f	file:
send_invite	baresip/src/call.c	/^static int send_invite(struct call *call)$/;"	f	file:
send_keepalive	baresip/src/rtpkeep.c	/^static int send_keepalive(struct rtpkeep *rk)$/;"	f	file:
send_packet	baresip/modules/daala/encode.c	/^static int send_packet(struct videnc_state *ves, bool marker,$/;"	f	file:
send_packet	baresip/modules/vp9/encode.c	/^static int send_packet(struct videnc_state *ves, bool marker,$/;"	f	file:
send_reinvite	baresip/modules/ice/ice.c	/^	bool send_reinvite;$/;"	m	struct:mnat_sess	file:
send_resp_handler	baresip/modules/contact/contact.c	/^static void send_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
send_resp_handler	baresip/test/message.c	/^static void send_resp_handler(int err, const struct sip_msg *msg, void *arg)$/;"	f	file:
send_rtcp_report	re-0.5.6/src/rtp/sess.c	/^static int send_rtcp_report(struct rtcp_sess *sess)$/;"	f	file:
send_tcp	re-0.5.6/src/dns/client.c	/^static int send_tcp(struct dns_query *q)$/;"	f	file:
send_udp	re-0.5.6/src/dns/client.c	/^static int send_udp(struct dns_query *q)$/;"	f	file:
sender_apply_handler	re-0.5.6/src/rtp/sess.c	/^static bool sender_apply_handler(struct le *le, void *arg)$/;"	f	file:
senderc	re-0.5.6/src/rtp/sess.c	/^	uint32_t senderc;           \/**< Number of senders                   *\/$/;"	m	struct:rtcp_sess	file:
sendh	re-0.5.6/src/sip/request.c	/^	sip_send_h *sendh;$/;"	m	struct:sip_request	file:
sendh	re-0.5.6/src/tcp/tcp.c	/^	tcp_helper_send_h *sendh;$/;"	m	struct:tcp_helper	file:
sendh	re-0.5.6/src/tcp/tcp.c	/^	tcp_send_h *sendh;    \/**< Data send handler                 *\/$/;"	m	struct:tcp_conn	file:
sendh	re-0.5.6/src/udp/udp.c	/^	udp_helper_send_h *sendh;$/;"	m	struct:udp_helper	file:
sendind_tid	re-0.5.6/src/turn/turnc.c	/^static const uint8_t sendind_tid[STUN_TID_SIZE];$/;"	v	file:
sendq	baresip/src/video.c	/^	struct list sendq;                 \/**< Tx-Queue (struct vidqent) *\/$/;"	m	struct:vtx	typeref:struct:vtx::list	file:
sendq	re-0.5.6/src/tcp/tcp.c	/^	struct list sendq;    \/**< Sending queue                     *\/$/;"	m	struct:tcp_conn	typeref:struct:tcp_conn::list	file:
sent	re-0.5.6/include/re_rtp.h	/^		uint32_t sent;  \/**< Rx RTP Packets                  *\/$/;"	m	struct:rtcp_stats::__anon191
sent	re-0.5.6/include/re_rtp.h	/^		uint32_t sent;  \/**< Tx RTP Packets                  *\/$/;"	m	struct:rtcp_stats::__anon190
sent_offer	re-0.5.6/src/sipsess/sipsess.h	/^	bool sent_offer;$/;"	m	struct:sipsess
sentby	re-0.5.6/include/re_sip.h	/^	struct pl sentby;$/;"	m	struct:sip_via	typeref:struct:sip_via::pl
seq	baresip/modules/av1/decode.c	/^	uint16_t seq;$/;"	m	struct:viddec_state	file:
seq	baresip/modules/vidloop/vidloop.c	/^	uint16_t seq;$/;"	m	struct:video_loop	file:
seq	baresip/modules/vp8/decode.c	/^	uint16_t seq;$/;"	m	struct:viddec_state	file:
seq	baresip/modules/vp9/decode.c	/^	uint16_t seq;$/;"	m	struct:viddec_state	file:
seq	re-0.5.6/include/re_rtp.h	/^	uint16_t seq;       \/**< Sequence number        *\/$/;"	m	struct:rtp_header
seq	re-0.5.6/src/rtp/rtp.c	/^		uint16_t seq;   \/**< Sequence number       *\/$/;"	m	struct:rtp_sock::__anon143	file:
seq	re-0.5.6/src/sipsess/reply.c	/^	uint32_t seq;$/;"	m	struct:sipsess_reply	file:
seq_diff	baresip/modules/av1/decode.c	/^static inline int16_t seq_diff(uint16_t x, uint16_t y)$/;"	f	file:
seq_diff	baresip/modules/avcodec/decode.c	/^static inline int16_t seq_diff(uint16_t x, uint16_t y)$/;"	f	file:
seq_diff	baresip/modules/h265/decode.c	/^static inline int16_t seq_diff(uint16_t x, uint16_t y)$/;"	f	file:
seq_diff	baresip/modules/vp8/decode.c	/^static inline int16_t seq_diff(uint16_t x, uint16_t y)$/;"	f	file:
seq_diff	baresip/modules/vp9/decode.c	/^static inline int16_t seq_diff(uint16_t x, uint16_t y)$/;"	f	file:
seq_diff	re-0.5.6/src/srtp/srtp.c	/^static inline int seq_diff(uint16_t x, uint16_t y)$/;"	f	file:
seq_get	re-0.5.6/src/jbuf/jbuf.c	/^	uint16_t seq_get;      \/**< Timestamp of last played frame *\/$/;"	m	struct:jbuf	file:
seq_less	re-0.5.6/src/jbuf/jbuf.c	/^static inline bool seq_less(uint16_t x, uint16_t y)$/;"	f	file:
seq_put	re-0.5.6/src/jbuf/jbuf.c	/^	uint16_t seq_put;    \/**< Sequence number for last jbuf_put()       *\/$/;"	m	struct:jbuf	file:
serial	re-0.5.6/include/re_dns.h	/^			uint32_t serial;$/;"	m	struct:dnsrr::__anon154::__anon158
services	re-0.5.6/include/re_dns.h	/^			char *services;$/;"	m	struct:dnsrr::__anon154::__anon163
sess	baresip/modules/audiounit/player.c	/^	struct audiosess_st *sess;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::audiosess_st	file:
sess	baresip/modules/audiounit/recorder.c	/^	struct audiosess_st *sess;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::audiosess_st	file:
sess	baresip/modules/dtls_srtp/dtls_srtp.c	/^	const struct menc_sess *sess;$/;"	m	struct:dtls_srtp	typeref:struct:dtls_srtp::menc_sess	file:
sess	baresip/modules/ice/ice.c	/^	struct mnat_sess *sess;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::mnat_sess	file:
sess	baresip/modules/natpmp/natpmp.c	/^	struct mnat_sess *sess;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::mnat_sess	file:
sess	baresip/modules/pcp/pcp.c	/^	struct mnat_sess *sess;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::mnat_sess	file:
sess	baresip/modules/stun/stun.c	/^	struct mnat_sess *sess;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::mnat_sess	file:
sess	baresip/modules/turn/turn.c	/^	struct mnat_sess *sess;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::mnat_sess	file:
sess	baresip/modules/zrtp/zrtp.c	/^	struct menc_sess *sess;$/;"	m	struct:menc_media	typeref:struct:menc_media::menc_sess	file:
sess	baresip/src/call.c	/^	struct sipsess *sess;     \/**< SIP Session                          *\/$/;"	m	struct:call	typeref:struct:call::sipsess	file:
sess	re-0.5.6/src/sipsess/reply.c	/^	struct sipsess *sess;$/;"	m	struct:sipsess_reply	typeref:struct:sipsess_reply::sipsess	file:
sess	re-0.5.6/src/sipsess/sipsess.h	/^	struct sipsess *sess;$/;"	m	struct:sipsess_request	typeref:struct:sipsess_request::sipsess
sess_destructor	baresip/modules/audiounit/sess.c	/^static void sess_destructor(void *arg)$/;"	f	file:
sess_destructor	baresip/modules/dtls_srtp/dtls_srtp.c	/^static void sess_destructor(void *arg)$/;"	f	file:
sess_destructor	re-0.5.6/src/rtp/sess.c	/^static void sess_destructor(void *data)$/;"	f	file:
sess_prms	baresip/modules/libsrtp/sdes.h	/^	struct pl sess_prms; \/* optional *\/$/;"	m	struct:crypto	typeref:struct:crypto::pl
sess_prms	baresip/modules/srtp/sdes.h	/^	struct pl sess_prms; \/* optional *\/$/;"	m	struct:crypto	typeref:struct:crypto::pl
sessh	baresip/include/baresip.h	/^	menc_sess_h *sessh;$/;"	m	struct:menc
sessh	baresip/src/core.h	/^	mnat_sess_h *sessh;$/;"	m	struct:mnat
session	baresip/modules/b2bua/b2bua.c	/^struct session {$/;"	s	file:
session	baresip/modules/echo/echo.c	/^struct session {$/;"	s	file:
session	baresip/modules/gzrtp/gzrtp.cpp	/^	Session *session;$/;"	m	struct:menc_sess	file:
session_alloc	baresip/modules/dtls_srtp/dtls_srtp.c	/^static int session_alloc(struct menc_sess **sessp,$/;"	f	file:
session_alloc	baresip/modules/gzrtp/gzrtp.cpp	/^static int session_alloc(struct menc_sess **sessp, struct sdp_session *sdp,$/;"	f	file:
session_alloc	baresip/modules/ice/ice.c	/^static int session_alloc(struct mnat_sess **sessp, struct dnsc *dnsc,$/;"	f	file:
session_alloc	baresip/modules/natpmp/natpmp.c	/^static int session_alloc(struct mnat_sess **sessp, struct dnsc *dnsc,$/;"	f	file:
session_alloc	baresip/modules/pcp/pcp.c	/^static int session_alloc(struct mnat_sess **sessp, struct dnsc *dnsc,$/;"	f	file:
session_alloc	baresip/modules/stun/stun.c	/^static int session_alloc(struct mnat_sess **sessp, struct dnsc *dnsc,$/;"	f	file:
session_alloc	baresip/modules/turn/turn.c	/^static int session_alloc(struct mnat_sess **sessp, struct dnsc *dnsc,$/;"	f	file:
session_alloc	baresip/modules/zrtp/zrtp.c	/^static int session_alloc(struct menc_sess **sessp, struct sdp_session *sdp,$/;"	f	file:
session_destructor	baresip/modules/gzrtp/gzrtp.cpp	/^static void session_destructor(void *arg)$/;"	f	file:
session_destructor	baresip/modules/ice/ice.c	/^static void session_destructor(void *arg)$/;"	f	file:
session_destructor	baresip/modules/natpmp/natpmp.c	/^static void session_destructor(void *arg)$/;"	f	file:
session_destructor	baresip/modules/pcp/pcp.c	/^static void session_destructor(void *arg)$/;"	f	file:
session_destructor	baresip/modules/stun/stun.c	/^static void session_destructor(void *arg)$/;"	f	file:
session_destructor	baresip/modules/turn/turn.c	/^static void session_destructor(void *arg)$/;"	f	file:
session_destructor	baresip/modules/zrtp/zrtp.c	/^static void session_destructor(void *arg)$/;"	f	file:
sessionl	baresip/modules/b2bua/b2bua.c	/^static struct list sessionl;$/;"	v	typeref:struct:list	file:
sessionl	baresip/modules/echo/echo.c	/^static struct list sessionl;$/;"	v	typeref:struct:list	file:
sessl	baresip/modules/audiounit/sess.c	/^	struct list sessl;$/;"	m	struct:audiosess	typeref:struct:audiosess::list	file:
sessl	baresip/modules/pcp/pcp.c	/^static struct list sessl;$/;"	v	typeref:struct:list	file:
set_caps	baresip/modules/gst/gst.c	/^static void set_caps(struct ausrc_st *st)$/;"	f	file:
set_caps	baresip/modules/gst1/gst.c	/^static void set_caps(struct ausrc_st *st)$/;"	f	file:
set_current_call	baresip/modules/menu/menu.c	/^static int set_current_call(struct re_printf *pf, void *arg)$/;"	f	file:
set_decoder_mode	baresip/modules/ilbc/ilbc.c	/^static void set_decoder_mode(struct audec_state *st, int mode)$/;"	f	file:
set_ebuacip_params	baresip/src/audio.c	/^static int set_ebuacip_params(struct audio *au, uint32_t ptime)$/;"	f	file:
set_encoder_format	baresip/src/video.c	/^static int set_encoder_format(struct vtx *vtx, const char *src,$/;"	f	file:
set_encoder_mode	baresip/modules/ilbc/ilbc.c	/^static void set_encoder_mode(struct auenc_state *st, int mode)$/;"	f	file:
set_epoll_fds	re-0.5.6/src/main/main.c	/^static int set_epoll_fds(struct re *re, int fd, int flags)$/;"	f	file:
set_fragment	baresip/modules/oss/oss.c	/^static int set_fragment(int fd, uint32_t sampc)$/;"	f	file:
set_kqueue_fds	re-0.5.6/src/main/main.c	/^static int set_kqueue_fds(struct re *re, int fd, int flags)$/;"	f	file:
set_media_attributes	baresip/modules/ice/ice.c	/^static int set_media_attributes(struct mnat_media *m)$/;"	f	file:
set_params	baresip/modules/h265/encode.c	/^static int set_params(struct videnc_state *st, unsigned fps, unsigned bitrate)$/;"	f	file:
set_poll_fds	re-0.5.6/src/main/main.c	/^static int set_poll_fds(struct re *re, int fd, int flags)$/;"	f	file:
set_realtime	baresip/src/realtime.c	/^static int set_realtime(int period, int computation, int constraint)$/;"	f	file:
set_state	baresip/src/call.c	/^static void set_state(struct call *call, enum state st)$/;"	f	file:
set_status	baresip/modules/gtk/transfer_dialog.c	/^static void set_status(struct transfer_dialog *td, const char *status)$/;"	f	file:
set_vidisp	baresip/src/video.c	/^static int set_vidisp(struct vrx *vrx)$/;"	f	file:
setup_layout	baresip/modules/opengles/opengles.c	/^static void setup_layout(struct vidisp_st *st, const struct vidsz *screensz,$/;"	f	file:
setup_srtp	baresip/modules/libsrtp/srtp.c	/^static int setup_srtp(struct menc_st *st)$/;"	f	file:
severe_msg	baresip/modules/gzrtp/messages.cpp	/^static const char *severe_msg(int32_t subcode)$/;"	f	file:
shm	baresip/modules/x11/x11.c	/^	XShmSegmentInfo shm;$/;"	m	struct:vidisp_st	file:
shm_error	baresip/modules/x11/x11.c	/^	int shm_error;$/;"	m	struct:__anon42	file:
shutdown	baresip/modules/mwi/mwi.c	/^	bool shutdown;$/;"	m	struct:mwi	file:
shutdown	baresip/modules/presence/subscriber.c	/^	bool shutdown;$/;"	m	struct:presence	file:
shutdown	re-0.5.6/src/websock/websock.c	/^	bool shutdown;$/;"	m	struct:websock	file:
shuth	re-0.5.6/src/websock/websock.c	/^	websock_shutdown_h *shuth;$/;"	m	struct:websock	file:
sidx	re-0.5.6/src/dns/rrlist.c	/^static uint32_t sidx(const struct dnsrr *rr, uint32_t key)$/;"	f	file:
sig	re-0.5.6/src/main/main.c	/^	int sig;                     \/**< Last caught signal                *\/$/;"	m	struct:re	file:
sig_hash_decode	baresip/modules/zrtp/zrtp.c	/^static void sig_hash_decode(struct zrtp_stream_t *stream,$/;"	f	file:
sig_hash_encode	baresip/modules/zrtp/zrtp.c	/^static int sig_hash_encode(struct zrtp_stream_t *stream,$/;"	f	file:
signSAS	baresip/modules/gzrtp/stream.cpp	/^void Stream::signSAS(uint8_t* sasHash)$/;"	f	class:Stream
signal_handler	baresip/src/main.c	/^static void signal_handler(int sig)$/;"	f	file:
signal_handler	baresip/test/test.c	/^static void signal_handler(int sig)$/;"	f	file:
signal_handler	re-0.5.6/src/main/main.c	/^static void signal_handler(int sig)$/;"	f	file:
sigpipe_handler	re-0.5.6/src/main/openssl.c	/^static void sigpipe_handler(int x)$/;"	f	file:
silk	baresip/modules/silk/silk.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(silk) = {$/;"	v	typeref:struct:DECL_EXPORTS
silk	baresip/modules/silk/silk.c	/^static struct aucodec silk[] = {$/;"	v	typeref:struct:aucodec	file:
sindex	baresip/modules/avformat/avformat.c	/^	int sindex;$/;"	m	struct:vidsrc_st	file:
sink	baresip/modules/gst/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
sink	baresip/modules/gst1/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
sink	baresip/modules/gst_video/encode.c	/^	GstElement *pipeline, *source, *sink;$/;"	m	struct:videnc_state	file:
sip	baresip/include/baresip.h	/^	struct config_sip sip;$/;"	m	struct:config	typeref:struct:config::config_sip
sip	baresip/src/ua.c	/^	struct sip *sip;               \/**< SIP Stack                       *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::sip	file:
sip	baresip/test/sip/sipsrv.h	/^	struct sip *sip;$/;"	m	struct:sip_server	typeref:struct:sip_server::sip
sip	re-0.5.6/src/sip/ctrans.c	/^	struct sip *sip;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::sip	file:
sip	re-0.5.6/src/sip/request.c	/^	struct sip *sip;$/;"	m	struct:sip_request	typeref:struct:sip_request::sip	file:
sip	re-0.5.6/src/sip/sip.h	/^struct sip {$/;"	s
sip	re-0.5.6/src/sip/strans.c	/^	struct sip *sip;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::sip	file:
sip	re-0.5.6/src/sip/transp.c	/^	struct sip *sip;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::sip	file:
sip	re-0.5.6/src/sip/transp.c	/^	struct sip *sip;$/;"	m	struct:sip_transport	typeref:struct:sip_transport::sip	file:
sip	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip *sip;$/;"	m	struct:sipevent_sock	typeref:struct:sipevent_sock::sip
sip	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip *sip;$/;"	m	struct:sipnot	typeref:struct:sipnot::sip
sip	re-0.5.6/src/sipevent/sipevent.h	/^	struct sip *sip;$/;"	m	struct:sipsub	typeref:struct:sipsub::sip
sip	re-0.5.6/src/sipreg/reg.c	/^	struct sip *sip;$/;"	m	struct:sipreg	typeref:struct:sipreg::sip	file:
sip	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip *sip;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip
sip	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip *sip;$/;"	m	struct:sipsess_sock	typeref:struct:sipsess_sock::sip
sip_addr	re-0.5.6/include/re_sip.h	/^struct sip_addr {$/;"	s
sip_addr_decode	re-0.5.6/src/sip/addr.c	/^int sip_addr_decode(struct sip_addr *addr, const struct pl *pl)$/;"	f
sip_alloc	re-0.5.6/src/sip/sip.c	/^int sip_alloc(struct sip **sipp, struct dnsc *dnsc, uint32_t ctsz,$/;"	f
sip_auth	re-0.5.6/src/sip/auth.c	/^struct sip_auth {$/;"	s	file:
sip_auth_alloc	re-0.5.6/src/sip/auth.c	/^int sip_auth_alloc(struct sip_auth **authp, sip_auth_h *authh,$/;"	f
sip_auth_authenticate	re-0.5.6/src/sip/auth.c	/^int sip_auth_authenticate(struct sip_auth *auth, const struct sip_msg *msg)$/;"	f
sip_auth_encode	re-0.5.6/src/sip/auth.c	/^int sip_auth_encode(struct mbuf *mb, struct sip_auth *auth, const char *met,$/;"	f
sip_auth_h	re-0.5.6/include/re_sip.h	/^typedef int(sip_auth_h)(char **username, char **password, const char *realm,$/;"	t
sip_auth_handler	baresip/src/reg.c	/^static int sip_auth_handler(char **username, char **password,$/;"	f	file:
sip_auth_reset	re-0.5.6/src/sip/auth.c	/^void sip_auth_reset(struct sip_auth *auth)$/;"	f
sip_cancel_h	re-0.5.6/include/re_sip.h	/^typedef void(sip_cancel_h)(void *arg);$/;"	t
sip_close	re-0.5.6/src/sip/sip.c	/^void sip_close(struct sip *sip, bool force)$/;"	f
sip_conn	re-0.5.6/src/sip/transp.c	/^struct sip_conn {$/;"	s	file:
sip_connqent	re-0.5.6/src/sip/transp.c	/^struct sip_connqent {$/;"	s	file:
sip_contact	re-0.5.6/include/re_sip.h	/^struct sip_contact {$/;"	s
sip_contact_print	re-0.5.6/src/sip/contact.c	/^int sip_contact_print(struct re_printf *pf, const struct sip_contact *contact)$/;"	f
sip_contact_set	re-0.5.6/src/sip/contact.c	/^void sip_contact_set(struct sip_contact *contact, const char *uri,$/;"	f
sip_cseq	re-0.5.6/include/re_sip.h	/^struct sip_cseq {$/;"	s
sip_cseq_decode	re-0.5.6/src/sip/cseq.c	/^int sip_cseq_decode(struct sip_cseq *cseq, const struct pl *pl)$/;"	f
sip_ctrans	re-0.5.6/src/sip/ctrans.c	/^struct sip_ctrans {$/;"	s	file:
sip_ctrans_cancel	re-0.5.6/src/sip/ctrans.c	/^int sip_ctrans_cancel(struct sip_ctrans *ct)$/;"	f
sip_ctrans_debug	re-0.5.6/src/sip/ctrans.c	/^int sip_ctrans_debug(struct re_printf *pf, const struct sip *sip)$/;"	f
sip_ctrans_init	re-0.5.6/src/sip/ctrans.c	/^int sip_ctrans_init(struct sip *sip, uint32_t sz)$/;"	f
sip_ctrans_request	re-0.5.6/src/sip/ctrans.c	/^int sip_ctrans_request(struct sip_ctrans **ctp, struct sip *sip,$/;"	f
sip_debug	re-0.5.6/src/sip/sip.c	/^int sip_debug(struct re_printf *pf, const struct sip *sip)$/;"	f
sip_dialog	re-0.5.6/src/sip/dialog.c	/^struct sip_dialog {$/;"	s	file:
sip_dialog_accept	re-0.5.6/src/sip/dialog.c	/^int sip_dialog_accept(struct sip_dialog **dlgp, const struct sip_msg *msg)$/;"	f
sip_dialog_alloc	re-0.5.6/src/sip/dialog.c	/^int sip_dialog_alloc(struct sip_dialog **dlgp,$/;"	f
sip_dialog_callid	re-0.5.6/src/sip/dialog.c	/^const char *sip_dialog_callid(const struct sip_dialog *dlg)$/;"	f
sip_dialog_cmp	re-0.5.6/src/sip/dialog.c	/^bool sip_dialog_cmp(const struct sip_dialog *dlg, const struct sip_msg *msg)$/;"	f
sip_dialog_cmp_half	re-0.5.6/src/sip/dialog.c	/^bool sip_dialog_cmp_half(const struct sip_dialog *dlg,$/;"	f
sip_dialog_create	re-0.5.6/src/sip/dialog.c	/^int sip_dialog_create(struct sip_dialog *dlg, const struct sip_msg *msg)$/;"	f
sip_dialog_encode	re-0.5.6/src/sip/dialog.c	/^int sip_dialog_encode(struct mbuf *mb, struct sip_dialog *dlg, uint32_t cseq,$/;"	f
sip_dialog_established	re-0.5.6/src/sip/dialog.c	/^bool sip_dialog_established(const struct sip_dialog *dlg)$/;"	f
sip_dialog_fork	re-0.5.6/src/sip/dialog.c	/^int sip_dialog_fork(struct sip_dialog **dlgp, struct sip_dialog *odlg,$/;"	f
sip_dialog_hash	re-0.5.6/src/sip/dialog.c	/^uint32_t sip_dialog_hash(const struct sip_dialog *dlg)$/;"	f
sip_dialog_lseq	re-0.5.6/src/sip/dialog.c	/^uint32_t sip_dialog_lseq(const struct sip_dialog *dlg)$/;"	f
sip_dialog_route	re-0.5.6/src/sip/dialog.c	/^const struct uri *sip_dialog_route(const struct sip_dialog *dlg)$/;"	f
sip_dialog_rseq_valid	re-0.5.6/src/sip/dialog.c	/^bool sip_dialog_rseq_valid(struct sip_dialog *dlg, const struct sip_msg *msg)$/;"	f
sip_dialog_update	re-0.5.6/src/sip/dialog.c	/^int sip_dialog_update(struct sip_dialog *dlg, const struct sip_msg *msg)$/;"	f
sip_dialog_uri	re-0.5.6/src/sip/dialog.c	/^const char *sip_dialog_uri(const struct sip_dialog *dlg)$/;"	f
sip_drequestf	re-0.5.6/src/sip/request.c	/^int sip_drequestf(struct sip_request **reqp, struct sip *sip, bool stateful,$/;"	f
sip_exit_h	re-0.5.6/include/re_sip.h	/^typedef void(sip_exit_h)(void *arg);$/;"	t
sip_hdr	re-0.5.6/include/re_sip.h	/^struct sip_hdr {$/;"	s
sip_hdr_h	re-0.5.6/include/re_sip.h	/^typedef bool(sip_hdr_h)(const struct sip_hdr *hdr, const struct sip_msg *msg,$/;"	t
sip_hdrid	re-0.5.6/include/re_sip.h	/^enum sip_hdrid {$/;"	g
sip_keepalive	re-0.5.6/src/sip/sip.h	/^struct sip_keepalive {$/;"	s
sip_keepalive_h	re-0.5.6/include/re_sip.h	/^typedef void(sip_keepalive_h)(int err, void *arg);$/;"	t
sip_keepalive_signal	re-0.5.6/src/sip/keepalive.c	/^void sip_keepalive_signal(struct list *kal, int err)$/;"	f
sip_keepalive_start	re-0.5.6/src/sip/keepalive.c	/^int sip_keepalive_start(struct sip_keepalive **kap, struct sip *sip,$/;"	f
sip_keepalive_tcp	re-0.5.6/src/sip/transp.c	/^int  sip_keepalive_tcp(struct sip_keepalive *ka, struct sip_conn *conn,$/;"	f
sip_keepalive_udp	re-0.5.6/src/sip/keepalive_udp.c	/^int  sip_keepalive_udp(struct sip_keepalive *ka, struct sip *sip,$/;"	f
sip_keepalive_wait	re-0.5.6/src/sip/keepalive.c	/^uint64_t sip_keepalive_wait(uint32_t interval)$/;"	f
sip_listen	re-0.5.6/src/sip/sip.c	/^int sip_listen(struct sip_lsnr **lsnrp, struct sip *sip, bool req,$/;"	f
sip_loopstate	re-0.5.6/include/re_sip.h	/^struct sip_loopstate {$/;"	s
sip_loopstate_reset	re-0.5.6/src/sip/request.c	/^void sip_loopstate_reset(struct sip_loopstate *ls)$/;"	f
sip_lsnr	baresip/src/message.c	/^	struct sip_lsnr *sip_lsnr;$/;"	m	struct:message	typeref:struct:message::sip_lsnr	file:
sip_lsnr	re-0.5.6/src/sip/sip.h	/^struct sip_lsnr {$/;"	s
sip_msg	re-0.5.6/include/re_sip.h	/^struct sip_msg {$/;"	s
sip_msg_decode	re-0.5.6/src/sip/msg.c	/^int sip_msg_decode(struct sip_msg **msgp, struct mbuf *mb)$/;"	f
sip_msg_dump	re-0.5.6/src/sip/msg.c	/^void sip_msg_dump(const struct sip_msg *msg)$/;"	f
sip_msg_h	re-0.5.6/include/re_sip.h	/^typedef bool(sip_msg_h)(const struct sip_msg *msg, void *arg);$/;"	t
sip_msg_handler	baresip/test/sip/sipsrv.c	/^static bool sip_msg_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
sip_msg_hdr	re-0.5.6/src/sip/msg.c	/^const struct sip_hdr *sip_msg_hdr(const struct sip_msg *msg, enum sip_hdrid id)$/;"	f
sip_msg_hdr_apply	re-0.5.6/src/sip/msg.c	/^const struct sip_hdr *sip_msg_hdr_apply(const struct sip_msg *msg,$/;"	f
sip_msg_hdr_count	re-0.5.6/src/sip/msg.c	/^uint32_t sip_msg_hdr_count(const struct sip_msg *msg, enum sip_hdrid id)$/;"	f
sip_msg_hdr_has_value	re-0.5.6/src/sip/msg.c	/^bool sip_msg_hdr_has_value(const struct sip_msg *msg, enum sip_hdrid id,$/;"	f
sip_msg_tcpconn	re-0.5.6/src/sip/transp.c	/^struct tcp_conn *sip_msg_tcpconn(const struct sip_msg *msg)$/;"	f
sip_msg_xhdr	re-0.5.6/src/sip/msg.c	/^const struct sip_hdr *sip_msg_xhdr(const struct sip_msg *msg, const char *name)$/;"	f
sip_msg_xhdr_apply	re-0.5.6/src/sip/msg.c	/^const struct sip_hdr *sip_msg_xhdr_apply(const struct sip_msg *msg,$/;"	f
sip_msg_xhdr_count	re-0.5.6/src/sip/msg.c	/^uint32_t sip_msg_xhdr_count(const struct sip_msg *msg, const char *name)$/;"	f
sip_msg_xhdr_has_value	re-0.5.6/src/sip/msg.c	/^bool sip_msg_xhdr_has_value(const struct sip_msg *msg, const char *name,$/;"	f
sip_params_decode	baresip/src/account.c	/^static int sip_params_decode(struct account *acc, const struct sip_addr *aor)$/;"	f	file:
sip_recv	re-0.5.6/src/sip/transp.c	/^static void sip_recv(struct sip *sip, const struct sip_msg *msg)$/;"	f	file:
sip_reply	re-0.5.6/src/sip/reply.c	/^int sip_reply(struct sip *sip, const struct sip_msg *msg, uint16_t scode,$/;"	f
sip_reply_addr	re-0.5.6/src/sip/reply.c	/^void sip_reply_addr(struct sa *addr, const struct sip_msg *msg, bool rport)$/;"	f
sip_replyf	re-0.5.6/src/sip/reply.c	/^int sip_replyf(struct sip *sip, const struct sip_msg *msg, uint16_t scode,$/;"	f
sip_req	baresip/src/sipreq.c	/^struct sip_req {$/;"	s	file:
sip_req_send	baresip/src/sipreq.c	/^int sip_req_send(struct ua *ua, const char *method, const char *uri,$/;"	f
sip_request	re-0.5.6/src/sip/request.c	/^int sip_request(struct sip_request **reqp, struct sip *sip, bool stateful,$/;"	f
sip_request	re-0.5.6/src/sip/request.c	/^struct sip_request {$/;"	s	file:
sip_request_cancel	re-0.5.6/src/sip/request.c	/^void sip_request_cancel(struct sip_request *req)$/;"	f
sip_request_close	re-0.5.6/src/sip/request.c	/^void sip_request_close(struct sip *sip)$/;"	f
sip_request_loops	re-0.5.6/src/sip/request.c	/^bool sip_request_loops(struct sip_loopstate *ls, uint16_t scode)$/;"	f
sip_requestf	re-0.5.6/src/sip/request.c	/^int sip_requestf(struct sip_request **reqp, struct sip *sip, bool stateful,$/;"	f
sip_resp_h	re-0.5.6/include/re_sip.h	/^typedef void(sip_resp_h)(int err, const struct sip_msg *msg, void *arg);$/;"	t
sip_send	re-0.5.6/src/sip/sip.c	/^int sip_send(struct sip *sip, void *sock, enum sip_transp tp,$/;"	f
sip_send_h	re-0.5.6/include/re_sip.h	/^typedef int(sip_send_h)(enum sip_transp tp, const struct sa *src,$/;"	t
sip_server	baresip/test/sip/sipsrv.h	/^struct sip_server {$/;"	s
sip_server_alloc	baresip/test/sip/sipsrv.c	/^int sip_server_alloc(struct sip_server **srvp)$/;"	f
sip_server_uri	baresip/test/sip/sipsrv.c	/^int sip_server_uri(struct sip_server *srv, char *uri, size_t sz,$/;"	f
sip_strans	re-0.5.6/src/sip/strans.c	/^struct sip_strans {$/;"	s	file:
sip_strans_alloc	re-0.5.6/src/sip/strans.c	/^int sip_strans_alloc(struct sip_strans **stp, struct sip *sip,$/;"	f
sip_strans_debug	re-0.5.6/src/sip/strans.c	/^int sip_strans_debug(struct re_printf *pf, const struct sip *sip)$/;"	f
sip_strans_init	re-0.5.6/src/sip/strans.c	/^int sip_strans_init(struct sip *sip, uint32_t sz)$/;"	f
sip_strans_reply	re-0.5.6/src/sip/strans.c	/^int sip_strans_reply(struct sip_strans **stp, struct sip *sip,$/;"	f
sip_taddr	re-0.5.6/include/re_sip.h	/^struct sip_taddr {$/;"	s
sip_transp	re-0.5.6/include/re_sip.h	/^enum sip_transp {$/;"	g
sip_transp_add	re-0.5.6/src/sip/transp.c	/^int sip_transp_add(struct sip *sip, enum sip_transp tp,$/;"	f
sip_transp_debug	re-0.5.6/src/sip/transp.c	/^int sip_transp_debug(struct re_printf *pf, const struct sip *sip)$/;"	f
sip_transp_flush	re-0.5.6/src/sip/transp.c	/^void sip_transp_flush(struct sip *sip)$/;"	f
sip_transp_h	re-0.5.6/src/sip/sip.h	/^typedef void(sip_transp_h)(int err, void *arg);$/;"	t
sip_transp_init	re-0.5.6/src/sip/transp.c	/^int sip_transp_init(struct sip *sip, uint32_t sz)$/;"	f
sip_transp_isladdr	re-0.5.6/src/sip/transp.c	/^bool sip_transp_isladdr(const struct sip *sip, enum sip_transp tp,$/;"	f
sip_transp_laddr	re-0.5.6/src/sip/transp.c	/^int sip_transp_laddr(struct sip *sip, struct sa *laddr, enum sip_transp tp,$/;"	f
sip_transp_name	re-0.5.6/src/sip/transp.c	/^const char *sip_transp_name(enum sip_transp tp)$/;"	f
sip_transp_param	re-0.5.6/src/sip/transp.c	/^const char *sip_transp_param(enum sip_transp tp)$/;"	f
sip_transp_port	re-0.5.6/src/sip/transp.c	/^uint16_t sip_transp_port(enum sip_transp tp, uint16_t port)$/;"	f
sip_transp_reliable	re-0.5.6/src/sip/transp.c	/^bool sip_transp_reliable(enum sip_transp tp)$/;"	f
sip_transp_send	re-0.5.6/src/sip/transp.c	/^int sip_transp_send(struct sip_connqent **qentp, struct sip *sip, void *sock,$/;"	f
sip_transp_srvid	re-0.5.6/src/sip/transp.c	/^const char *sip_transp_srvid(enum sip_transp tp)$/;"	f
sip_transp_supported	re-0.5.6/src/sip/transp.c	/^bool sip_transp_supported(struct sip *sip, enum sip_transp tp, int af)$/;"	f
sip_transport	re-0.5.6/src/sip/transp.c	/^struct sip_transport {$/;"	s	file:
sip_treply	re-0.5.6/src/sip/reply.c	/^int sip_treply(struct sip_strans **stp, struct sip *sip,$/;"	f
sip_treplyf	re-0.5.6/src/sip/reply.c	/^int sip_treplyf(struct sip_strans **stp, struct mbuf **mbp, struct sip *sip,$/;"	f
sip_udpconn	re-0.5.6/src/sip/keepalive_udp.c	/^struct sip_udpconn {$/;"	s	file:
sip_via	re-0.5.6/include/re_sip.h	/^struct sip_via {$/;"	s
sip_via_decode	re-0.5.6/src/sip/via.c	/^int sip_via_decode(struct sip_via *via, const struct pl *pl)$/;"	f
sipevent_accept	re-0.5.6/src/sipevent/notify.c	/^int sipevent_accept(struct sipnot **notp, struct sipevent_sock *sock,$/;"	f
sipevent_drefer	re-0.5.6/src/sipevent/subscribe.c	/^int sipevent_drefer(struct sipsub **subp, struct sipevent_sock *sock,$/;"	f
sipevent_dsubscribe	re-0.5.6/src/sipevent/subscribe.c	/^int sipevent_dsubscribe(struct sipsub **subp, struct sipevent_sock *sock,$/;"	f
sipevent_event	re-0.5.6/include/re_sipevent.h	/^struct sipevent_event {$/;"	s
sipevent_event_decode	re-0.5.6/src/sipevent/msg.c	/^int sipevent_event_decode(struct sipevent_event *se, const struct pl *pl)$/;"	f
sipevent_fork	re-0.5.6/src/sipevent/subscribe.c	/^int sipevent_fork(struct sipsub **subp, struct sipsub *osub,$/;"	f
sipevent_listen	re-0.5.6/src/sipevent/listen.c	/^int sipevent_listen(struct sipevent_sock **sockp, struct sip *sip,$/;"	f
sipevent_notify	re-0.5.6/src/sipevent/notify.c	/^int sipevent_notify(struct sipnot *not, struct mbuf *mb,$/;"	f
sipevent_notifyf	re-0.5.6/src/sipevent/notify.c	/^int sipevent_notifyf(struct sipnot *not, struct mbuf **mbp,$/;"	f
sipevent_reason	re-0.5.6/include/re_sipevent.h	/^enum sipevent_reason {$/;"	g
sipevent_reason_name	re-0.5.6/src/sipevent/msg.c	/^const char *sipevent_reason_name(enum sipevent_reason reason)$/;"	f
sipevent_refer	re-0.5.6/src/sipevent/subscribe.c	/^int sipevent_refer(struct sipsub **subp, struct sipevent_sock *sock,$/;"	f
sipevent_sock	re-0.5.6/src/sipevent/sipevent.h	/^struct sipevent_sock {$/;"	s
sipevent_subscribe	re-0.5.6/src/sipevent/subscribe.c	/^int sipevent_subscribe(struct sipsub **subp, struct sipevent_sock *sock,$/;"	f
sipevent_subst	re-0.5.6/include/re_sipevent.h	/^enum sipevent_subst {$/;"	g
sipevent_substate	re-0.5.6/include/re_sipevent.h	/^struct sipevent_substate {$/;"	s
sipevent_substate_decode	re-0.5.6/src/sipevent/msg.c	/^int sipevent_substate_decode(struct sipevent_substate *ss, const struct pl *pl)$/;"	f
sipevent_substate_name	re-0.5.6/src/sipevent/msg.c	/^const char *sipevent_substate_name(enum sipevent_subst state)$/;"	f
sipmsg_af	baresip/src/reg.c	/^static int sipmsg_af(const struct sip_msg *msg)$/;"	f	file:
sipnat	baresip/src/core.h	/^	char *sipnat;                \/**< SIP Nat mechanism                  *\/$/;"	m	struct:account
sipnot	re-0.5.6/src/sipevent/sipevent.h	/^struct sipnot {$/;"	s
sipnot_close_h	re-0.5.6/include/re_sipevent.h	/^typedef void (sipnot_close_h)(int err, const struct sip_msg *msg, void *arg);$/;"	t
sipnot_close_handler	baresip/modules/presence/notifier.c	/^static void sipnot_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
sipnot_close_handler	baresip/src/call.c	/^static void sipnot_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
sipnot_find	re-0.5.6/src/sipevent/listen.c	/^static struct sipnot *sipnot_find(struct sipevent_sock *sock,$/;"	f	file:
sipnot_notify	re-0.5.6/src/sipevent/notify.c	/^int sipnot_notify(struct sipnot *not)$/;"	f
sipnot_refresh	re-0.5.6/src/sipevent/notify.c	/^void sipnot_refresh(struct sipnot *not, uint32_t expires)$/;"	f
sipnot_reply	re-0.5.6/src/sipevent/notify.c	/^int sipnot_reply(struct sipnot *not, const struct sip_msg *msg,$/;"	f
sipnot_terminate	re-0.5.6/src/sipevent/notify.c	/^static void sipnot_terminate(struct sipnot *not, int err,$/;"	f	file:
sipreg	baresip/src/reg.c	/^	struct sipreg *sipreg;       \/**< SIP Register client                *\/$/;"	m	struct:reg	typeref:struct:reg::sipreg	file:
sipreg	re-0.5.6/src/sipreg/reg.c	/^struct sipreg {$/;"	s	file:
sipreg_laddr	re-0.5.6/src/sipreg/reg.c	/^const struct sa *sipreg_laddr(const struct sipreg *reg)$/;"	f
sipreg_register	re-0.5.6/src/sipreg/reg.c	/^int sipreg_register(struct sipreg **regp, struct sip *sip, const char *reg_uri,$/;"	f
sipsess	re-0.5.6/src/sipsess/sipsess.h	/^struct sipsess {$/;"	s
sipsess_accept	re-0.5.6/src/sipsess/accept.c	/^int sipsess_accept(struct sipsess **sessp, struct sipsess_sock *sock,$/;"	f
sipsess_ack	re-0.5.6/src/sipsess/ack.c	/^int sipsess_ack(struct sipsess_sock *sock, struct sip_dialog *dlg,$/;"	f
sipsess_ack	re-0.5.6/src/sipsess/ack.c	/^struct sipsess_ack {$/;"	s	file:
sipsess_ack_again	re-0.5.6/src/sipsess/ack.c	/^int sipsess_ack_again(struct sipsess_sock *sock, const struct sip_msg *msg)$/;"	f
sipsess_alloc	re-0.5.6/src/sipsess/sess.c	/^int sipsess_alloc(struct sipsess **sessp, struct sipsess_sock *sock,$/;"	f
sipsess_answer	re-0.5.6/src/sipsess/accept.c	/^int sipsess_answer(struct sipsess *sess, uint16_t scode, const char *reason,$/;"	f
sipsess_answer_h	re-0.5.6/include/re_sipsess.h	/^typedef int  (sipsess_answer_h)(const struct sip_msg *msg, void *arg);$/;"	t
sipsess_answer_handler	baresip/src/call.c	/^static int sipsess_answer_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
sipsess_bye	re-0.5.6/src/sipsess/close.c	/^int sipsess_bye(struct sipsess *sess, bool reset_ls)$/;"	f
sipsess_close_all	re-0.5.6/src/sipsess/listen.c	/^void sipsess_close_all(struct sipsess_sock *sock)$/;"	f
sipsess_close_h	re-0.5.6/include/re_sipsess.h	/^typedef void (sipsess_close_h)(int err, const struct sip_msg *msg, void *arg);$/;"	t
sipsess_close_handler	baresip/src/call.c	/^static void sipsess_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
sipsess_conn_h	re-0.5.6/include/re_sipsess.h	/^typedef void (sipsess_conn_h)(const struct sip_msg *msg, void *arg);$/;"	t
sipsess_conn_handler	baresip/src/ua.c	/^static void sipsess_conn_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
sipsess_connect	re-0.5.6/src/sipsess/connect.c	/^int sipsess_connect(struct sipsess **sessp, struct sipsess_sock *sock,$/;"	f
sipsess_dialog	re-0.5.6/src/sipsess/sess.c	/^struct sip_dialog *sipsess_dialog(const struct sipsess *sess)$/;"	f
sipsess_estab_h	re-0.5.6/include/re_sipsess.h	/^typedef void (sipsess_estab_h)(const struct sip_msg *msg, void *arg);$/;"	t
sipsess_estab_handler	baresip/src/call.c	/^static void sipsess_estab_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
sipsess_find	re-0.5.6/src/sipsess/listen.c	/^static struct sipsess *sipsess_find(struct sipsess_sock *sock,$/;"	f	file:
sipsess_info	re-0.5.6/src/sipsess/info.c	/^int sipsess_info(struct sipsess *sess, const char *ctype, struct mbuf *body,$/;"	f
sipsess_info_h	re-0.5.6/include/re_sipsess.h	/^typedef void (sipsess_info_h)(struct sip *sip, const struct sip_msg *msg,$/;"	t
sipsess_info_handler	baresip/src/call.c	/^static void sipsess_info_handler(struct sip *sip, const struct sip_msg *msg,$/;"	f	file:
sipsess_listen	re-0.5.6/src/sipsess/listen.c	/^int sipsess_listen(struct sipsess_sock **sockp, struct sip *sip,$/;"	f
sipsess_modify	re-0.5.6/src/sipsess/modify.c	/^int sipsess_modify(struct sipsess *sess, struct mbuf *desc)$/;"	f
sipsess_offer_h	re-0.5.6/include/re_sipsess.h	/^typedef int  (sipsess_offer_h)(struct mbuf **descp, const struct sip_msg *msg,$/;"	t
sipsess_offer_handler	baresip/src/call.c	/^static int sipsess_offer_handler(struct mbuf **descp,$/;"	f	file:
sipsess_progr_h	re-0.5.6/include/re_sipsess.h	/^typedef void (sipsess_progr_h)(const struct sip_msg *msg, void *arg);$/;"	t
sipsess_progr_handler	baresip/src/call.c	/^static void sipsess_progr_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
sipsess_progress	re-0.5.6/src/sipsess/accept.c	/^int sipsess_progress(struct sipsess *sess, uint16_t scode, const char *reason,$/;"	f
sipsess_refer_h	re-0.5.6/include/re_sipsess.h	/^typedef void (sipsess_refer_h)(struct sip *sip, const struct sip_msg *msg,$/;"	t
sipsess_refer_handler	baresip/src/call.c	/^static void sipsess_refer_handler(struct sip *sip, const struct sip_msg *msg,$/;"	f	file:
sipsess_reinvite	re-0.5.6/src/sipsess/modify.c	/^int sipsess_reinvite(struct sipsess *sess, bool reset_ls)$/;"	f
sipsess_reject	re-0.5.6/src/sipsess/accept.c	/^int sipsess_reject(struct sipsess *sess, uint16_t scode, const char *reason,$/;"	f
sipsess_reply	re-0.5.6/src/sipsess/reply.c	/^struct sipsess_reply {$/;"	s	file:
sipsess_reply_2xx	re-0.5.6/src/sipsess/reply.c	/^int sipsess_reply_2xx(struct sipsess *sess, const struct sip_msg *msg,$/;"	f
sipsess_reply_ack	re-0.5.6/src/sipsess/reply.c	/^int sipsess_reply_ack(struct sipsess *sess, const struct sip_msg *msg,$/;"	f
sipsess_request	re-0.5.6/src/sipsess/sipsess.h	/^struct sipsess_request {$/;"	s
sipsess_request_alloc	re-0.5.6/src/sipsess/request.c	/^int sipsess_request_alloc(struct sipsess_request **reqp, struct sipsess *sess,$/;"	f
sipsess_set_close_headers	re-0.5.6/src/sipsess/sess.c	/^int sipsess_set_close_headers(struct sipsess *sess, const char *hdrs, ...)$/;"	f
sipsess_sock	re-0.5.6/src/sipsess/sipsess.h	/^struct sipsess_sock {$/;"	s
sipsess_terminate	re-0.5.6/src/sipsess/sess.c	/^void sipsess_terminate(struct sipsess *sess, int err,$/;"	f
sipsub	re-0.5.6/src/sipevent/sipevent.h	/^struct sipsub {$/;"	s
sipsub_alloc	re-0.5.6/src/sipevent/subscribe.c	/^static int sipsub_alloc(struct sipsub **subp, struct sipevent_sock *sock,$/;"	f	file:
sipsub_close_h	re-0.5.6/include/re_sipevent.h	/^typedef void (sipsub_close_h)(int err, const struct sip_msg *msg,$/;"	t
sipsub_close_handler	baresip/src/call.c	/^static void sipsub_close_handler(int err, const struct sip_msg *msg,$/;"	f	file:
sipsub_find	re-0.5.6/src/sipevent/listen.c	/^struct sipsub *sipsub_find(struct sipevent_sock *sock,$/;"	f
sipsub_fork_h	re-0.5.6/include/re_sipevent.h	/^typedef int  (sipsub_fork_h)(struct sipsub **subp, struct sipsub *osub,$/;"	t
sipsub_notify_h	re-0.5.6/include/re_sipevent.h	/^typedef void (sipsub_notify_h)(struct sip *sip, const struct sip_msg *msg,$/;"	t
sipsub_notify_handler	baresip/src/call.c	/^static void sipsub_notify_handler(struct sip *sip, const struct sip_msg *msg,$/;"	f	file:
sipsub_reschedule	re-0.5.6/src/sipevent/subscribe.c	/^void sipsub_reschedule(struct sipsub *sub, uint64_t wait)$/;"	f
sipsub_terminate	re-0.5.6/src/sipevent/subscribe.c	/^void sipsub_terminate(struct sipsub *sub, int err, const struct sip_msg *msg,$/;"	f
size	baresip/modules/av1/encode.c	/^	struct vidsz size;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
size	baresip/modules/cairo/cairo.c	/^	struct vidsz size;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
size	baresip/modules/daala/encode.c	/^	struct vidsz size;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
size	baresip/modules/directfb/directfb.c	/^	struct vidsz size;             \/**< Current size          *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidsz	file:
size	baresip/modules/dshow/dshow.cpp	/^	struct vidsz size;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
size	baresip/modules/gst_video/encode.c	/^	struct vidsz size;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
size	baresip/modules/gst_video1/encode.c	/^		struct vidsz size;$/;"	m	struct:videnc_state::__anon89	typeref:struct:videnc_state::__anon89::vidsz	file:
size	baresip/modules/h265/encode.c	/^	struct vidsz size;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
size	baresip/modules/omx/module.c	/^	struct vidsz size;$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidsz	file:
size	baresip/modules/rst/video.c	/^	struct vidsz size;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
size	baresip/modules/sdl/sdl.c	/^	struct vidsz size;              \/**< Current size          *\/$/;"	m	struct:__anon60	typeref:struct:__anon60::vidsz	file:
size	baresip/modules/sdl2/sdl.c	/^	struct vidsz size;              \/**< Current size          *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidsz	file:
size	baresip/modules/v4l/v4l.c	/^	struct vidsz size;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
size	baresip/modules/vidinfo/vidinfo.h	/^	struct vidsz size;$/;"	m	struct:panel	typeref:struct:panel::vidsz
size	baresip/modules/vp8/encode.c	/^	struct vidsz size;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
size	baresip/modules/vp9/encode.c	/^	struct vidsz size;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::vidsz	file:
size	baresip/modules/x11/x11.c	/^	struct vidsz size;              \/**< Current size          *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidsz	file:
size	baresip/modules/x11grab/x11grab.c	/^	struct vidsz size;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
size	baresip/src/video.c	/^	struct vidsz size;                 \/**< Incoming video resolution *\/$/;"	m	struct:vrx	typeref:struct:vrx::vidsz	file:
size	re-0.5.6/include/re_mbuf.h	/^	size_t size;    \/**< Size of buffer     *\/$/;"	m	struct:mbuf
size	re-0.5.6/src/fmt/print.c	/^	size_t size;$/;"	m	struct:dyn_print	file:
size	re-0.5.6/src/http/http.h	/^	size_t size;$/;"	m	struct:http_chunk
size	re-0.5.6/src/mem/mem.c	/^	size_t size;        \/**< Size of memory object *\/$/;"	m	struct:mem	file:
size	re-0.5.6/src/net/rt.c	/^	size_t size;$/;"	m	struct:net_rt	file:
size	rem-0.5.2/include/rem_vid.h	/^	struct vidsz size;     \/**< Frame resolution    *\/$/;"	m	struct:vidframe	typeref:struct:vidframe::vidsz
size	rem-0.5.2/src/aufile/wave.c	/^	uint32_t size;$/;"	m	struct:wav_chunk	file:
size_max	re-0.5.6/include/re_mem.h	/^	size_t size_max;     \/**< Largest block size allocated *\/$/;"	m	struct:memstat
size_min	re-0.5.6/include/re_mem.h	/^	size_t size_min;     \/**< Lowest block size allocated  *\/$/;"	m	struct:memstat
size_text	baresip/modules/vidinfo/vidinfo.h	/^	struct vidsz size_text;$/;"	m	struct:panel	typeref:struct:panel::vidsz
ska1	baresip/modules/stun/stun.c	/^	struct stun_keepalive *ska1;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::stun_keepalive	file:
ska2	baresip/modules/stun/stun.c	/^	struct stun_keepalive *ska2;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::stun_keepalive	file:
skipc	baresip/src/video.c	/^	unsigned skipc;                    \/**< Number of frames skipped  *\/$/;"	m	struct:vtx	file:
sli	re-0.5.6/include/re_rtp.h	/^				struct sli {$/;"	s	union:rtcp_msg::__anon181::__anon188::__anon189
sliv	re-0.5.6/include/re_rtp.h	/^				} *sliv;$/;"	m	union:rtcp_msg::__anon181::__anon188::__anon189	typeref:struct:rtcp_msg::__anon181::__anon188::__anon189::sli
snapshot	baresip/modules/snapshot/snapshot.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(snapshot) = {$/;"	v	typeref:struct:DECL_EXPORTS
snapshot	baresip/modules/snapshot/snapshot.c	/^static struct vidfilt snapshot = {$/;"	v	typeref:struct:vidfilt	file:
sndfile	baresip/modules/sndfile/sndfile.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(sndfile) = {$/;"	v	typeref:struct:DECL_EXPORTS
sndfile	baresip/modules/sndfile/sndfile.c	/^static struct aufilt sndfile = {$/;"	v	typeref:struct:aufilt	file:
sndfile_dec	baresip/modules/sndfile/sndfile.c	/^struct sndfile_dec {$/;"	s	file:
sndfile_enc	baresip/modules/sndfile/sndfile.c	/^struct sndfile_enc {$/;"	s	file:
sndio	baresip/modules/sndio/sndio.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(sndio) = {$/;"	v	typeref:struct:DECL_EXPORTS
sndio_close	baresip/modules/sndio/sndio.c	/^static int sndio_close(void)$/;"	f	file:
sndio_init	baresip/modules/sndio/sndio.c	/^static int sndio_init(void)$/;"	f	file:
sndio_initpar	baresip/modules/sndio/sndio.c	/^static struct sio_par *sndio_initpar(uint32_t srate, uint8_t ch)$/;"	f	file:
soa	re-0.5.6/include/re_dns.h	/^		} soa;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon158
sock	baresip/modules/ice/ice.c	/^		void *sock;$/;"	m	struct:mnat_media::comp	file:
sock	baresip/src/ua.c	/^	struct sipsess_sock *sock;     \/**< SIP Session socket              *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::sipsess_sock	file:
sock	re-0.5.6/include/re_sip.h	/^	void *sock;            \/**< Transport socket                     *\/$/;"	m	struct:sip_msg
sock	re-0.5.6/src/http/server.c	/^	struct http_sock *sock;$/;"	m	struct:http_conn	typeref:struct:http_conn::http_sock	file:
sock	re-0.5.6/src/ice/ice.h	/^	void *sock;                  \/**< Transport socket                  *\/$/;"	m	struct:icem_comp
sock	re-0.5.6/src/sip/transp.c	/^	void *sock;$/;"	m	struct:sip_transport	file:
sock	re-0.5.6/src/sipevent/sipevent.h	/^	struct sipevent_sock *sock;$/;"	m	struct:sipnot	typeref:struct:sipnot::sipevent_sock
sock	re-0.5.6/src/sipevent/sipevent.h	/^	struct sipevent_sock *sock;$/;"	m	struct:sipsub	typeref:struct:sipsub::sipevent_sock
sock	re-0.5.6/src/sipsess/sipsess.h	/^	struct sipsess_sock *sock;$/;"	m	struct:sipsess	typeref:struct:sipsess::sipsess_sock
sock	re-0.5.6/src/stun/ctrans.c	/^	void *sock;$/;"	m	struct:stun_ctrans	file:
sock	re-0.5.6/src/stun/keepalive.c	/^	void *sock;$/;"	m	struct:stun_keepalive	file:
sock	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct dtls_sock *sock;$/;"	m	struct:tls_conn	typeref:struct:tls_conn::dtls_sock	file:
sock	re-0.5.6/src/turn/turnc.h	/^	void *sock;                    \/**< Transport socket                *\/$/;"	m	struct:turnc
sock	re-0.5.6/src/websock/websock.c	/^	struct websock *sock;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::websock	file:
sock1	baresip/modules/stun/stun.c	/^	void *sock1;$/;"	m	struct:mnat_media	file:
sock1	baresip/modules/turn/turn.c	/^	void *sock1;$/;"	m	struct:mnat_media	file:
sock2	baresip/modules/stun/stun.c	/^	void *sock2;$/;"	m	struct:mnat_media	file:
sock2	baresip/modules/turn/turn.c	/^	void *sock2;$/;"	m	struct:mnat_media	file:
sock_destructor	re-0.5.6/src/http/server.c	/^static void sock_destructor(void *arg)$/;"	f	file:
sock_destructor	re-0.5.6/src/tcp/tcp.c	/^static void sock_destructor(void *data)$/;"	f	file:
sock_destructor	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void sock_destructor(void *arg)$/;"	f	file:
sock_destructor	re-0.5.6/src/websock/websock.c	/^static void sock_destructor(void *arg)$/;"	f	file:
sock_rtcp	re-0.5.6/src/rtp/rtp.c	/^	void *sock_rtcp;        \/**< RTCP Socket           *\/$/;"	m	struct:rtp_sock	file:
sock_rtp	re-0.5.6/src/rtp/rtp.c	/^	void *sock_rtp;         \/**< RTP Socket            *\/$/;"	m	struct:rtp_sock	file:
socklen_t	re-0.5.6/include/re_types.h	/^typedef uint32_t socklen_t;$/;"	t
software	re-0.5.6/include/re_stun.h	/^		char *software;$/;"	m	union:stun_attr::__anon174
software	re-0.5.6/src/sip/sip.h	/^	char *software;$/;"	m	struct:sip
sort	re-0.5.6/src/dns/rrlist.c	/^struct sort {$/;"	s	file:
sort_handler	baresip/src/cmd.c	/^static bool sort_handler(struct le *le1, struct le *le2, void *arg)$/;"	f	file:
sort_handler	re-0.5.6/src/ice/candpair.c	/^static bool sort_handler(struct le *le1, struct le *le2, void *arg)$/;"	f	file:
sort_handler	re-0.5.6/src/tcp/tcp.c	/^static bool sort_handler(struct le *le1, struct le *le2, void *arg)$/;"	f	file:
sort_handler	re-0.5.6/src/udp/udp.c	/^static bool sort_handler(struct le *le1, struct le *le2, void *arg)$/;"	f	file:
sortkey	re-0.5.6/src/sip/request.c	/^	size_t sortkey;$/;"	m	struct:sip_request	file:
source	baresip/modules/gst/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
source	baresip/modules/gst1/gst.c	/^	GstElement *pipeline, *bin, *source, *capsfilt, *sink;$/;"	m	struct:ausrc_st	file:
source	baresip/modules/gst_video/encode.c	/^	GstElement *pipeline, *source, *sink;$/;"	m	struct:videnc_state	file:
source	baresip/modules/gst_video1/encode.c	/^		GstAppSrc *source;$/;"	m	struct:videnc_state::__anon91	file:
source_calc_fraction_lost	re-0.5.6/src/rtp/source.c	/^uint8_t source_calc_fraction_lost(struct rtp_source *s)$/;"	f
source_calc_jitter	re-0.5.6/src/rtp/source.c	/^void source_calc_jitter(struct rtp_source *s, uint32_t rtp_ts,$/;"	f
source_calc_lost	re-0.5.6/src/rtp/source.c	/^int source_calc_lost(const struct rtp_source *s)$/;"	f
source_destructor	rem-0.5.2/src/aumix/aumix.c	/^static void source_destructor(void *arg)$/;"	f	file:
source_destructor	rem-0.5.2/src/vidmix/vidmix.c	/^static void source_destructor(void *arg)$/;"	f	file:
source_init_seq	re-0.5.6/src/rtp/source.c	/^void source_init_seq(struct rtp_source *s, uint16_t seq)$/;"	f
source_mix	rem-0.5.2/src/vidmix/vidmix.c	/^static inline void source_mix(struct vidframe *mframe,$/;"	f	file:
source_mix_full	rem-0.5.2/src/vidmix/vidmix.c	/^static inline void source_mix_full(struct vidframe *mframe,$/;"	f	file:
source_update_seq	re-0.5.6/src/rtp/source.c	/^int source_update_seq(struct rtp_source *s, uint16_t seq)$/;"	f
speex	baresip/modules/speex/speex.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(speex) = {$/;"	v	typeref:struct:DECL_EXPORTS
speex_aec	baresip/modules/speex_aec/speex_aec.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(speex_aec) = {$/;"	v	typeref:struct:DECL_EXPORTS
speex_aec	baresip/modules/speex_aec/speex_aec.c	/^static struct aufilt speex_aec = {$/;"	v	typeref:struct:aufilt	file:
speex_aec_destructor	baresip/modules/speex_aec/speex_aec.c	/^static void speex_aec_destructor(void *arg)$/;"	f	file:
speex_close	baresip/modules/speex/speex.c	/^static int speex_close(void)$/;"	f	file:
speex_fmtp_nb	baresip/modules/speex/speex.c	/^static char speex_fmtp_nb[128];$/;"	v	file:
speex_fmtp_wb	baresip/modules/speex/speex.c	/^static char speex_fmtp_wb[128];$/;"	v	file:
speex_init	baresip/modules/speex/speex.c	/^static int speex_init(void)$/;"	f	file:
speex_pp	baresip/modules/speex_pp/speex_pp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(speex_pp) = {$/;"	v	typeref:struct:DECL_EXPORTS
speex_st	baresip/modules/speex_aec/speex_aec.c	/^struct speex_st {$/;"	s	file:
speexpp_destructor	baresip/modules/speex_pp/speex_pp.c	/^static void speexpp_destructor(void *arg)$/;"	f	file:
speexv	baresip/modules/speex/speex.c	/^static struct aucodec speexv[] = {$/;"	v	typeref:struct:aucodec	file:
spinner	baresip/modules/gtk/transfer_dialog.c	/^	GtkWidget *spinner;$/;"	m	struct:transfer_dialog	file:
split_scr	baresip/modules/avcodec/h26x.h	/^	unsigned split_scr:1;        \/**< Split Screen Indicator          *\/$/;"	m	struct:h263_strm
sr	re-0.5.6/include/re_rtp.h	/^		} sr;$/;"	m	union:rtcp_msg::__anon181	typeref:struct:rtcp_msg::__anon181::__anon182
sr_recv	re-0.5.6/src/rtp/rtcp.h	/^	uint64_t sr_recv;         \/**< When the last SR was received       *\/$/;"	m	struct:rtp_source
srate	baresip/include/baresip.h	/^	struct range srate;     \/**< Audio sampling rate in [Hz]    *\/$/;"	m	struct:config_audio	typeref:struct:config_audio::range
srate	baresip/include/baresip.h	/^	uint32_t   srate;       \/**< Sampling rate in [Hz] *\/$/;"	m	struct:auplay_prm
srate	baresip/include/baresip.h	/^	uint32_t   srate;       \/**< Sampling rate in [Hz] *\/$/;"	m	struct:ausrc_prm
srate	baresip/include/baresip.h	/^	uint32_t srate;             \/* Audio samplerate *\/$/;"	m	struct:aucodec
srate	baresip/include/baresip.h	/^	uint32_t srate;       \/**< Sampling rate in [Hz]        *\/$/;"	m	struct:aufilt_prm
srate	baresip/modules/auloop/auloop.c	/^	uint32_t srate;$/;"	m	struct:__anon56	file:
srate	baresip/modules/auloop/auloop.c	/^	uint32_t srate;$/;"	m	struct:audio_loop	file:
srate	baresip/modules/opus/opus.h	/^	opus_int32 srate;$/;"	m	struct:opus_param
srate	re-0.5.6/include/re_sdp.h	/^	uint32_t srate;$/;"	m	struct:sdp_format
srate	rem-0.5.2/include/rem_aufile.h	/^	uint32_t srate;$/;"	m	struct:aufile_prm
srate	rem-0.5.2/src/aufile/aufile.h	/^	uint32_t srate;$/;"	m	struct:wav_fmt
srate	rem-0.5.2/src/aumix/aumix.c	/^	uint32_t srate;$/;"	m	struct:aumix	file:
srate2bw	baresip/modules/opus/encode.c	/^static opus_int32 srate2bw(opus_int32 srate)$/;"	f	file:
srate_play	baresip/include/baresip.h	/^	uint32_t srate_play;    \/**< Opt. sampling rate for player  *\/$/;"	m	struct:config_audio
srate_rx	re-0.5.6/src/rtp/sess.c	/^	uint32_t srate_rx;          \/**< Receive sampling rate               *\/$/;"	m	struct:rtcp_sess	file:
srate_src	baresip/include/baresip.h	/^	uint32_t srate_src;     \/**< Opt. sampling rate for source  *\/$/;"	m	struct:config_audio
srate_tx	re-0.5.6/src/rtp/sess.c	/^	uint32_t srate_tx;          \/**< Transmit sampling rate              *\/$/;"	m	struct:rtcp_sess	file:
src	baresip/modules/avcodec/h26x.h	/^	unsigned src:3;    \/**< 3 bits - Source format                      *\/$/;"	m	struct:h263_hdr
src	baresip/modules/dshow/dshow.cpp	/^	struct vidsrc_st *src;$/;"	m	class:Grabber	typeref:struct:Grabber::vidsrc_st	file:
src	baresip/test/sip/location.c	/^	struct sa src;$/;"	m	struct:loctmp	typeref:struct:loctmp::sa	file:
src	baresip/test/sip/sipsrv.h	/^	struct sa src;$/;"	m	struct:location	typeref:struct:location::sa
src	re-0.5.6/include/re_bfcp.h	/^	struct sa src;$/;"	m	struct:bfcp_msg	typeref:struct:bfcp_msg::sa
src	re-0.5.6/include/re_rtp.h	/^			uint32_t src;         \/**< First SSRC\/CSRC           *\/$/;"	m	struct:rtcp_msg::__anon181::rtcp_sdes
src	re-0.5.6/include/re_rtp.h	/^			uint32_t src;      \/**< SSRC\/CSRC                  *\/$/;"	m	struct:rtcp_msg::__anon181::__anon185
src	re-0.5.6/include/re_sip.h	/^	struct sa src;         \/**< Source network address               *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::sa
src	re-0.5.6/src/rtp/rtcp.h	/^	uint32_t src;             \/**< Source - used for hash-table lookup *\/$/;"	m	struct:rtp_member
src_alloc	baresip/modules/aubridge/src.c	/^int src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
src_alloc	baresip/modules/fakevideo/fakevideo.c	/^static int src_alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
src_alloc	baresip/modules/oss/oss.c	/^static int src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
src_alloc	baresip/modules/portaudio/portaudio.c	/^static int src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
src_alloc	baresip/modules/sndio/sndio.c	/^static int src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f	file:
src_alloc	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int src_alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f	file:
src_destructor	baresip/modules/fakevideo/fakevideo.c	/^static void src_destructor(void *arg)$/;"	f	file:
src_destructor	baresip/modules/v4l2_codec/v4l2_codec.c	/^static void src_destructor(void *arg)$/;"	f	file:
src_dev	baresip/include/baresip.h	/^	char src_dev[128];      \/**< Audio source device            *\/$/;"	m	struct:config_audio
src_dev	baresip/include/baresip.h	/^	char src_dev[128];      \/**< Video source device            *\/$/;"	m	struct:config_video
src_first	baresip/include/baresip.h	/^	bool src_first;         \/**< Audio source opened first      *\/$/;"	m	struct:config_audio
src_fmt	baresip/include/baresip.h	/^	int src_fmt;            \/**< Audio source sample format     *\/$/;"	m	struct:config_audio
src_fmt	baresip/modules/avcodec/h26x.h	/^	unsigned src_fmt:3;          \/**< Source Format. 3=CIF            *\/$/;"	m	struct:h263_strm
src_fmt	baresip/src/audio.c	/^	enum aufmt src_fmt;           \/**< Sample format for audio source  *\/$/;"	m	struct:autx	typeref:enum:autx::aufmt	file:
src_mod	baresip/include/baresip.h	/^	char src_mod[16];       \/**< Audio source module            *\/$/;"	m	struct:config_audio
src_mod	baresip/include/baresip.h	/^	char src_mod[16];       \/**< Video source module            *\/$/;"	m	struct:config_video
srcl	rem-0.5.2/src/aumix/aumix.c	/^	struct list srcl;$/;"	m	struct:aumix	typeref:struct:aumix::list	file:
srcl	rem-0.5.2/src/vidmix/vidmix.c	/^	struct list srcl;$/;"	m	struct:vidmix	typeref:struct:vidmix::list	file:
srcv	re-0.5.6/include/re_rtp.h	/^			uint32_t *srcv;    \/**< List of sources              *\/$/;"	m	struct:rtcp_msg::__anon181::__anon184
srtcp_decrypt	re-0.5.6/src/srtp/srtcp.c	/^int srtcp_decrypt(struct srtp *srtp, struct mbuf *mb)$/;"	f
srtcp_encrypt	re-0.5.6/src/srtp/srtcp.c	/^int srtcp_encrypt(struct srtp *srtp, struct mbuf *mb)$/;"	f
srtp	baresip/modules/dtls_srtp/srtp.c	/^	struct srtp *srtp;$/;"	m	struct:srtp_stream	typeref:struct:srtp_stream::srtp	file:
srtp	baresip/modules/srtp/srtp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(srtp) = {$/;"	v	typeref:struct:DECL_EXPORTS
srtp	re-0.5.6/src/srtp/srtp.h	/^struct srtp {$/;"	s
srtpSecretsOff	baresip/modules/gzrtp/stream.cpp	/^void Stream::srtpSecretsOff(EnableSecurity part)$/;"	f	class:Stream
srtpSecretsOn	baresip/modules/gzrtp/stream.cpp	/^void Stream::srtpSecretsOn(std::string c, std::string s, bool verified)$/;"	f	class:Stream
srtpSecretsReady	baresip/modules/gzrtp/stream.cpp	/^bool Stream::srtpSecretsReady(SrtpSecret_t* secrets, EnableSecurity part)$/;"	f	class:Stream
srtp_alloc	re-0.5.6/src/srtp/srtp.c	/^int srtp_alloc(struct srtp **srtpp, enum srtp_suite suite,$/;"	f
srtp_decrypt	re-0.5.6/src/srtp/srtp.c	/^int srtp_decrypt(struct srtp *srtp, struct mbuf *mb)$/;"	f
srtp_derive	re-0.5.6/src/srtp/misc.c	/^int srtp_derive(uint8_t *out, size_t out_len, uint8_t label,$/;"	f
srtp_encrypt	re-0.5.6/src/srtp/srtp.c	/^int srtp_encrypt(struct srtp *srtp, struct mbuf *mb)$/;"	f
srtp_flags	re-0.5.6/include/re_srtp.h	/^enum srtp_flags {$/;"	g
srtp_get_index	re-0.5.6/src/srtp/misc.c	/^uint64_t srtp_get_index(uint32_t roc, uint16_t s_l, uint16_t seq)$/;"	f
srtp_install	baresip/modules/dtls_srtp/srtp.c	/^int srtp_install(struct comp *comp)$/;"	f
srtp_iv_calc	re-0.5.6/src/srtp/misc.c	/^void srtp_iv_calc(union vect128 *iv, const union vect128 *k_s,$/;"	f
srtp_profiles	baresip/modules/dtls_srtp/dtls_srtp.c	/^static const char* srtp_profiles =$/;"	v	file:
srtp_replay_check	re-0.5.6/src/srtp/replay.c	/^bool srtp_replay_check(struct replay *replay, uint64_t ix)$/;"	f
srtp_replay_init	re-0.5.6/src/srtp/replay.c	/^void srtp_replay_init(struct replay *replay)$/;"	f
srtp_rx	baresip/modules/libsrtp/srtp.c	/^	srtp_t srtp_tx, srtp_rx;$/;"	m	struct:menc_st	file:
srtp_rx	baresip/modules/srtp/srtp.c	/^	struct srtp *srtp_tx, *srtp_rx;$/;"	m	struct:menc_st	typeref:struct:menc_st::	file:
srtp_stream	baresip/modules/dtls_srtp/srtp.c	/^struct srtp_stream {$/;"	s	file:
srtp_stream	re-0.5.6/src/srtp/srtp.h	/^struct srtp_stream {$/;"	s
srtp_stream_add	baresip/modules/dtls_srtp/srtp.c	/^int srtp_stream_add(struct srtp_stream **sp, enum srtp_suite suite,$/;"	f
srtp_suite	re-0.5.6/include/re_srtp.h	/^enum srtp_suite {$/;"	g
srtp_suite_name	re-0.5.6/src/srtp/misc.c	/^const char *srtp_suite_name(enum srtp_suite suite)$/;"	f
srtp_tx	baresip/modules/libsrtp/srtp.c	/^	srtp_t srtp_tx, srtp_rx;$/;"	m	struct:menc_st	file:
srtp_tx	baresip/modules/srtp/srtp.c	/^	struct srtp *srtp_tx, *srtp_rx;$/;"	m	struct:menc_st	typeref:struct:menc_st::srtp	file:
srv	baresip/modules/ice/ice.c	/^	struct sa srv;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::sa	file:
srv	baresip/modules/natpmp/libnatpmp.c	/^	struct sa srv;$/;"	m	struct:natpmp_req	typeref:struct:natpmp_req::sa	file:
srv	baresip/modules/pcp/listener.c	/^	struct sa srv;$/;"	m	struct:pcp_listener	typeref:struct:pcp_listener::sa	file:
srv	baresip/modules/stun/stun.c	/^	struct sa srv;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::sa	file:
srv	baresip/modules/turn/turn.c	/^	struct sa srv;$/;"	m	struct:mnat_sess	typeref:struct:mnat_sess::sa	file:
srv	baresip/src/reg.c	/^	char *srv;                   \/**< SIP Server id                      *\/$/;"	m	struct:reg	file:
srv	baresip/test/sip/sipsrv.h	/^	const struct sip_server *srv;$/;"	m	struct:auth	typeref:struct:auth::sip_server
srv	re-0.5.6/include/re_dns.h	/^		} srv;$/;"	m	union:dnsrr::__anon154	typeref:struct:dnsrr::__anon154::__anon162
srv	re-0.5.6/src/dns/client.c	/^	struct sa srv;$/;"	m	struct:tcpconn	typeref:struct:tcpconn::sa	file:
srv	re-0.5.6/src/natbd/filtering.c	/^	struct sa srv;         \/**< Server IP address and port *\/$/;"	m	struct:nat_filtering	typeref:struct:nat_filtering::sa	file:
srv	re-0.5.6/src/natbd/genalg.c	/^	struct sa srv;          \/**< Server address and port   *\/$/;"	m	struct:nat_genalg	typeref:struct:nat_genalg::sa	file:
srv	re-0.5.6/src/natbd/hairpinning.c	/^	struct sa srv;           \/**< Server address and port *\/$/;"	m	struct:nat_hairpinning	typeref:struct:nat_hairpinning::sa	file:
srv	re-0.5.6/src/natbd/lifetime.c	/^	struct sa srv;                          \/**< Server IP-address\/port *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::sa	file:
srv	re-0.5.6/src/natbd/mapping.c	/^	struct sa srv;            \/**< STUN server address\/port  *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::sa	file:
srv	re-0.5.6/src/stun/dnsdisc.c	/^	struct sa srv;         \/**< Resolved server address *\/$/;"	m	struct:stun_dns	typeref:struct:stun_dns::sa	file:
srv	re-0.5.6/src/turn/turnc.h	/^	struct sa srv;                 \/**< TURN Server address             *\/$/;"	m	struct:turnc	typeref:struct:turnc::sa
srv_epoch	baresip/modules/pcp/pcp.c	/^	uint32_t srv_epoch;$/;"	m	struct:mnat_media	file:
srv_handler	re-0.5.6/src/sip/request.c	/^static void srv_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
srv_handler	re-0.5.6/src/stun/dnsdisc.c	/^static void srv_handler(int err, const struct dnshdr *hdr, struct list *ansl,$/;"	f	file:
srv_lookup	re-0.5.6/src/sip/request.c	/^static int srv_lookup(struct sip_request *req, const char *domain)$/;"	f	file:
srvc	baresip/test/ua.c	/^	size_t srvc;$/;"	m	struct:test	file:
srvc	re-0.5.6/src/dns/client.c	/^	const uint32_t *srvc;$/;"	m	struct:dns_query	file:
srvc	re-0.5.6/src/dns/client.c	/^	uint32_t srvc;$/;"	m	struct:dnsc	file:
srvc	re-0.5.6/src/http/client.c	/^	unsigned srvc;$/;"	m	struct:http_req	file:
srvl	re-0.5.6/src/sip/request.c	/^	struct list srvl;$/;"	m	struct:sip_request	typeref:struct:sip_request::list	file:
srvv	baresip/test/ua.c	/^	struct sip_server *srvv[16];$/;"	m	struct:test	typeref:struct:test::sip_server	file:
srvv	re-0.5.6/src/dns/client.c	/^	const struct sa *srvv;$/;"	m	struct:dns_query	typeref:struct:dns_query::sa	file:
srvv	re-0.5.6/src/dns/client.c	/^	struct sa srvv[SRVC_MAX];$/;"	m	struct:dnsc	typeref:struct:dnsc::sa	file:
srvv	re-0.5.6/src/http/client.c	/^	struct sa srvv[16];$/;"	m	struct:http_req	typeref:struct:http_req::sa	file:
ssize_t	re-0.5.6/include/re_types.h	/^typedef long     ssize_t;$/;"	t
ssl	re-0.5.6/src/tls/openssl/tls.c	/^	SSL *ssl;$/;"	m	struct:tls_conn	file:
ssl	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	SSL *ssl;$/;"	m	struct:tls_conn	file:
ssl	re-0.5.6/src/tls/openssl/tls_udp.c	/^	SSL *ssl;             \/* inheritance *\/$/;"	m	struct:tls_conn	file:
ssrc	re-0.5.6/include/re_rtp.h	/^			uint32_t ssrc;        \/**< Receiver generating report*\/$/;"	m	struct:rtcp_msg::__anon181::__anon183
ssrc	re-0.5.6/include/re_rtp.h	/^			uint32_t ssrc;        \/**< Sender generating report  *\/$/;"	m	struct:rtcp_msg::__anon181::__anon182
ssrc	re-0.5.6/include/re_rtp.h	/^			uint32_t ssrc;  \/**< SSRC for sender of this packet *\/$/;"	m	struct:rtcp_msg::__anon181::__anon186
ssrc	re-0.5.6/include/re_rtp.h	/^			uint32_t ssrc;  \/**< SSRC for sender of this packet *\/$/;"	m	struct:rtcp_msg::__anon181::__anon187
ssrc	re-0.5.6/include/re_rtp.h	/^	uint32_t ssrc;            \/**< Data source being reported      *\/$/;"	m	struct:rtcp_rr
ssrc	re-0.5.6/include/re_rtp.h	/^	uint32_t ssrc;      \/**< Synchronization source *\/$/;"	m	struct:rtp_header
ssrc	re-0.5.6/src/rtp/rtp.c	/^		uint32_t ssrc;  \/**< Synchronizing source  *\/$/;"	m	struct:rtp_sock::__anon143	file:
ssrc	re-0.5.6/src/srtp/srtp.h	/^	uint32_t ssrc;             \/**< SSRC -- lookup key                 *\/$/;"	m	struct:srtp_stream
ssrc_media	re-0.5.6/include/re_rtp.h	/^			uint32_t ssrc_media;$/;"	m	struct:rtcp_msg::__anon181::__anon188
ssrc_packet	re-0.5.6/include/re_rtp.h	/^			uint32_t ssrc_packet;$/;"	m	struct:rtcp_msg::__anon181::__anon188
ssrc_rx	baresip/src/core.h	/^	uint32_t ssrc_rx;        \/**< Incoming syncronizing source          *\/$/;"	m	struct:stream
st	baresip/modules/g726/g726.c	/^	g726_state_t st;$/;"	m	struct:audec_state	file:
st	baresip/modules/g726/g726.c	/^	g726_state_t st;$/;"	m	struct:auenc_state	file:
st	baresip/modules/speex_aec/speex_aec.c	/^	struct speex_st *st;$/;"	m	struct:dec_st	typeref:struct:dec_st::speex_st	file:
st	baresip/modules/speex_aec/speex_aec.c	/^	struct speex_st *st;$/;"	m	struct:enc_st	typeref:struct:enc_st::speex_st	file:
st	re-0.5.6/src/bfcp/bfcp.h	/^	struct bfcp_strans st;$/;"	m	struct:bfcp_conn	typeref:struct:bfcp_conn::bfcp_strans
st	re-0.5.6/src/sipsess/sipsess.h	/^	struct sip_strans *st;$/;"	m	struct:sipsess	typeref:struct:sipsess::sip_strans
stale	baresip/test/sip/sipsrv.h	/^	bool stale;$/;"	m	struct:auth
stale	re-0.5.6/include/re_http.h	/^	bool stale;$/;"	m	struct:http_auth
stale	re-0.5.6/include/re_httpauth.h	/^	struct pl stale;$/;"	m	struct:httpauth_digest_chall	typeref:struct:httpauth_digest_chall::pl
start	baresip/modules/av1/decode.c	/^	unsigned start:1;$/;"	m	struct:hdr	file:
start	baresip/modules/gzrtp/stream.cpp	/^int Stream::start(Stream *master)$/;"	f	class:Stream
start	baresip/modules/mpa/decode.c	/^	int start;$/;"	m	struct:audec_state	file:
start	baresip/modules/v4l2/v4l2.c	/^	void  *start;$/;"	m	struct:buffer	file:
start	baresip/modules/vp8/decode.c	/^	unsigned start:1;$/;"	m	struct:hdr	file:
start	re-0.5.6/src/stun/msg.c	/^	size_t start;$/;"	m	struct:stun_msg	file:
startRecording	baresip/modules/opensles/recorder.c	/^static int startRecording(struct ausrc_st *st)$/;"	f	file:
start_capturing	baresip/modules/v4l2/v4l2.c	/^static int start_capturing(struct vidsrc_st *st)$/;"	f	file:
start_codec	baresip/modules/auloop/auloop.c	/^static void start_codec(struct audio_loop *al, const char *name)$/;"	f	file:
start_crypto	baresip/modules/libsrtp/srtp.c	/^static int start_crypto(struct menc_st *st, const struct pl *key_info)$/;"	f	file:
start_crypto	baresip/modules/srtp/srtp.c	/^static int start_crypto(struct menc_st *st, const struct pl *key_info)$/;"	f	file:
start_gathering	baresip/modules/ice/ice.c	/^static int start_gathering(struct mnat_media *m,$/;"	f	file:
start_jack	baresip/modules/jack/jack_play.c	/^static int start_jack(struct auplay_st *st)$/;"	f	file:
start_jack	baresip/modules/jack/jack_src.c	/^static int start_jack(struct ausrc_st *st)$/;"	f	file:
start_outbound	re-0.5.6/src/sipreg/reg.c	/^static void start_outbound(struct sipreg *reg, const struct sip_msg *msg)$/;"	f	file:
start_parallel	baresip/modules/gzrtp/stream.h	/^	bool start_parallel;$/;"	m	class:ZRTPConfig
start_player	baresip/src/audio.c	/^static int start_player(struct aurx *rx, struct audio *a)$/;"	f	file:
start_source	baresip/src/audio.c	/^static int start_source(struct autx *tx, struct audio *a)$/;"	f	file:
start_srtp	baresip/modules/libsrtp/srtp.c	/^static int start_srtp(struct menc_st *st, const char *suite)$/;"	f	file:
start_srtp	baresip/modules/srtp/srtp.c	/^static int start_srtp(struct menc_st *st, const char *suite_name)$/;"	f	file:
start_stream	baresip/modules/gzrtp/session.cpp	/^int Session::start_stream(Stream *stream)$/;"	f	class:Session
start_streaming	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int start_streaming(int fd)$/;"	f	file:
start_test	re-0.5.6/src/natbd/lifetime.c	/^static int start_test(struct nat_lifetime *nl)$/;"	f	file:
start_ticks	baresip/modules/debug_cmd/debug_cmd.c	/^static uint64_t start_ticks;          \/**< Ticks when app started         *\/$/;"	v	file:
start_ticks	baresip/modules/menu/menu.c	/^static uint64_t start_ticks;          \/**< Ticks when app started         *\/$/;"	v	file:
start_time	baresip/modules/debug_cmd/debug_cmd.c	/^static time_t start_time;             \/**< Start time of application      *\/$/;"	v	file:
started	baresip/modules/av1/decode.c	/^	bool started;$/;"	m	struct:viddec_state	file:
started	baresip/modules/dtls_srtp/dtls_srtp.c	/^	bool started;$/;"	m	struct:dtls_srtp	file:
started	baresip/modules/gtk/gtk_mod.h	/^	volatile bool started;$/;"	m	struct:vumeter_dec
started	baresip/modules/gtk/gtk_mod.h	/^	volatile bool started;$/;"	m	struct:vumeter_enc
started	baresip/modules/gzrtp/stream.h	/^	bool started() { return m_started; }$/;"	f	class:Stream
started	baresip/modules/ice/ice.c	/^	bool started;$/;"	m	struct:mnat_sess	file:
started	baresip/modules/vp8/decode.c	/^	bool started;$/;"	m	struct:viddec_state	file:
started	baresip/modules/vp9/decode.c	/^	bool started;$/;"	m	struct:viddec_state	file:
started	baresip/modules/vumeter/vumeter.c	/^	volatile bool started;$/;"	m	struct:vumeter_dec	file:
started	baresip/modules/vumeter/vumeter.c	/^	volatile bool started;$/;"	m	struct:vumeter_enc	file:
started	baresip/src/audio.c	/^	bool started;                 \/**< Stream is started flag          *\/$/;"	m	struct:audio	file:
started	baresip/src/core.h	/^	bool started;$/;"	m	struct:metric
started	baresip/src/video.c	/^	bool started;           \/**< True if video is started             *\/$/;"	m	struct:video	file:
stat	baresip/modules/vidloop/vidloop.c	/^	struct vstat stat;$/;"	m	struct:video_loop	typeref:struct:video_loop::vstat	file:
stat	re-0.5.6/src/jbuf/jbuf.c	/^	struct jbuf_stat stat; \/**< Jitter buffer Statistics       *\/$/;"	m	struct:jbuf	typeref:struct:jbuf::jbuf_stat	file:
state	baresip/modules/speex_aec/speex_aec.c	/^	SpeexEchoState *state;$/;"	m	struct:speex_st	file:
state	baresip/modules/speex_pp/speex_pp.c	/^	SpeexPreprocessState *state;$/;"	m	struct:preproc	file:
state	baresip/src/call.c	/^	enum state state;         \/**< Call state                           *\/$/;"	m	struct:call	typeref:enum:call::state	file:
state	baresip/src/call.c	/^enum state {$/;"	g	file:
state	re-0.5.6/include/re_sha.h	/^	uint32_t state[5];   \/**< Context state *\/$/;"	m	struct:__anon168
state	re-0.5.6/include/re_sipevent.h	/^	enum sipevent_subst state;$/;"	m	struct:sipevent_substate	typeref:enum:sipevent_substate::sipevent_subst
state	re-0.5.6/src/ice/ice.h	/^	enum ice_candpair_state state;\/**< Candidate pair state              *\/$/;"	m	struct:ice_candpair	typeref:enum:ice_candpair::ice_candpair_state
state	re-0.5.6/src/ice/ice.h	/^	enum ice_checkl_state state; \/**< State of the checklist             *\/$/;"	m	struct:icem	typeref:enum:icem::ice_checkl_state
state	re-0.5.6/src/sip/ctrans.c	/^	enum state state;$/;"	m	struct:sip_ctrans	typeref:enum:sip_ctrans::state	file:
state	re-0.5.6/src/sip/ctrans.c	/^enum state {$/;"	g	file:
state	re-0.5.6/src/sip/strans.c	/^	enum state state;$/;"	m	struct:sip_strans	typeref:enum:sip_strans::state	file:
state	re-0.5.6/src/sip/strans.c	/^enum state {$/;"	g	file:
state	re-0.5.6/src/telev/telev.c	/^	enum state state;$/;"	m	struct:telev	typeref:enum:telev::state	file:
state	re-0.5.6/src/telev/telev.c	/^enum state {$/;"	g	file:
state	re-0.5.6/src/websock/websock.c	/^	enum websock_state state;$/;"	m	struct:websock_conn	typeref:enum:websock_conn::websock_state	file:
state_name	baresip/src/call.c	/^static const char *state_name(enum state st)$/;"	f	file:
stateful	re-0.5.6/src/sip/request.c	/^	bool stateful;$/;"	m	struct:sip_request	file:
statename	re-0.5.6/src/sip/ctrans.c	/^static const char *statename(enum state state)$/;"	f	file:
statename	re-0.5.6/src/sip/strans.c	/^static const char *statename(enum state state)$/;"	f	file:
statmode	baresip/modules/menu/menu.c	/^enum statmode {$/;"	g	file:
statmode	baresip/modules/menu/menu.c	/^static enum statmode statmode;        \/**< Status mode                    *\/$/;"	v	typeref:enum:statmode	file:
stats	baresip/modules/avcodec/decode.c	/^	} stats;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::__anon35	file:
stats	baresip/modules/daala/decode.c	/^	} stats;$/;"	m	struct:viddec_state	typeref:struct:viddec_state::__anon80	file:
stats	baresip/modules/daala/encode.c	/^	} stats;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::__anon81	file:
stats	baresip/modules/v4l2_codec/v4l2_codec.c	/^	} stats;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::__anon84	file:
stats	baresip/src/audio.c	/^	} stats;$/;"	m	struct:aurx	typeref:struct:aurx::__anon14	file:
stats	baresip/src/audio.c	/^	} stats;$/;"	m	struct:autx	typeref:struct:autx::__anon11	file:
stats	rem-0.5.2/src/aubuf/aubuf.c	/^	} stats;$/;"	m	struct:aubuf	typeref:struct:aubuf::__anon194	file:
status	baresip/modules/gtk/call_window.c	/^	GtkLabel *status;$/;"	m	struct:call_window	file:
status	baresip/modules/natbd/natbd.c	/^static int status(struct re_printf *pf, void *unused)$/;"	f	file:
status	baresip/modules/presence/subscriber.c	/^	enum presence_status status;$/;"	m	struct:presence	typeref:enum:presence::presence_status	file:
status	baresip/src/contact.c	/^	enum presence_status status;$/;"	m	struct:contact	typeref:enum:contact::presence_status	file:
status	re-0.5.6/include/re_bfcp.h	/^	enum bfcp_reqstat status;$/;"	m	struct:bfcp_reqstatus	typeref:enum:bfcp_reqstatus::bfcp_reqstat
status_ga	baresip/modules/natbd/natbd.c	/^	int status_ga;$/;"	m	struct:natbd	file:
status_icon	baresip/modules/gtk/gtk_mod.c	/^	GtkStatusIcon *status_icon;$/;"	m	struct:gtk_mod	file:
status_icon_on_button_press	baresip/modules/gtk/gtk_mod.c	/^static gboolean status_icon_on_button_press(GtkStatusIcon *status_icon,$/;"	f	file:
status_label	baresip/modules/gtk/transfer_dialog.c	/^	GtkLabel *status_label;$/;"	m	struct:transfer_dialog	file:
status_menu	baresip/modules/gtk/gtk_mod.c	/^	GtkWidget *status_menu;$/;"	m	struct:gtk_mod	file:
status_progress	baresip/modules/gtk/transfer_dialog.c	/^static const char *status_progress = "progress";$/;"	v	file:
status_update	baresip/modules/presence/presence.c	/^static int status_update(struct ua *current_ua,$/;"	f	file:
statusinfo	re-0.5.6/include/re_bfcp.h	/^		char *statusinfo;$/;"	m	union:bfcp_attr::bfcp_union
std_sort_handler	re-0.5.6/src/dns/rrlist.c	/^static bool std_sort_handler(struct le *le1, struct le *le2, void *arg)$/;"	f	file:
stder	baresip/src/log.c	/^	bool stder;$/;"	m	struct:__anon22	file:
stderr_handler	baresip/modules/evdev/evdev.c	/^static int stderr_handler(const char *p, size_t sz, void *arg)$/;"	f	file:
stdio	baresip/modules/stdio/stdio.c	/^const struct mod_export DECL_EXPORTS(stdio) = {$/;"	v	typeref:struct:DECL_EXPORTS
stdout_handler	baresip/src/ui.c	/^static int stdout_handler(const char *p, size_t size, void *arg)$/;"	f	file:
step	baresip/modules/cairo/cairo.c	/^	double step;$/;"	m	struct:vidsrc_st	file:
step	rem-0.5.2/include/rem_vid.h	/^	unsigned step:3;$/;"	m	struct:vidfmt_compdesc
stereo	baresip/modules/opus/opus.h	/^	opus_int32 stereo;$/;"	m	struct:opus_param
stereo	baresip/modules/speex/speex.c	/^	SpeexStereoState stereo;$/;"	m	struct:audec_state	file:
stop	baresip/modules/gzrtp/stream.cpp	/^void Stream::stop()$/;"	f	class:Stream
stop_capturing	baresip/modules/v4l2/v4l2.c	/^static void stop_capturing(struct vidsrc_st *st)$/;"	f	file:
stop_capturing	baresip/modules/v4l2_codec/v4l2_codec.c	/^static void stop_capturing(int fd)$/;"	f	file:
stop_rx	baresip/src/audio.c	/^static void stop_rx(struct aurx *rx)$/;"	f	file:
stop_tx	baresip/src/audio.c	/^static void stop_tx(struct autx *tx, struct audio *a)$/;"	f	file:
str	baresip/test/account.c	/^static const char str[] =$/;"	v	file:
str	re-0.5.6/include/re_bfcp.h	/^		char *str;$/;"	m	union:bfcp_attr::bfcp_union
str	re-0.5.6/include/re_json.h	/^		char *str;$/;"	m	union:json_value::__anon192
str	re-0.5.6/include/re_odict.h	/^		char *str;             \/* ODICT_STRING *\/$/;"	m	union:odict_entry::__anon172
str	re-0.5.6/include/re_stun.h	/^		char *str;$/;"	m	union:stun_attr::__anon174
str	re-0.5.6/src/fmt/print.c	/^	char *str;$/;"	m	struct:dyn_print	file:
str2tp	baresip/src/bfcp.c	/^static enum bfcp_transp str2tp(const char *proto)$/;"	f	file:
str_casecmp	re-0.5.6/src/fmt/str.c	/^int str_casecmp(const char *s1, const char *s2)$/;"	f
str_cmp	re-0.5.6/src/fmt/str.c	/^int str_cmp(const char *s1, const char *s2)$/;"	f
str_decode	re-0.5.6/src/stun/attr.c	/^static int str_decode(struct mbuf *mb, char **str, size_t len)$/;"	f	file:
str_dup	re-0.5.6/src/fmt/str.c	/^int str_dup(char **dst, const char *src)$/;"	f
str_epoll	re-0.5.6/src/main/method.c	/^static const char str_epoll[]  = "epoll";    \/**< Linux epoll             *\/$/;"	v	file:
str_error	re-0.5.6/src/fmt/str_error.c	/^const char *str_error(int errnum, char *buf, size_t sz)$/;"	f
str_hex	re-0.5.6/src/fmt/str.c	/^int str_hex(uint8_t *hex, size_t len, const char *str)$/;"	f
str_isset	re-0.5.6/include/re_fmt.h	/^static inline bool str_isset(const char *s)$/;"	f
str_kqueue	re-0.5.6/src/main/method.c	/^static const char str_kqueue[] = "kqueue";$/;"	v	file:
str_ldup	re-0.5.6/src/sip/request.c	/^static int str_ldup(char **dst, const char *src, int len)$/;"	f	file:
str_len	re-0.5.6/src/fmt/str.c	/^size_t str_len(const char *s)$/;"	f
str_ncpy	re-0.5.6/src/fmt/str.c	/^void str_ncpy(char *dst, const char *src, size_t n)$/;"	f
str_nil	re-0.5.6/src/fmt/print.c	/^static const char str_nil[]  = "(nil)";$/;"	v	file:
str_poll	re-0.5.6/src/main/method.c	/^static const char str_poll[]   = "poll";     \/**< POSIX.1-2001 poll       *\/$/;"	v	file:
str_select	re-0.5.6/src/main/method.c	/^static const char str_select[] = "select";   \/**< POSIX.1-2001 select     *\/$/;"	v	file:
strans_cmp	re-0.5.6/src/bfcp/conn.c	/^static bool strans_cmp(const struct bfcp_strans *st,$/;"	f	file:
strans_cmp	re-0.5.6/src/sip/strans.c	/^static bool strans_cmp(const struct sip_msg *msg1, const struct sip_msg *msg2)$/;"	f	file:
stream	baresip/modules/gzrtp/gzrtp.cpp	/^	Stream *stream;$/;"	m	struct:menc_media	file:
stream	baresip/src/core.h	/^struct stream {$/;"	s
stream_alloc	baresip/src/stream.c	/^int stream_alloc(struct stream **sp, const struct stream_param *prm,$/;"	f
stream_close	baresip/src/stream.c	/^static void stream_close(struct stream *strm, int err)$/;"	f	file:
stream_debug	baresip/src/stream.c	/^int stream_debug(struct re_printf *pf, const struct stream *s)$/;"	f
stream_destructor	baresip/src/stream.c	/^static void stream_destructor(void *arg)$/;"	f	file:
stream_destructor	re-0.5.6/src/srtp/stream.c	/^static void stream_destructor(void *arg)$/;"	f	file:
stream_enable_rtp_timeout	baresip/src/stream.c	/^void stream_enable_rtp_timeout(struct stream *strm, uint32_t timeout_ms)$/;"	f
stream_error_h	baresip/src/core.h	/^typedef void (stream_error_h)(struct stream *strm, int err, void *arg);$/;"	t
stream_error_handler	baresip/src/call.c	/^static void stream_error_handler(struct stream *strm, int err, void *arg)$/;"	f	file:
stream_find	re-0.5.6/src/srtp/stream.c	/^static struct srtp_stream *stream_find(struct srtp *srtp, uint32_t ssrc)$/;"	f	file:
stream_get	re-0.5.6/src/srtp/stream.c	/^int stream_get(struct srtp_stream **strmp, struct srtp *srtp, uint32_t ssrc)$/;"	f
stream_get_seq	re-0.5.6/src/srtp/stream.c	/^int stream_get_seq(struct srtp_stream **strmp, struct srtp *srtp,$/;"	f
stream_hold	baresip/src/stream.c	/^void stream_hold(struct stream *s, bool hold)$/;"	f
stream_jbuf_stat	baresip/src/stream.c	/^int stream_jbuf_stat(struct re_printf *pf, const struct stream *s)$/;"	f
stream_new	re-0.5.6/src/srtp/stream.c	/^static int stream_new(struct srtp_stream **strmp, struct srtp *srtp,$/;"	f	file:
stream_param	baresip/src/core.h	/^struct stream_param {$/;"	s
stream_print	baresip/src/stream.c	/^int stream_print(struct re_printf *pf, const struct stream *s)$/;"	f
stream_rd	baresip/modules/portaudio/portaudio.c	/^	PaStream *stream_rd;$/;"	m	struct:ausrc_st	file:
stream_recv_handler	baresip/src/audio.c	/^static void stream_recv_handler(const struct rtp_header *hdr,$/;"	f	file:
stream_recv_handler	baresip/src/video.c	/^static void stream_recv_handler(const struct rtp_header *hdr,$/;"	f	file:
stream_remote_set	baresip/src/stream.c	/^static void stream_remote_set(struct stream *s)$/;"	f	file:
stream_reset	baresip/src/stream.c	/^void stream_reset(struct stream *s)$/;"	f
stream_rtcp_h	baresip/src/core.h	/^typedef void (stream_rtcp_h)(struct rtcp_msg *msg, void *arg);$/;"	t
stream_rtcp_stats	baresip/src/stream.c	/^const struct rtcp_stats *stream_rtcp_stats(const struct stream *strm)$/;"	f
stream_rtp_h	baresip/src/core.h	/^typedef void (stream_rtp_h)(const struct rtp_header *hdr,$/;"	t
stream_sdpmedia	baresip/src/stream.c	/^struct sdp_media *stream_sdpmedia(const struct stream *s)$/;"	f
stream_send	baresip/src/stream.c	/^int stream_send(struct stream *s, bool ext, bool marker, int pt, uint32_t ts,$/;"	f
stream_send_fir	baresip/src/stream.c	/^void stream_send_fir(struct stream *s, bool pli)$/;"	f
stream_set_bw	baresip/src/stream.c	/^void stream_set_bw(struct stream *s, uint32_t bps)$/;"	f
stream_set_error_handler	baresip/src/stream.c	/^void stream_set_error_handler(struct stream *strm,$/;"	f
stream_set_srate	baresip/src/stream.c	/^void stream_set_srate(struct stream *s, uint32_t srate_tx, uint32_t srate_rx)$/;"	f
stream_sock_alloc	baresip/src/stream.c	/^static int stream_sock_alloc(struct stream *s, int af)$/;"	f	file:
stream_start_keepalive	baresip/src/stream.c	/^static void stream_start_keepalive(struct stream *s)$/;"	f	file:
stream_update	baresip/src/stream.c	/^void stream_update(struct stream *s)$/;"	f
stream_update_encoder	baresip/src/stream.c	/^void stream_update_encoder(struct stream *s, int pt_enc)$/;"	f
stream_wr	baresip/modules/portaudio/portaudio.c	/^	PaStream *stream_wr;$/;"	m	struct:auplay_st	file:
streamer	baresip/modules/gst_video1/encode.c	/^	} streamer;$/;"	m	struct:videnc_state	typeref:struct:videnc_state::__anon91	file:
streaml	baresip/src/call.c	/^	struct list streaml;      \/**< List of mediastreams (struct stream) *\/$/;"	m	struct:call	typeref:struct:call::list	file:
streaml	re-0.5.6/src/srtp/srtp.h	/^	struct list streaml;        \/**< SRTP-streams (struct srtp_stream) *\/$/;"	m	struct:srtp	typeref:struct:srtp::list
strm	baresip/src/audio.c	/^	struct stream *strm;          \/**< Generic media stream            *\/$/;"	m	struct:audio	typeref:struct:audio::stream	file:
strm	baresip/src/video.c	/^	struct stream *strm;    \/**< Generic media stream                 *\/$/;"	m	struct:video	typeref:struct:video::stream	file:
strm_print	re-0.5.6/src/fmt/print.c	/^struct strm_print {$/;"	s	file:
stun	baresip/modules/stun/stun.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(stun) = {$/;"	v	typeref:struct:DECL_EXPORTS
stun	re-0.5.6/src/ice/ice.h	/^	struct stun *stun;           \/**< STUN Transport                     *\/$/;"	m	struct:icem	typeref:struct:icem::stun
stun	re-0.5.6/src/natbd/filtering.c	/^	struct stun *stun;     \/**< STUN instance              *\/$/;"	m	struct:nat_filtering	typeref:struct:nat_filtering::stun	file:
stun	re-0.5.6/src/natbd/genalg.c	/^	struct stun *stun;      \/**< STUN Client               *\/$/;"	m	struct:nat_genalg	typeref:struct:nat_genalg::stun	file:
stun	re-0.5.6/src/natbd/hairpinning.c	/^	struct stun *stun;       \/**< STUN Client             *\/$/;"	m	struct:nat_hairpinning	typeref:struct:nat_hairpinning::stun	file:
stun	re-0.5.6/src/natbd/lifetime.c	/^	struct stun *stun;                      \/**< STUN Client            *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::stun	file:
stun	re-0.5.6/src/natbd/mapping.c	/^	struct stun *stun;        \/**< STUN Instance             *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::stun	file:
stun	re-0.5.6/src/sip/keepalive_udp.c	/^	struct stun *stun;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::stun	file:
stun	re-0.5.6/src/sip/sip.h	/^	struct stun *stun;$/;"	m	struct:sip	typeref:struct:sip::stun
stun	re-0.5.6/src/stun/ctrans.c	/^	struct stun *stun;$/;"	m	struct:stun_ctrans	typeref:struct:stun_ctrans::stun	file:
stun	re-0.5.6/src/stun/keepalive.c	/^	struct stun *stun;        \/**< STUN instance                        *\/$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::stun	file:
stun	re-0.5.6/src/stun/stun.h	/^struct stun {$/;"	s
stun	re-0.5.6/src/turn/turnc.h	/^	struct stun *stun;             \/**< STUN Instance                   *\/$/;"	m	struct:turnc	typeref:struct:turnc::stun
stun_addr_decode	re-0.5.6/src/stun/addr.c	/^int stun_addr_decode(struct mbuf *mb, struct sa *addr, const uint8_t *tid)$/;"	f
stun_addr_encode	re-0.5.6/src/stun/addr.c	/^int stun_addr_encode(struct mbuf *mb, const struct sa *addr,$/;"	f
stun_af	re-0.5.6/include/re_stun.h	/^enum stun_af {$/;"	g
stun_alloc	re-0.5.6/src/stun/stun.c	/^int stun_alloc(struct stun **stunp, const struct stun_conf *conf,$/;"	f
stun_attr	re-0.5.6/include/re_stun.h	/^struct stun_attr {$/;"	s
stun_attr_decode	re-0.5.6/src/stun/attr.c	/^int stun_attr_decode(struct stun_attr **attrp, struct mbuf *mb,$/;"	f
stun_attr_dump	re-0.5.6/src/stun/attr.c	/^void stun_attr_dump(const struct stun_attr *a)$/;"	f
stun_attr_encode	re-0.5.6/src/stun/attr.c	/^int stun_attr_encode(struct mbuf *mb, uint16_t type, const void *v,$/;"	f
stun_attr_h	re-0.5.6/include/re_stun.h	/^typedef bool(stun_attr_h)(const struct stun_attr *attr, void *arg);$/;"	t
stun_attr_name	re-0.5.6/src/stun/attr.c	/^const char *stun_attr_name(uint16_t type)$/;"	f
stun_attrib	re-0.5.6/include/re_stun.h	/^enum stun_attrib {$/;"	g
stun_change_req	re-0.5.6/include/re_stun.h	/^struct stun_change_req {$/;"	s
stun_class_name	re-0.5.6/src/stun/hdr.c	/^const char *stun_class_name(uint16_t class)$/;"	f
stun_conf	re-0.5.6/include/re_stun.h	/^struct stun_conf {$/;"	s
stun_conf	re-0.5.6/src/stun/stun.c	/^struct stun_conf *stun_conf(struct stun *stun)$/;"	f
stun_ctrans	re-0.5.6/src/stun/ctrans.c	/^struct stun_ctrans {$/;"	s	file:
stun_ctrans_close	re-0.5.6/src/stun/ctrans.c	/^void stun_ctrans_close(struct stun *stun)$/;"	f
stun_ctrans_debug	re-0.5.6/src/stun/ctrans.c	/^int stun_ctrans_debug(struct re_printf *pf, const struct stun *stun)$/;"	f
stun_ctrans_recv	re-0.5.6/src/stun/ctrans.c	/^int stun_ctrans_recv(struct stun *stun, const struct stun_msg *msg,$/;"	f
stun_ctrans_request	re-0.5.6/src/stun/ctrans.c	/^int stun_ctrans_request(struct stun_ctrans **ctp, struct stun *stun, int proto,$/;"	f
stun_debug	re-0.5.6/src/stun/stun.c	/^int stun_debug(struct re_printf *pf, const struct stun *stun)$/;"	f
stun_dns	re-0.5.6/src/stun/dnsdisc.c	/^struct stun_dns {$/;"	s	file:
stun_dns_h	re-0.5.6/include/re_stun.h	/^typedef void (stun_dns_h)(int err, const struct sa *srv, void *arg);$/;"	t
stun_ereply	re-0.5.6/src/stun/rep.c	/^int stun_ereply(int proto, void *sock, const struct sa *dst, size_t presz,$/;"	f
stun_errcode	re-0.5.6/include/re_stun.h	/^struct stun_errcode {$/;"	s
stun_even_port	re-0.5.6/include/re_stun.h	/^struct stun_even_port {$/;"	s
stun_hdr	re-0.5.6/src/stun/stun.h	/^struct stun_hdr {$/;"	s
stun_hdr_decode	re-0.5.6/src/stun/hdr.c	/^int stun_hdr_decode(struct mbuf *mb, struct stun_hdr *hdr)$/;"	f
stun_hdr_encode	re-0.5.6/src/stun/hdr.c	/^int stun_hdr_encode(struct mbuf *mb, const struct stun_hdr *hdr)$/;"	f
stun_host	baresip/src/core.h	/^	char *stun_host;             \/**< STUN Hostname                      *\/$/;"	m	struct:account
stun_ind_h	re-0.5.6/include/re_stun.h	/^typedef void(stun_ind_h)(struct stun_msg *msg, void *arg);$/;"	t
stun_indication	re-0.5.6/src/stun/ind.c	/^int stun_indication(int proto, void *sock, const struct sa *dst, size_t presz,$/;"	f
stun_indlen	re-0.5.6/src/turn/turnc.c	/^static inline size_t stun_indlen(const struct sa *sa)$/;"	f	file:
stun_keepalive	re-0.5.6/src/stun/keepalive.c	/^struct stun_keepalive {$/;"	s	file:
stun_keepalive_alloc	re-0.5.6/src/stun/keepalive.c	/^int stun_keepalive_alloc(struct stun_keepalive **skap,$/;"	f
stun_keepalive_enable	re-0.5.6/src/stun/keepalive.c	/^void stun_keepalive_enable(struct stun_keepalive *ska, uint32_t interval)$/;"	f
stun_mapped_addr_h	re-0.5.6/include/re_stun.h	/^typedef void (stun_mapped_addr_h)(int err, const struct sa *map, void *arg);$/;"	t
stun_method	re-0.5.6/include/re_stun.h	/^enum stun_method {$/;"	g
stun_method_name	re-0.5.6/src/stun/hdr.c	/^const char *stun_method_name(uint16_t method)$/;"	f
stun_msg	re-0.5.6/src/stun/msg.c	/^struct stun_msg {$/;"	s	file:
stun_msg_attr	re-0.5.6/src/stun/msg.c	/^struct stun_attr *stun_msg_attr(const struct stun_msg *msg, uint16_t type)$/;"	f
stun_msg_attr_apply	re-0.5.6/src/stun/msg.c	/^struct stun_attr *stun_msg_attr_apply(const struct stun_msg *msg,$/;"	f
stun_msg_chk_fingerprint	re-0.5.6/src/stun/msg.c	/^int stun_msg_chk_fingerprint(const struct stun_msg *msg)$/;"	f
stun_msg_chk_mi	re-0.5.6/src/stun/msg.c	/^int stun_msg_chk_mi(const struct stun_msg *msg, const uint8_t *key,$/;"	f
stun_msg_class	re-0.5.6/include/re_stun.h	/^enum stun_msg_class {$/;"	g
stun_msg_class	re-0.5.6/src/stun/msg.c	/^uint16_t stun_msg_class(const struct stun_msg *msg)$/;"	f
stun_msg_decode	re-0.5.6/src/stun/msg.c	/^int stun_msg_decode(struct stun_msg **msgpp, struct mbuf *mb,$/;"	f
stun_msg_dump	re-0.5.6/src/stun/msg.c	/^void stun_msg_dump(const struct stun_msg *msg)$/;"	f
stun_msg_encode	re-0.5.6/src/stun/msg.c	/^int stun_msg_encode(struct mbuf *mb, uint16_t method, uint8_t class,$/;"	f
stun_msg_mcookie	re-0.5.6/src/stun/msg.c	/^bool stun_msg_mcookie(const struct stun_msg *msg)$/;"	f
stun_msg_method	re-0.5.6/src/stun/msg.c	/^uint16_t stun_msg_method(const struct stun_msg *msg)$/;"	f
stun_msg_tid	re-0.5.6/src/stun/msg.c	/^const uint8_t *stun_msg_tid(const struct stun_msg *msg)$/;"	f
stun_msg_type	re-0.5.6/src/stun/msg.c	/^uint16_t stun_msg_type(const struct stun_msg *msg)$/;"	f
stun_msg_vencode	re-0.5.6/src/stun/msg.c	/^int stun_msg_vencode(struct mbuf *mb, uint16_t method, uint8_t class,$/;"	f
stun_pass	baresip/src/core.h	/^	char *stun_pass;             \/**< STUN Password                      *\/$/;"	m	struct:account
stun_port	baresip/src/core.h	/^	uint16_t stun_port;          \/**< STUN Port number                   *\/$/;"	m	struct:account
stun_proto_tcp	re-0.5.6/src/stun/dnsdisc.c	/^const char *stun_proto_tcp = "tcp";   \/**< TCP Protocol  *\/$/;"	v
stun_proto_udp	re-0.5.6/src/stun/dnsdisc.c	/^const char *stun_proto_udp = "udp";   \/**< UDP Protocol  *\/$/;"	v
stun_reason_300	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_300 = "Try Alternate";$/;"	v
stun_reason_400	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_400 = "Bad Request";$/;"	v
stun_reason_401	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_401 = "Unauthorized";$/;"	v
stun_reason_403	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_403 = "Forbidden";$/;"	v
stun_reason_420	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_420 = "Unknown Attribute";$/;"	v
stun_reason_437	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_437 = "Allocation Mismatch";$/;"	v
stun_reason_438	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_438 = "Stale Nonce";$/;"	v
stun_reason_440	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_440 = "Address Family not Supported";$/;"	v
stun_reason_441	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_441 = "Wrong Credentials";$/;"	v
stun_reason_442	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_442 = "Unsupported Transport Protocol";$/;"	v
stun_reason_443	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_443 = "Peer Address Family Mismatch";$/;"	v
stun_reason_486	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_486 = "Allocation Quota Reached";$/;"	v
stun_reason_500	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_500 = "Server Error";$/;"	v
stun_reason_508	re-0.5.6/src/stun/stunstr.c	/^const char *stun_reason_508 = "Insufficient Capacity";$/;"	v
stun_recv	re-0.5.6/src/stun/stun.c	/^int stun_recv(struct stun *stun, struct mbuf *mb)$/;"	f
stun_reply	re-0.5.6/src/stun/rep.c	/^int stun_reply(int proto, void *sock, const struct sa *dst, size_t presz,$/;"	f
stun_request	re-0.5.6/src/stun/req.c	/^int stun_request(struct stun_ctrans **ctp, struct stun *stun, int proto,$/;"	f
stun_resp_h	re-0.5.6/include/re_stun.h	/^typedef void(stun_resp_h)(int err, uint16_t scode, const char *reason,$/;"	t
stun_resp_handler	baresip/modules/ice/ice.c	/^static void stun_resp_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler	re-0.5.6/src/natbd/filtering.c	/^static void stun_response_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler	re-0.5.6/src/natbd/genalg.c	/^static void stun_response_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler	re-0.5.6/src/natbd/hairpinning.c	/^static void stun_response_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler	re-0.5.6/src/natbd/mapping.c	/^static void stun_response_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler	re-0.5.6/src/sip/keepalive_udp.c	/^static void stun_response_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler	re-0.5.6/src/stun/keepalive.c	/^static void stun_response_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler2	re-0.5.6/src/natbd/hairpinning.c	/^static void stun_response_handler2(int err, uint16_t scode, const char *reason,$/;"	f	file:
stun_response_handler_x	re-0.5.6/src/natbd/lifetime.c	/^static void stun_response_handler_x(int err, uint16_t scode,$/;"	f	file:
stun_response_handler_y	re-0.5.6/src/natbd/lifetime.c	/^static void stun_response_handler_y(int err, uint16_t scode,$/;"	f	file:
stun_send	re-0.5.6/src/stun/stun.c	/^int stun_send(int proto, void *sock, const struct sa *dst, struct mbuf *mb)$/;"	f
stun_server_discover	re-0.5.6/src/stun/dnsdisc.c	/^int stun_server_discover(struct stun_dns **dnsp, struct dnsc *dnsc,$/;"	f
stun_software	re-0.5.6/src/stun/stun.c	/^const char *stun_software = "libre v" VERSION " (" ARCH "\/" OS ")";$/;"	v
stun_srv	baresip/modules/natbd/natbd.c	/^	struct sa stun_srv;$/;"	m	struct:natbd	typeref:struct:natbd::sa	file:
stun_srv	re-0.5.6/src/ice/ice.h	/^	struct sa stun_srv;          \/**< STUN Server IP address and port    *\/$/;"	m	struct:icem	typeref:struct:icem::sa
stun_transp	re-0.5.6/include/re_stun.h	/^enum stun_transp {$/;"	g
stun_transp_name	re-0.5.6/src/stun/stunstr.c	/^const char *stun_transp_name(enum stun_transp tp)$/;"	f
stun_unknown_attr	re-0.5.6/include/re_stun.h	/^struct stun_unknown_attr {$/;"	s
stun_usage_behavior	re-0.5.6/src/stun/dnsdisc.c	/^const char *stun_usage_behavior  = "stun-behavior";$/;"	v
stun_usage_binding	re-0.5.6/src/stun/dnsdisc.c	/^const char *stun_usage_binding   = "stun";  \/**< Binding usage *\/$/;"	v
stun_usage_relay	re-0.5.6/src/stun/dnsdisc.c	/^const char *stun_usage_relay     = "turn";$/;"	v
stun_user	baresip/src/core.h	/^	char *stun_user;             \/**< STUN Username                      *\/$/;"	m	struct:account
stunc_resp_handler	re-0.5.6/src/ice/connchk.c	/^static void stunc_resp_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
stuns_usage_behavior	re-0.5.6/src/stun/dnsdisc.c	/^const char *stuns_usage_behavior = "stun-behaviors";$/;"	v
stuns_usage_binding	re-0.5.6/src/stun/dnsdisc.c	/^const char *stuns_usage_binding  = "stuns"; \/**< Binding usage TLS *\/$/;"	v
stuns_usage_relay	re-0.5.6/src/stun/dnsdisc.c	/^const char *stuns_usage_relay    = "turns";$/;"	v
stunsrv_decode	baresip/src/account.c	/^static int stunsrv_decode(struct account *acc, const struct sip_addr *aor)$/;"	f	file:
stunsrv_ereply	re-0.5.6/src/ice/stunsrv.c	/^static int stunsrv_ereply(struct icem_comp *comp, const struct sa *src,$/;"	f	file:
sub	baresip/modules/mwi/mwi.c	/^	struct sipsub *sub;$/;"	m	struct:mwi	typeref:struct:mwi::sipsub	file:
sub	baresip/modules/presence/subscriber.c	/^	struct sipsub *sub;$/;"	m	struct:presence	typeref:struct:presence::sipsub	file:
sub	baresip/src/call.c	/^	struct sipsub *sub;       \/**< Call transfer REFER subscription     *\/$/;"	m	struct:call	typeref:struct:call::sipsub	file:
sub_cmp_half_handler	re-0.5.6/src/sipevent/listen.c	/^static bool sub_cmp_half_handler(struct le *le, void *arg)$/;"	f	file:
sub_cmp_handler	re-0.5.6/src/sipevent/listen.c	/^static bool sub_cmp_handler(struct le *le, void *arg)$/;"	f	file:
sub_handler	baresip/modules/presence/notifier.c	/^static bool sub_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
sub_handler	baresip/src/ua.c	/^static bool sub_handler(const struct sip_msg *msg, void *arg)$/;"	f	file:
subcmp	re-0.5.6/src/sipevent/listen.c	/^struct subcmp {$/;"	s	file:
subh	baresip/src/ua.c	/^	sip_msg_h *subh;               \/**< Subscribe handler               *\/$/;"	m	struct:__anon7	file:
subh	re-0.5.6/src/sipevent/sipevent.h	/^	sip_msg_h *subh;$/;"	m	struct:sipevent_sock
subscribe	baresip/modules/presence/subscriber.c	/^static int subscribe(struct presence *pres)$/;"	f	file:
subscribe_handler	re-0.5.6/src/sipevent/listen.c	/^static void subscribe_handler(struct sipevent_sock *sock,$/;"	f	file:
subscribed	re-0.5.6/src/sipevent/sipevent.h	/^	bool subscribed;$/;"	m	struct:sipnot
subscribed	re-0.5.6/src/sipevent/sipevent.h	/^	bool subscribed;$/;"	m	struct:sipsub
subscriber_close	baresip/modules/presence/subscriber.c	/^void subscriber_close(void)$/;"	f
subscriber_close_all	baresip/modules/presence/subscriber.c	/^void subscriber_close_all(void)$/;"	f
subscriber_init	baresip/modules/presence/subscriber.c	/^int subscriber_init(void)$/;"	f
subscription_pattern	baresip/modules/mqtt/subscribe.c	/^static const char *subscription_pattern = "\/baresip\/+";$/;"	v	file:
substate	re-0.5.6/src/sipevent/sipevent.h	/^	enum sipevent_subst substate;$/;"	m	struct:sipnot	typeref:enum:sipnot::sipevent_subst
subtype	re-0.5.6/include/re_msg.h	/^	struct pl subtype;$/;"	m	struct:msg_ctype	typeref:struct:msg_ctype::pl
suite	baresip/modules/libsrtp/sdes.h	/^	struct pl suite;$/;"	m	struct:crypto	typeref:struct:crypto::pl
suite	baresip/modules/srtp/sdes.h	/^	struct pl suite;$/;"	m	struct:crypto	typeref:struct:crypto::pl
sup	re-0.5.6/include/re_sdp.h	/^	bool sup;$/;"	m	struct:sdp_format
supattr	re-0.5.6/include/re_bfcp.h	/^		struct bfcp_supattr supattr;$/;"	m	union:bfcp_attr::bfcp_union	typeref:struct:bfcp_attr::bfcp_union::bfcp_supattr
supprim	re-0.5.6/include/re_bfcp.h	/^		struct bfcp_supprim supprim;$/;"	m	union:bfcp_attr::bfcp_union	typeref:struct:bfcp_attr::bfcp_union::bfcp_supprim
surface	baresip/modules/cairo/cairo.c	/^	cairo_surface_t *surface;$/;"	m	struct:vidsrc_st	file:
surface	baresip/modules/directfb/directfb.c	/^	IDirectFBSurface *surface;     \/**< Surface for pixels    *\/$/;"	m	struct:vidisp_st	file:
surface	baresip/modules/rst/video.c	/^	cairo_surface_t *surface;$/;"	m	struct:vidsrc_st	file:
surface	baresip/modules/vidinfo/vidinfo.h	/^	cairo_surface_t *surface;$/;"	m	struct:panel
surface_logo	baresip/modules/cairo/cairo.c	/^	cairo_surface_t *surface_logo;$/;"	m	struct:vidsrc_st	file:
sw	re-0.5.6/src/ice/stunsrv.c	/^static const char *sw = "ice stunsrv v" VERSION " (" ARCH "\/" OS ")";$/;"	v	file:
switch_audio_player	baresip/modules/menu/menu.c	/^static int switch_audio_player(struct re_printf *pf, void *arg)$/;"	f	file:
switch_audio_source	baresip/modules/menu/menu.c	/^static int switch_audio_source(struct re_printf *pf, void *arg)$/;"	f	file:
sws	baresip/modules/swscale/swscale.c	/^	struct SwsContext *sws;$/;"	m	struct:swscale_enc	typeref:struct:swscale_enc::SwsContext	file:
swscale	baresip/modules/swscale/swscale.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(swscale) = {$/;"	v	typeref:struct:DECL_EXPORTS
swscale_enc	baresip/modules/swscale/swscale.c	/^struct swscale_enc {$/;"	s	file:
swscale_format	baresip/modules/swscale/swscale.c	/^static enum vidfmt swscale_format = VID_FMT_YUV420P;  \/* XXX: configurable *\/$/;"	v	typeref:enum:vidfmt	file:
synchEnter	baresip/modules/gzrtp/stream.cpp	/^void Stream::synchEnter()$/;"	f	class:Stream
synchLeave	baresip/modules/gzrtp/stream.cpp	/^void Stream::synchLeave()$/;"	f	class:Stream
sys_arch_get	re-0.5.6/src/sys/sys.c	/^const char *sys_arch_get(void)$/;"	f
sys_build_get	re-0.5.6/src/sys/sys.c	/^int sys_build_get(struct re_printf *pf, void *unused)$/;"	f
sys_coredump_set	re-0.5.6/src/sys/sys.c	/^int sys_coredump_set(bool enable)$/;"	f
sys_daemon	re-0.5.6/src/sys/daemon.c	/^int sys_daemon(void)$/;"	f
sys_htoll	re-0.5.6/src/sys/endian.c	/^uint32_t sys_htoll(uint32_t v)$/;"	f
sys_htols	re-0.5.6/src/sys/endian.c	/^uint16_t sys_htols(uint16_t v)$/;"	f
sys_htonll	re-0.5.6/src/sys/endian.c	/^uint64_t sys_htonll(uint64_t v)$/;"	f
sys_kernel_get	re-0.5.6/src/sys/sys.c	/^int sys_kernel_get(struct re_printf *pf, void *unused)$/;"	f
sys_libre_version_get	re-0.5.6/src/sys/sys.c	/^const char *sys_libre_version_get(void)$/;"	f
sys_ltohl	re-0.5.6/src/sys/endian.c	/^uint32_t sys_ltohl(uint32_t v)$/;"	f
sys_ltohs	re-0.5.6/src/sys/endian.c	/^uint16_t sys_ltohs(uint16_t v)$/;"	f
sys_msleep	re-0.5.6/include/re_sys.h	/^static inline void sys_msleep(unsigned int ms)$/;"	f
sys_ntohll	re-0.5.6/src/sys/endian.c	/^uint64_t sys_ntohll(uint64_t v)$/;"	f
sys_os_get	re-0.5.6/src/sys/sys.c	/^const char *sys_os_get(void)$/;"	f
sys_rel_get	re-0.5.6/src/sys/sys.c	/^int sys_rel_get(uint32_t *rel, uint32_t *maj, uint32_t *min, uint32_t *patch)$/;"	f
sys_username	re-0.5.6/src/sys/sys.c	/^const char *sys_username(void)$/;"	f
sys_usleep	re-0.5.6/src/sys/sleep.c	/^void sys_usleep(unsigned int us)$/;"	f
syslog	baresip/modules/syslog/syslog.c	/^const struct mod_export DECL_EXPORTS(syslog) = {$/;"	v	typeref:struct:DECL_EXPORTS
syslog_handler	baresip/modules/syslog/syslog.c	/^static void syslog_handler(int level, const char *p, size_t len, void *arg)$/;"	f	file:
sz	baresip/modules/avformat/avformat.c	/^	struct vidsz sz;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
sz	baresip/modules/v4l2/v4l2.c	/^	struct vidsz sz;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsz	file:
sz	re-0.5.6/src/net/if.c	/^	size_t sz;     \/**< Size of buffer *\/$/;"	m	struct:ifentry	file:
sz_max	baresip/modules/avcodec/encode.c	/^	size_t sz_max; \/* todo: figure out proper buffer size *\/$/;"	m	struct:videnc_state	file:
t	baresip/modules/av1/decode.c	/^	unsigned t:1;$/;"	m	struct:hdr	file:
t	baresip/modules/vp8/decode.c	/^	unsigned t:1;$/;"	m	struct:hdr	file:
tag	baresip/modules/libsrtp/sdes.h	/^	uint32_t tag;$/;"	m	struct:crypto
tag	baresip/modules/srtp/sdes.h	/^	uint32_t tag;$/;"	m	struct:crypto
tag	re-0.5.6/include/re_sip.h	/^	struct pl tag;$/;"	m	struct:sip_taddr	typeref:struct:sip_taddr::pl
tag	re-0.5.6/include/re_sip.h	/^	uint64_t tag;          \/**< Opaque tag                           *\/$/;"	m	struct:sip_msg
tag_len	re-0.5.6/src/srtp/srtp.h	/^		size_t tag_len;     \/**< Authentication tag length [bytes] *\/$/;"	m	struct:srtp::comp
tail	re-0.5.6/include/re_list.h	/^	struct le *tail;  \/**< Last list element  *\/$/;"	m	struct:list	typeref:struct:list::le
tapc	rem-0.5.2/include/rem_auresamp.h	/^	size_t tapc;           \/**< FIR filter tap count *\/$/;"	m	struct:auresamp
tapv	rem-0.5.2/include/rem_auresamp.h	/^	const int16_t *tapv;   \/**< FIR filter taps *\/$/;"	m	struct:auresamp
target	re-0.5.6/include/re_dns.h	/^			char *target;$/;"	m	struct:dnsrr::__anon154::__anon162
tc	baresip/modules/cons/cons.c	/^	struct tcp_conn *tc;$/;"	m	struct:ui_st	typeref:struct:ui_st::tcp_conn	file:
tc	baresip/modules/rst/rst.c	/^	struct tcp_conn *tc;$/;"	m	struct:rst	typeref:struct:rst::tcp_conn	file:
tc	re-0.5.6/include/re_dns.h	/^	bool tc;$/;"	m	struct:dnshdr
tc	re-0.5.6/src/dns/client.c	/^	struct tcpconn *tc;$/;"	m	struct:dns_query	typeref:struct:dns_query::tcpconn	file:
tc	re-0.5.6/src/http/client.c	/^	struct tcp_conn *tc;$/;"	m	struct:conn	typeref:struct:conn::tcp_conn	file:
tc	re-0.5.6/src/http/server.c	/^	struct tcp_conn *tc;$/;"	m	struct:http_conn	typeref:struct:http_conn::tcp_conn	file:
tc	re-0.5.6/src/natbd/hairpinning.c	/^	struct tcp_conn *tc;     \/**< Client TCP Connection   *\/$/;"	m	struct:nat_hairpinning	typeref:struct:nat_hairpinning::tcp_conn	file:
tc	re-0.5.6/src/natbd/mapping.c	/^	struct tcp_conn *tc;      \/**< TCP connection            *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::tcp_conn	file:
tc	re-0.5.6/src/sip/transp.c	/^	struct tcp_conn *tc;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::tcp_conn	file:
tc	re-0.5.6/src/websock/websock.c	/^	struct tcp_conn *tc;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::tcp_conn	file:
tc2	re-0.5.6/src/natbd/hairpinning.c	/^	struct tcp_conn *tc2;    \/**< Server TCP Connection   *\/$/;"	m	struct:nat_hairpinning	typeref:struct:nat_hairpinning::tcp_conn	file:
tcp	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	struct tcp_conn *tcp;$/;"	m	struct:tls_conn	typeref:struct:tls_conn::tcp_conn	file:
tcp_accept	re-0.5.6/src/tcp/tcp.c	/^int tcp_accept(struct tcp_conn **tcp, struct tcp_sock *ts, tcp_estab_h *eh,$/;"	f
tcp_close_h	re-0.5.6/include/re_tcp.h	/^typedef void (tcp_close_h)(int err, void *arg);$/;"	t
tcp_close_handler	baresip/modules/cons/cons.c	/^static void tcp_close_handler(int err, void *arg)$/;"	f	file:
tcp_close_handler	re-0.5.6/src/dns/client.c	/^static void tcp_close_handler(int err, void *arg)$/;"	f	file:
tcp_close_handler	re-0.5.6/src/natbd/hairpinning.c	/^static void tcp_close_handler(int err, void *arg)$/;"	f	file:
tcp_close_handler	re-0.5.6/src/natbd/mapping.c	/^static void tcp_close_handler(int err, void *arg)$/;"	f	file:
tcp_close_handler	re-0.5.6/src/sip/transp.c	/^static void tcp_close_handler(int err, void *arg)$/;"	f	file:
tcp_close_handler	re-0.5.6/src/stun/ctrans.c	/^static void tcp_close_handler(int err, void *arg)$/;"	f	file:
tcp_close_handler2	re-0.5.6/src/natbd/hairpinning.c	/^static void tcp_close_handler2(int err, void *arg)$/;"	f	file:
tcp_conn	re-0.5.6/src/tcp/tcp.c	/^struct tcp_conn {$/;"	s	file:
tcp_conn_alloc	re-0.5.6/src/tcp/tcp.c	/^int tcp_conn_alloc(struct tcp_conn **tcp,$/;"	f
tcp_conn_bind	re-0.5.6/src/tcp/tcp.c	/^int tcp_conn_bind(struct tcp_conn *tc, const struct sa *local)$/;"	f
tcp_conn_connect	re-0.5.6/src/tcp/tcp.c	/^int tcp_conn_connect(struct tcp_conn *tc, const struct sa *peer)$/;"	f
tcp_conn_fd	re-0.5.6/src/tcp/tcp.c	/^int tcp_conn_fd(const struct tcp_conn *tc)$/;"	f
tcp_conn_h	re-0.5.6/include/re_tcp.h	/^typedef void (tcp_conn_h)(const struct sa *peer, void *arg);$/;"	t
tcp_conn_handler	baresip/modules/cons/cons.c	/^static void tcp_conn_handler(const struct sa *peer, void *arg)$/;"	f	file:
tcp_conn_handler	re-0.5.6/src/natbd/hairpinning.c	/^static void tcp_conn_handler(const struct sa *peer, void *arg)$/;"	f	file:
tcp_conn_handler	re-0.5.6/src/tcp/tcp.c	/^static void tcp_conn_handler(int flags, void *arg)$/;"	f	file:
tcp_conn_local_get	re-0.5.6/src/tcp/tcp.c	/^int tcp_conn_local_get(const struct tcp_conn *tc, struct sa *local)$/;"	f
tcp_conn_peer_get	re-0.5.6/src/tcp/tcp.c	/^int tcp_conn_peer_get(const struct tcp_conn *tc, struct sa *peer)$/;"	f
tcp_conn_rxsz_set	re-0.5.6/src/tcp/tcp.c	/^void tcp_conn_rxsz_set(struct tcp_conn *tc, size_t rxsz)$/;"	f
tcp_conn_txqsz	re-0.5.6/src/tcp/tcp.c	/^size_t tcp_conn_txqsz(const struct tcp_conn *tc)$/;"	f
tcp_conn_txqsz_set	re-0.5.6/src/tcp/tcp.c	/^void tcp_conn_txqsz_set(struct tcp_conn *tc, size_t txqsz)$/;"	f
tcp_connect	re-0.5.6/src/tcp/tcp_high.c	/^int tcp_connect(struct tcp_conn **tcp, const struct sa *peer,$/;"	f
tcp_connect_handler	re-0.5.6/src/sip/transp.c	/^static void tcp_connect_handler(const struct sa *paddr, void *arg)$/;"	f	file:
tcp_estab_h	re-0.5.6/include/re_tcp.h	/^typedef void (tcp_estab_h)(void *arg);$/;"	t
tcp_estab_handler	re-0.5.6/src/dns/client.c	/^static void tcp_estab_handler(void *arg)$/;"	f	file:
tcp_estab_handler	re-0.5.6/src/natbd/hairpinning.c	/^static void tcp_estab_handler(void *arg)$/;"	f	file:
tcp_estab_handler	re-0.5.6/src/natbd/mapping.c	/^static void tcp_estab_handler(void *arg)$/;"	f	file:
tcp_estab_handler	re-0.5.6/src/sip/transp.c	/^static void tcp_estab_handler(void *arg)$/;"	f	file:
tcp_estab_handler	re-0.5.6/src/stun/ctrans.c	/^static void tcp_estab_handler(void *arg)$/;"	f	file:
tcp_hash_size	re-0.5.6/include/re_dns.h	/^	uint32_t tcp_hash_size;$/;"	m	struct:dnsc_conf
tcp_helper	re-0.5.6/src/tcp/tcp.c	/^struct tcp_helper {$/;"	s	file:
tcp_helper_estab_h	re-0.5.6/include/re_tcp.h	/^typedef bool (tcp_helper_estab_h)(int *err, bool active, void *arg);$/;"	t
tcp_helper_recv_h	re-0.5.6/include/re_tcp.h	/^typedef bool (tcp_helper_recv_h)(int *err, struct mbuf *mb, bool *estab,$/;"	t
tcp_helper_send_h	re-0.5.6/include/re_tcp.h	/^typedef bool (tcp_helper_send_h)(int *err, struct mbuf *mb, void *arg);$/;"	t
tcp_listen	re-0.5.6/src/tcp/tcp_high.c	/^int tcp_listen(struct tcp_sock **tsp, const struct sa *local,$/;"	f
tcp_local_get	re-0.5.6/src/tcp/tcp_high.c	/^int tcp_local_get(const struct tcp_sock *ts, struct sa *local)$/;"	f
tcp_qent	re-0.5.6/src/tcp/tcp.c	/^struct tcp_qent {$/;"	s	file:
tcp_recv_h	re-0.5.6/include/re_tcp.h	/^typedef void (tcp_recv_h)(struct mbuf *mb, void *arg);$/;"	t
tcp_recv_handler	baresip/modules/cons/cons.c	/^static void tcp_recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
tcp_recv_handler	re-0.5.6/src/dns/client.c	/^static void tcp_recv_handler(struct mbuf *mbrx, void *arg)$/;"	f	file:
tcp_recv_handler	re-0.5.6/src/natbd/hairpinning.c	/^static void tcp_recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
tcp_recv_handler	re-0.5.6/src/natbd/mapping.c	/^static void tcp_recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
tcp_recv_handler	re-0.5.6/src/sip/transp.c	/^static void tcp_recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
tcp_recv_handler	re-0.5.6/src/stun/ctrans.c	/^static void tcp_recv_handler(struct mbuf *mb, void *arg)$/;"	f	file:
tcp_recv_handler	re-0.5.6/src/tcp/tcp.c	/^static void tcp_recv_handler(int flags, void *arg)$/;"	f	file:
tcp_recv_handler2	re-0.5.6/src/natbd/hairpinning.c	/^static void tcp_recv_handler2(struct mbuf *mb, void *arg)$/;"	f	file:
tcp_register_helper	re-0.5.6/src/tcp/tcp.c	/^int tcp_register_helper(struct tcp_helper **thp, struct tcp_conn *tc,$/;"	f
tcp_reject	re-0.5.6/src/tcp/tcp.c	/^void tcp_reject(struct tcp_sock *ts)$/;"	f
tcp_send	re-0.5.6/src/tcp/tcp.c	/^int tcp_send(struct tcp_conn *tc, struct mbuf *mb)$/;"	f
tcp_send_h	re-0.5.6/include/re_tcp.h	/^typedef void (tcp_send_h)(void *arg);$/;"	t
tcp_send_helper	re-0.5.6/src/tcp/tcp.c	/^int tcp_send_helper(struct tcp_conn *tc, struct mbuf *mb,$/;"	f
tcp_send_internal	re-0.5.6/src/tcp/tcp.c	/^static int tcp_send_internal(struct tcp_conn *tc, struct mbuf *mb,$/;"	f	file:
tcp_set_handlers	re-0.5.6/src/tcp/tcp.c	/^void tcp_set_handlers(struct tcp_conn *tc, tcp_estab_h *eh, tcp_recv_h *rh,$/;"	f
tcp_set_send	re-0.5.6/src/tcp/tcp.c	/^int tcp_set_send(struct tcp_conn *tc, tcp_send_h *sendh)$/;"	f
tcp_sock	re-0.5.6/src/tcp/tcp.c	/^struct tcp_sock {$/;"	s	file:
tcp_sock_alloc	re-0.5.6/src/tcp/tcp.c	/^int tcp_sock_alloc(struct tcp_sock **tsp, const struct sa *local,$/;"	f
tcp_sock_bind	re-0.5.6/src/tcp/tcp.c	/^int tcp_sock_bind(struct tcp_sock *ts, const struct sa *local)$/;"	f
tcp_sock_listen	re-0.5.6/src/tcp/tcp.c	/^int tcp_sock_listen(struct tcp_sock *ts, int backlog)$/;"	f
tcp_sock_local_get	re-0.5.6/src/tcp/tcp.c	/^int tcp_sock_local_get(const struct tcp_sock *ts, struct sa *local)$/;"	f
tcp_sockopt_set	re-0.5.6/src/tcp/tcp.c	/^static void tcp_sockopt_set(int fd)$/;"	f	file:
tcp_timeout_handler	re-0.5.6/src/dns/client.c	/^static void tcp_timeout_handler(void *arg)$/;"	f	file:
tcp_write_handler	baresip/modules/cons/cons.c	/^static int tcp_write_handler(const char *p, size_t size, void *arg)$/;"	f	file:
tcpconn	re-0.5.6/src/dns/client.c	/^struct tcpconn {$/;"	s	file:
tcpconn_alloc	re-0.5.6/src/dns/client.c	/^static int tcpconn_alloc(struct tcpconn **tcpp, struct dnsc *dnsc,$/;"	f	file:
tcpconn_close	re-0.5.6/src/dns/client.c	/^static void tcpconn_close(struct tcpconn *tc, int err)$/;"	f	file:
tcpconn_cmp_handler	re-0.5.6/src/dns/client.c	/^static bool tcpconn_cmp_handler(struct le *le, void *arg)$/;"	f	file:
tcpconn_destructor	re-0.5.6/src/dns/client.c	/^static void tcpconn_destructor(void *arg)$/;"	f	file:
tcpconn_fail_handler	re-0.5.6/src/dns/client.c	/^static bool tcpconn_fail_handler(struct le *le, void *arg)$/;"	f	file:
tcpconn_timeout_handler	re-0.5.6/src/dns/client.c	/^static void tcpconn_timeout_handler(void *arg)$/;"	f	file:
tcptype	re-0.5.6/include/re_ice.h	/^	enum ice_tcptype tcptype; \/**< TCP candidate type (TCP-only)        *\/$/;"	m	struct:ice_cand_attr	typeref:enum:ice_cand_attr::ice_tcptype
tcv	re-0.5.6/src/natbd/mapping.c	/^	struct tcp_conn *tcv[3];  \/**< TCP Connections           *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::tcp_conn	file:
telev	baresip/src/audio.c	/^	struct telev *telev;          \/**< Telephony events                *\/$/;"	m	struct:audio	typeref:struct:audio::telev	file:
telev	re-0.5.6/src/telev/telev.c	/^struct telev {$/;"	s	file:
telev_alloc	re-0.5.6/src/telev/telev.c	/^int telev_alloc(struct telev **tp, uint32_t ptime)$/;"	f
telev_code2digit	re-0.5.6/src/telev/telev.c	/^int telev_code2digit(int code)$/;"	f
telev_digit2code	re-0.5.6/src/telev/telev.c	/^int telev_digit2code(int digit)$/;"	f
telev_fmt	re-0.5.6/src/telev/telev.c	/^struct telev_fmt {$/;"	s	file:
telev_poll	re-0.5.6/src/telev/telev.c	/^int telev_poll(struct telev *tel, bool *marker, struct mbuf *mb)$/;"	f
telev_recv	re-0.5.6/src/telev/telev.c	/^int telev_recv(struct telev *tel, struct mbuf *mb, int *event, bool *end)$/;"	f
telev_rtpfmt	re-0.5.6/src/telev/telev.c	/^const char telev_rtpfmt[] = "telephone-event";$/;"	v
telev_send	re-0.5.6/src/telev/telev.c	/^int telev_send(struct telev *tel, int event, bool end)$/;"	f
telev_set_srate	re-0.5.6/src/telev/telev.c	/^int telev_set_srate(struct telev *tel, uint32_t srate)$/;"	f
temp_ref	baresip/modules/avcodec/h26x.h	/^	uint8_t temp_ref;            \/**< Temporal Reference              *\/$/;"	m	struct:h263_strm
term	baresip/modules/stdio/stdio.c	/^	struct termios term;$/;"	m	struct:ui_st	typeref:struct:ui_st::termios	file:
term_set	baresip/modules/stdio/stdio.c	/^	bool term_set;$/;"	m	struct:ui_st	file:
term_setup	baresip/modules/stdio/stdio.c	/^static int term_setup(struct ui_st *st)$/;"	f	file:
termconf	re-0.5.6/src/sipevent/sipevent.h	/^	bool termconf;$/;"	m	struct:sipsub
terminate	baresip/test/sip/sipsrv.h	/^	bool terminate;$/;"	m	struct:sip_server
terminate	re-0.5.6/src/sip/ctrans.c	/^static void terminate(struct sip_ctrans *ct, int err)$/;"	f	file:
terminate	re-0.5.6/src/sip/request.c	/^static void terminate(struct sip_request *req, int err,$/;"	f	file:
terminate	re-0.5.6/src/sipevent/notify.c	/^static bool terminate(struct sipnot *not, enum sipevent_reason reason)$/;"	f	file:
terminate	re-0.5.6/src/sipevent/subscribe.c	/^static bool terminate(struct sipsub *sub)$/;"	f	file:
terminate	re-0.5.6/src/sipsess/sess.c	/^static bool terminate(struct sipsess *sess)$/;"	f	file:
terminated	baresip/modules/ice/ice.c	/^	bool terminated;$/;"	m	struct:mnat_media	file:
terminated	baresip/modules/natbd/natbd.c	/^	bool terminated;$/;"	m	struct:natbd	file:
terminated	baresip/src/core.h	/^	bool terminated;         \/**< Stream is terminated flag             *\/$/;"	m	struct:stream
terminated	re-0.5.6/src/sipevent/sipevent.h	/^	bool terminated;$/;"	m	struct:sipnot
terminated	re-0.5.6/src/sipevent/sipevent.h	/^	bool terminated;$/;"	m	struct:sipsub
terminated	re-0.5.6/src/sipreg/reg.c	/^	bool terminated;$/;"	m	struct:sipreg	file:
terminated	re-0.5.6/src/sipsess/sipsess.h	/^	int terminated;$/;"	m	struct:sipsess
termsent	re-0.5.6/src/sipevent/sipevent.h	/^	bool termsent;$/;"	m	struct:sipnot
termwait	re-0.5.6/src/sipevent/sipevent.h	/^	bool termwait;$/;"	m	struct:sipsub
termwait	re-0.5.6/src/sipsess/sess.c	/^static bool termwait(struct sipsess *sess)$/;"	f	file:
test	baresip/test/cmd.c	/^struct test {$/;"	s	file:
test	baresip/test/main.c	/^struct test {$/;"	s	file:
test	baresip/test/message.c	/^	struct test *test;$/;"	m	struct:endpoint	typeref:struct:endpoint::test	file:
test	baresip/test/message.c	/^struct test {$/;"	s	file:
test	baresip/test/play.c	/^struct test {$/;"	s	file:
test	baresip/test/ua.c	/^struct test {$/;"	s	file:
test_abort	baresip/test/ua.c	/^static void test_abort(struct test *t, int err)$/;"	f	file:
test_account	baresip/test/account.c	/^int test_account(void)$/;"	f
test_aulevel	baresip/test/aulevel.c	/^int test_aulevel(void)$/;"	f
test_bit	baresip/modules/evdev/print.c	18;"	d	file:
test_call_af_mismatch	baresip/test/call.c	/^int test_call_af_mismatch(void)$/;"	f
test_call_answer	baresip/test/call.c	/^int test_call_answer(void)$/;"	f
test_call_answer_hangup_a	baresip/test/call.c	/^int test_call_answer_hangup_a(void)$/;"	f
test_call_answer_hangup_b	baresip/test/call.c	/^int test_call_answer_hangup_b(void)$/;"	f
test_call_aulevel	baresip/test/call.c	/^int test_call_aulevel(void)$/;"	f
test_call_dtmf	baresip/test/call.c	/^int test_call_dtmf(void)$/;"	f
test_call_format_float	baresip/test/call.c	/^int test_call_format_float(void)$/;"	f
test_call_max	baresip/test/call.c	/^int test_call_max(void)$/;"	f
test_call_multiple	baresip/test/call.c	/^int test_call_multiple(void)$/;"	f
test_call_progress	baresip/test/call.c	/^int test_call_progress(void)$/;"	f
test_call_reject	baresip/test/call.c	/^int test_call_reject(void)$/;"	f
test_call_rtp_timeout	baresip/test/call.c	/^int test_call_rtp_timeout(void)$/;"	f
test_call_video	baresip/test/call.c	/^int test_call_video(void)$/;"	f
test_certificate	baresip/test/mock/cert.c	/^const char test_certificate[] =$/;"	v
test_cmd	baresip/test/cmd.c	/^int test_cmd(void)$/;"	f
test_cmd_long	baresip/test/cmd.c	/^int test_cmd_long(void)$/;"	f
test_cmp_double	baresip/test/test.c	/^bool test_cmp_double(double a, double b, double precision)$/;"	f
test_contact	baresip/test/contact.c	/^int test_contact(void)$/;"	f
test_cplusplus	baresip/test/cplusplus.cpp	/^int test_cplusplus(void)$/;"	f
test_exec_h	baresip/test/main.c	/^typedef int (test_exec_h)(void);$/;"	t	file:
test_hexdump_dual	baresip/test/test.c	/^void test_hexdump_dual(FILE *f,$/;"	f
test_init	baresip/test/ua.c	/^static void test_init(struct test *t)$/;"	f	file:
test_is_complete	baresip/test/message.c	/^static bool test_is_complete(struct endpoint *ep)$/;"	f	file:
test_listcases	baresip/test/main.c	/^static void test_listcases(void)$/;"	f	file:
test_media_base	baresip/test/call.c	/^static int test_media_base(enum audio_mode txmode)$/;"	f	file:
test_message	baresip/test/message.c	/^int test_message(void)$/;"	f
test_message_transp	baresip/test/message.c	/^static int test_message_transp(enum sip_transp transp)$/;"	f	file:
test_mos	baresip/test/mos.c	/^int test_mos(void)$/;"	f
test_network	baresip/test/net.c	/^int test_network(void)$/;"	f
test_phase	re-0.5.6/src/natbd/filtering.c	/^	int test_phase;        \/**< State machine              *\/$/;"	m	struct:nat_filtering	file:
test_phase	re-0.5.6/src/natbd/mapping.c	/^	uint32_t test_phase;      \/**< State machine             *\/$/;"	m	struct:nat_mapping	file:
test_play	baresip/test/play.c	/^int test_play(void)$/;"	f
test_reset	baresip/test/ua.c	/^static void test_reset(struct test *t)$/;"	f	file:
test_ua_alloc	baresip/test/ua.c	/^int test_ua_alloc(void)$/;"	f
test_ua_options	baresip/test/ua.c	/^int test_ua_options(void)$/;"	f
test_ua_register	baresip/test/ua.c	/^int test_ua_register(void)$/;"	f
test_ua_register_auth	baresip/test/ua.c	/^int test_ua_register_auth(void)$/;"	f
test_ua_register_auth_dns	baresip/test/ua.c	/^int test_ua_register_auth_dns(void)$/;"	f
test_ua_register_dns	baresip/test/ua.c	/^int test_ua_register_dns(void)$/;"	f
test_uag_find_param	baresip/test/ua.c	/^int test_uag_find_param(void)$/;"	f
test_video	baresip/test/video.c	/^int test_video(void)$/;"	f
tests	baresip/test/main.c	/^static const struct test tests[] = {$/;"	v	typeref:struct:test	file:
text_plain	baresip/test/message.c	/^static const char text_plain[] = "text\/plain";$/;"	v	file:
texture	baresip/modules/sdl2/sdl.c	/^	SDL_Texture *texture;           \/**< Texture for pixels    *\/$/;"	m	struct:vidisp_st	file:
texture_id	baresip/modules/opengles/opengles.h	/^	GLuint texture_id;$/;"	m	struct:vidisp_st
texture_init	baresip/modules/opengles/opengles.c	/^static int texture_init(struct vidisp_st *st)$/;"	f	file:
texture_render	baresip/modules/opengles/opengles.c	/^static void texture_render(struct vidisp_st *st)$/;"	f	file:
th	re-0.5.6/include/re_tmr.h	/^	tmr_h *th;          \/**< Timeout handler     *\/$/;"	m	struct:tmr
th	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	struct tcp_helper *th;$/;"	m	struct:tls_conn	typeref:struct:tls_conn::tcp_helper	file:
th	re-0.5.6/src/turn/turnc.h	/^	turnc_h *th;                   \/**< Turn client handler             *\/$/;"	m	struct:turnc
thr	baresip/src/audio.c	/^		} thr;$/;"	m	union:autx::__anon12	typeref:struct:autx::__anon12::__anon13	file:
thread	baresip/modules/alsa/alsa_play.c	/^	pthread_t thread;$/;"	m	struct:auplay_st	file:
thread	baresip/modules/alsa/alsa_src.c	/^	pthread_t thread;$/;"	m	struct:ausrc_st	file:
thread	baresip/modules/aubridge/device.c	/^	pthread_t thread;$/;"	m	struct:device	file:
thread	baresip/modules/aufile/aufile.c	/^	pthread_t thread;$/;"	m	struct:ausrc_st	file:
thread	baresip/modules/avformat/avformat.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	baresip/modules/cairo/cairo.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	baresip/modules/fakevideo/fakevideo.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	baresip/modules/gst/gst.c	/^static void *thread(void *arg)$/;"	f	file:
thread	baresip/modules/gst1/gst.c	/^static void *thread(void *arg)$/;"	f	file:
thread	baresip/modules/gtk/gtk_mod.c	/^	pthread_t thread;$/;"	m	struct:gtk_mod	file:
thread	baresip/modules/oss/oss.c	/^	pthread_t thread;$/;"	m	struct:auplay_st	file:
thread	baresip/modules/oss/oss.c	/^	pthread_t thread;$/;"	m	struct:ausrc_st	file:
thread	baresip/modules/pulse/player.c	/^	pthread_t thread;$/;"	m	struct:auplay_st	file:
thread	baresip/modules/pulse/recorder.c	/^	pthread_t thread;$/;"	m	struct:ausrc_st	file:
thread	baresip/modules/rst/audio.c	/^	pthread_t thread;$/;"	m	struct:ausrc_st	file:
thread	baresip/modules/rst/video.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	baresip/modules/sndio/sndio.c	/^	pthread_t thread;$/;"	m	struct:auplay_st	file:
thread	baresip/modules/sndio/sndio.c	/^	pthread_t thread;$/;"	m	struct:ausrc_st	file:
thread	baresip/modules/v4l/v4l.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	baresip/modules/v4l2/v4l2.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	baresip/modules/x11grab/x11grab.c	/^	pthread_t thread;$/;"	m	struct:vidsrc_st	file:
thread	rem-0.5.2/src/aumix/aumix.c	/^	pthread_t thread;$/;"	m	struct:aumix	file:
thread	rem-0.5.2/src/vidmix/vidmix.c	/^	pthread_t thread;$/;"	m	struct:vidmix_source	file:
thread_destructor	re-0.5.6/src/main/main.c	/^static void thread_destructor(void *arg)$/;"	f	file:
threadid	re-0.5.6/src/main/openssl.c	/^static inline unsigned long threadid(void)$/;"	f	file:
threadid_handler	re-0.5.6/src/main/openssl.c	/^static unsigned long threadid_handler(void)$/;"	f	file:
threadid_handler	re-0.5.6/src/main/openssl.c	/^static void threadid_handler(CRYPTO_THREADID *id)$/;"	f	file:
threshold	re-0.5.6/src/mem/mem.c	/^static ssize_t threshold = -1;  \/**< Memory threshold, disabled by default *\/$/;"	v	file:
threshold	rem-0.5.2/src/dtmf/dec.c	/^	double threshold;$/;"	m	struct:dtmf_dec	file:
ti	re-0.5.6/include/re_stun.h	/^	uint32_t ti;   \/**< Ti Timeout for reliable transport [ms] *\/$/;"	m	struct:stun_conf
tick	re-0.5.6/src/dbg/dbg.c	/^	uint64_t tick;         \/**< Init ticks             *\/$/;"	m	struct:__anon141	file:
tid	baresip/modules/av1/decode.c	/^	unsigned tid:2;$/;"	m	struct:hdr	file:
tid	baresip/modules/gst/gst.c	/^	pthread_t tid;              \/**< Thread ID               *\/$/;"	m	struct:ausrc_st	file:
tid	baresip/modules/gst1/gst.c	/^	pthread_t tid;              \/**< Thread ID               *\/$/;"	m	struct:ausrc_st	file:
tid	baresip/modules/gst_video/encode.c	/^	pthread_t tid;$/;"	m	struct:videnc_state	file:
tid	baresip/modules/vp8/decode.c	/^	unsigned tid:2;$/;"	m	struct:hdr	file:
tid	baresip/src/audio.c	/^			pthread_t tid;\/**< Audio transmit thread           *\/$/;"	m	struct:autx::__anon12::__anon13	file:
tid	re-0.5.6/include/re_bfcp.h	/^	uint16_t tid;$/;"	m	struct:bfcp_msg
tid	re-0.5.6/src/bfcp/bfcp.h	/^	uint16_t tid;$/;"	m	struct:bfcp_conn
tid	re-0.5.6/src/bfcp/bfcp.h	/^	uint16_t tid;$/;"	m	struct:bfcp_strans
tid	re-0.5.6/src/bfcp/request.c	/^	uint16_t tid;$/;"	m	struct:bfcp_ctrans	file:
tid	re-0.5.6/src/stun/ctrans.c	/^	uint8_t tid[STUN_TID_SIZE];$/;"	m	struct:stun_ctrans	file:
tid	re-0.5.6/src/stun/stun.h	/^	uint8_t tid[STUN_TID_SIZE];  \/**< Transaction ID *\/$/;"	m	struct:stun_hdr
tiebrk	baresip/modules/ice/ice.c	/^	uint64_t tiebrk;$/;"	m	struct:mnat_sess	file:
tiebrk	re-0.5.6/src/ice/ice.h	/^	uint64_t tiebrk;             \/**< Tie-break value for roleconflict   *\/$/;"	m	struct:icem
time_base	baresip/modules/avformat/avformat.c	/^	AVRational time_base;$/;"	m	struct:vidsrc_st	file:
time_conn	baresip/src/call.c	/^	time_t time_conn;         \/**< Time when call initiated             *\/$/;"	m	struct:call	file:
time_start	baresip/src/call.c	/^	time_t time_start;        \/**< Time when call started               *\/$/;"	m	struct:call	file:
time_stop	baresip/src/call.c	/^	time_t time_stop;         \/**< Time when call stopped               *\/$/;"	m	struct:call	file:
timeout	baresip/modules/aufile/aufile.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/modules/dtls_srtp/dtls_srtp.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/modules/natbd/natbd.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/modules/natpmp/libnatpmp.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/modules/sdl/sdl.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/modules/stdio/stdio.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/modules/wincons/wincons.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	baresip/src/rtpkeep.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/ice/comp.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/natbd/lifetime.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/rtp/sess.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/stun/keepalive.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/turn/chan.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/turn/perm.c	/^static void timeout(void *arg)$/;"	f	file:
timeout	re-0.5.6/src/turn/turnc.c	/^static void timeout(void *arg)$/;"	f	file:
timeout_bw	baresip/modules/vidloop/vidloop.c	/^static void timeout_bw(void *arg)$/;"	f	file:
timeout_handler	baresip/test/test.c	/^static void timeout_handler(void *arg)$/;"	f	file:
timeout_handler	re-0.5.6/src/http/client.c	/^static void timeout_handler(void *arg)$/;"	f	file:
timeout_handler	re-0.5.6/src/http/server.c	/^static void timeout_handler(void *arg)$/;"	f	file:
timeout_handler	re-0.5.6/src/stun/ctrans.c	/^static void timeout_handler(void *arg)$/;"	f	file:
timeout_handler	re-0.5.6/src/websock/websock.c	/^static void timeout_handler(void *arg)$/;"	f	file:
timeout_init	baresip/modules/natbd/natbd.c	/^static void timeout_init(void *arg)$/;"	f	file:
timestamp	baresip/modules/mpa/encode.c	/^	uint32_t timestamp;$/;"	m	struct:auenc_state	file:
timestamp_duration	baresip/src/core.h	/^static inline uint64_t timestamp_duration(const struct timestamp_recv *ts)$/;"	f
timestamp_print	baresip/modules/sndfile/sndfile.c	/^static int timestamp_print(struct re_printf *pf, const struct tm *tm)$/;"	f	file:
timestamp_recv	baresip/src/core.h	/^struct timestamp_recv {$/;"	s
timestamp_wrap	baresip/src/core.h	/^static inline int timestamp_wrap(uint32_t ts_new, uint32_t ts_old)$/;"	f
tl0picidx	baresip/modules/av1/decode.c	/^	uint8_t tl0picidx;$/;"	m	struct:hdr	file:
tl0picidx	baresip/modules/vp8/decode.c	/^	uint8_t tl0picidx;$/;"	m	struct:hdr	file:
tls	baresip/modules/dtls_srtp/dtls_srtp.c	/^static struct tls *tls;$/;"	v	typeref:struct:tls	file:
tls	baresip/src/ua.c	/^	struct tls *tls;               \/**< TLS Context                     *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::tls	file:
tls	re-0.5.6/src/http/client.c	/^	struct tls *tls;$/;"	m	struct:http_cli	typeref:struct:http_cli::tls	file:
tls	re-0.5.6/src/http/server.c	/^	struct tls *tls;$/;"	m	struct:http_sock	typeref:struct:http_sock::tls	file:
tls	re-0.5.6/src/sip/transp.c	/^	struct tls *tls;$/;"	m	struct:sip_transport	typeref:struct:sip_transport::tls	file:
tls	re-0.5.6/src/tls/openssl/tls.h	/^struct tls {$/;"	s
tls_accept	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static int tls_accept(struct tls_conn *tc)$/;"	f	file:
tls_accept	re-0.5.6/src/tls/openssl/tls_udp.c	/^static int tls_accept(struct tls_conn *tc)$/;"	f	file:
tls_add_ca	re-0.5.6/src/tls/openssl/tls.c	/^int tls_add_ca(struct tls *tls, const char *capath)$/;"	f
tls_alloc	re-0.5.6/src/tls/openssl/tls.c	/^int tls_alloc(struct tls **tlsp, enum tls_method method, const char *keyfile,$/;"	f
tls_cipher_name	re-0.5.6/src/tls/openssl/tls.c	/^const char *tls_cipher_name(const struct tls_conn *tc)$/;"	f
tls_close	re-0.5.6/src/tls/openssl/tls_udp.c	/^static void tls_close(struct tls_conn *tc)$/;"	f	file:
tls_conn	baresip/modules/dtls_srtp/dtls_srtp.h	/^	struct tls_conn *tls_conn;$/;"	m	struct:comp	typeref:struct:comp::tls_conn
tls_conn	re-0.5.6/src/tls/openssl/tls.c	/^struct tls_conn {$/;"	s	file:
tls_conn	re-0.5.6/src/tls/openssl/tls_tcp.c	/^struct tls_conn {$/;"	s	file:
tls_conn	re-0.5.6/src/tls/openssl/tls_udp.c	/^struct tls_conn {$/;"	s	file:
tls_connect	re-0.5.6/src/tls/openssl/tls_tcp.c	/^static int tls_connect(struct tls_conn *tc)$/;"	f	file:
tls_connect	re-0.5.6/src/tls/openssl/tls_udp.c	/^static int tls_connect(struct tls_conn *tc)$/;"	f	file:
tls_fingerprint	re-0.5.6/include/re_tls.h	/^enum tls_fingerprint {$/;"	g
tls_fingerprint	re-0.5.6/src/tls/openssl/tls.c	/^int tls_fingerprint(const struct tls *tls, enum tls_fingerprint type,$/;"	f
tls_flush_error	re-0.5.6/src/tls/openssl/tls.c	/^void tls_flush_error(void)$/;"	f
tls_keytype	re-0.5.6/include/re_tls.h	/^enum tls_keytype {$/;"	g
tls_method	re-0.5.6/include/re_tls.h	/^enum tls_method {$/;"	g
tls_method_tcp	re-0.5.6/src/tls/openssl/tls_tcp.c	/^BIO_METHOD *tls_method_tcp(void)$/;"	f
tls_method_udp	re-0.5.6/src/tls/openssl/tls_udp.c	/^BIO_METHOD *tls_method_udp(void)$/;"	f
tls_openssl_context	re-0.5.6/src/tls/openssl/tls.c	/^struct ssl_ctx_st *tls_openssl_context(const struct tls *tls)$/;"	f
tls_peer_common_name	re-0.5.6/src/tls/openssl/tls.c	/^int tls_peer_common_name(const struct tls_conn *tc, char *cn, size_t size)$/;"	f
tls_peer_fingerprint	re-0.5.6/src/tls/openssl/tls.c	/^int tls_peer_fingerprint(const struct tls_conn *tc, enum tls_fingerprint type,$/;"	f
tls_peer_verify	re-0.5.6/src/tls/openssl/tls.c	/^int tls_peer_verify(const struct tls_conn *tc)$/;"	f
tls_set_certificate	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_certificate(struct tls *tls, const char *pem, size_t len)$/;"	f
tls_set_certificate_der	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_certificate_der(struct tls *tls, enum tls_keytype keytype,$/;"	f
tls_set_certificate_pem	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_certificate_pem(struct tls *tls, const char *cert, size_t len_cert,$/;"	f
tls_set_ciphers	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_ciphers(struct tls *tls, const char *cipherv[], size_t count)$/;"	f
tls_set_selfsigned	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_selfsigned(struct tls *tls, const char *cn)$/;"	f
tls_set_servername	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_servername(struct tls_conn *tc, const char *servername)$/;"	f
tls_set_srtp	re-0.5.6/src/tls/openssl/tls.c	/^int tls_set_srtp(struct tls *tls, const char *suites)$/;"	f
tls_set_verify_client	re-0.5.6/src/tls/openssl/tls.c	/^void tls_set_verify_client(struct tls *tls)$/;"	f
tls_srtp_keyinfo	re-0.5.6/src/tls/openssl/tls.c	/^int tls_srtp_keyinfo(const struct tls_conn *tc, enum srtp_suite *suite,$/;"	f
tls_start_tcp	re-0.5.6/src/tls/openssl/tls_tcp.c	/^int tls_start_tcp(struct tls_conn **ptc, struct tls *tls, struct tcp_conn *tcp,$/;"	f
tmp	baresip/test/sip/sipsrv.h	/^	struct loctmp *tmp;$/;"	m	struct:location	typeref:struct:location::loctmp
tmr	baresip/modules/aufile/aufile.c	/^	struct tmr tmr;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::tmr	file:
tmr	baresip/modules/auloop/auloop.c	/^	struct tmr tmr;$/;"	m	struct:audio_loop	typeref:struct:audio_loop::tmr	file:
tmr	baresip/modules/dtls_srtp/dtls_srtp.c	/^	struct tmr tmr;$/;"	m	struct:dtls_srtp	typeref:struct:dtls_srtp::tmr	file:
tmr	baresip/modules/mqtt/mqtt.h	/^	struct tmr tmr;$/;"	m	struct:mqtt	typeref:struct:mqtt::tmr
tmr	baresip/modules/mwi/mwi.c	/^	struct tmr tmr;$/;"	m	struct:mwi	typeref:struct:mwi::tmr	file:
tmr	baresip/modules/mwi/mwi.c	/^static struct tmr tmr;$/;"	v	typeref:struct:tmr	file:
tmr	baresip/modules/natbd/natbd.c	/^	struct tmr tmr;$/;"	m	struct:natbd	typeref:struct:natbd::tmr	file:
tmr	baresip/modules/natpmp/libnatpmp.c	/^	struct tmr tmr;$/;"	m	struct:natpmp_req	typeref:struct:natpmp_req::tmr	file:
tmr	baresip/modules/natpmp/natpmp.c	/^		struct tmr tmr;$/;"	m	struct:mnat_media::comp	typeref:struct:mnat_media::comp::tmr	file:
tmr	baresip/modules/presence/publisher.c	/^	struct tmr tmr;$/;"	m	struct:publisher	typeref:struct:publisher::tmr	file:
tmr	baresip/modules/presence/subscriber.c	/^	struct tmr tmr;$/;"	m	struct:presence	typeref:struct:presence::tmr	file:
tmr	baresip/modules/rst/rst.c	/^	struct tmr tmr;$/;"	m	struct:rst	typeref:struct:rst::tmr	file:
tmr	baresip/modules/sdl/sdl.c	/^	struct tmr tmr;$/;"	m	struct:__anon60	typeref:struct:__anon60::tmr	file:
tmr	baresip/modules/sdl2/sdl.c	/^	struct tmr tmr;$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::tmr	file:
tmr	baresip/modules/stdio/stdio.c	/^	struct tmr tmr;$/;"	m	struct:ui_st	typeref:struct:ui_st::tmr	file:
tmr	baresip/modules/vidinfo/vidinfo.h	/^	struct tmr tmr;$/;"	m	struct:panel	typeref:struct:panel::tmr
tmr	baresip/modules/vumeter/vumeter.c	/^	struct tmr tmr;$/;"	m	struct:vumeter_dec	typeref:struct:vumeter_dec::tmr	file:
tmr	baresip/modules/vumeter/vumeter.c	/^	struct tmr tmr;$/;"	m	struct:vumeter_enc	typeref:struct:vumeter_enc::tmr	file:
tmr	baresip/modules/wincons/wincons.c	/^	struct tmr tmr;$/;"	m	struct:ui_st	typeref:struct:ui_st::tmr	file:
tmr	baresip/src/core.h	/^	struct tmr tmr;$/;"	m	struct:metric	typeref:struct:metric::tmr
tmr	baresip/src/net.c	/^	struct tmr tmr;$/;"	m	struct:network	typeref:struct:network::tmr	file:
tmr	baresip/src/play.c	/^	struct tmr tmr;$/;"	m	struct:play	typeref:struct:play::tmr	file:
tmr	baresip/src/rtpkeep.c	/^	struct tmr tmr;$/;"	m	struct:rtpkeep	typeref:struct:rtpkeep::tmr	file:
tmr	baresip/src/video.c	/^	struct tmr tmr;         \/**< Timer for frame-rate estimation      *\/$/;"	m	struct:video	typeref:struct:video::tmr	file:
tmr	baresip/test/mock/mock_auplay.c	/^	struct tmr tmr;$/;"	m	struct:auplay_st	typeref:struct:auplay_st::tmr	file:
tmr	baresip/test/mock/mock_ausrc.c	/^	struct tmr tmr;$/;"	m	struct:ausrc_st	typeref:struct:ausrc_st::tmr	file:
tmr	baresip/test/mock/mock_vidsrc.c	/^	struct tmr tmr;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::tmr	file:
tmr	re-0.5.6/include/re_tmr.h	/^struct tmr {$/;"	s
tmr	re-0.5.6/src/dns/client.c	/^	struct tmr tmr;$/;"	m	struct:dns_query	typeref:struct:dns_query::tmr	file:
tmr	re-0.5.6/src/dns/client.c	/^	struct tmr tmr;$/;"	m	struct:tcpconn	typeref:struct:tcpconn::tmr	file:
tmr	re-0.5.6/src/http/client.c	/^	struct tmr tmr;$/;"	m	struct:conn	typeref:struct:conn::tmr	file:
tmr	re-0.5.6/src/http/server.c	/^	struct tmr tmr;$/;"	m	struct:http_conn	typeref:struct:http_conn::tmr	file:
tmr	re-0.5.6/src/natbd/lifetime.c	/^	struct tmr tmr;                         \/**< Refresh timer          *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::tmr	file:
tmr	re-0.5.6/src/rtp/sess.c	/^	struct tmr tmr;             \/**< Event sender timer                  *\/$/;"	m	struct:rtcp_sess	typeref:struct:rtcp_sess::tmr	file:
tmr	re-0.5.6/src/sip/ctrans.c	/^	struct tmr tmr;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::tmr	file:
tmr	re-0.5.6/src/sip/strans.c	/^	struct tmr tmr;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::tmr	file:
tmr	re-0.5.6/src/sip/transp.c	/^	struct tmr tmr;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::tmr	file:
tmr	re-0.5.6/src/sipevent/sipevent.h	/^	struct tmr tmr;$/;"	m	struct:sipnot	typeref:struct:sipnot::tmr
tmr	re-0.5.6/src/sipevent/sipevent.h	/^	struct tmr tmr;$/;"	m	struct:sipsub	typeref:struct:sipsub::tmr
tmr	re-0.5.6/src/sipreg/reg.c	/^	struct tmr tmr;$/;"	m	struct:sipreg	typeref:struct:sipreg::tmr	file:
tmr	re-0.5.6/src/sipsess/ack.c	/^	struct tmr tmr;$/;"	m	struct:sipsess_ack	typeref:struct:sipsess_ack::tmr	file:
tmr	re-0.5.6/src/sipsess/reply.c	/^	struct tmr tmr;$/;"	m	struct:sipsess_reply	typeref:struct:sipsess_reply::tmr	file:
tmr	re-0.5.6/src/sipsess/sipsess.h	/^	struct tmr tmr;$/;"	m	struct:sipsess	typeref:struct:sipsess::tmr
tmr	re-0.5.6/src/stun/ctrans.c	/^	struct tmr tmr;$/;"	m	struct:stun_ctrans	typeref:struct:stun_ctrans::tmr	file:
tmr	re-0.5.6/src/stun/keepalive.c	/^	struct tmr tmr;           \/**< Refresh timer                        *\/$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::tmr	file:
tmr	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct tmr tmr;$/;"	m	struct:tls_conn	typeref:struct:tls_conn::tmr	file:
tmr	re-0.5.6/src/turn/chan.c	/^	struct tmr tmr;$/;"	m	struct:chan	typeref:struct:chan::tmr	file:
tmr	re-0.5.6/src/turn/perm.c	/^	struct tmr tmr;$/;"	m	struct:perm	typeref:struct:perm::tmr	file:
tmr	re-0.5.6/src/turn/turnc.h	/^	struct tmr tmr;                \/**< Allocation refresh timer        *\/$/;"	m	struct:turnc	typeref:struct:turnc::tmr
tmr	re-0.5.6/src/websock/websock.c	/^	struct tmr tmr;$/;"	m	struct:websock_conn	typeref:struct:websock_conn::tmr	file:
tmr1	re-0.5.6/src/bfcp/bfcp.h	/^	struct tmr tmr1;$/;"	m	struct:bfcp_conn	typeref:struct:bfcp_conn::tmr
tmr2	re-0.5.6/src/bfcp/bfcp.h	/^	struct tmr tmr2;$/;"	m	struct:bfcp_conn	typeref:struct:bfcp_conn::tmr
tmr_alert	baresip/modules/menu/menu.c	/^static struct tmr tmr_alert;          \/**< Incoming call alert timer      *\/$/;"	v	typeref:struct:tmr	file:
tmr_bw	baresip/modules/vidloop/vidloop.c	/^	struct tmr tmr_bw;$/;"	m	struct:video_loop	typeref:struct:video_loop::tmr	file:
tmr_cancel	re-0.5.6/src/tmr/tmr.c	/^void tmr_cancel(struct tmr *tmr)$/;"	f
tmr_debug	re-0.5.6/src/tmr/tmr.c	/^void tmr_debug(void)$/;"	f
tmr_dtmf	baresip/src/call.c	/^	struct tmr tmr_dtmf;      \/**< Timer for incoming DTMF events       *\/$/;"	m	struct:call	typeref:struct:call::tmr	file:
tmr_get_expire	re-0.5.6/src/tmr/tmr.c	/^uint64_t tmr_get_expire(const struct tmr *tmr)$/;"	f
tmr_h	re-0.5.6/include/re_tmr.h	/^typedef void (tmr_h)(void *arg);$/;"	t
tmr_handler	baresip/modules/auloop/auloop.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/modules/mqtt/mqtt.c	/^static void tmr_handler(void *data)$/;"	f	file:
tmr_handler	baresip/modules/mwi/mwi.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/modules/presence/publisher.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/modules/presence/subscriber.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/modules/vidinfo/panel.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/src/metric.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/src/video.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/test/mock/mock_auplay.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/test/mock/mock_ausrc.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	baresip/test/mock/mock_vidsrc.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/bfcp/reply.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/bfcp/request.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sip/ctrans.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sip/strans.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sipevent/notify.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sipevent/subscribe.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sipreg/reg.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sipsess/ack.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sipsess/modify.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_handler	re-0.5.6/src/sipsess/reply.c	/^static void tmr_handler(void *arg)$/;"	f	file:
tmr_init	re-0.5.6/src/tmr/tmr.c	/^void tmr_init(struct tmr *tmr)$/;"	f
tmr_inv	baresip/src/call.c	/^	struct tmr tmr_inv;       \/**< Timer for incoming calls             *\/$/;"	m	struct:call	typeref:struct:call::tmr	file:
tmr_isrunning	re-0.5.6/include/re_tmr.h	/^static inline bool tmr_isrunning(const struct tmr *tmr)$/;"	f
tmr_jiffies	re-0.5.6/src/tmr/tmr.c	/^uint64_t tmr_jiffies(void)$/;"	f
tmr_ka	re-0.5.6/src/ice/ice.h	/^	struct tmr tmr_ka;           \/**< Keep-alive timer                  *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::tmr
tmr_ka	re-0.5.6/src/sip/keepalive_udp.c	/^	struct tmr tmr_ka;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::tmr	file:
tmr_ka	re-0.5.6/src/sip/transp.c	/^	struct tmr tmr_ka;$/;"	m	struct:sip_conn	typeref:struct:sip_conn::tmr	file:
tmr_next_timeout	re-0.5.6/src/tmr/tmr.c	/^uint64_t tmr_next_timeout(struct list *tmrl)$/;"	f
tmr_pace	re-0.5.6/src/ice/ice.h	/^	struct tmr tmr_pace;         \/**< Timer for pacing STUN requests     *\/$/;"	m	struct:icem	typeref:struct:icem::tmr
tmr_picup	baresip/src/video.c	/^	struct tmr tmr_picup;              \/**< Picture update timer      *\/$/;"	m	struct:vrx	typeref:struct:vrx::tmr	file:
tmr_poll	re-0.5.6/src/tmr/tmr.c	/^void tmr_poll(struct list *tmrl)$/;"	f
tmr_polling	baresip/src/play.c	/^static void tmr_polling(void *arg)$/;"	f	file:
tmr_redial	baresip/modules/menu/menu.c	/^	struct tmr tmr_redial;        \/**< Timer for auto-reconnect       *\/$/;"	m	struct:__anon72	typeref:struct:__anon72::tmr	file:
tmr_rtp	baresip/src/core.h	/^	struct tmr tmr_rtp;      \/**< Timer for detecting RTP timeout       *\/$/;"	m	struct:stream	typeref:struct:stream::tmr
tmr_rtp	baresip/src/video.c	/^	struct tmr tmr_rtp;                \/**< Timer for sending RTP     *\/$/;"	m	struct:vtx	typeref:struct:vtx::tmr	file:
tmr_start	re-0.5.6/src/tmr/tmr.c	/^void tmr_start(struct tmr *tmr, uint64_t delay, tmr_h *th, void *arg)$/;"	f
tmr_stat	baresip/modules/menu/menu.c	/^static struct tmr tmr_stat;           \/**< Call status timer              *\/$/;"	v	typeref:struct:tmr	file:
tmr_status	re-0.5.6/src/tmr/tmr.c	/^int tmr_status(struct re_printf *pf, void *unused)$/;"	f
tmr_stop	baresip/src/play.c	/^static void tmr_stop(void *arg)$/;"	f	file:
tmre	re-0.5.6/src/sip/ctrans.c	/^	struct tmr tmre;$/;"	m	struct:sip_ctrans	typeref:struct:sip_ctrans::tmr	file:
tmrg	re-0.5.6/src/sip/strans.c	/^	struct tmr tmrg;$/;"	m	struct:sip_strans	typeref:struct:sip_strans::tmr	file:
tmrg	re-0.5.6/src/sipsess/reply.c	/^	struct tmr tmrg;$/;"	m	struct:sipsess_reply	typeref:struct:sipsess_reply::tmr	file:
tmrl	re-0.5.6/src/main/main.c	/^	struct list tmrl;            \/**< List of timers                    *\/$/;"	m	struct:re	typeref:struct:re::list	file:
tmrl_get	re-0.5.6/src/main/main.c	/^struct list *tmrl_get(void)$/;"	f
tmrstat_handler	baresip/modules/menu/menu.c	/^static void tmrstat_handler(void *arg)$/;"	f	file:
to	re-0.5.6/include/re_sip.h	/^	struct sip_taddr to;   \/**< Parsed To header                     *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::sip_taddr
toggle_statmode	baresip/modules/menu/menu.c	/^static int toggle_statmode(struct re_printf *pf, void *arg)$/;"	f	file:
tos	re-0.5.6/include/re_stun.h	/^	uint8_t tos;   \/**< Type-of-service field                  *\/$/;"	m	struct:stun_conf
tp	re-0.5.6/include/re_sip.h	/^	enum sip_transp tp;    \/**< SIP Transport                        *\/$/;"	m	struct:sip_msg	typeref:enum:sip_msg::sip_transp
tp	re-0.5.6/include/re_sip.h	/^	enum sip_transp tp;$/;"	m	struct:sip_contact	typeref:enum:sip_contact::sip_transp
tp	re-0.5.6/include/re_sip.h	/^	enum sip_transp tp;$/;"	m	struct:sip_via	typeref:enum:sip_via::sip_transp
tp	re-0.5.6/src/bfcp/bfcp.h	/^	enum bfcp_transp tp;$/;"	m	struct:bfcp_conn	typeref:enum:bfcp_conn::bfcp_transp
tp	re-0.5.6/src/sip/ctrans.c	/^	enum sip_transp tp;$/;"	m	struct:sip_ctrans	typeref:enum:sip_ctrans::sip_transp	file:
tp	re-0.5.6/src/sip/request.c	/^	enum sip_transp tp;$/;"	m	struct:sip_request	typeref:enum:sip_request::sip_transp	file:
tp	re-0.5.6/src/sip/transp.c	/^	enum sip_transp tp;$/;"	m	struct:sip_transport	typeref:enum:sip_transport::sip_transp	file:
tp	re-0.5.6/src/sipreg/reg.c	/^	enum sip_transp tp;$/;"	m	struct:sipreg	typeref:enum:sipreg::sip_transp	file:
tp	re-0.5.6/src/sipsess/ack.c	/^	enum sip_transp tp;$/;"	m	struct:sipsess_ack	typeref:enum:sipsess_ack::sip_transp	file:
tp_last	baresip/test/sip/sipsrv.h	/^	enum sip_transp tp_last;$/;"	m	struct:sip_server	typeref:enum:sip_server::sip_transp
tp_selected	re-0.5.6/src/sip/request.c	/^	bool tp_selected;$/;"	m	struct:sip_request	file:
tr	baresip/modules/avcodec/h26x.h	/^	unsigned tr:8;     \/**< 8 bits - Temporal Reference for P-frame     *\/$/;"	m	struct:h263_hdr
trailer	re-0.5.6/src/http/http.h	/^	bool trailer;$/;"	m	struct:http_chunk
trans_bsize	baresip/include/baresip.h	/^	uint32_t trans_bsize;   \/**< SIP Transaction bucket size    *\/$/;"	m	struct:config_sip
transfer	baresip/modules/gtk/call_window.c	/^		GtkWidget *hangup, *transfer, *hold, *mute;$/;"	m	struct:call_window::__anon77	file:
transfer_dialog	baresip/modules/gtk/call_window.c	/^	struct transfer_dialog *transfer_dialog;$/;"	m	struct:call_window	typeref:struct:call_window::transfer_dialog	file:
transfer_dialog	baresip/modules/gtk/transfer_dialog.c	/^struct transfer_dialog {$/;"	s	file:
transfer_dialog_alloc	baresip/modules/gtk/transfer_dialog.c	/^struct transfer_dialog *transfer_dialog_alloc(struct call_window *call_win)$/;"	f
transfer_dialog_fail	baresip/modules/gtk/transfer_dialog.c	/^void transfer_dialog_fail(struct transfer_dialog *td, const char *reason)$/;"	f
transfer_dialog_show	baresip/modules/gtk/transfer_dialog.c	/^void transfer_dialog_show(struct transfer_dialog *td)$/;"	f
transit	re-0.5.6/src/rtp/rtcp.h	/^	int transit;              \/**< Relative trans time for prev pkt    *\/$/;"	m	struct:rtp_source
translate_errorcode	baresip/modules/menu/menu.c	/^static const char *translate_errorcode(uint16_t scode)$/;"	f	file:
transp	baresip/test/message.c	/^	enum sip_transp transp;$/;"	m	struct:test	typeref:enum:test::sip_transp	file:
transp	re-0.5.6/src/ice/ice.h	/^	enum ice_transp transp;      \/**< Transport protocol                 *\/$/;"	m	struct:ice_cand	typeref:enum:ice_cand::ice_transp
transp_destructor	re-0.5.6/src/sip/transp.c	/^static void transp_destructor(void *arg)$/;"	f	file:
transp_find	re-0.5.6/src/sip/transp.c	/^static const struct sip_transport *transp_find(struct sip *sip,$/;"	f	file:
transp_name	re-0.5.6/src/ice/icesdp.c	/^static const char *transp_name(enum ice_transp transp)$/;"	f	file:
transp_next	re-0.5.6/src/sip/request.c	/^static bool transp_next(struct sip *sip, enum sip_transp *tp)$/;"	f	file:
transp_next_srv	re-0.5.6/src/sip/request.c	/^static bool transp_next_srv(struct sip *sip, enum sip_transp *tp)$/;"	f	file:
transp_resolve	re-0.5.6/src/ice/icesdp.c	/^static enum ice_transp transp_resolve(const struct pl *transp)$/;"	f	file:
transph	re-0.5.6/src/sip/transp.c	/^	sip_transp_h *transph;$/;"	m	struct:sip_connqent	file:
transpl	re-0.5.6/src/sip/sip.h	/^	struct list transpl;$/;"	m	struct:sip	typeref:struct:sip::list
transport_handler	re-0.5.6/src/sip/ctrans.c	/^static void transport_handler(int err, void *arg)$/;"	f	file:
trb	baresip/modules/avcodec/h26x.h	/^	unsigned trb:3;    \/**< 3 bits - Temporal Reference for B-frame     *\/$/;"	m	struct:h263_hdr
triggered_check	re-0.5.6/src/ice/stunsrv.c	/^static void triggered_check(struct icem *icem, struct ice_cand *lcand,$/;"	f	file:
true	re-0.5.6/include/re_types.h	90;"	d
try_next	re-0.5.6/src/http/client.c	/^static void try_next(struct conn *conn, int err)$/;"	f	file:
ts	baresip/modules/cons/cons.c	/^	struct tcp_sock *ts;$/;"	m	struct:ui_st	typeref:struct:ui_st::tcp_sock	file:
ts	baresip/modules/vidinfo/vidinfo.h	/^	uint64_t ts;$/;"	m	struct:panel
ts	baresip/src/rtpkeep.c	/^	uint32_t ts;$/;"	m	struct:rtpkeep	file:
ts	baresip/src/video.c	/^	uint32_t ts;$/;"	m	struct:vidqent	file:
ts	re-0.5.6/include/re_rtp.h	/^	uint32_t ts;        \/**< Timestamp              *\/$/;"	m	struct:rtp_header
ts	re-0.5.6/src/http/server.c	/^	struct tcp_sock *ts;$/;"	m	struct:http_sock	typeref:struct:http_sock::tcp_sock	file:
ts	re-0.5.6/src/natbd/hairpinning.c	/^	struct tcp_sock *ts;     \/**< Server TCP Socket       *\/$/;"	m	struct:nat_hairpinning	typeref:struct:nat_hairpinning::tcp_sock	file:
ts	rem-0.5.2/src/aubuf/aubuf.c	/^	uint64_t ts;$/;"	m	struct:aubuf	file:
ts_base	baresip/src/audio.c	/^	uint32_t ts_base;             \/**< First timestamp sent            *\/$/;"	m	struct:autx	file:
ts_ext	baresip/src/audio.c	/^	uint64_t ts_ext;              \/**< Ext. Timestamp for outgoing RTP *\/$/;"	m	struct:autx	file:
ts_last	baresip/src/core.h	/^	uint64_t ts_last;        \/**< Timestamp of last received RTP pkt    *\/$/;"	m	struct:stream
ts_last	baresip/src/core.h	/^	uint64_t ts_last;$/;"	m	struct:metric
ts_max	baresip/src/video.c	/^	uint32_t ts_max;$/;"	m	struct:vrx	file:
ts_max	baresip/src/video.c	/^	uint32_t ts_max;$/;"	m	struct:vtx	file:
ts_min	baresip/src/video.c	/^	uint32_t ts_min;$/;"	m	struct:vrx	file:
ts_min	baresip/src/video.c	/^	uint32_t ts_min;$/;"	m	struct:vtx	file:
ts_offset	baresip/src/video.c	/^	uint32_t ts_offset;                \/**< Random timestamp offset   *\/$/;"	m	struct:vtx	file:
ts_recv	baresip/src/audio.c	/^	struct timestamp_recv ts_recv;\/**< Receive timestamp state         *\/$/;"	m	struct:aurx	typeref:struct:aurx::timestamp_recv	file:
ts_ref	re-0.5.6/src/rtp/sess.c	/^	uint32_t ts_ref;     \/**< RTP timestamp reference (transmit)     *\/$/;"	m	struct:txstat	file:
ts_start	baresip/src/core.h	/^	uint64_t ts_start;$/;"	m	struct:metric
ts_synced	re-0.5.6/src/rtp/sess.c	/^	bool ts_synced;      \/**< RTP timestamp synchronization flag     *\/$/;"	m	struct:txstat	file:
ts_tel	baresip/src/audio.c	/^	uint32_t ts_tel;              \/**< Timestamp for Telephony Events  *\/$/;"	m	struct:autx	file:
tsamp	baresip/modules/vidloop/vidloop.c	/^	uint64_t tsamp;$/;"	m	struct:vstat	file:
ttl	re-0.5.6/include/re_dns.h	/^	int64_t ttl;$/;"	m	struct:dnsrr
ttlmin	re-0.5.6/include/re_dns.h	/^			uint32_t ttlmin;$/;"	m	struct:dnsrr::__anon154::__anon158
turn	baresip/modules/ice/ice.c	/^	bool turn;$/;"	m	struct:__anon45	file:
turn	baresip/modules/turn/turn.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(turn) = {$/;"	v	typeref:struct:DECL_EXPORTS
turn_handler1	baresip/modules/turn/turn.c	/^static void turn_handler1(int err, uint16_t scode, const char *reason,$/;"	f	file:
turn_handler2	baresip/modules/turn/turn.c	/^static void turn_handler2(int err, uint16_t scode, const char *reason,$/;"	f	file:
turnc	re-0.5.6/src/ice/ice.h	/^	struct turnc *turnc;         \/**< TURN Client                       *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::turnc
turnc	re-0.5.6/src/turn/chan.c	/^	struct turnc *turnc;$/;"	m	struct:chan	typeref:struct:chan::turnc	file:
turnc	re-0.5.6/src/turn/perm.c	/^	struct turnc *turnc;$/;"	m	struct:perm	typeref:struct:perm::turnc	file:
turnc	re-0.5.6/src/turn/turnc.h	/^struct turnc {$/;"	s
turnc1	baresip/modules/turn/turn.c	/^	struct turnc *turnc1;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::turnc	file:
turnc2	baresip/modules/turn/turn.c	/^	struct turnc *turnc2;$/;"	m	struct:mnat_media	typeref:struct:mnat_media::turnc	file:
turnc_add_chan	re-0.5.6/src/turn/chan.c	/^int turnc_add_chan(struct turnc *turnc, const struct sa *peer,$/;"	f
turnc_add_perm	re-0.5.6/src/turn/perm.c	/^int turnc_add_perm(struct turnc *turnc, const struct sa *peer,$/;"	f
turnc_alloc	re-0.5.6/src/turn/turnc.c	/^int turnc_alloc(struct turnc **turncp, const struct stun_conf *conf, int proto,$/;"	f
turnc_chan_find_numb	re-0.5.6/src/turn/chan.c	/^struct chan *turnc_chan_find_numb(const struct turnc *turnc, uint16_t nr)$/;"	f
turnc_chan_find_peer	re-0.5.6/src/turn/chan.c	/^struct chan *turnc_chan_find_peer(const struct turnc *turnc,$/;"	f
turnc_chan_h	re-0.5.6/include/re_turn.h	/^typedef void(turnc_chan_h)(void *arg);$/;"	t
turnc_chan_hash_alloc	re-0.5.6/src/turn/chan.c	/^int turnc_chan_hash_alloc(struct channels **cp, uint32_t bsize)$/;"	f
turnc_chan_hdr_decode	re-0.5.6/src/turn/chan.c	/^int turnc_chan_hdr_decode(struct chan_hdr *hdr, struct mbuf *mb)$/;"	f
turnc_chan_hdr_encode	re-0.5.6/src/turn/chan.c	/^int turnc_chan_hdr_encode(const struct chan_hdr *hdr, struct mbuf *mb)$/;"	f
turnc_chan_numb	re-0.5.6/src/turn/chan.c	/^uint16_t turnc_chan_numb(const struct chan *chan)$/;"	f
turnc_chan_peer	re-0.5.6/src/turn/chan.c	/^const struct sa *turnc_chan_peer(const struct chan *chan)$/;"	f
turnc_h	re-0.5.6/include/re_turn.h	/^typedef void(turnc_h)(int err, uint16_t scode, const char *reason,$/;"	t
turnc_handler	baresip/modules/ice/ice.c	/^static void turnc_handler(int err, uint16_t scode, const char *reason,$/;"	f	file:
turnc_keygen	re-0.5.6/src/turn/turnc.c	/^int turnc_keygen(struct turnc *turnc, const struct stun_msg *msg)$/;"	f
turnc_loopstate_reset	re-0.5.6/src/turn/turnc.c	/^void turnc_loopstate_reset(struct loop_state *ls)$/;"	f
turnc_perm_h	re-0.5.6/include/re_turn.h	/^typedef void(turnc_perm_h)(void *arg);$/;"	t
turnc_perm_hash_alloc	re-0.5.6/src/turn/perm.c	/^int turnc_perm_hash_alloc(struct hash **ht, uint32_t bsize)$/;"	f
turnc_recv	re-0.5.6/src/turn/turnc.c	/^int turnc_recv(struct turnc *turnc, struct sa *src, struct mbuf *mb)$/;"	f
turnc_request_loops	re-0.5.6/src/turn/turnc.c	/^bool turnc_request_loops(struct loop_state *ls, uint16_t scode)$/;"	f
turnc_send	re-0.5.6/src/turn/turnc.c	/^int turnc_send(struct turnc *turnc, const struct sa *dst, struct mbuf *mb)$/;"	f
tx	baresip/modules/dtls_srtp/dtls_srtp.h	/^	struct srtp_stream *tx;$/;"	m	struct:comp	typeref:struct:comp::srtp_stream
tx	baresip/src/audio.c	/^	struct autx tx;               \/**< Transmit                        *\/$/;"	m	struct:audio	typeref:struct:audio::autx	file:
tx	re-0.5.6/include/re_rtp.h	/^	} tx;$/;"	m	struct:rtcp_stats	typeref:struct:rtcp_stats::__anon190
tx_thread	baresip/src/audio.c	/^static void *tx_thread(void *arg)$/;"	f	file:
txc	re-0.5.6/src/bfcp/bfcp.h	/^	unsigned txc;$/;"	m	struct:bfcp_conn
txc	re-0.5.6/src/sip/ctrans.c	/^	uint32_t txc;$/;"	m	struct:sip_ctrans	file:
txc	re-0.5.6/src/sip/strans.c	/^	uint32_t txc;$/;"	m	struct:sip_strans	file:
txc	re-0.5.6/src/sipsess/reply.c	/^	uint32_t txc;$/;"	m	struct:sipsess_reply	file:
txc	re-0.5.6/src/stun/ctrans.c	/^	uint32_t txc;$/;"	m	struct:stun_ctrans	file:
txc	re-0.5.6/src/telev/telev.c	/^	uint32_t txc;$/;"	m	struct:telev	file:
txmode	baresip/include/baresip.h	/^	enum audio_mode txmode; \/**< Audio transmit mode            *\/$/;"	m	struct:config_audio	typeref:enum:config_audio::audio_mode
txqsz	re-0.5.6/src/tcp/tcp.c	/^	size_t txqsz;$/;"	m	struct:tcp_conn	file:
txqsz_max	re-0.5.6/src/tcp/tcp.c	/^	size_t txqsz_max;$/;"	m	struct:tcp_conn	file:
txstat	re-0.5.6/src/rtp/sess.c	/^	struct txstat txstat;       \/**< Local transmit statistics           *\/$/;"	m	struct:rtcp_sess	typeref:struct:rtcp_sess::txstat	file:
txstat	re-0.5.6/src/rtp/sess.c	/^struct txstat {$/;"	s	file:
type	baresip/include/baresip.h	/^	unsigned type:5;   \/**< 5 bits - nal_unit_type                  *\/$/;"	m	struct:h264_hdr
type	baresip/include/baresip.h	/^	unsigned type:5;   \/**< The NAL unit payload type               *\/$/;"	m	struct:h264_fu
type	baresip/modules/h265/decode.c	/^	unsigned type:6;$/;"	m	struct:fu	file:
type	re-0.5.6/include/re_bfcp.h	/^	enum bfcp_attrib type;$/;"	m	struct:bfcp_attr	typeref:enum:bfcp_attr::bfcp_attrib
type	re-0.5.6/include/re_dns.h	/^	uint16_t type;$/;"	m	struct:dnsrr
type	re-0.5.6/include/re_ice.h	/^	enum ice_cand_type type;  \/**< Candidate type                       *\/$/;"	m	struct:ice_cand_attr	typeref:enum:ice_cand_attr::ice_cand_type
type	re-0.5.6/include/re_json.h	/^	enum json_typ type;$/;"	m	struct:json_value	typeref:enum:json_value::json_typ
type	re-0.5.6/include/re_mod.h	/^	const char *type;    \/**< Module type             *\/$/;"	m	struct:mod_export
type	re-0.5.6/include/re_msg.h	/^	struct pl type;$/;"	m	struct:msg_ctype	typeref:struct:msg_ctype::pl
type	re-0.5.6/include/re_odict.h	/^	enum odict_type type;$/;"	m	struct:odict_entry	typeref:enum:odict_entry::odict_type
type	re-0.5.6/include/re_rtp.h	/^		uint16_t type;  \/**< Defined by profile     *\/$/;"	m	struct:rtp_header::__anon180
type	re-0.5.6/include/re_rtp.h	/^	enum rtcp_sdes_type type; \/**< Type of item (enum rtcp_sdes_type) *\/$/;"	m	struct:rtcp_sdes_item	typeref:enum:rtcp_sdes_item::rtcp_sdes_type
type	re-0.5.6/include/re_stun.h	/^	uint16_t type;$/;"	m	struct:stun_attr
type	re-0.5.6/src/dns/client.c	/^	uint16_t type;$/;"	m	struct:dns_query	file:
type	re-0.5.6/src/dns/client.c	/^	uint16_t type;$/;"	m	struct:dnsquery	file:
type	re-0.5.6/src/dns/rrlist.c	/^	uint16_t type;$/;"	m	struct:sort	file:
type	re-0.5.6/src/ice/ice.h	/^	enum ice_cand_type type;     \/**< Candidate type                     *\/$/;"	m	struct:ice_cand	typeref:enum:ice_cand::ice_cand_type
type	re-0.5.6/src/stun/stun.h	/^	uint16_t type;               \/**< Message type   *\/$/;"	m	struct:stun_hdr
type_prio	re-0.5.6/src/ice/util.c	/^static uint32_t type_prio(enum ice_cand_type type)$/;"	f	file:
typec	re-0.5.6/include/re_bfcp.h	/^	size_t typec;$/;"	m	struct:bfcp_unknown_attr
typec	re-0.5.6/include/re_stun.h	/^	uint32_t typec;$/;"	m	struct:stun_unknown_attr
typedef_h	baresip/modules/amr/amr.c	13;"	d	file:
typev	re-0.5.6/include/re_bfcp.h	/^	uint8_t typev[16];$/;"	m	struct:bfcp_unknown_attr
typev	re-0.5.6/include/re_stun.h	/^	uint16_t typev[8];$/;"	m	struct:stun_unknown_attr
u	baresip/modules/avcodec/encode.c	/^	} u;$/;"	m	struct:videnc_state	typeref:union:videnc_state::__anon37	file:
u	baresip/modules/avcodec/h26x.h	/^	unsigned u:1;      \/**< 1 bit  - Unrestricted Motion Vector         *\/$/;"	m	struct:h263_hdr
u	baresip/modules/natpmp/libnatpmp.h	/^	} u;$/;"	m	struct:natpmp_resp	typeref:union:natpmp_resp::__anon70
u	baresip/src/audio.c	/^	} u;$/;"	m	struct:autx	typeref:union:autx::__anon12	file:
u	re-0.5.6/include/re_odict.h	/^	} u;$/;"	m	struct:odict_entry	typeref:union:odict_entry::__anon172
u	re-0.5.6/include/re_sa.h	/^	} u;$/;"	m	struct:sa	typeref:union:sa::__anon176
u16	re-0.5.6/include/re_bfcp.h	/^		uint16_t u16;$/;"	m	union:bfcp_attr::bfcp_union
u16	re-0.5.6/src/srtp/srtp.h	/^	uint16_t u16[ 8];$/;"	m	union:vect128
u32	re-0.5.6/src/srtp/srtp.h	/^	uint32_t u32[ 4];$/;"	m	union:vect128
u64	re-0.5.6/src/srtp/srtp.h	/^	uint64_t u64[ 2];$/;"	m	union:vect128
u8	re-0.5.6/src/srtp/srtp.h	/^	uint8_t   u8[16];$/;"	m	union:vect128
ua	baresip/modules/mwi/mwi.c	/^	struct ua *ua;$/;"	m	struct:mwi	typeref:struct:mwi::ua	file:
ua	baresip/modules/presence/notifier.c	/^	struct ua *ua;$/;"	m	struct:notifier	typeref:struct:notifier::ua	file:
ua	baresip/modules/presence/publisher.c	/^	struct ua *ua;$/;"	m	struct:publisher	typeref:struct:publisher::ua	file:
ua	baresip/modules/presence/subscriber.c	/^	struct ua *ua;$/;"	m	struct:presence	typeref:struct:presence::ua	file:
ua	baresip/src/call.c	/^	struct ua *ua;            \/**< SIP User-agent                       *\/$/;"	m	struct:call	typeref:struct:call::ua	file:
ua	baresip/src/reg.c	/^	struct ua *ua;               \/**< Pointer to parent UA object        *\/$/;"	m	struct:reg	typeref:struct:reg::ua	file:
ua	baresip/src/ua.c	/^struct ua {$/;"	s	file:
ua	baresip/test/call.c	/^	struct ua *ua;$/;"	m	struct:agent	typeref:struct:agent::ua	file:
ua	baresip/test/message.c	/^	struct ua *ua;$/;"	m	struct:endpoint	typeref:struct:endpoint::ua	file:
ua	baresip/test/ua.c	/^	struct ua *ua;$/;"	m	struct:test	typeref:struct:test::ua	file:
ua_account	baresip/src/ua.c	/^struct account *ua_account(const struct ua *ua)$/;"	f
ua_add_transp	baresip/src/ua.c	/^static int ua_add_transp(struct network *net)$/;"	f	file:
ua_alloc	baresip/src/ua.c	/^int ua_alloc(struct ua **uap, const char *aor)$/;"	f
ua_answer	baresip/src/ua.c	/^int ua_answer(struct ua *ua, struct call *call)$/;"	f
ua_aor	baresip/src/ua.c	/^const char *ua_aor(const struct ua *ua)$/;"	f
ua_call	baresip/src/ua.c	/^struct call *ua_call(const struct ua *ua)$/;"	f
ua_call_alloc	baresip/src/ua.c	/^static int ua_call_alloc(struct call **callp, struct ua *ua,$/;"	f	file:
ua_calls	baresip/src/ua.c	/^struct list *ua_calls(const struct ua *ua)$/;"	f
ua_close	baresip/src/ua.c	/^void ua_close(void)$/;"	f
ua_connect	baresip/src/ua.c	/^int ua_connect(struct ua *ua, struct call **callp,$/;"	f
ua_cur	baresip/src/ua.c	/^	struct ua *ua_cur;             \/**< Current User-Agent              *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::ua	file:
ua_cuser	baresip/src/ua.c	/^const char *ua_cuser(const struct ua *ua)$/;"	f
ua_debug	baresip/src/ua.c	/^int ua_debug(struct re_printf *pf, const struct ua *ua)$/;"	f
ua_destructor	baresip/src/ua.c	/^static void ua_destructor(void *arg)$/;"	f	file:
ua_eh	baresip/src/ua.c	/^struct ua_eh {$/;"	s	file:
ua_event	baresip/include/baresip.h	/^enum ua_event {$/;"	g
ua_event	baresip/src/ua.c	/^void ua_event(struct ua *ua, enum ua_event ev, struct call *call,$/;"	f
ua_event_h	baresip/include/baresip.h	/^typedef void (ua_event_h)(struct ua *ua, enum ua_event ev,$/;"	t
ua_event_handler	baresip/modules/b2bua/b2bua.c	/^static void ua_event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
ua_event_handler	baresip/modules/dtmfio/dtmfio.c	/^static void ua_event_handler(struct ua *ua,$/;"	f	file:
ua_event_handler	baresip/modules/echo/echo.c	/^static void ua_event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
ua_event_handler	baresip/modules/gtk/gtk_mod.c	/^static void ua_event_handler(struct ua *ua,$/;"	f	file:
ua_event_handler	baresip/modules/menu/menu.c	/^static void ua_event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
ua_event_handler	baresip/modules/mqtt/publish.c	/^static void ua_event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
ua_event_handler	baresip/modules/mwi/mwi.c	/^static void ua_event_handler(struct ua *ua,$/;"	f	file:
ua_event_handler	baresip/test/ua.c	/^static void ua_event_handler(struct ua *ua, enum ua_event ev,$/;"	f	file:
ua_event_reg_str	baresip/modules/gtk/gtk_mod.c	/^static const char *ua_event_reg_str(enum ua_event ev)$/;"	f	file:
ua_exit_h	baresip/include/baresip.h	/^typedef void (ua_exit_h)(void *arg);$/;"	t
ua_exit_handler	baresip/src/main.c	/^static void ua_exit_handler(void *arg)$/;"	f	file:
ua_exit_handler	baresip/test/main.c	/^static void ua_exit_handler(void *arg)$/;"	f	file:
ua_find_call_onhold	baresip/src/ua.c	/^static struct call *ua_find_call_onhold(const struct ua *ua)$/;"	f	file:
ua_hangup	baresip/src/ua.c	/^void ua_hangup(struct ua *ua, struct call *call,$/;"	f
ua_hold_answer	baresip/src/ua.c	/^int ua_hold_answer(struct ua *ua, struct call *call)$/;"	f
ua_in	baresip/modules/b2bua/b2bua.c	/^static struct ua *ua_in, *ua_out;$/;"	v	typeref:struct:ua	file:
ua_init	baresip/src/ua.c	/^int ua_init(const char *software, bool udp, bool tcp, bool tls,$/;"	f
ua_isregistered	baresip/src/ua.c	/^bool ua_isregistered(const struct ua *ua)$/;"	f
ua_local_cuser	baresip/src/ua.c	/^const char *ua_local_cuser(const struct ua *ua)$/;"	f
ua_options_send	baresip/src/ua.c	/^int ua_options_send(struct ua *ua, const char *uri,$/;"	f
ua_out	baresip/modules/b2bua/b2bua.c	/^static struct ua *ua_in, *ua_out;$/;"	v	typeref:struct:	file:
ua_outbound	baresip/src/ua.c	/^const char *ua_outbound(const struct ua *ua)$/;"	f
ua_presence_status	baresip/src/ua.c	/^enum presence_status ua_presence_status(const struct ua *ua)$/;"	f
ua_presence_status_set	baresip/src/ua.c	/^void ua_presence_status_set(struct ua *ua, const enum presence_status status)$/;"	f
ua_prev_call	baresip/src/ua.c	/^struct call *ua_prev_call(const struct ua *ua)$/;"	f
ua_print_call_status	baresip/modules/menu/menu.c	/^static int ua_print_call_status(struct re_printf *pf, void *unused)$/;"	f	file:
ua_print_calls	baresip/src/ua.c	/^int ua_print_calls(struct re_printf *pf, const struct ua *ua)$/;"	f
ua_print_reg_status	baresip/modules/menu/menu.c	/^static int ua_print_reg_status(struct re_printf *pf, void *unused)$/;"	f	file:
ua_print_sip_status	baresip/src/ua.c	/^int ua_print_sip_status(struct re_printf *pf, void *unused)$/;"	f
ua_print_status	baresip/src/ua.c	/^int ua_print_status(struct re_printf *pf, const struct ua *ua)$/;"	f
ua_print_supported	baresip/src/ua.c	/^int ua_print_supported(struct re_printf *pf, const struct ua *ua)$/;"	f
ua_printf	baresip/src/ua.c	/^void ua_printf(const struct ua *ua, const char *fmt, ...)$/;"	f
ua_progress	baresip/src/ua.c	/^int ua_progress(struct ua *ua, struct call *call)$/;"	f
ua_pub_gruu_set	baresip/src/ua.c	/^void ua_pub_gruu_set(struct ua *ua, const struct pl *pval)$/;"	f
ua_register	baresip/src/ua.c	/^int ua_register(struct ua *ua)$/;"	f
ua_set_media_af	baresip/src/ua.c	/^void ua_set_media_af(struct ua *ua, int af_media)$/;"	f
ua_stop_all	baresip/src/ua.c	/^void ua_stop_all(bool forced)$/;"	f
ua_unregister	baresip/src/ua.c	/^void ua_unregister(struct ua *ua)$/;"	f
uag	baresip/src/ua.c	/^} uag = {$/;"	v	typeref:struct:__anon7	file:
uag_allowed_methods	baresip/src/ua.c	/^const char *uag_allowed_methods(void)$/;"	f
uag_cur	baresip/modules/menu/menu.c	/^static struct ua *uag_cur(void)$/;"	f	file:
uag_current	baresip/src/ua.c	/^struct ua *uag_current(void)$/;"	f
uag_current_set	baresip/src/ua.c	/^void uag_current_set(struct ua *ua)$/;"	f
uag_event_register	baresip/src/ua.c	/^int uag_event_register(ua_event_h *h, void *arg)$/;"	f
uag_event_str	baresip/src/event.c	/^const char *uag_event_str(enum ua_event ev)$/;"	f
uag_event_unregister	baresip/src/ua.c	/^void uag_event_unregister(ua_event_h *h)$/;"	f
uag_find	baresip/src/ua.c	/^struct ua *uag_find(const struct pl *cuser)$/;"	f
uag_find_aor	baresip/src/ua.c	/^struct ua *uag_find_aor(const char *aor)$/;"	f
uag_find_param	baresip/src/ua.c	/^struct ua *uag_find_param(const char *name, const char *value)$/;"	f
uag_list	baresip/src/ua.c	/^struct list *uag_list(void)$/;"	f
uag_reset_transp	baresip/src/ua.c	/^int uag_reset_transp(bool reg, bool reinvite)$/;"	f
uag_set_exit_handler	baresip/src/ua.c	/^void uag_set_exit_handler(ua_exit_h *exith, void *arg)$/;"	f
uag_set_extra_params	baresip/src/ua.c	/^int uag_set_extra_params(const char *eprm)$/;"	f
uag_set_sub_handler	baresip/src/ua.c	/^void uag_set_sub_handler(sip_msg_h *subh)$/;"	f
uag_sip	baresip/src/ua.c	/^struct sip *uag_sip(void)$/;"	f
uag_sipevent_sock	baresip/src/ua.c	/^struct sipevent_sock *uag_sipevent_sock(void)$/;"	f
uag_sipsess_sock	baresip/src/ua.c	/^struct sipsess_sock *uag_sipsess_sock(void)$/;"	f
uag_tls	baresip/src/ua.c	/^struct tls *uag_tls(void)$/;"	f
ual	baresip/src/ua.c	/^	struct list ual;               \/**< List of User-Agents (struct ua) *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::list	file:
uap	baresip/src/ua.c	/^	struct ua **uap;             \/**< Pointer to application's ua        *\/$/;"	m	struct:ua	typeref:struct:ua::ua	file:
udp_connect	re-0.5.6/src/udp/udp.c	/^int udp_connect(struct udp_sock *us, const struct sa *peer)$/;"	f
udp_destructor	re-0.5.6/src/udp/udp.c	/^static void udp_destructor(void *data)$/;"	f	file:
udp_error_h	re-0.5.6/include/re_udp.h	/^typedef void (udp_error_h)(int err, void *arg);$/;"	t
udp_error_handler_set	re-0.5.6/src/udp/udp.c	/^void udp_error_handler_set(struct udp_sock *us, udp_error_h *eh)$/;"	f
udp_handler_set	re-0.5.6/src/udp/udp.c	/^void udp_handler_set(struct udp_sock *us, udp_recv_h *rh, void *arg)$/;"	f
udp_helper	re-0.5.6/src/udp/udp.c	/^struct udp_helper {$/;"	s	file:
udp_helper_find	re-0.5.6/src/udp/udp.c	/^struct udp_helper *udp_helper_find(const struct udp_sock *us, int layer)$/;"	f
udp_helper_recv	baresip/modules/gzrtp/stream.cpp	/^bool Stream::udp_helper_recv(struct sa *src, struct mbuf *mb)$/;"	f	class:Stream
udp_helper_recv	baresip/modules/zrtp/zrtp.c	/^static bool udp_helper_recv(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_helper_recv_cb	baresip/modules/gzrtp/stream.cpp	/^bool Stream::udp_helper_recv_cb(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	class:Stream
udp_helper_recv_h	re-0.5.6/include/re_udp.h	/^typedef bool (udp_helper_recv_h)(struct sa *src,$/;"	t
udp_helper_send	baresip/modules/gzrtp/stream.cpp	/^bool Stream::udp_helper_send(int *err, struct sa *src, struct mbuf *mb)$/;"	f	class:Stream
udp_helper_send	baresip/modules/zrtp/zrtp.c	/^static bool udp_helper_send(int *err, struct sa *dst,$/;"	f	file:
udp_helper_send_cb	baresip/modules/gzrtp/stream.cpp	/^bool Stream::udp_helper_send_cb(int *err, struct sa *src, struct mbuf *mb,$/;"	f	class:Stream
udp_helper_send_h	re-0.5.6/include/re_udp.h	/^typedef bool (udp_helper_send_h)(int *err, struct sa *dst,$/;"	t
udp_listen	re-0.5.6/src/udp/udp.c	/^int udp_listen(struct udp_sock **usp, const struct sa *local,$/;"	f
udp_local_get	re-0.5.6/src/udp/udp.c	/^int udp_local_get(const struct udp_sock *us, struct sa *local)$/;"	f
udp_multicast_join	re-0.5.6/src/udp/mcast.c	/^int udp_multicast_join(struct udp_sock *us, const struct sa *group)$/;"	f
udp_multicast_leave	re-0.5.6/src/udp/mcast.c	/^int udp_multicast_leave(struct udp_sock *us, const struct sa *group)$/;"	f
udp_peer	baresip/modules/cons/cons.c	/^	struct sa udp_peer;$/;"	m	struct:ui_st	typeref:struct:ui_st::sa	file:
udp_range_listen	re-0.5.6/src/rtp/rtp.c	/^static int udp_range_listen(struct rtp_sock *rs, const struct sa *ip,$/;"	f	file:
udp_read	re-0.5.6/src/udp/udp.c	/^static void udp_read(struct udp_sock *us, int fd)$/;"	f	file:
udp_read_handler	re-0.5.6/src/udp/udp.c	/^static void udp_read_handler(int flags, void *arg)$/;"	f	file:
udp_read_handler6	re-0.5.6/src/udp/udp.c	/^static void udp_read_handler6(int flags, void *arg)$/;"	f	file:
udp_recv	baresip/modules/cons/cons.c	/^static void udp_recv(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv	baresip/modules/natpmp/libnatpmp.c	/^static void udp_recv(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv	baresip/modules/pcp/listener.c	/^static void udp_recv(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv	baresip/test/mock/dnssrv.c	/^static void udp_recv(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_h	re-0.5.6/include/re_udp.h	/^typedef void (udp_recv_h)(const struct sa *src, struct mbuf *mb, void *arg);$/;"	t
udp_recv_handler	re-0.5.6/src/bfcp/conn.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler	re-0.5.6/src/dns/client.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler	re-0.5.6/src/natbd/hairpinning.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb,$/;"	f	file:
udp_recv_handler	re-0.5.6/src/natbd/mapping.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb,$/;"	f	file:
udp_recv_handler	re-0.5.6/src/rtp/rtp.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler	re-0.5.6/src/sip/transp.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler	re-0.5.6/src/stun/ctrans.c	/^static void udp_recv_handler(const struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler	re-0.5.6/src/stun/keepalive.c	/^static bool udp_recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler	re-0.5.6/src/turn/turnc.c	/^static bool udp_recv_handler(struct sa *src, struct mbuf *mb, void *arg)$/;"	f	file:
udp_recv_handler_x	re-0.5.6/src/natbd/lifetime.c	/^static void udp_recv_handler_x(const struct sa *src, struct mbuf *mb,$/;"	f	file:
udp_recv_handler_y	re-0.5.6/src/natbd/lifetime.c	/^static void udp_recv_handler_y(const struct sa *src, struct mbuf *mb,$/;"	f	file:
udp_register_helper	re-0.5.6/src/udp/udp.c	/^int udp_register_helper(struct udp_helper **uhp, struct udp_sock *us,$/;"	f
udp_rxbuf_presz_set	re-0.5.6/src/udp/udp.c	/^void udp_rxbuf_presz_set(struct udp_sock *us, size_t rx_presz)$/;"	f
udp_rxsz_set	re-0.5.6/src/udp/udp.c	/^void udp_rxsz_set(struct udp_sock *us, size_t rxsz)$/;"	f
udp_send	re-0.5.6/src/udp/udp.c	/^int udp_send(struct udp_sock *us, const struct sa *dst, struct mbuf *mb)$/;"	f
udp_send_anon	re-0.5.6/src/udp/udp.c	/^int udp_send_anon(const struct sa *dst, struct mbuf *mb)$/;"	f
udp_send_handler	re-0.5.6/src/turn/turnc.c	/^static bool udp_send_handler(int *err, struct sa *dst, struct mbuf *mb,$/;"	f	file:
udp_send_helper	re-0.5.6/src/udp/udp.c	/^int udp_send_helper(struct udp_sock *us, const struct sa *dst,$/;"	f
udp_send_internal	re-0.5.6/src/udp/udp.c	/^static int udp_send_internal(struct udp_sock *us, const struct sa *dst,$/;"	f	file:
udp_setsockopt	re-0.5.6/src/udp/udp.c	/^int udp_setsockopt(struct udp_sock *us, int level, int optname,$/;"	f
udp_sock	re-0.5.6/src/udp/udp.c	/^struct udp_sock {$/;"	s	file:
udp_sock_fd	re-0.5.6/src/udp/udp.c	/^int udp_sock_fd(const struct udp_sock *us, int af)$/;"	f
udp_sockbuf_set	re-0.5.6/src/udp/udp.c	/^int udp_sockbuf_set(struct udp_sock *us, int size)$/;"	f
udp_thread_attach	re-0.5.6/src/udp/udp.c	/^int udp_thread_attach(struct udp_sock *us)$/;"	f
udp_thread_detach	re-0.5.6/src/udp/udp.c	/^void udp_thread_detach(struct udp_sock *us)$/;"	f
udp_timeout_handler	re-0.5.6/src/dns/client.c	/^static void udp_timeout_handler(void *arg)$/;"	f	file:
udpconn_close	re-0.5.6/src/sip/keepalive_udp.c	/^static void udpconn_close(struct sip_udpconn *uc, int err)$/;"	f	file:
udpconn_find	re-0.5.6/src/sip/keepalive_udp.c	/^static struct sip_udpconn *udpconn_find(struct sip *sip, struct udp_sock *us,$/;"	f	file:
udpconn_keepalive_handler	re-0.5.6/src/sip/keepalive_udp.c	/^static void udpconn_keepalive_handler(void *arg)$/;"	f	file:
ufrag_decode	re-0.5.6/src/ice/icesdp.c	/^static int ufrag_decode(struct icem *icem, const char *value)$/;"	f	file:
uh	re-0.5.6/src/ice/ice.h	/^	struct udp_helper *uh;       \/**< UDP helper                        *\/$/;"	m	struct:icem_comp	typeref:struct:icem_comp::udp_helper
uh	re-0.5.6/src/stun/keepalive.c	/^	struct udp_helper *uh;$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::udp_helper	file:
uh	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct udp_helper *uh;$/;"	m	struct:dtls_sock	typeref:struct:dtls_sock::udp_helper	file:
uh	re-0.5.6/src/turn/turnc.h	/^	struct udp_helper *uh;         \/**< UDP Helper for the TURN Socket  *\/$/;"	m	struct:turnc	typeref:struct:turnc::udp_helper
uh_rtcp	baresip/modules/libsrtp/srtp.c	/^	struct udp_helper *uh_rtcp;  \/**< UDP helper for RTCP encryption   *\/$/;"	m	struct:menc_st	typeref:struct:menc_st::udp_helper	file:
uh_rtcp	baresip/modules/srtp/srtp.c	/^	struct udp_helper *uh_rtcp;  \/**< UDP helper for RTCP encryption   *\/$/;"	m	struct:menc_st	typeref:struct:menc_st::udp_helper	file:
uh_rtcp	baresip/modules/zrtp/zrtp.c	/^	struct udp_helper *uh_rtcp;$/;"	m	struct:menc_media	typeref:struct:menc_media::udp_helper	file:
uh_rtp	baresip/modules/libsrtp/srtp.c	/^	struct udp_helper *uh_rtp;   \/**< UDP helper for RTP encryption    *\/$/;"	m	struct:menc_st	typeref:struct:menc_st::udp_helper	file:
uh_rtp	baresip/modules/srtp/srtp.c	/^	struct udp_helper *uh_rtp;   \/**< UDP helper for RTP encryption    *\/$/;"	m	struct:menc_st	typeref:struct:menc_st::udp_helper	file:
uh_rtp	baresip/modules/zrtp/zrtp.c	/^	struct udp_helper *uh_rtp;$/;"	m	struct:menc_media	typeref:struct:menc_media::udp_helper	file:
uh_srtp	baresip/modules/dtls_srtp/dtls_srtp.h	/^	struct udp_helper *uh_srtp;$/;"	m	struct:comp	typeref:struct:comp::udp_helper
ui	baresip/include/baresip.h	/^struct ui {$/;"	s
ui_alloc	baresip/modules/stdio/stdio.c	/^static int ui_alloc(struct ui_st **stp)$/;"	f	file:
ui_alloc	baresip/modules/wincons/wincons.c	/^static int ui_alloc(struct ui_st **stp)$/;"	f	file:
ui_cons	baresip/modules/cons/cons.c	/^static struct ui ui_cons = {$/;"	v	typeref:struct:ui	file:
ui_destructor	baresip/modules/stdio/stdio.c	/^static void ui_destructor(void *arg)$/;"	f	file:
ui_evdev	baresip/modules/evdev/evdev.c	/^static struct ui ui_evdev = {$/;"	v	typeref:struct:ui	file:
ui_fd_handler	baresip/modules/stdio/stdio.c	/^static void ui_fd_handler(int flags, void *arg)$/;"	f	file:
ui_http	baresip/modules/httpd/httpd.c	/^static struct ui ui_http = {$/;"	v	typeref:struct:ui	file:
ui_input_key	baresip/src/ui.c	/^void ui_input_key(struct ui_sub *uis, char key, struct re_printf *pf)$/;"	f
ui_input_pl	baresip/src/ui.c	/^int ui_input_pl(struct re_printf *pf, const struct pl *pl)$/;"	f
ui_input_str	baresip/src/ui.c	/^void ui_input_str(const char *str)$/;"	f
ui_isediting	baresip/src/ui.c	/^bool ui_isediting(const struct ui_sub *uis)$/;"	f
ui_output	baresip/src/ui.c	/^void ui_output(struct ui_sub *uis, const char *fmt, ...)$/;"	f
ui_output_h	baresip/include/baresip.h	/^typedef int  (ui_output_h)(const char *str);$/;"	t
ui_password_prompt	baresip/src/ui.c	/^int ui_password_prompt(char **passwordp)$/;"	f
ui_register	baresip/src/ui.c	/^void ui_register(struct ui_sub *uis, struct ui *ui)$/;"	f
ui_reset	baresip/src/ui.c	/^void ui_reset(struct ui_sub *uis)$/;"	f
ui_st	baresip/modules/cons/cons.c	/^struct ui_st {$/;"	s	file:
ui_st	baresip/modules/evdev/evdev.c	/^struct ui_st {$/;"	s	file:
ui_st	baresip/modules/stdio/stdio.c	/^struct ui_st {$/;"	s	file:
ui_st	baresip/modules/wincons/wincons.c	/^struct ui_st {$/;"	s	file:
ui_state	baresip/modules/stdio/stdio.c	/^static struct ui_st *ui_state;$/;"	v	typeref:struct:ui_st	file:
ui_stdio	baresip/modules/stdio/stdio.c	/^static struct ui ui_stdio = {$/;"	v	typeref:struct:ui	file:
ui_sub	baresip/include/baresip.h	/^struct ui_sub {$/;"	s
ui_unregister	baresip/src/ui.c	/^void ui_unregister(struct ui *ui)$/;"	f
ui_wincons	baresip/modules/wincons/wincons.c	/^static struct ui ui_wincons = {$/;"	v	typeref:struct:ui	file:
uictx	baresip/include/baresip.h	/^	struct cmd_ctx *uictx;$/;"	m	struct:ui_sub	typeref:struct:ui_sub::cmd_ctx
uil	baresip/include/baresip.h	/^	struct list uil;  \/**< List of UIs (struct ui) *\/$/;"	m	struct:ui_sub	typeref:struct:ui_sub::list
uint16	re-0.5.6/include/re_stun.h	/^		uint16_t uint16;$/;"	m	union:stun_attr::__anon174
uint16_t	re-0.5.6/include/re_types.h	/^typedef unsigned short int        uint16_t;$/;"	t
uint32	re-0.5.6/include/re_stun.h	/^		uint32_t uint32;$/;"	m	union:stun_attr::__anon174
uint32_t	re-0.5.6/include/re_types.h	/^typedef unsigned int              uint32_t;$/;"	t
uint64	re-0.5.6/include/re_stun.h	/^		uint64_t uint64;$/;"	m	union:stun_attr::__anon174
uint64_t	re-0.5.6/include/re_types.h	/^typedef unsigned long long int    uint64_t;$/;"	t
uint8	re-0.5.6/include/re_stun.h	/^		uint8_t uint8;$/;"	m	union:stun_attr::__anon174
uint8_t	re-0.5.6/include/re_types.h	/^typedef unsigned char             uint8_t;$/;"	t
uis	baresip/src/baresip.c	/^	struct ui_sub uis;$/;"	m	struct:baresip	typeref:struct:baresip::ui_sub	file:
uma	re-0.5.6/include/re_bfcp.h	/^	struct bfcp_unknown_attr uma;$/;"	m	struct:bfcp_msg	typeref:struct:bfcp_msg::bfcp_unknown_attr
umv	baresip/modules/avcodec/h26x.h	/^	unsigned umv:1;              \/**< Unrestricted Motion Vector mode *\/$/;"	m	struct:h263_strm
uninit_device	baresip/modules/v4l2/v4l2.c	/^static void uninit_device(struct vidsrc_st *st)$/;"	f	file:
unique_handler	re-0.5.6/src/ice/chklist.c	/^static void *unique_handler(struct le *le1, struct le *le2)$/;"	f	file:
unique_handler	re-0.5.6/src/ice/icem.c	/^static void *unique_handler(struct le *le1, struct le *le2)$/;"	f	file:
unix2ntp	re-0.5.6/src/rtp/ntp.c	/^void unix2ntp(struct ntp_time *ntp, const struct timeval *tv)$/;"	f
unknown_attr	re-0.5.6/include/re_stun.h	/^		struct stun_unknown_attr unknown_attr;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::stun_unknown_attr
unprotect	baresip/modules/gzrtp/srtp.cpp	/^int Srtp::unprotect(struct mbuf *mb)$/;"	f	class:Srtp
unprotect_ctrl	baresip/modules/gzrtp/srtp.cpp	/^int Srtp::unprotect_ctrl(struct mbuf *mb)$/;"	f	class:Srtp
unprotect_int	baresip/modules/gzrtp/srtp.cpp	/^int Srtp::unprotect_int(struct mbuf *mb, bool control)$/;"	f	class:Srtp
up	re-0.5.6/src/tls/openssl/tls_tcp.c	/^	bool up;$/;"	m	struct:tls_conn	file:
up	re-0.5.6/src/tls/openssl/tls_udp.c	/^	bool up;$/;"	m	struct:tls_conn	file:
up	rem-0.5.2/include/rem_auresamp.h	/^	bool up;               \/**< Up\/down sample flag *\/$/;"	m	struct:auresamp
update	baresip/modules/gzrtp/stream.cpp	/^void SRTPStat::update(int ret_code, bool quiet)$/;"	f	class:SRTPStat
update	baresip/modules/ice/ice.c	/^static int update(struct mnat_sess *sess)$/;"	f	file:
update	baresip/modules/plc/plc.c	/^static int update(struct aufilt_dec_st **stp, void **ctx,$/;"	f	file:
update	baresip/modules/turn/turn.c	/^static int update(struct mnat_sess *sess)$/;"	f	file:
update	re-0.5.6/src/main/main.c	/^	bool update;                 \/**< File descriptor set need updating *\/$/;"	m	struct:re	file:
update_callstatus	baresip/modules/menu/menu.c	/^static void update_callstatus(void)$/;"	f	file:
update_current_accounts_menu_item	baresip/modules/gtk/gtk_mod.c	/^static void update_current_accounts_menu_item(struct gtk_mod *mod)$/;"	f	file:
update_media	baresip/src/call.c	/^static int update_media(struct call *call)$/;"	f	file:
update_ua_presence	baresip/modules/gtk/gtk_mod.c	/^static void update_ua_presence(struct gtk_mod *mod)$/;"	f	file:
updateh	baresip/src/core.h	/^	mnat_update_h *updateh;$/;"	m	struct:mnat
updateh	baresip/src/core.h	/^	vidisp_update_h *updateh;$/;"	m	struct:vidisp
updateh	baresip/src/core.h	/^	vidsrc_update_h  *updateh;$/;"	m	struct:vidsrc
uproto	re-0.5.6/src/sdp/sdp.h	/^	char *uproto;           \/* unsupported protocol *\/$/;"	m	struct:sdp_media
upsample_mono2mono	rem-0.5.2/src/auresamp/resamp.c	/^static void upsample_mono2mono(int16_t *outv, const int16_t *inv,$/;"	f	file:
upsample_mono2stereo	rem-0.5.2/src/auresamp/resamp.c	/^static void upsample_mono2stereo(int16_t *outv, const int16_t *inv,$/;"	f	file:
upsample_stereo2mono	rem-0.5.2/src/auresamp/resamp.c	/^static void upsample_stereo2mono(int16_t *outv, const int16_t *inv,$/;"	f	file:
upsample_stereo2stereo	rem-0.5.2/src/auresamp/resamp.c	/^static void upsample_stereo2stereo(int16_t *outv, const int16_t *inv,$/;"	f	file:
ur	rem-0.5.2/src/aubuf/aubuf.c	/^		size_t ur;$/;"	m	struct:aubuf::__anon194	file:
uri	baresip/modules/gst/gst.c	/^	char *uri;$/;"	m	struct:ausrc_st	file:
uri	baresip/modules/gst1/gst.c	/^	char *uri;$/;"	m	struct:ausrc_st	file:
uri	baresip/test/message.c	/^	char uri[256];$/;"	m	struct:endpoint	file:
uri	baresip/test/sip/location.c	/^	char *uri;$/;"	m	struct:loctmp	file:
uri	baresip/test/sip/sipsrv.h	/^	char *uri;$/;"	m	struct:aor
uri	baresip/test/sip/sipsrv.h	/^	char *uri;$/;"	m	struct:location
uri	re-0.5.6/include/re_httpauth.h	/^	struct pl uri;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
uri	re-0.5.6/include/re_sip.h	/^	const char *uri;$/;"	m	struct:sip_contact
uri	re-0.5.6/include/re_sip.h	/^	struct uri uri;        \/**< Parsed request URI                   *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::uri
uri	re-0.5.6/include/re_sip.h	/^	struct uri uri;$/;"	m	struct:sip_addr	typeref:struct:sip_addr::uri
uri	re-0.5.6/include/re_sip.h	/^	struct uri uri;$/;"	m	struct:sip_taddr	typeref:struct:sip_taddr::uri
uri	re-0.5.6/include/re_uri.h	/^struct uri {$/;"	s
uri	re-0.5.6/src/sip/dialog.c	/^	char *uri;$/;"	m	struct:sip_dialog	file:
uri	re-0.5.6/src/sip/request.c	/^	char *uri;$/;"	m	struct:sip_request	file:
uri_apply_h	re-0.5.6/include/re_uri.h	/^typedef int (uri_apply_h)(const struct pl *name, const struct pl *val,$/;"	t
uri_aulevel	baresip/src/audio.c	/^static const char *uri_aulevel = "urn:ietf:params:rtp-hdrext:ssrc-audio-level";$/;"	v	file:
uri_canon	baresip/test/sip/aor.c	/^static int uri_canon(char **curip, const struct uri *uri)$/;"	f	file:
uri_cmp	re-0.5.6/src/uri/ucmp.c	/^bool uri_cmp(const struct uri *l, const struct uri *r)$/;"	f
uri_combo_box_get_text	baresip/modules/gtk/uri_entry.c	/^const char *uri_combo_box_get_text(GtkComboBox *box)$/;"	f
uri_combo_box_new	baresip/modules/gtk/uri_entry.c	/^GtkWidget *uri_combo_box_new(void)$/;"	f
uri_combobox	baresip/modules/gtk/dial_dialog.c	/^	GtkComboBox *uri_combobox;$/;"	m	struct:dial_dialog	file:
uri_combobox	baresip/modules/gtk/transfer_dialog.c	/^	GtkComboBox *uri_combobox;$/;"	m	struct:transfer_dialog	file:
uri_complete	baresip/src/ua.c	/^static int uri_complete(struct ua *ua, struct mbuf *buf, const char *uri)$/;"	f	file:
uri_decode	re-0.5.6/src/uri/uri.c	/^int uri_decode(struct uri *uri, const struct pl *pl)$/;"	f
uri_encode	re-0.5.6/src/uri/uri.c	/^int uri_encode(struct re_printf *pf, const struct uri *uri)$/;"	f
uri_header_escape	re-0.5.6/src/uri/uric.c	/^int uri_header_escape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_header_get	re-0.5.6/src/uri/uri.c	/^int uri_header_get(const struct pl *pl, const struct pl *hname,$/;"	f
uri_header_unescape	re-0.5.6/src/uri/uric.c	/^int uri_header_unescape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_headers_apply	re-0.5.6/src/uri/uri.c	/^int uri_headers_apply(const struct pl *pl, uri_apply_h *ah, void *arg)$/;"	f
uri_param_escape	re-0.5.6/src/uri/uric.c	/^int uri_param_escape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_param_get	re-0.5.6/src/uri/uri.c	/^int uri_param_get(const struct pl *pl, const struct pl *pname,$/;"	f
uri_param_unescape	re-0.5.6/src/uri/uric.c	/^int uri_param_unescape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_params_apply	re-0.5.6/src/uri/uri.c	/^int uri_params_apply(const struct pl *pl, uri_apply_h *ah, void *arg)$/;"	f
uri_password_escape	re-0.5.6/src/uri/uric.c	/^int uri_password_escape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_password_unescape	re-0.5.6/src/uri/uric.c	/^int uri_password_unescape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_user_escape	re-0.5.6/src/uri/uric.c	/^int uri_user_escape(struct re_printf *pf, const struct pl *pl)$/;"	f
uri_user_unescape	re-0.5.6/src/uri/uric.c	/^int uri_user_unescape(struct re_printf *pf, const struct pl *pl)$/;"	f
us	baresip/modules/cons/cons.c	/^	struct udp_sock *us;$/;"	m	struct:ui_st	typeref:struct:ui_st::udp_sock	file:
us	baresip/modules/natpmp/libnatpmp.c	/^	struct udp_sock *us;$/;"	m	struct:natpmp_req	typeref:struct:natpmp_req::udp_sock	file:
us	baresip/modules/pcp/listener.c	/^	struct udp_sock *us;$/;"	m	struct:pcp_listener	typeref:struct:pcp_listener::udp_sock	file:
us	baresip/test/test.h	/^	struct udp_sock *us;$/;"	m	struct:dns_server	typeref:struct:dns_server::udp_sock
us	re-0.5.6/src/bfcp/bfcp.h	/^	struct udp_sock *us;$/;"	m	struct:bfcp_conn	typeref:struct:bfcp_conn::udp_sock
us	re-0.5.6/src/dns/client.c	/^	struct udp_sock *us;$/;"	m	struct:dnsc	typeref:struct:dnsc::udp_sock	file:
us	re-0.5.6/src/natbd/hairpinning.c	/^	struct udp_sock *us;     \/**< UDP socket              *\/$/;"	m	struct:nat_hairpinning	typeref:struct:nat_hairpinning::udp_sock	file:
us	re-0.5.6/src/natbd/mapping.c	/^	struct udp_sock *us;      \/**< UDP socket                *\/$/;"	m	struct:nat_mapping	typeref:struct:nat_mapping::udp_sock	file:
us	re-0.5.6/src/sip/keepalive_udp.c	/^	struct udp_sock *us;$/;"	m	struct:sip_udpconn	typeref:struct:sip_udpconn::udp_sock	file:
us	re-0.5.6/src/tls/openssl/tls_udp.c	/^	struct udp_sock *us;$/;"	m	struct:dtls_sock	typeref:struct:dtls_sock::udp_sock	file:
us_x	re-0.5.6/src/natbd/lifetime.c	/^	struct udp_sock *us_x;                  \/**< First UDP socket       *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::udp_sock	file:
us_y	re-0.5.6/src/natbd/lifetime.c	/^	struct udp_sock *us_y;                  \/**< Second UDP socket      *\/$/;"	m	struct:nat_lifetime	typeref:struct:nat_lifetime::udp_sock	file:
usage	baresip/src/main.c	/^static void usage(void)$/;"	f	file:
usage	baresip/test/main.c	/^static void usage(void)$/;"	f	file:
use_rtp	baresip/src/core.h	/^	bool use_rtp;$/;"	m	struct:call_prm
use_rtp	baresip/src/core.h	/^	bool use_rtp;$/;"	m	struct:stream_param
use_sig_hash	baresip/modules/zrtp/zrtp.c	/^static bool use_sig_hash = true;$/;"	v	file:
use_srtp	baresip/modules/libsrtp/srtp.c	/^	bool use_srtp;$/;"	m	struct:menc_st	file:
use_srtp	baresip/modules/srtp/srtp.c	/^	bool use_srtp;$/;"	m	struct:menc_st	file:
use_tcp	baresip/src/ua.c	/^	bool use_tcp;                  \/**< Use TCP transport               *\/$/;"	m	struct:__anon7	file:
use_tls	baresip/src/ua.c	/^	bool use_tls;                  \/**< Use TLS transport               *\/$/;"	m	struct:__anon7	file:
use_udp	baresip/src/ua.c	/^	bool use_udp;                  \/**< Use UDP transport               *\/$/;"	m	struct:__anon7	file:
usec	re-0.5.6/src/http/client.c	/^	uint64_t usec;$/;"	m	struct:conn	file:
user	baresip/modules/ice/ice.c	/^	char *user;$/;"	m	struct:mnat_sess	file:
user	baresip/modules/turn/turn.c	/^	char *user;$/;"	m	struct:mnat_sess	file:
user	baresip/test/sip/sipsrv.h	/^struct user {$/;"	s
user	re-0.5.6/include/re_uri.h	/^	struct pl user;      \/**< Username                          *\/$/;"	m	struct:uri	typeref:struct:uri::pl
user	re-0.5.6/src/sip/auth.c	/^	char *user;$/;"	m	struct:realm	file:
user_add	baresip/test/sip/user.c	/^int user_add(struct hash *ht, const char *username, const char *password,$/;"	f
user_find	baresip/test/sip/user.c	/^struct user *user_find(struct hash *ht, const struct pl *name)$/;"	f
userdname	re-0.5.6/include/re_bfcp.h	/^		char *userdname;$/;"	m	union:bfcp_attr::bfcp_union
userid	re-0.5.6/include/re_bfcp.h	/^	uint16_t userid;$/;"	m	struct:bfcp_msg
userid	re-0.5.6/src/bfcp/bfcp.h	/^	uint16_t userid;$/;"	m	struct:bfcp_strans
userid	re-0.5.6/src/bfcp/request.c	/^	uint16_t userid;$/;"	m	struct:bfcp_ctrans	file:
username	re-0.5.6/include/re_httpauth.h	/^	struct pl username;$/;"	m	struct:httpauth_digest_resp	typeref:struct:httpauth_digest_resp::pl
username	re-0.5.6/include/re_stun.h	/^		char *username;$/;"	m	union:stun_attr::__anon174
username	re-0.5.6/src/turn/turnc.h	/^	char *username;                \/**< Authentication username         *\/$/;"	m	struct:turnc
useruri	re-0.5.6/include/re_bfcp.h	/^		char *useruri;$/;"	m	union:bfcp_attr::bfcp_union
utf8_decode	re-0.5.6/src/fmt/unicode.c	/^int utf8_decode(struct re_printf *pf, const struct pl *pl)$/;"	f
utf8_encode	re-0.5.6/src/fmt/unicode.c	/^int utf8_encode(struct re_printf *pf, const char *str)$/;"	f
uuid	baresip/include/baresip.h	/^	char uuid[64];          \/**< Universally Unique Identifier  *\/$/;"	m	struct:config_sip
uuid	baresip/modules/uuid/uuid.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(uuid) = {$/;"	v	typeref:struct:DECL_EXPORTS
uuid_init	baresip/modules/uuid/uuid.c	/^static int uuid_init(const char *file)$/;"	f	file:
uuid_load	baresip/modules/uuid/uuid.c	/^static int uuid_load(const char *file, char *uuid, size_t sz)$/;"	f	file:
uyvy422_to_yuv420p	rem-0.5.2/src/vidconv/vconv.c	/^static void uyvy422_to_yuv420p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
v	baresip/modules/vp9/decode.c	/^	unsigned v:1;  \/* V: Scalability structure (SS) data present *\/$/;"	m	struct:hdr	file:
v	re-0.5.6/include/re_bfcp.h	/^	} v;$/;"	m	struct:bfcp_attr	typeref:union:bfcp_attr::bfcp_union
v	re-0.5.6/include/re_json.h	/^	} v;$/;"	m	struct:json_value	typeref:union:json_value::__anon192
v	re-0.5.6/include/re_stun.h	/^	} v;$/;"	m	struct:stun_attr	typeref:union:stun_attr::__anon174
v	rem-0.5.2/util/genfir.py	/^    v = int(c * 32768.0)$/;"	v
v4l	baresip/modules/v4l/v4l.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(v4l) = {$/;"	v	typeref:struct:DECL_EXPORTS
v4l2	baresip/modules/v4l2/v4l2.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(v4l2) = {$/;"	v	typeref:struct:DECL_EXPORTS
v4l2	baresip/modules/v4l2_codec/v4l2_codec.c	/^} v4l2;$/;"	v	typeref:struct:__anon85	file:
v4l2_close	baresip/modules/v4l2/v4l2.c	36;"	d	file:
v4l2_codec	baresip/modules/v4l2_codec/v4l2_codec.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(v4l2_codec) = {$/;"	v	typeref:struct:DECL_EXPORTS
v4l2_init_device	baresip/modules/v4l2/v4l2.c	/^static int v4l2_init_device(struct vidsrc_st *st, const char *dev_name,$/;"	f	file:
v4l2_ioctl	baresip/modules/v4l2/v4l2.c	33;"	d	file:
v4l2_mmap	baresip/modules/v4l2/v4l2.c	34;"	d	file:
v4l2_munmap	baresip/modules/v4l2/v4l2.c	35;"	d	file:
v4l2_open	baresip/modules/v4l2/v4l2.c	31;"	d	file:
v4l2_read	baresip/modules/v4l2/v4l2.c	32;"	d	file:
v4l_check_palette	baresip/modules/v4l/v4l.c	/^static int v4l_check_palette(struct vidsrc_st *st)$/;"	f	file:
v4l_close	baresip/modules/v4l/v4l.c	/^static int v4l_close(void)$/;"	f	file:
v4l_close	baresip/modules/v4l2/v4l2.c	/^static int v4l_close(void)$/;"	f	file:
v4l_get_caps	baresip/modules/v4l/v4l.c	/^static void v4l_get_caps(struct vidsrc_st *st)$/;"	f	file:
v4l_get_win	baresip/modules/v4l/v4l.c	/^static int v4l_get_win(int fd, int width, int height)$/;"	f	file:
v4l_init	baresip/modules/v4l/v4l.c	/^static int v4l_init(void)$/;"	f	file:
v4l_init	baresip/modules/v4l2/v4l2.c	/^static int v4l_init(void)$/;"	f	file:
vad	baresip/modules/speex/speex.c	/^	int vad;$/;"	m	struct:__anon83	file:
vad_enabled	baresip/modules/speex_pp/speex_pp.c	/^	int vad_enabled;$/;"	m	struct:__anon75	file:
val	re-0.5.6/include/re_http.h	/^	struct pl val;         \/**< HTTP Header value       *\/$/;"	m	struct:http_hdr	typeref:struct:http_hdr::pl
val	re-0.5.6/include/re_sip.h	/^	struct pl val;         \/**< SIP Header value       *\/$/;"	m	struct:sip_hdr	typeref:struct:sip_hdr::pl
val	re-0.5.6/include/re_sip.h	/^	struct pl val;$/;"	m	struct:sip_taddr	typeref:struct:sip_taddr::pl
val	re-0.5.6/include/re_sip.h	/^	struct pl val;$/;"	m	struct:sip_via	typeref:struct:sip_via::pl
val	re-0.5.6/src/sdp/attr.c	/^	char *val;$/;"	m	struct:sdp_attr	file:
valid	baresip/modules/daala/decode.c	/^		bool valid;$/;"	m	struct:viddec_state::__anon80	file:
valid	baresip/modules/daala/encode.c	/^		bool valid;$/;"	m	struct:videnc_state::__anon81	file:
valid	baresip/modules/gst_video1/encode.c	/^		bool valid;$/;"	m	struct:videnc_state::__anon91	file:
valid	re-0.5.6/src/ice/ice.h	/^	bool valid;                  \/**< Valid flag                         *\/$/;"	m	struct:ice_candpair
validl	re-0.5.6/src/ice/ice.h	/^	struct list validl;          \/**< Valid List of cand pairs (sorted)  *\/$/;"	m	struct:icem	typeref:struct:icem::list
value_handler	re-0.5.6/src/http/msg.c	/^static bool value_handler(const struct http_hdr *hdr, void *arg)$/;"	f	file:
value_handler	re-0.5.6/src/sip/msg.c	/^static bool value_handler(const struct sip_hdr *hdr, const struct sip_msg *msg,$/;"	f	file:
variant	baresip/include/baresip.h	/^	const char *variant;$/;"	m	struct:vidcodec
vbr	baresip/modules/speex/speex.c	/^	int vbr;$/;"	m	struct:__anon83	file:
vc	baresip/modules/vp8/vp8.h	/^	struct vidcodec vc;$/;"	m	struct:vp8_vidcodec	typeref:struct:vp8_vidcodec::vidcodec
vc	baresip/modules/vp9/vp9.h	/^	struct vidcodec vc;$/;"	m	struct:vp9_vidcodec	typeref:struct:vp9_vidcodec::vidcodec
vc	baresip/src/video.c	/^	const struct vidcodec *vc;         \/**< Current Video encoder     *\/$/;"	m	struct:vtx	typeref:struct:vtx::vidcodec	file:
vc	baresip/src/video.c	/^	const struct vidcodec *vc;         \/**< Current video decoder     *\/$/;"	m	struct:vrx	typeref:struct:vrx::vidcodec	file:
vc_dec	baresip/modules/vidloop/vidloop.c	/^	const struct vidcodec *vc_dec;$/;"	m	struct:video_loop	typeref:struct:video_loop::vidcodec	file:
vc_dummy	baresip/test/mock/mock_vidcodec.c	/^static struct vidcodec vc_dummy = {$/;"	v	typeref:struct:vidcodec	file:
vc_enc	baresip/modules/vidloop/vidloop.c	/^	const struct vidcodec *vc_enc;$/;"	m	struct:video_loop	typeref:struct:video_loop::vidcodec	file:
vcv	baresip/src/core.h	/^	struct le vcv[4];            \/**< List elements for vidcodecl        *\/$/;"	m	struct:account	typeref:struct:account::le
vd	baresip/modules/directfb/directfb.c	/^	const struct vidisp *vd;       \/**< Inheritance (1st)     *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/modules/fakevideo/fakevideo.c	/^	const struct vidisp *vd;  \/* inheritance *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/modules/omx/module.c	/^	const struct vidisp *vd;  \/* inheritance *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/modules/opengles/opengles.h	/^	const struct vidisp *vd;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp
vd	baresip/modules/sdl/sdl.c	/^	const struct vidisp *vd;  \/* inheritance *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/modules/sdl2/sdl.c	/^	const struct vidisp *vd;        \/**< Inheritance (1st)     *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/modules/vidbridge/vidbridge.h	/^	const struct vidisp *vd;  \/* inheritance (1st) *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp
vd	baresip/modules/x11/x11.c	/^	const struct vidisp *vd;        \/**< Inheritance (1st)     *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/src/vidisp.c	/^	struct vidisp *vd;  \/**< Video Display *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd	baresip/test/mock/mock_vidisp.c	/^	const struct vidisp *vd;  \/* inheritance *\/$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidisp	file:
vd_open	baresip/modules/v4l/v4l.c	/^static int vd_open(struct vidsrc_st *v4l, const char *device)$/;"	f	file:
vd_open	baresip/modules/v4l2/v4l2.c	/^static int vd_open(struct vidsrc_st *st, const char *device)$/;"	f	file:
vect128	re-0.5.6/src/srtp/srtp.h	/^union vect128 {$/;"	u
ver	re-0.5.6/include/re_bfcp.h	/^	uint8_t ver;$/;"	m	struct:bfcp_msg
ver	re-0.5.6/include/re_http.h	/^	struct pl ver;         \/**< HTTP Version number                    *\/$/;"	m	struct:http_msg	typeref:struct:http_msg::pl
ver	re-0.5.6/include/re_rtp.h	/^	uint8_t  ver;       \/**< RTP version number     *\/$/;"	m	struct:rtp_header
ver	re-0.5.6/include/re_sip.h	/^	struct pl ver;         \/**< SIP Version number                   *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::pl
ver	re-0.5.6/src/sdp/sdp.h	/^	uint32_t ver;$/;"	m	struct:sdp_session
verify_fingerprint	baresip/modules/dtls_srtp/dtls_srtp.c	/^static bool verify_fingerprint(const struct sdp_session *sess,$/;"	f	file:
verify_handler	re-0.5.6/src/tls/openssl/tls.c	/^static int verify_handler(int ok, X509_STORE_CTX *ctx)$/;"	f	file:
verify_peer_ice	baresip/modules/ice/ice.c	/^static bool verify_peer_ice(struct mnat_sess *ms)$/;"	f	file:
verify_sas	baresip/modules/gzrtp/stream.cpp	/^void Stream::verify_sas(bool verify)$/;"	f	class:Stream
verify_sas	baresip/modules/zrtp/zrtp.c	/^static int verify_sas(struct re_printf *pf, void *arg)$/;"	f	file:
vers	baresip/modules/natpmp/libnatpmp.h	/^	uint8_t vers;$/;"	m	struct:natpmp_resp
version	re-0.5.6/include/re_rtp.h	/^		unsigned int version:2;  \/**< Protocol version       *\/$/;"	m	struct:rtcp_msg::rtcp_hdr
version_decode	re-0.5.6/src/sdp/msg.c	/^static int version_decode(const struct pl *pl)$/;"	f	file:
vertices	baresip/modules/opengles/opengles.h	/^	GLfloat vertices[4 * 3];$/;"	m	struct:vidisp_st
vf	baresip/include/baresip.h	/^	const struct vidfilt *vf;$/;"	m	struct:vidfilt_dec_st	typeref:struct:vidfilt_dec_st::vidfilt
vf	baresip/include/baresip.h	/^	const struct vidfilt *vf;$/;"	m	struct:vidfilt_enc_st	typeref:struct:vidfilt_enc_st::vidfilt
vf	baresip/modules/opengles/opengles.h	/^	struct vidframe *vf;$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidframe
vf	baresip/modules/selfview/selfview.c	/^	struct vidfilt_dec_st vf;   \/**< Inheritance           *\/$/;"	m	struct:selfview_dec	typeref:struct:selfview_dec::vidfilt_dec_st	file:
vf	baresip/modules/selfview/selfview.c	/^	struct vidfilt_enc_st vf;   \/**< Inheritance           *\/$/;"	m	struct:selfview_enc	typeref:struct:selfview_enc::vidfilt_enc_st	file:
vf	baresip/modules/swscale/swscale.c	/^	struct vidfilt_enc_st vf;   \/**< Inheritance           *\/$/;"	m	struct:swscale_enc	typeref:struct:swscale_enc::vidfilt_enc_st	file:
vf	baresip/modules/vidinfo/vidinfo.c	/^	struct vidfilt_dec_st vf;  \/* base member (inheritance) *\/$/;"	m	struct:vidinfo_dec	typeref:struct:vidinfo_dec::vidfilt_dec_st	file:
vf	baresip/modules/vidinfo/vidinfo.c	/^	struct vidfilt_enc_st vf;  \/* base member (inheritance) *\/$/;"	m	struct:vidinfo_enc	typeref:struct:vidinfo_enc::vidfilt_enc_st	file:
vf_swscale	baresip/modules/swscale/swscale.c	/^static struct vidfilt vf_swscale = {$/;"	v	typeref:struct:vidfilt	file:
via	re-0.5.6/include/re_sip.h	/^	struct sip_via via;    \/**< Parsed first Via header              *\/$/;"	m	struct:sip_msg	typeref:struct:sip_msg::sip_via
vid	baresip/modules/directfb/directfb.c	/^static struct vidisp *vid;$/;"	v	typeref:struct:vidisp	file:
vid	baresip/modules/omx/module.c	/^static struct vidisp* vid;$/;"	v	typeref:struct:vidisp	file:
vid	baresip/modules/opengles/opengles.c	/^static struct vidisp *vid;$/;"	v	typeref:struct:vidisp	file:
vid	baresip/modules/sdl/sdl.c	/^static struct vidisp *vid;$/;"	v	typeref:struct:vidisp	file:
vid	baresip/modules/sdl2/sdl.c	/^static struct vidisp *vid;$/;"	v	typeref:struct:vidisp	file:
vid	baresip/modules/x11/x11.c	/^static struct vidisp *vid;       \/**< X11 Video-display      *\/$/;"	v	typeref:struct:vidisp	file:
vidbridge	baresip/modules/vidbridge/vidbridge.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(vidbridge) = {$/;"	v	typeref:struct:DECL_EXPORTS
vidbridge_disp_alloc	baresip/modules/vidbridge/disp.c	/^int vidbridge_disp_alloc(struct vidisp_st **stp, const struct vidisp *vd,$/;"	f
vidbridge_disp_display	baresip/modules/vidbridge/disp.c	/^int vidbridge_disp_display(struct vidisp_st *st, const char *title,$/;"	f
vidbridge_disp_find	baresip/modules/vidbridge/disp.c	/^struct vidisp_st *vidbridge_disp_find(const char *device)$/;"	f
vidbridge_src_alloc	baresip/modules/vidbridge/src.c	/^int vidbridge_src_alloc(struct vidsrc_st **stp, const struct vidsrc *vs,$/;"	f
vidbridge_src_find	baresip/modules/vidbridge/src.c	/^struct vidsrc_st *vidbridge_src_find(const char *device)$/;"	f
vidbridge_src_input	baresip/modules/vidbridge/src.c	/^void vidbridge_src_input(const struct vidsrc_st *st,$/;"	f
vidcodec	baresip/include/baresip.h	/^struct vidcodec {$/;"	s
vidcodec_find	baresip/src/vidcodec.c	/^const struct vidcodec *vidcodec_find(const struct list *vidcodecl,$/;"	f
vidcodec_find_decoder	baresip/src/vidcodec.c	/^const struct vidcodec *vidcodec_find_decoder(const struct list *vidcodecl,$/;"	f
vidcodec_find_encoder	baresip/src/vidcodec.c	/^const struct vidcodec *vidcodec_find_encoder(const struct list *vidcodecl,$/;"	f
vidcodec_register	baresip/src/vidcodec.c	/^void vidcodec_register(struct list *vidcodecl, struct vidcodec *vc)$/;"	f
vidcodec_unregister	baresip/src/vidcodec.c	/^void vidcodec_unregister(struct vidcodec *vc)$/;"	f
vidcodecl	baresip/src/baresip.c	/^	struct list vidcodecl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
vidcodecl	baresip/src/core.h	/^	struct list vidcodecl;       \/**< List of preferred video-codecs     *\/$/;"	m	struct:account	typeref:struct:account::list
vidconv	rem-0.5.2/src/vidconv/vconv.c	/^void vidconv(struct vidframe *dst, const struct vidframe *src,$/;"	f
vidconv_aspect	rem-0.5.2/src/vidconv/vconv.c	/^void vidconv_aspect(struct vidframe *dst, const struct vidframe *src,$/;"	f
viddec_decode_h	baresip/include/baresip.h	/^typedef int (viddec_decode_h)(struct viddec_state *vds, struct vidframe *frame,$/;"	t
viddec_state	baresip/modules/av1/decode.c	/^struct viddec_state {$/;"	s	file:
viddec_state	baresip/modules/avcodec/decode.c	/^struct viddec_state {$/;"	s	file:
viddec_state	baresip/modules/daala/decode.c	/^struct viddec_state {$/;"	s	file:
viddec_state	baresip/modules/h265/decode.c	/^struct viddec_state {$/;"	s	file:
viddec_state	baresip/modules/vp8/decode.c	/^struct viddec_state {$/;"	s	file:
viddec_state	baresip/modules/vp9/decode.c	/^struct viddec_state {$/;"	s	file:
viddec_state	baresip/test/mock/mock_vidcodec.c	/^struct viddec_state {$/;"	s	file:
viddec_update_h	baresip/include/baresip.h	/^typedef int (viddec_update_h)(struct viddec_state **vdsp,$/;"	t
videnc_encode_h	baresip/include/baresip.h	/^typedef int (videnc_encode_h)(struct videnc_state *ves, bool update,$/;"	t
videnc_packet_h	baresip/include/baresip.h	/^typedef int (videnc_packet_h)(bool marker, uint32_t rtp_ts,$/;"	t
videnc_param	baresip/include/baresip.h	/^struct videnc_param {$/;"	s
videnc_state	baresip/modules/av1/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/avcodec/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/daala/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/gst_video/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/gst_video1/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/h265/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/v4l2_codec/v4l2_codec.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/vp8/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/modules/vp9/encode.c	/^struct videnc_state {$/;"	s	file:
videnc_state	baresip/test/mock/mock_vidcodec.c	/^struct videnc_state {$/;"	s	file:
videnc_update_h	baresip/include/baresip.h	/^typedef int (videnc_update_h)(struct videnc_state **vesp,$/;"	t
video	baresip/include/baresip.h	/^	struct config_video video;$/;"	m	struct:config	typeref:struct:config::config_video
video	baresip/src/call.c	/^	struct video *video;      \/**< Video stream                         *\/$/;"	m	struct:call	typeref:struct:call::video	file:
video	baresip/src/video.c	/^	struct video *video;               \/**< Parent                    *\/$/;"	m	struct:vrx	typeref:struct:vrx::video	file:
video	baresip/src/video.c	/^	struct video *video;               \/**< Parent                    *\/$/;"	m	struct:vtx	typeref:struct:vtx::video	file:
video	baresip/src/video.c	/^struct video {$/;"	s	file:
video_alloc	baresip/src/video.c	/^int video_alloc(struct video **vp, const struct stream_param *stream_prm,$/;"	f
video_calc_rtp_timestamp	baresip/src/vidutil.c	/^uint32_t video_calc_rtp_timestamp(int64_t pts, unsigned fps)$/;"	f
video_calc_seconds	baresip/src/vidutil.c	/^double video_calc_seconds(uint32_t rtp_ts)$/;"	f
video_codecs_decode	baresip/src/account.c	/^static int video_codecs_decode(struct account *acc, const struct pl *prm)$/;"	f	file:
video_debug	baresip/src/video.c	/^int video_debug(struct re_printf *pf, const struct video *v)$/;"	f
video_decoder_set	baresip/src/video.c	/^int video_decoder_set(struct video *v, struct vidcodec *vc, int pt_rx,$/;"	f
video_destructor	baresip/src/video.c	/^static void video_destructor(void *arg)$/;"	f	file:
video_encoder_cycle	baresip/src/video.c	/^void video_encoder_cycle(struct video *video)$/;"	f
video_encoder_set	baresip/src/video.c	/^int video_encoder_set(struct video *v, struct vidcodec *vc,$/;"	f
video_err_h	baresip/src/core.h	/^typedef void (video_err_h)(int err, const char *str, void *arg);$/;"	t
video_error_handler	baresip/src/call.c	/^static void video_error_handler(int err, const char *str, void *arg)$/;"	f	file:
video_is_started	baresip/src/video.c	/^bool video_is_started(const struct video *v)$/;"	f
video_loop	baresip/modules/vidloop/vidloop.c	/^struct video_loop {$/;"	s	file:
video_loop_alloc	baresip/modules/vidloop/vidloop.c	/^static int video_loop_alloc(struct video_loop **vlp)$/;"	f	file:
video_mute	baresip/src/video.c	/^void video_mute(struct video *v, bool muted)$/;"	f
video_print	baresip/src/video.c	/^int video_print(struct re_printf *pf, const struct video *v)$/;"	f
video_render	baresip/modules/omx/omx.h	/^	OMX_HANDLETYPE video_render;$/;"	m	struct:omx_state
video_sdp_attr_decode	baresip/src/video.c	/^void video_sdp_attr_decode(struct video *v)$/;"	f
video_set_devicename	baresip/src/video.c	/^void video_set_devicename(struct video *v, const char *src, const char *disp)$/;"	f
video_set_fullscreen	baresip/src/video.c	/^int video_set_fullscreen(struct video *v, bool fs)$/;"	f
video_set_orient	baresip/src/video.c	/^int video_set_orient(struct video *v, int orient)$/;"	f
video_set_source	baresip/src/video.c	/^int video_set_source(struct video *v, const char *name, const char *dev)$/;"	f
video_start	baresip/src/video.c	/^int video_start(struct video *v, const char *peer)$/;"	f
video_stop	baresip/src/video.c	/^void video_stop(struct video *v)$/;"	f
video_stream_decode	baresip/src/video.c	/^static int video_stream_decode(struct vrx *vrx, const struct rtp_header *hdr,$/;"	f	file:
video_strm	baresip/src/video.c	/^struct stream *video_strm(const struct video *v)$/;"	f
video_thread	baresip/modules/rst/video.c	/^static void *video_thread(void *arg)$/;"	f	file:
video_update_picture	baresip/src/video.c	/^void video_update_picture(struct video *v)$/;"	f
video_vidsrc_set_device	baresip/src/video.c	/^void video_vidsrc_set_device(struct video *v, const char *dev)$/;"	f
video_view	baresip/src/video.c	/^void *video_view(const struct video *v)$/;"	f
vidfilt	baresip/include/baresip.h	/^struct vidfilt {$/;"	s
vidfilt_dec_append	baresip/src/vidfilt.c	/^int vidfilt_dec_append(struct list *filtl, void **ctx,$/;"	f
vidfilt_dec_destructor	baresip/src/vidfilt.c	/^static void vidfilt_dec_destructor(void *arg)$/;"	f	file:
vidfilt_dec_st	baresip/include/baresip.h	/^struct vidfilt_dec_st {$/;"	s
vidfilt_decode_h	baresip/include/baresip.h	/^typedef int (vidfilt_decode_h)(struct vidfilt_dec_st *st,$/;"	t
vidfilt_decupd_h	baresip/include/baresip.h	/^typedef int (vidfilt_decupd_h)(struct vidfilt_dec_st **stp, void **ctx,$/;"	t
vidfilt_enc_append	baresip/src/vidfilt.c	/^int vidfilt_enc_append(struct list *filtl, void **ctx,$/;"	f
vidfilt_enc_destructor	baresip/src/vidfilt.c	/^static void vidfilt_enc_destructor(void *arg)$/;"	f	file:
vidfilt_enc_st	baresip/include/baresip.h	/^struct vidfilt_enc_st {$/;"	s
vidfilt_encode_h	baresip/include/baresip.h	/^typedef int (vidfilt_encode_h)(struct vidfilt_enc_st *st,$/;"	t
vidfilt_encupd_h	baresip/include/baresip.h	/^typedef int (vidfilt_encupd_h)(struct vidfilt_enc_st **stp, void **ctx,$/;"	t
vidfilt_register	baresip/src/vidfilt.c	/^void vidfilt_register(struct list *vidfiltl, struct vidfilt *vf)$/;"	f
vidfilt_unregister	baresip/src/vidfilt.c	/^void vidfilt_unregister(struct vidfilt *vf)$/;"	f
vidfiltl	baresip/src/baresip.c	/^	struct list vidfiltl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
vidfmt	rem-0.5.2/include/rem_vid.h	/^enum vidfmt {$/;"	g
vidfmt_compdesc	rem-0.5.2/include/rem_vid.h	/^struct vidfmt_compdesc {$/;"	s
vidfmt_desc	rem-0.5.2/include/rem_vid.h	/^struct vidfmt_desc {$/;"	s
vidfmt_descv	rem-0.5.2/src/vid/fmt.c	/^const struct vidfmt_desc vidfmt_descv[VID_FMT_N] = {$/;"	v	typeref:struct:vidfmt_desc
vidfmt_name	rem-0.5.2/src/vid/fmt.c	/^const char *vidfmt_name(enum vidfmt fmt)$/;"	f
vidfmt_to_avpixfmt	baresip/modules/swscale/swscale.c	/^static enum AVPixelFormat vidfmt_to_avpixfmt(enum vidfmt fmt)$/;"	f	file:
vidframe	rem-0.5.2/include/rem_vid.h	/^struct vidframe {$/;"	s
vidframe_alloc	rem-0.5.2/src/vid/frame.c	/^int vidframe_alloc(struct vidframe **vfp, enum vidfmt fmt,$/;"	f
vidframe_copy	rem-0.5.2/src/vid/frame.c	/^void vidframe_copy(struct vidframe *dst, const struct vidframe *src)$/;"	f
vidframe_draw_hline	rem-0.5.2/src/vid/draw.c	/^void vidframe_draw_hline(struct vidframe *f,$/;"	f
vidframe_draw_point	rem-0.5.2/src/vid/draw.c	/^void vidframe_draw_point(struct vidframe *f, unsigned x, unsigned y,$/;"	f
vidframe_draw_rect	rem-0.5.2/src/vid/draw.c	/^void vidframe_draw_rect(struct vidframe *f, unsigned x0, unsigned y0,$/;"	f
vidframe_draw_vline	rem-0.5.2/src/vid/draw.c	/^void vidframe_draw_vline(struct vidframe *f,$/;"	f
vidframe_fill	rem-0.5.2/src/vid/frame.c	/^void vidframe_fill(struct vidframe *vf, uint32_t r, uint32_t g, uint32_t b)$/;"	f
vidframe_init	rem-0.5.2/src/vid/frame.c	/^void vidframe_init(struct vidframe *vf, enum vidfmt fmt,$/;"	f
vidframe_init_buf	rem-0.5.2/src/vid/frame.c	/^void vidframe_init_buf(struct vidframe *vf, enum vidfmt fmt,$/;"	f
vidframe_isvalid	rem-0.5.2/include/rem_vid.h	/^static inline bool vidframe_isvalid(const struct vidframe *f)$/;"	f
vidframe_size	rem-0.5.2/src/vid/frame.c	/^size_t vidframe_size(enum vidfmt fmt, const struct vidsz *sz)$/;"	f
vidinfo	baresip/modules/vidinfo/vidinfo.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(vidinfo) = {$/;"	v	typeref:struct:DECL_EXPORTS
vidinfo	baresip/modules/vidinfo/vidinfo.c	/^static struct vidfilt vidinfo = {$/;"	v	typeref:struct:vidfilt	file:
vidinfo_dec	baresip/modules/vidinfo/vidinfo.c	/^struct vidinfo_dec {$/;"	s	file:
vidinfo_enc	baresip/modules/vidinfo/vidinfo.c	/^struct vidinfo_enc {$/;"	s	file:
vidisp	baresip/modules/fakevideo/fakevideo.c	/^static struct vidisp *vidisp;$/;"	v	typeref:struct:vidisp	file:
vidisp	baresip/modules/vidbridge/vidbridge.c	/^static struct vidisp *vidisp;$/;"	v	typeref:struct:vidisp	file:
vidisp	baresip/modules/vidbridge/vidbridge.h	/^	struct vidisp_st *vidisp;$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidisp_st
vidisp	baresip/modules/vidloop/vidloop.c	/^	struct vidisp_st *vidisp;$/;"	m	struct:video_loop	typeref:struct:video_loop::vidisp_st	file:
vidisp	baresip/src/core.h	/^struct vidisp {$/;"	s
vidisp	baresip/src/video.c	/^	struct vidisp_st *vidisp;          \/**< Video display             *\/$/;"	m	struct:vrx	typeref:struct:vrx::vidisp_st	file:
vidisp_alloc	baresip/src/vidisp.c	/^int vidisp_alloc(struct vidisp_st **stp, struct list *vidispl,$/;"	f
vidisp_alloc_h	baresip/include/baresip.h	/^typedef int  (vidisp_alloc_h)(struct vidisp_st **vp,$/;"	t
vidisp_disp_h	baresip/include/baresip.h	/^typedef int  (vidisp_disp_h)(struct vidisp_st *st, const char *title,$/;"	t
vidisp_display	baresip/src/vidisp.c	/^int vidisp_display(struct vidisp_st *st, const char *title,$/;"	f
vidisp_find	baresip/src/vidisp.c	/^const struct vidisp *vidisp_find(const struct list *vidispl, const char *name)$/;"	f
vidisp_get	baresip/src/vidisp.c	/^struct vidisp *vidisp_get(struct vidisp_st *st)$/;"	f
vidisp_hide_h	baresip/include/baresip.h	/^typedef void (vidisp_hide_h)(struct vidisp_st *st);$/;"	t
vidisp_prm	baresip/include/baresip.h	/^struct vidisp_prm {$/;"	s
vidisp_prm	baresip/src/video.c	/^	struct vidisp_prm vidisp_prm;      \/**< Video display parameters  *\/$/;"	m	struct:vrx	typeref:struct:vrx::vidisp_prm	file:
vidisp_register	baresip/src/vidisp.c	/^int vidisp_register(struct vidisp **vp, struct list *vidispl, const char *name,$/;"	f
vidisp_resize_h	baresip/include/baresip.h	/^typedef void (vidisp_resize_h)(const struct vidsz *size, void *arg);$/;"	t
vidisp_resize_handler	baresip/src/video.c	/^static void vidisp_resize_handler(const struct vidsz *sz, void *arg)$/;"	f	file:
vidisp_st	baresip/modules/directfb/directfb.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/modules/fakevideo/fakevideo.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/modules/omx/module.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/modules/opengles/opengles.h	/^struct vidisp_st {$/;"	s
vidisp_st	baresip/modules/sdl/sdl.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/modules/sdl2/sdl.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/modules/vidbridge/vidbridge.h	/^struct vidisp_st {$/;"	s
vidisp_st	baresip/modules/x11/x11.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/src/vidisp.c	/^struct vidisp_st {$/;"	s	file:
vidisp_st	baresip/test/mock/mock_vidisp.c	/^struct vidisp_st {$/;"	s	file:
vidisp_update	baresip/src/video.c	/^static int vidisp_update(struct vrx *vrx)$/;"	f	file:
vidisp_update_h	baresip/include/baresip.h	/^typedef int  (vidisp_update_h)(struct vidisp_st *st, bool fullscreen,$/;"	t
vidispl	baresip/src/baresip.c	/^	struct list vidispl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
vidloop	baresip/modules/vidloop/vidloop.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(vidloop) = {$/;"	v	typeref:struct:DECL_EXPORTS
vidloop_destructor	baresip/modules/vidloop/vidloop.c	/^static void vidloop_destructor(void *arg)$/;"	f	file:
vidloop_start	baresip/modules/vidloop/vidloop.c	/^static int vidloop_start(struct re_printf *pf, void *arg)$/;"	f	file:
vidloop_stop	baresip/modules/vidloop/vidloop.c	/^static int vidloop_stop(struct re_printf *pf, void *arg)$/;"	f	file:
vidmix	rem-0.5.2/src/vidmix/vidmix.c	/^struct vidmix {$/;"	s	file:
vidmix_alloc	rem-0.5.2/src/vidmix/vidmix.c	/^int vidmix_alloc(struct vidmix **mixp)$/;"	f
vidmix_frame_h	rem-0.5.2/include/rem_vidmix.h	/^typedef void (vidmix_frame_h)(uint32_t ts, const struct vidframe *frame,$/;"	t
vidmix_source	rem-0.5.2/src/vidmix/vidmix.c	/^struct vidmix_source {$/;"	s	file:
vidmix_source_alloc	rem-0.5.2/src/vidmix/vidmix.c	/^int vidmix_source_alloc(struct vidmix_source **srcp, struct vidmix *mix,$/;"	f
vidmix_source_enable	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_enable(struct vidmix_source *src, bool enable)$/;"	f
vidmix_source_get_focus	rem-0.5.2/src/vidmix/vidmix.c	/^void *vidmix_source_get_focus(const struct vidmix_source *src)$/;"	f
vidmix_source_isenabled	rem-0.5.2/src/vidmix/vidmix.c	/^bool vidmix_source_isenabled(const struct vidmix_source *src)$/;"	f
vidmix_source_isrunning	rem-0.5.2/src/vidmix/vidmix.c	/^bool vidmix_source_isrunning(const struct vidmix_source *src)$/;"	f
vidmix_source_put	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_put(struct vidmix_source *src, const struct vidframe *frame)$/;"	f
vidmix_source_set_content_hide	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_set_content_hide(struct vidmix_source *src, bool hide)$/;"	f
vidmix_source_set_focus	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_set_focus(struct vidmix_source *src,$/;"	f
vidmix_source_set_focus_idx	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_set_focus_idx(struct vidmix_source *src, unsigned pidx)$/;"	f
vidmix_source_set_rate	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_set_rate(struct vidmix_source *src, unsigned fps)$/;"	f
vidmix_source_set_size	rem-0.5.2/src/vidmix/vidmix.c	/^int vidmix_source_set_size(struct vidmix_source *src, const struct vidsz *sz)$/;"	f
vidmix_source_start	rem-0.5.2/src/vidmix/vidmix.c	/^int vidmix_source_start(struct vidmix_source *src)$/;"	f
vidmix_source_stop	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_stop(struct vidmix_source *src)$/;"	f
vidmix_source_toggle_selfview	rem-0.5.2/src/vidmix/vidmix.c	/^void vidmix_source_toggle_selfview(struct vidmix_source *src)$/;"	f
vidmix_thread	rem-0.5.2/src/vidmix/vidmix.c	/^static void *vidmix_thread(void *arg)$/;"	f	file:
vidmode	baresip/include/baresip.h	/^enum vidmode {$/;"	g
vidmode	baresip/src/core.h	/^	enum vidmode vidmode;$/;"	m	struct:call_prm	typeref:enum:call_prm::vidmode
vidorient	rem-0.5.2/include/rem_vid.h	/^enum vidorient {$/;"	g
vidpt	rem-0.5.2/include/rem_vid.h	/^struct vidpt {$/;"	s
vidqent	baresip/src/video.c	/^struct vidqent {$/;"	s	file:
vidqent_alloc	baresip/src/video.c	/^static int vidqent_alloc(struct vidqent **qentp,$/;"	f	file:
vidqent_destructor	baresip/src/video.c	/^static void vidqent_destructor(void *arg)$/;"	f	file:
vidqueue_poll	baresip/src/video.c	/^static void vidqueue_poll(struct vtx *vtx, uint64_t jfs, uint64_t prev_jfs)$/;"	f	file:
vidrect	rem-0.5.2/include/rem_vid.h	/^struct vidrect {$/;"	s
vidrect_cmp	rem-0.5.2/include/rem_vid.h	/^static inline bool vidrect_cmp(const struct vidrect *a,$/;"	f
vidsrc	baresip/modules/cairo/cairo.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/fakevideo/fakevideo.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/rst/video.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/v4l/v4l.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/v4l2/v4l2.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/v4l2_codec/v4l2_codec.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/vidbridge/vidbridge.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/modules/vidbridge/vidbridge.h	/^	struct vidsrc_st *vidsrc;$/;"	m	struct:vidisp_st	typeref:struct:vidisp_st::vidsrc_st
vidsrc	baresip/modules/x11grab/x11grab.c	/^static struct vidsrc *vidsrc;$/;"	v	typeref:struct:vidsrc	file:
vidsrc	baresip/src/core.h	/^struct vidsrc {$/;"	s
vidsrc_alloc	baresip/src/vidsrc.c	/^int vidsrc_alloc(struct vidsrc_st **stp, struct list *vidsrcl,$/;"	f
vidsrc_alloc_h	baresip/include/baresip.h	/^typedef int  (vidsrc_alloc_h)(struct vidsrc_st **vsp, const struct vidsrc *vs,$/;"	t
vidsrc_destructor	baresip/test/mock/mock_vidsrc.c	/^static void vidsrc_destructor(void *arg)$/;"	f	file:
vidsrc_error_h	baresip/include/baresip.h	/^typedef void (vidsrc_error_h)(int err, void *arg);$/;"	t
vidsrc_error_handler	baresip/src/video.c	/^static void vidsrc_error_handler(int err, void *arg)$/;"	f	file:
vidsrc_find	baresip/src/vidsrc.c	/^const struct vidsrc *vidsrc_find(const struct list *vidsrcl, const char *name)$/;"	f
vidsrc_frame_h	baresip/include/baresip.h	/^typedef void (vidsrc_frame_h)(struct vidframe *frame, void *arg);$/;"	t
vidsrc_frame_handler	baresip/modules/vidloop/vidloop.c	/^static void vidsrc_frame_handler(struct vidframe *frame, void *arg)$/;"	f	file:
vidsrc_frame_handler	baresip/src/video.c	/^static void vidsrc_frame_handler(struct vidframe *frame, void *arg)$/;"	f	file:
vidsrc_get	baresip/src/vidsrc.c	/^struct vidsrc *vidsrc_get(struct vidsrc_st *st)$/;"	f
vidsrc_prm	baresip/include/baresip.h	/^struct vidsrc_prm {$/;"	s
vidsrc_register	baresip/src/vidsrc.c	/^int vidsrc_register(struct vidsrc **vsp, struct list *vidsrcl,$/;"	f
vidsrc_st	baresip/modules/avformat/avformat.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/cairo/cairo.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/dshow/dshow.cpp	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/fakevideo/fakevideo.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/rst/rst.c	/^	struct vidsrc_st *vidsrc_st;$/;"	m	struct:rst	typeref:struct:rst::vidsrc_st	file:
vidsrc_st	baresip/modules/rst/video.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/v4l/v4l.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/v4l2/v4l2.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/v4l2_codec/v4l2_codec.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/modules/vidbridge/vidbridge.h	/^struct vidsrc_st {$/;"	s
vidsrc_st	baresip/modules/x11grab/x11grab.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/src/vidsrc.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_st	baresip/test/mock/mock_vidsrc.c	/^struct vidsrc_st {$/;"	s	file:
vidsrc_update	baresip/src/video.c	/^static void vidsrc_update(struct vtx *vtx, const char *dev)$/;"	f	file:
vidsrc_update_h	baresip/include/baresip.h	/^typedef void (vidsrc_update_h)(struct vidsrc_st *st, struct vidsrc_prm *prm,$/;"	t
vidsrcl	baresip/src/baresip.c	/^	struct list vidsrcl;$/;"	m	struct:baresip	typeref:struct:baresip::list	file:
vidsz	rem-0.5.2/include/rem_vid.h	/^struct vidsz {$/;"	s
vidsz_cmp	rem-0.5.2/include/rem_vid.h	/^static inline bool vidsz_cmp(const struct vidsz *a, const struct vidsz *b)$/;"	f
view	baresip/include/baresip.h	/^	void *view;       \/**< Optional view (set by application or module) *\/$/;"	m	struct:vidisp_prm
view	baresip/modules/opengles/opengles.h	/^	void *view;$/;"	m	struct:vidisp_st
vlog	baresip/src/log.c	/^void vlog(enum log_level level, const char *fmt, va_list ap)$/;"	f
vmv1	baresip/modules/avcodec/h26x.h	/^	unsigned vmv1:7;  \/\/ vertical motion vector$/;"	m	struct:h263_hdr
vmv2	baresip/modules/avcodec/h26x.h	/^	unsigned vmv2:7;$/;"	m	struct:h263_hdr
vol	re-0.5.6/src/telev/telev.c	/^	uint8_t vol;$/;"	m	struct:telev_fmt	file:
vp8	baresip/modules/vp8/vp8.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(vp8) = {$/;"	v	typeref:struct:DECL_EXPORTS
vp8	baresip/modules/vp8/vp8.c	/^static struct vp8_vidcodec vp8 = {$/;"	v	typeref:struct:vp8_vidcodec	file:
vp8_decode	baresip/modules/vp8/decode.c	/^int vp8_decode(struct viddec_state *vds, struct vidframe *frame,$/;"	f
vp8_decode_update	baresip/modules/vp8/decode.c	/^int vp8_decode_update(struct viddec_state **vdsp, const struct vidcodec *vc,$/;"	f
vp8_encode	baresip/modules/vp8/encode.c	/^int vp8_encode(struct videnc_state *ves, bool update,$/;"	f
vp8_encode_update	baresip/modules/vp8/encode.c	/^int vp8_encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f
vp8_fmtp_enc	baresip/modules/vp8/sdp.c	/^int vp8_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f
vp8_max_fs	baresip/modules/vp8/sdp.c	/^uint32_t vp8_max_fs(const char *fmtp)$/;"	f
vp8_vidcodec	baresip/modules/vp8/vp8.h	/^struct vp8_vidcodec {$/;"	s
vp9	baresip/modules/vp9/vp9.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(vp9) = {$/;"	v	typeref:struct:DECL_EXPORTS
vp9	baresip/modules/vp9/vp9.c	/^static struct vp9_vidcodec vp9 = {$/;"	v	typeref:struct:vp9_vidcodec	file:
vp9_decode	baresip/modules/vp9/decode.c	/^int vp9_decode(struct viddec_state *vds, struct vidframe *frame,$/;"	f
vp9_decode_update	baresip/modules/vp9/decode.c	/^int vp9_decode_update(struct viddec_state **vdsp, const struct vidcodec *vc,$/;"	f
vp9_encode	baresip/modules/vp9/encode.c	/^int vp9_encode(struct videnc_state *ves, bool update,$/;"	f
vp9_encode_update	baresip/modules/vp9/encode.c	/^int vp9_encode_update(struct videnc_state **vesp, const struct vidcodec *vc,$/;"	f
vp9_fmtp_enc	baresip/modules/vp9/sdp.c	/^int vp9_fmtp_enc(struct mbuf *mb, const struct sdp_format *fmt,$/;"	f
vp9_max_fs	baresip/modules/vp9/sdp.c	/^uint32_t vp9_max_fs(const char *fmtp)$/;"	f
vp9_vidcodec	baresip/modules/vp9/vp9.h	/^struct vp9_vidcodec {$/;"	s
vph	re-0.5.6/include/re_fmt.h	/^	re_vprintf_h *vph; \/**< Print handler   *\/$/;"	m	struct:re_printf
vprintf_handler	re-0.5.6/src/mbuf/mbuf.c	/^static int vprintf_handler(const char *p, size_t size, void *arg)$/;"	f	file:
vprintf_null	baresip/test/cmd.c	/^static int vprintf_null(const char *p, size_t size, void *arg)$/;"	f	file:
vreplyf	re-0.5.6/src/sip/reply.c	/^static int vreplyf(struct sip_strans **stp, struct mbuf **mbp, bool trans,$/;"	f	file:
vrx	baresip/src/video.c	/^	struct vrx vrx;         \/**< Receive\/decoder direction            *\/$/;"	m	struct:video	typeref:struct:video::vrx	file:
vrx	baresip/src/video.c	/^struct vrx {$/;"	s	file:
vrx_alloc	baresip/src/video.c	/^static int vrx_alloc(struct vrx *vrx, struct video *video)$/;"	f	file:
vrx_debug	baresip/src/video.c	/^static int vrx_debug(struct re_printf *pf, const struct vrx *vrx)$/;"	f	file:
vrx_print_pipeline	baresip/src/video.c	/^static int vrx_print_pipeline(struct re_printf *pf, const struct vrx *vrx)$/;"	f	file:
vs	baresip/modules/avformat/avformat.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/cairo/cairo.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/dshow/dshow.cpp	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/fakevideo/fakevideo.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/rst/video.c	/^	const struct vidsrc *vs;  \/* pointer to base-class (inheritance) *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/v4l/v4l.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/v4l2/v4l2.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/v4l2_codec/v4l2_codec.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/modules/vidbridge/vidbridge.h	/^	const struct vidsrc *vs;  \/* inheritance (1st) *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc
vs	baresip/modules/x11grab/x11grab.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/src/vidsrc.c	/^	struct vidsrc *vs;  \/**< Video Source *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vs	baresip/test/mock/mock_vidsrc.c	/^	const struct vidsrc *vs;  \/* inheritance *\/$/;"	m	struct:vidsrc_st	typeref:struct:vidsrc_st::vidsrc	file:
vsrc	baresip/modules/dshow/dshow.cpp	/^static struct vidsrc *vsrc;$/;"	v	typeref:struct:vidsrc	file:
vsrc	baresip/modules/vidloop/vidloop.c	/^	struct vidsrc_st *vsrc;$/;"	m	struct:video_loop	typeref:struct:video_loop::vidsrc_st	file:
vsrc	baresip/src/video.c	/^	struct vidsrc_st *vsrc;            \/**< Video source              *\/$/;"	m	struct:vtx	typeref:struct:vtx::vidsrc_st	file:
vsrc_prm	baresip/src/video.c	/^	struct vidsrc_prm vsrc_prm;        \/**< Video source parameters   *\/$/;"	m	struct:vtx	typeref:struct:vtx::vidsrc_prm	file:
vsrc_reopen	baresip/modules/vidloop/vidloop.c	/^static int vsrc_reopen(struct video_loop *vl, const struct vidsz *sz)$/;"	f	file:
vsrc_size	baresip/src/video.c	/^	struct vidsz vsrc_size;            \/**< Video source size         *\/$/;"	m	struct:vtx	typeref:struct:vtx::vidsz	file:
vstat	baresip/modules/vidloop/vidloop.c	/^struct vstat {$/;"	s	file:
vtx	baresip/src/video.c	/^	struct vtx vtx;         \/**< Transmit\/encoder direction           *\/$/;"	m	struct:video	typeref:struct:video::vtx	file:
vtx	baresip/src/video.c	/^struct vtx {$/;"	s	file:
vtx_alloc	baresip/src/video.c	/^static int vtx_alloc(struct vtx *vtx, struct video *video)$/;"	f	file:
vtx_debug	baresip/src/video.c	/^static int vtx_debug(struct re_printf *pf, const struct vtx *vtx)$/;"	f	file:
vtx_print_pipeline	baresip/src/video.c	/^static int vtx_print_pipeline(struct re_printf *pf, const struct vtx *vtx)$/;"	f	file:
vu	baresip/modules/gtk/call_window.c	/^	} vu;$/;"	m	struct:call_window	typeref:struct:call_window::__anon76	file:
vu_dec_destructor	baresip/modules/gtk/gtk_mod.c	/^static void vu_dec_destructor(void *arg)$/;"	f	file:
vu_decode	baresip/modules/gtk/gtk_mod.c	/^static int vu_decode(struct aufilt_dec_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
vu_decode_update	baresip/modules/gtk/gtk_mod.c	/^static int vu_decode_update(struct aufilt_dec_st **stp, void **ctx,$/;"	f	file:
vu_enc_destructor	baresip/modules/gtk/gtk_mod.c	/^static void vu_enc_destructor(void *arg)$/;"	f	file:
vu_encode	baresip/modules/gtk/gtk_mod.c	/^static int vu_encode(struct aufilt_enc_st *st, int16_t *sampv, size_t *sampc)$/;"	f	file:
vu_encode_update	baresip/modules/gtk/gtk_mod.c	/^static int vu_encode_update(struct aufilt_enc_st **stp, void **ctx,$/;"	f	file:
vumeter	baresip/modules/gtk/gtk_mod.c	/^static struct aufilt vumeter = {$/;"	v	typeref:struct:aufilt	file:
vumeter	baresip/modules/vumeter/vumeter.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(vumeter) = {$/;"	v	typeref:struct:DECL_EXPORTS
vumeter	baresip/modules/vumeter/vumeter.c	/^static struct aufilt vumeter = {$/;"	v	typeref:struct:aufilt	file:
vumeter_dec	baresip/modules/gtk/gtk_mod.h	/^struct vumeter_dec {$/;"	s
vumeter_dec	baresip/modules/vumeter/vumeter.c	/^struct vumeter_dec {$/;"	s	file:
vumeter_enc	baresip/modules/gtk/gtk_mod.h	/^struct vumeter_enc {$/;"	s
vumeter_enc	baresip/modules/vumeter/vumeter.c	/^struct vumeter_enc {$/;"	s	file:
vumeter_timer	baresip/modules/gtk/call_window.c	/^static gboolean vumeter_timer(gpointer arg)$/;"	f	file:
vumeter_timer_start	baresip/modules/gtk/call_window.c	/^static void vumeter_timer_start(struct call_window *win)$/;"	f	file:
vumeter_timer_stop	baresip/modules/gtk/call_window.c	/^static void vumeter_timer_stop(struct call_window *win)$/;"	f	file:
vumeter_timer_tag	baresip/modules/gtk/call_window.c	/^	guint vumeter_timer_tag;$/;"	m	struct:call_window	file:
w	rem-0.5.2/include/rem_vid.h	/^	unsigned w;  \/**< Width      *\/$/;"	m	struct:vidrect
w	rem-0.5.2/include/rem_vid.h	/^	unsigned w;  \/**< Width  *\/$/;"	m	struct:vidsz
wait	baresip/modules/gst_video/encode.c	/^	pthread_cond_t wait;$/;"	m	struct:videnc_state	file:
wait	baresip/modules/gst_video1/encode.c	/^		} wait;$/;"	m	struct:videnc_state::__anon91	typeref:struct:videnc_state::__anon91::__anon93	file:
wait	re-0.5.6/src/sipreg/reg.c	/^	uint32_t wait;$/;"	m	struct:sipreg	file:
wait_fail	baresip/modules/presence/publisher.c	/^static uint32_t wait_fail(unsigned failc)$/;"	f	file:
wait_fail	baresip/modules/presence/subscriber.c	/^static uint32_t wait_fail(unsigned failc)$/;"	f	file:
wait_term	baresip/modules/presence/subscriber.c	/^static uint32_t wait_term(const struct sipevent_substate *substate)$/;"	f	file:
warning	baresip/src/log.c	/^void warning(const char *fmt, ...)$/;"	f
warning_dialog	baresip/modules/gtk/gtk_mod.c	/^static void warning_dialog(const char *title, const char *fmt, ...)$/;"	f	file:
warning_msg	baresip/modules/gzrtp/messages.cpp	/^static const char *warning_msg(int32_t subcode)$/;"	f	file:
wav_chunk	rem-0.5.2/src/aufile/wave.c	/^struct wav_chunk {$/;"	s	file:
wav_fmt	rem-0.5.2/src/aufile/aufile.h	/^struct wav_fmt {$/;"	s
wav_header_decode	rem-0.5.2/src/aufile/wave.c	/^int wav_header_decode(struct wav_fmt *fmt, size_t *datasize, FILE *f)$/;"	f
wav_header_encode	rem-0.5.2/src/aufile/wave.c	/^int wav_header_encode(FILE *f, uint16_t format, uint16_t channels,$/;"	f
waveInCallback	baresip/modules/winwave/src.c	/^static void CALLBACK waveInCallback(HWAVEOUT hwo,$/;"	f	file:
waveOutCallback	baresip/modules/winwave/play.c	/^static void CALLBACK waveOutCallback(HWAVEOUT hwo,$/;"	f	file:
wavein	baresip/modules/winwave/src.c	/^	HWAVEIN wavein;$/;"	m	struct:ausrc_st	file:
waveout	baresip/modules/winwave/play.c	/^	HWAVEOUT waveout;$/;"	m	struct:auplay_st	file:
wavfmt	rem-0.5.2/src/aufile/aufile.h	/^enum wavfmt {$/;"	g
wavfmt_to_aufmt	rem-0.5.2/src/aufile/aufile.c	/^static int wavfmt_to_aufmt(enum wavfmt fmt, uint16_t bps)$/;"	f	file:
websock	re-0.5.6/src/websock/websock.c	/^struct websock {$/;"	s	file:
websock_accept	re-0.5.6/src/websock/websock.c	/^int websock_accept(struct websock_conn **connp, struct websock *sock,$/;"	f
websock_alloc	re-0.5.6/src/websock/websock.c	/^int websock_alloc(struct websock **sockp, websock_shutdown_h *shuth, void *arg)$/;"	f
websock_close	re-0.5.6/src/websock/websock.c	/^int websock_close(struct websock_conn *conn, enum websock_scode scode,$/;"	f
websock_close_h	re-0.5.6/include/re_websock.h	/^typedef void (websock_close_h)(int err, void *arg);$/;"	t
websock_conn	re-0.5.6/src/websock/websock.c	/^struct websock_conn {$/;"	s	file:
websock_connect	re-0.5.6/src/websock/websock.c	/^int websock_connect(struct websock_conn **connp, struct websock *sock,$/;"	f
websock_decode	re-0.5.6/src/websock/websock.c	/^static int websock_decode(struct websock_hdr *hdr, struct mbuf *mb)$/;"	f	file:
websock_encode	re-0.5.6/src/websock/websock.c	/^static int websock_encode(struct mbuf *mb, bool fin,$/;"	f	file:
websock_err2scode	re-0.5.6/src/websock/websock.c	/^static enum websock_scode websock_err2scode(int err)$/;"	f	file:
websock_estab_h	re-0.5.6/include/re_websock.h	/^typedef void (websock_estab_h)(void *arg);$/;"	t
websock_hdr	re-0.5.6/include/re_websock.h	/^struct websock_hdr {$/;"	s
websock_opcode	re-0.5.6/include/re_websock.h	/^enum websock_opcode {$/;"	g
websock_peer	re-0.5.6/src/websock/websock.c	/^const struct sa *websock_peer(const struct websock_conn *conn)$/;"	f
websock_recv_h	re-0.5.6/include/re_websock.h	/^typedef void (websock_recv_h)(const struct websock_hdr *hdr, struct mbuf *mb,$/;"	t
websock_scode	re-0.5.6/include/re_websock.h	/^enum websock_scode {$/;"	g
websock_send	re-0.5.6/src/websock/websock.c	/^int websock_send(struct websock_conn *conn, enum websock_opcode opcode,$/;"	f
websock_shutdown	re-0.5.6/src/websock/websock.c	/^void websock_shutdown(struct websock *sock)$/;"	f
websock_shutdown_h	re-0.5.6/include/re_websock.h	/^typedef void (websock_shutdown_h)(void *arg);$/;"	t
websock_state	re-0.5.6/src/websock/websock.c	/^enum websock_state {$/;"	g	file:
websock_vsend	re-0.5.6/src/websock/websock.c	/^static int websock_vsend(struct websock_conn *conn, enum websock_opcode opcode,$/;"	f	file:
weight	re-0.5.6/include/re_dns.h	/^			uint16_t weight;$/;"	m	struct:dnsrr::__anon154::__anon162
wh	baresip/modules/alsa/alsa_play.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/aubridge/aubridge.h	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st
wh	baresip/modules/audiounit/player.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/coreaudio/player.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/jack/jack_play.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/opensles/player.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/oss/oss.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/portaudio/portaudio.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/pulse/player.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/sndio/sndio.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/winwave/play.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
wh	baresip/modules/winwave/winwave.h	/^	WAVEHDR      wh;$/;"	m	struct:dspbuf
wh	baresip/test/mock/mock_auplay.c	/^	auplay_write_h *wh;$/;"	m	struct:auplay_st	file:
width	baresip/include/baresip.h	/^	unsigned width, height; \/**< Video resolution               *\/$/;"	m	struct:config_video
width	baresip/test/mock/mock_vidcodec.c	/^	unsigned width;$/;"	m	struct:hdr	file:
win	baresip/modules/x11/x11.c	/^	Window win;$/;"	m	struct:vidisp_st	file:
wincons	baresip/modules/wincons/wincons.c	/^const struct mod_export DECL_EXPORTS(wincons) = {$/;"	v	typeref:struct:DECL_EXPORTS
wincons	baresip/modules/wincons/wincons.c	/^static struct ui_st *wincons;$/;"	v	typeref:struct:ui_st	file:
window	baresip/modules/directfb/directfb.c	/^	IDirectFBWindow *window;       \/**< DirectFB Window       *\/$/;"	m	struct:vidisp_st	file:
window	baresip/modules/gtk/call_window.c	/^	GtkWidget *window;$/;"	m	struct:call_window	file:
window	baresip/modules/sdl2/sdl.c	/^	SDL_Window *window;             \/**< SDL Window            *\/$/;"	m	struct:vidisp_st	file:
winwave	baresip/modules/winwave/winwave.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(winwave) = {$/;"	v	typeref:struct:DECL_EXPORTS
winwave_play_alloc	baresip/modules/winwave/play.c	/^int winwave_play_alloc(struct auplay_st **stp, const struct auplay *ap,$/;"	f
winwave_src_alloc	baresip/modules/winwave/src.c	/^int winwave_src_alloc(struct ausrc_st **stp, const struct ausrc *as,$/;"	f
wish_sz	rem-0.5.2/src/aubuf/aubuf.c	/^	size_t wish_sz;$/;"	m	struct:aubuf	file:
write	baresip/modules/alsa/alsa_play.c	/^	snd_pcm_t *write;$/;"	m	struct:auplay_st	file:
write_body	re-0.5.6/src/http/client.c	/^static int write_body(struct http_req *req, struct mbuf *mb)$/;"	f	file:
write_body_buf	re-0.5.6/src/http/client.c	/^static int write_body_buf(struct http_msg *msg, const uint8_t *buf, size_t sz)$/;"	f	file:
write_callback	baresip/modules/portaudio/portaudio.c	/^static int write_callback(const void *inputBuffer, void *outputBuffer,$/;"	f	file:
write_handler	baresip/modules/auloop/auloop.c	/^static void write_handler(void *sampv, size_t sampc, void *arg)$/;"	f	file:
write_handler	baresip/src/play.c	/^static void write_handler(void *sampv, size_t sampc, void *arg)$/;"	f	file:
write_padded	re-0.5.6/src/fmt/print.c	/^static int write_padded(const char *p, size_t sz, size_t pad, char pch,$/;"	f	file:
write_stream_open	baresip/modules/portaudio/portaudio.c	/^static int write_stream_open(struct auplay_st *st,$/;"	f	file:
write_stream_open	baresip/modules/winwave/play.c	/^static int write_stream_open(struct auplay_st *st,$/;"	f	file:
write_template	baresip/modules/contact/contact.c	/^static int write_template(const char *file)$/;"	f	file:
write_thread	baresip/modules/alsa/alsa_play.c	/^static void *write_thread(void *arg)$/;"	f	file:
write_thread	baresip/modules/pulse/player.c	/^static void *write_thread(void *arg)$/;"	f	file:
write_thread	baresip/modules/sndio/sndio.c	/^static void *write_thread(void *arg)$/;"	f	file:
write_u16	rem-0.5.2/src/aufile/wave.c	/^static int write_u16(FILE *f, uint16_t v)$/;"	f	file:
write_u32	rem-0.5.2/src/aufile/wave.c	/^static int write_u32(FILE *f, uint32_t v)$/;"	f	file:
wsa_init	re-0.5.6/src/net/sock.c	/^static int wsa_init(void)$/;"	f	file:
ww_close	baresip/modules/winwave/winwave.c	/^static int ww_close(void)$/;"	f	file:
ww_init	baresip/modules/winwave/winwave.c	/^static int ww_init(void)$/;"	f	file:
x	baresip/modules/av1/decode.c	/^	unsigned x:1;$/;"	m	struct:hdr	file:
x	baresip/modules/vp8/decode.c	/^	unsigned x:1;$/;"	m	struct:hdr	file:
x	re-0.5.6/include/re_rtp.h	/^	} x;$/;"	m	struct:rtp_header	typeref:struct:rtp_header::__anon180
x	rem-0.5.2/include/rem_vid.h	/^	unsigned x;  \/**< X position *\/$/;"	m	struct:vidpt
x	rem-0.5.2/include/rem_vid.h	/^	unsigned x;  \/**< X position *\/$/;"	m	struct:vidrect
x11	baresip/modules/x11/x11.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(x11) = {$/;"	v	typeref:struct:DECL_EXPORTS
x11	baresip/modules/x11/x11.c	/^} x11;$/;"	v	typeref:struct:__anon42	file:
x11_reset	baresip/modules/x11/x11.c	/^static int x11_reset(struct vidisp_st *st, const struct vidsz *sz)$/;"	f	file:
x11grab	baresip/modules/x11grab/x11grab.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(x11grab) = {$/;"	v	typeref:struct:DECL_EXPORTS
x11grab_close	baresip/modules/x11grab/x11grab.c	/^static int x11grab_close(void)$/;"	f	file:
x11grab_init	baresip/modules/x11grab/x11grab.c	/^static int x11grab_init(void)$/;"	f	file:
x11grab_open	baresip/modules/x11grab/x11grab.c	/^static int x11grab_open(struct vidsrc_st *st, const struct vidsz *sz)$/;"	f	file:
x11grab_read	baresip/modules/x11grab/x11grab.c	/^static inline uint8_t *x11grab_read(struct vidsrc_st *st)$/;"	f	file:
x264	baresip/modules/avcodec/encode.c	/^	x264_t *x264;$/;"	m	struct:videnc_state	file:
x265	baresip/modules/h265/encode.c	/^	x265_encoder *x265;$/;"	m	struct:videnc_state	file:
x64_strdup	re-0.5.6/src/sip/dialog.c	/^static int x64_strdup(char **strp, uint64_t val)$/;"	f	file:
xioctl	baresip/modules/v4l2/v4l2.c	/^static int xioctl(int fd, unsigned long int request, void *arg)$/;"	f	file:
xioctl	baresip/modules/v4l2_codec/v4l2_codec.c	/^static int xioctl(int fd, unsigned long int request, void *arg)$/;"	f	file:
xoffs	baresip/modules/vidinfo/vidinfo.h	/^	unsigned xoffs;$/;"	m	struct:panel
xor_mapped_addr	re-0.5.6/include/re_stun.h	/^		struct sa xor_mapped_addr;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
xor_peer_addr	re-0.5.6/include/re_stun.h	/^		struct sa xor_peer_addr;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
xor_relay_addr	re-0.5.6/include/re_stun.h	/^		struct sa xor_relay_addr;$/;"	m	union:stun_attr::__anon174	typeref:struct:stun_attr::__anon174::sa
xormap	re-0.5.6/src/stun/keepalive.c	/^	struct sa xormap;         \/**< XOR-Mapped IP address and port       *\/$/;"	m	struct:stun_keepalive	typeref:struct:stun_keepalive::sa	file:
xshmat	baresip/modules/x11/x11.c	/^	bool xshmat;$/;"	m	struct:vidisp_st	file:
y	baresip/modules/av1/decode.c	/^	unsigned y:1;$/;"	m	struct:hdr	file:
y	baresip/modules/vp8/decode.c	/^	unsigned y:1;$/;"	m	struct:hdr	file:
y	rem-0.5.2/include/rem_vid.h	/^	unsigned y;  \/**< Y position *\/$/;"	m	struct:vidpt
y	rem-0.5.2/include/rem_vid.h	/^	unsigned y;  \/**< Y position *\/$/;"	m	struct:vidrect
yoffs	baresip/modules/vidinfo/vidinfo.h	/^	unsigned yoffs;$/;"	m	struct:panel
yuv2rgb	rem-0.5.2/src/vidconv/vconv.c	/^static inline void yuv2rgb(uint8_t *rgb, uint8_t y, int ruv, int guv, int buv)$/;"	f	file:
yuv2rgb555	rem-0.5.2/src/vidconv/vconv.c	/^static inline void yuv2rgb555(uint8_t *rgb, uint8_t y,$/;"	f	file:
yuv2rgb565	rem-0.5.2/src/vidconv/vconv.c	/^static inline void yuv2rgb565(uint8_t *rgb, uint8_t y,$/;"	f	file:
yuv420p_to_nv12	rem-0.5.2/src/vidconv/vconv.c	/^static void yuv420p_to_nv12(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
yuv420p_to_rgb32	rem-0.5.2/src/vidconv/vconv.c	/^static void yuv420p_to_rgb32(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
yuv420p_to_rgb555	rem-0.5.2/src/vidconv/vconv.c	/^static void yuv420p_to_rgb555(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
yuv420p_to_rgb565	rem-0.5.2/src/vidconv/vconv.c	/^static void yuv420p_to_rgb565(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
yuv420p_to_yuv420p	rem-0.5.2/src/vidconv/vconv.c	/^static void yuv420p_to_yuv420p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
yuv444p_to_rgb32	rem-0.5.2/src/vidconv/vconv.c	/^static void yuv444p_to_rgb32(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
yuyv422_to_yuv420p	rem-0.5.2/src/vidconv/vconv.c	/^static void yuyv422_to_yuv420p(unsigned xoffs, unsigned width, double rw,$/;"	f	file:
z	re-0.5.6/include/re_dns.h	/^	uint8_t z;$/;"	m	struct:dnshdr
zid	baresip/modules/zrtp/zrtp.c	/^static zrtp_zid_t zid;$/;"	v	file:
zid_filename	baresip/modules/gzrtp/stream.h	/^	char zid_filename[256];$/;"	m	class:ZRTPConfig
zrtp	baresip/modules/gzrtp/stream.h	/^	ZrtpConfigure zrtp;$/;"	m	class:ZRTPConfig
zrtp	baresip/modules/zrtp/zrtp.c	/^EXPORT_SYM const struct mod_export DECL_EXPORTS(zrtp) = {$/;"	v	typeref:struct:DECL_EXPORTS
zrtpAskEnrollment	baresip/modules/gzrtp/stream.cpp	/^void Stream::zrtpAskEnrollment(GnuZrtpCodes::InfoEnrollment info)$/;"	f	class:Stream
zrtpInformEnrollment	baresip/modules/gzrtp/stream.cpp	/^void Stream::zrtpInformEnrollment(GnuZrtpCodes::InfoEnrollment info)$/;"	f	class:Stream
zrtpNegotiationFailed	baresip/modules/gzrtp/stream.cpp	/^void Stream::zrtpNegotiationFailed(GnuZrtpCodes::MessageSeverity severity,$/;"	f	class:Stream
zrtpNotSuppOther	baresip/modules/gzrtp/stream.cpp	/^void Stream::zrtpNotSuppOther()$/;"	f	class:Stream
zrtp_config	baresip/modules/zrtp/zrtp.c	/^static zrtp_config_t zrtp_config;$/;"	v	file:
zrtp_global	baresip/modules/zrtp/zrtp.c	/^static zrtp_global_t *zrtp_global;$/;"	v	file:
zrtp_log	baresip/modules/zrtp/zrtp.c	/^static void zrtp_log(int level, char *data, int len, int offset)$/;"	f	file:
zrtp_msg	baresip/modules/gzrtp/messages.cpp	/^static const char *zrtp_msg(int32_t subcode)$/;"	f	file:
zrtp_session	baresip/modules/zrtp/zrtp.c	/^	zrtp_session_t *zrtp_session;$/;"	m	struct:menc_sess	file:
zrtp_stream	baresip/modules/zrtp/zrtp.c	/^	zrtp_stream_t *zrtp_stream;$/;"	m	struct:menc_media	file:
zrtp_timer_cb	baresip/modules/gzrtp/stream.cpp	/^void Stream::zrtp_timer_cb(void *arg)$/;"	f	class:Stream
~Session	baresip/modules/gzrtp/session.cpp	/^Session::~Session()$/;"	f	class:Session
~Srtp	baresip/modules/gzrtp/srtp.cpp	/^Srtp::~Srtp()$/;"	f	class:Srtp
~Stream	baresip/modules/gzrtp/stream.cpp	/^Stream::~Stream()$/;"	f	class:Stream
