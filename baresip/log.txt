# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# 该程序为自由软件，详情可参阅版权条款。在法律允许的范围内
# 我们不作任何担保，这包含但不限于任何商业适售性以及针对特
# 定目的的适用性的担保。

#  这个程序创建为 x86_64-pc-linux-gnu
  CC [M]  build-x86_64/modules/dtmfio/dtmfio.o
  LD [M]  dtmfio.so
  CC [M]  build-x86_64/modules/stun/stun.o
  LD [M]  stun.so
  CC [M]  build-x86_64/modules/turn/turn.o
  LD [M]  turn.so
  CC [M]  build-x86_64/modules/ice/ice.o
  LD [M]  ice.so
  CC [M]  build-x86_64/modules/natbd/natbd.o
  LD [M]  natbd.so
  CC [M]  build-x86_64/modules/auloop/auloop.o
  LD [M]  auloop.so
  CC [M]  build-x86_64/modules/presence/presence.o
  CC [M]  build-x86_64/modules/presence/subscriber.o
  CC [M]  build-x86_64/modules/presence/notifier.o
  CC [M]  build-x86_64/modules/presence/publisher.o
  LD [M]  presence.so
  CC [M]  build-x86_64/modules/menu/menu.o
  LD [M]  menu.so
  CC [M]  build-x86_64/modules/contact/contact.o
  LD [M]  contact.so
  CC [M]  build-x86_64/modules/vumeter/vumeter.o
  LD [M]  vumeter.so
  CC [M]  build-x86_64/modules/mwi/mwi.o
  LD [M]  mwi.so
  CC [M]  build-x86_64/modules/account/account.o
  LD [M]  account.so
  CC [M]  build-x86_64/modules/natpmp/natpmp.o
  CC [M]  build-x86_64/modules/natpmp/libnatpmp.o
  LD [M]  natpmp.so
  CC [M]  build-x86_64/modules/httpd/httpd.o
  LD [M]  httpd.so
  CC [M]  build-x86_64/modules/srtp/srtp.o
  CC [M]  build-x86_64/modules/srtp/sdes.o
  LD [M]  srtp.so
  CC [M]  build-x86_64/modules/uuid/uuid.o
  LD [M]  uuid.so
  CC [M]  build-x86_64/modules/debug_cmd/debug_cmd.o
  LD [M]  debug_cmd.so
  CC [M]  build-x86_64/modules/aubridge/aubridge.o
  CC [M]  build-x86_64/modules/aubridge/device.o
  CC [M]  build-x86_64/modules/aubridge/src.o
  CC [M]  build-x86_64/modules/aubridge/play.o
  LD [M]  aubridge.so
  CC [M]  build-x86_64/modules/aufile/aufile.o
  LD [M]  aufile.so
  CC [M]  build-x86_64/modules/vidloop/vidloop.o
  LD [M]  vidloop.so
  CC [M]  build-x86_64/modules/selfview/selfview.o
  LD [M]  selfview.so
  CC [M]  build-x86_64/modules/vidbridge/vidbridge.o
  CC [M]  build-x86_64/modules/vidbridge/src.o
  CC [M]  build-x86_64/modules/vidbridge/disp.o
  LD [M]  vidbridge.so
  CC [M]  build-x86_64/modules/fakevideo/fakevideo.o
  LD [M]  fakevideo.so
  CC [M]  build-x86_64/modules/alsa/alsa.o
  CC [M]  build-x86_64/modules/alsa/alsa_src.o
  CC [M]  build-x86_64/modules/alsa/alsa_play.o
  LD [M]  alsa.so
  CC [M]  build-x86_64/modules/cons/cons.o
  LD [M]  cons.so
  CC [M]  build-x86_64/modules/dtls_srtp/dtls_srtp.o
  CC [M]  build-x86_64/modules/dtls_srtp/srtp.o
  CC [M]  build-x86_64/modules/dtls_srtp/dtls.o
  LD [M]  dtls_srtp.so
  CC [M]  build-x86_64/modules/evdev/evdev.o
  CC [M]  build-x86_64/modules/evdev/print.o
  LD [M]  evdev.so
  CC [M]  build-x86_64/modules/g711/g711.o
  LD [M]  g711.so
  CC [M]  build-x86_64/modules/l16/l16.o
  LD [M]  l16.so
  CC [M]  build-x86_64/modules/oss/oss.o
  LD [M]  oss.so
  CC [M]  build-x86_64/modules/stdio/stdio.o
  LD [M]  stdio.so
  CC [M]  build-x86_64/modules/syslog/syslog.o
  LD [M]  syslog.so
  CC [M]  build-x86_64/modules/v4l2/v4l2.o
  LD [M]  v4l2.so
  CC [M]  build-x86_64/modules/v4l2_codec/v4l2_codec.o
  LD [M]  v4l2_codec.so
  CC      build-x86_64/src/account.o
  CC      build-x86_64/src/aucodec.o
  CC      build-x86_64/src/audio.o
  CC      build-x86_64/src/aufilt.o
  CC      build-x86_64/src/aulevel.o
  CC      build-x86_64/src/auplay.o
  CC      build-x86_64/src/ausrc.o
  CC      build-x86_64/src/baresip.o
  CC      build-x86_64/src/call.o
  CC      build-x86_64/src/cmd.o
  CC      build-x86_64/src/conf.o
  CC      build-x86_64/src/config.o
  CC      build-x86_64/src/contact.o
  CC      build-x86_64/src/event.o
  CC      build-x86_64/src/log.o
  CC      build-x86_64/src/menc.o
  CC      build-x86_64/src/message.o
  CC      build-x86_64/src/metric.o
  CC      build-x86_64/src/mnat.o
  CC      build-x86_64/src/module.o
  CC      build-x86_64/src/mos.o
  CC      build-x86_64/src/net.o
  CC      build-x86_64/src/play.o
  CC      build-x86_64/src/realtime.o
  CC      build-x86_64/src/reg.o
  CC      build-x86_64/src/rtpext.o
  CC      build-x86_64/src/rtpkeep.o
  CC      build-x86_64/src/sdp.o
  CC      build-x86_64/src/sipreq.o
  CC      build-x86_64/src/stream.o
  CC      build-x86_64/src/ua.o
  CC      build-x86_64/src/ui.o
  CC      build-x86_64/src/bfcp.o
  CC      build-x86_64/src/h264.o
  CC      build-x86_64/src/mctrl.o
  CC      build-x86_64/src/video.o
  CC      build-x86_64/src/vidcodec.o
  CC      build-x86_64/src/vidfilt.o
  CC      build-x86_64/src/vidisp.o
  CC      build-x86_64/src/vidsrc.o
  CC      build-x86_64/src/vidutil.o
  CC      build-x86_64/src/main.o
  LD      baresip

# make 数据基础，打印在 Tue Jan 16 14:00:43 2018

# 变量

# makefile (从'/usr/local/share/re/re.mk'，行 565)
HAVE_EPOLL := 1
# makefile (从'modules/vumeter/module.mk'，行 8)
vumeter_SRCS = vumeter.c
# 环境
SELINUX_INIT = YES
# 自动
?F = $(notdir $?)
# 自动
<D = $(patsubst %/,%,$(dir $<))
# 环境
PAPERSIZE = a4
# 环境
DESKTOP_SESSION = ubuntu
# makefile (从'/usr/local/share/re/re.mk'，行 539)
HAVE_NET_ROUTE_H := 1
# makefile (从'Makefile'，行 93)
INCDIR := /usr/local/include
# makefile (从'modules/natbd/module.mk'，行 8)
natbd_SRCS = natbd.c
# makefile (从'mk/modules.mk'，行 213)
USE_OMX_RPI := 
# makefile (从'modules/dtmfio/module.mk'，行 10)
dtmfio_LFLAGS = 
# makefile (从'mk/mod.mk'，行 13)
alsa_OBJS := build-x86_64/modules/alsa/alsa.o build-x86_64/modules/alsa/alsa_src.o build-x86_64/modules/alsa/alsa_play.o   
# makefile (从'/usr/local/share/re/re.mk'，行 240)
AFLAGS := crD
# makefile (从'Makefile'，行 107)
SHARE_PATH := /usr/local/share/baresip
# makefile (从'test/srcs.mk'，行 54)
TEST_SRCS = account.c aulevel.c call.c cmd.c contact.c cplusplus.c message.c mos.c net.c play.c ua.c video.c mock/dnssrv.c sip/aor.c sip/auth.c sip/domain.c sip/location.c sip/sipsrv.c sip/user.c mock/cert.c mock/mock_aucodec.c mock/mock_auplay.c mock/mock_ausrc.c mock/mock_vidsrc.c mock/mock_vidcodec.c mock/mock_vidisp.c test.c main.c
# 默认
CWEAVE = cweave
# makefile (从'mk/mod.mk'，行 19)
stun_NAME := stun
# makefile (从'mk/mod.mk'，行 13)
turn_OBJS := build-x86_64/modules/turn/turn.o   
# 自动
?D = $(patsubst %/,%,$(dir $?))
# makefile (从'Makefile'，行 59)
CPPFLAGS = -DHAVE_INTTYPES_H
# makefile (从'Makefile'，行 86)
INSTALL := install
# makefile (从'modules/vidloop/module.mk'，行 8)
vidloop_SRCS = vidloop.c
# makefile (从'mk/modules.mk'，行 126)
USE_ISAC := 
# 自动
@D = $(patsubst %/,%,$(dir $@))
# 环境
XAUTHORITY = /home/jk/.Xauthority
# 环境
GDMSESSION = ubuntu
# 环境
XMODIFIERS = @im=fcitx
# makefile
CURDIR := /home/jk/songxh/github_sxh/baresip/baresip
# makefile (从'mk/modules.mk'，行 174)
USE_SPEEX := 
# makefile
SHELL = /bin/sh
# 默认
RM = rm -f
# makefile (从'Makefile'，行 94)
BIN := baresip
# 环境
GDM_LANG = zh_CN
# 环境
VTE_VERSION = 3409
# makefile (从'modules/vidbridge/module.mk'，行 8)
vidbridge_SRCS = vidbridge.c src.c disp.c
# makefile (从'mk/mod.mk'，行 13)
v4l2_OBJS := build-x86_64/modules/v4l2/v4l2.o   
# 环境
_ = /usr/bin/make
# 默认
PREPROCESS.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -F
# makefile (从'mk/modules.mk'，行 206)
USE_ZRTP := 
# makefile (从'mk/modules.mk'，行 130)
USE_MPG123 := 
# makefile (从'mk/modules.mk'，行 145)
USE_PULSE := 
# makefile (从'mk/mod.mk'，行 13)
auloop_OBJS := build-x86_64/modules/auloop/auloop.o   
# 环境
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg
# makefile (从'Makefile'，行 124)
APP_OBJS := build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o   build-x86_64/src/main.o 
# 默认
OUTPUT_OPTION = -o $@
# makefile (从'mk/mod.mk'，行 19)
dtls_srtp_NAME := dtls_srtp
# makefile (从'mk/mod.mk'，行 19)
aufile_NAME := aufile
# 默认
COMPILE.cpp = $(COMPILE.cc)
# makefile (从'mk/modules.mk'，行 93)
USE_DTLS_SRTP := yes
# makefile (从'mk/mod.mk'，行 1)
MAKEFILE_LIST :=  Makefile /usr/local/share/re/re.mk mk/modules.mk src/srcs.mk test/srcs.mk modules/dtmfio/module.mk mk/mod.mk modules/stun/module.mk mk/mod.mk modules/turn/module.mk mk/mod.mk modules/ice/module.mk mk/mod.mk modules/natbd/module.mk mk/mod.mk modules/auloop/module.mk mk/mod.mk modules/presence/module.mk mk/mod.mk modules/menu/module.mk mk/mod.mk modules/contact/module.mk mk/mod.mk modules/vumeter/module.mk mk/mod.mk modules/mwi/module.mk mk/mod.mk modules/account/module.mk mk/mod.mk modules/natpmp/module.mk mk/mod.mk modules/httpd/module.mk mk/mod.mk modules/srtp/module.mk mk/mod.mk modules/uuid/module.mk mk/mod.mk modules/debug_cmd/module.mk mk/mod.mk modules/aubridge/module.mk mk/mod.mk modules/aufile/module.mk mk/mod.mk modules/vidloop/module.mk mk/mod.mk modules/selfview/module.mk mk/mod.mk modules/vidbridge/module.mk mk/mod.mk modules/fakevideo/module.mk mk/mod.mk modules/alsa/module.mk mk/mod.mk modules/cons/module.mk mk/mod.mk modules/dtls_srtp/module.mk mk/mod.mk modules/evdev/module.mk mk/mod.mk modules/g711/module.mk mk/mod.mk modules/l16/module.mk mk/mod.mk modules/oss/module.mk mk/mod.mk modules/stdio/module.mk mk/mod.mk modules/syslog/module.mk mk/mod.mk modules/v4l2/module.mk mk/mod.mk modules/v4l2_codec/module.mk mk/mod.mk
# 自动
@F = $(notdir $@)
# makefile (从'Makefile'，行 102)
TEST_MK := test/srcs.mk
# makefile (从'mk/modules.mk'，行 187)
USE_SYSLOG := yes
# makefile (从'mk/modules.mk'，行 76)
USE_AVCODEC := 
# 环境
IM_CONFIG_PHASE = 1
# makefile (从'/usr/local/share/re/re.mk'，行 91)
CC_NAME := gcc
# makefile (从'modules/dtls_srtp/module.mk'，行 9)
dtls_srtp_LFLAGS = 
# 环境
SESSIONTYPE = gnome-session
# makefile (从'/usr/local/share/re/re.mk'，行 758)
RPM := 
# makefile (从'mk/mod.mk'，行 19)
evdev_NAME := evdev
# makefile (从'/usr/local/share/re/re.mk'，行 191)
DFLAGS = -MD -MF $(@:.o=.d) -MT $@
# 环境
MANDATORY_PATH = /usr/share/gconf/ubuntu.mandatory.path
# 环境
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/
# makefile (从'modules/srtp/module.mk'，行 9)
srtp_LFLAGS = 
# makefile (从'mk/modules.mk'，行 70)
USE_ALSA := yes
# makefile (从'/usr/local/share/re/re.mk'，行 462)
USE_OPENSSL := yes
# makefile (从'/usr/local/share/re/re.mk'，行 524)
HAVE_STRERROR_R := 1
# makefile (从'modules/cons/module.mk'，行 8)
cons_SRCS = cons.c
# 环境
DBUS_SESSION_BUS_ADDRESS = unix:abstract=/tmp/dbus-E115WtAoqa
# makefile (从'Makefile'，行 16)
VERSION := 0.5.7
# makefile (从'mk/mod.mk'，行 13)
mwi_OBJS := build-x86_64/modules/mwi/mwi.o   
# makefile (从'/usr/local/share/re/re.mk'，行 649)
CC :=  gcc
# makefile (从'Makefile'，行 36)
LIBRE_MK := /usr/local/share/re/re.mk
# makefile (从'/usr/local/share/re/re.mk'，行 711)
TAR_SRC := baresip-0.5.7
# makefile (从'Makefile'，行 122)
OBJS := build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o  
# makefile (从'mk/modules.mk'，行 111)
USE_GST1 := 
# makefile (从'/usr/local/share/re/re.mk'，行 570)
HAVE_RESOLV := 1
# makefile (从'mk/mod.mk'，行 13)
aubridge_OBJS := build-x86_64/modules/aubridge/aubridge.o build-x86_64/modules/aubridge/device.o build-x86_64/modules/aubridge/src.o build-x86_64/modules/aubridge/play.o   
# 默认
CHECKOUT,v = +$(if $(wildcard $@),,$(CO) $(COFLAGS) $< $@)
# makefile (从'/usr/local/share/re/re.mk'，行 60)
SYSROOT_ALT := 
# makefile (从'/usr/local/share/re/re.mk'，行 893)
CLANG_SRCS = $(filter-out $(CLANG_IGNORE), $(patsubst %,src/%,$(SRCS)))
# 环境
CLUTTER_IM_MODULE = xim
# makefile (从'Makefile'，行 101)
APP_MK := src/srcs.mk
# 环境
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (从'modules/v4l2/module.mk'，行 8)
v4l2_SRCS = v4l2.c
# makefile (从'mk/mod.mk'，行 13)
contact_OBJS := build-x86_64/modules/contact/contact.o   
# makefile (从'modules/dtmfio/module.mk'，行 9)
dtmfio_SRCS = dtmfio.c
# 环境
LC_NAME = zh_CN.UTF-8
# 默认
CPP = $(CC) -E
# makefile (从'modules/ice/module.mk'，行 8)
ice_SRCS = ice.c
# makefile (从'modules/v4l2_codec/module.mk'，行 7)
MOD := v4l2_codec
# 默认
LINK.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (从'/usr/local/share/re/re.mk'，行 862)
SPLINT_SOURCES = $(filter-out $(SPLINT_IGNORE), $(patsubst %,src/%,$(SRCS)))
# makefile (从'modules/presence/module.mk'，行 8)
presence_SRCS = presence.c subscriber.c notifier.c publisher.c
# 环境
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session0
# makefile (从'mk/mod.mk'，行 19)
stdio_NAME := stdio
# makefile (从'mk/modules.mk'，行 182)
USE_SPEEX_PP := 
# 默认
LEX = lex
# makefile (从'mk/mod.mk'，行 13)
dtls_srtp_OBJS := build-x86_64/modules/dtls_srtp/dtls_srtp.o build-x86_64/modules/dtls_srtp/srtp.o build-x86_64/modules/dtls_srtp/dtls.o   
# makefile (从'mk/mod.mk'，行 13)
l16_OBJS := build-x86_64/modules/l16/l16.o   
# 环境
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
# makefile (从'mk/mod.mk'，行 19)
fakevideo_NAME := fakevideo
# makefile (从'modules/menu/module.mk'，行 8)
menu_SRCS = menu.c
# makefile (从'mk/mod.mk'，行 19)
selfview_NAME := selfview
# makefile (从'modules/evdev/module.mk'，行 10)
evdev_LFLAGS = 
# makefile (从'/usr/local/share/re/re.mk'，行 81)
LD := gcc
# makefile (从'mk/modules.mk'，行 65)
USE_G711 := 1
# makefile (从'mk/mod.mk'，行 19)
turn_NAME := turn
# makefile (从'modules/natpmp/module.mk'，行 8)
natpmp_SRCS = natpmp.c libnatpmp.c
# 默认
TEXI2DVI = texi2dvi
# makefile (从'mk/modules.mk'，行 112)
USE_GST_VIDEO := 
# makefile (从'mk/mod.mk'，行 13)
httpd_OBJS := build-x86_64/modules/httpd/httpd.o   
# 环境
GPG_AGENT_INFO = /run/user/1000/keyring-buNPrI/gpg:0:1
# 默认
YACC = yacc
# 环境
SESSION_MANAGER = local/sxh:@/tmp/.ICE-unix/1547,unix/sxh:/tmp/.ICE-unix/1547
# makefile (从'mk/mod.mk'，行 19)
debug_cmd_NAME := debug_cmd
# makefile (从'/usr/local/share/re/re.mk'，行 579)
HAVE_INET_NTOP := 1
# makefile (从'/usr/local/share/re/re.mk'，行 543)
HAVE_SYS_SYSCTL_H := 1
# 默认
COMPILE.mod = $(M2C) $(M2FLAGS) $(MODFLAGS) $(TARGET_ARCH)
# 环境
XDG_RUNTIME_DIR = /run/user/1000
# makefile (从'modules/selfview/module.mk'，行 9)
selfview_LFLAGS = 
# makefile (从'Makefile'，行 108)
CFLAGS = -Wall -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wbad-function-cast -Wsign-compare -Wnested-externs -Wshadow -Waggregate-return -Wcast-align -g -fPIC -DLINUX -DOS=\"$(OS)\" -std=c99 -pedantic -DARCH=\"$(ARCH)\" -DUSE_OPENSSL -DUSE_TLS -DUSE_OPENSSL_DTLS -DUSE_DTLS -DUSE_OPENSSL_SRTP -DUSE_DTLS_SRTP -DUSE_ZLIB -DHAVE_PTHREAD -DHAVE_GETIFADDRS -DHAVE_STRERROR_R -DHAVE_GETOPT -DHAVE_INTTYPES_H -DHAVE_NET_ROUTE_H -DHAVE_SYS_SYSCTL_H -DHAVE_STDBOOL_H -DHAVE_INET6 -DHAVE_RESOLV -DHAVE_SYSLOG -DHAVE_FORK -DHAVE_INET_NTOP -DHAVE_PWD_H -DHAVE_POLL	 -DHAVE_INET_PTON -DHAVE_SELECT -DHAVE_SELECT_H -DHAVE_SETRLIMIT -DHAVE_SIGNAL -DHAVE_SYS_TIME_H -DHAVE_EPOLL -DHAVE_UNAME -DHAVE_UNISTD_H -DHAVE_STRINGS_H -DHAVE_GAI_STRERROR -DVERSION=\"$(VERSION)\" $(EXTRA_CFLAGS) -I. -Iinclude -I$(LIBRE_INC) -I$(SYSROOT)/include -I$(LIBREM_PATH)/include -I$(SYSROOT)/local/include/rem -I$(SYSROOT)/include/rem -DUSE_VIDEO=1 -DMODULE_CONF -DPREFIX=\"$(PREFIX)\"
# 默认
ARFLAGS = rv
# 环境
TEXTDOMAIN = im-config
# 默认
LINK.r = $(FC) $(FFLAGS) $(RFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (从'/usr/local/share/re/re.mk'，行 553)
HAVE_INET6 := 1
# makefile (从'Makefile'，行 15)
PROJECT := baresip
# makefile (从'/usr/local/share/re/re.mk'，行 507)
HAVE_PTHREAD := 1
# makefile (从'Makefile'，行 99)
MOD_BINS := dtmfio.so stun.so turn.so ice.so natbd.so auloop.so presence.so menu.so contact.so vumeter.so mwi.so account.so natpmp.so httpd.so srtp.so uuid.so debug_cmd.so aubridge.so aufile.so vidloop.so selfview.so vidbridge.so fakevideo.so alsa.so cons.so dtls_srtp.so evdev.so g711.so l16.so oss.so stdio.so syslog.so v4l2.so v4l2_codec.so
# 环境
WINDOWID = 16777227
# 默认
COMPILE.f = $(FC) $(FFLAGS) $(TARGET_ARCH) -c
# makefile (从'mk/mod.mk'，行 13)
presence_OBJS := build-x86_64/modules/presence/presence.o build-x86_64/modules/presence/subscriber.o build-x86_64/modules/presence/notifier.o build-x86_64/modules/presence/publisher.o   
# makefile (从'Makefile'，行 103)
MOD_MK := modules/dtmfio/module.mk modules/stun/module.mk modules/turn/module.mk modules/ice/module.mk modules/natbd/module.mk modules/auloop/module.mk modules/presence/module.mk modules/menu/module.mk modules/contact/module.mk modules/vumeter/module.mk modules/mwi/module.mk modules/account/module.mk modules/natpmp/module.mk modules/httpd/module.mk modules/srtp/module.mk modules/uuid/module.mk modules/debug_cmd/module.mk modules/aubridge/module.mk modules/aufile/module.mk modules/vidloop/module.mk modules/selfview/module.mk modules/vidbridge/module.mk modules/fakevideo/module.mk modules/alsa/module.mk modules/cons/module.mk modules/dtls_srtp/module.mk modules/evdev/module.mk modules/g711/module.mk modules/l16/module.mk modules/oss/module.mk modules/stdio/module.mk modules/syslog/module.mk modules/v4l2/module.mk modules/v4l2_codec/module.mk
# 默认
LINT.c = $(LINT) $(LINTFLAGS) $(CPPFLAGS) $(TARGET_ARCH)
# makefile (从'mk/mod.mk'，行 13)
srtp_OBJS := build-x86_64/modules/srtp/srtp.o build-x86_64/modules/srtp/sdes.o   
# 默认
LINT = lint
# makefile (从'/usr/local/share/re/re.mk'，行 471)
USE_OPENSSL_DTLS := yes
# makefile (从'mk/modules.mk'，行 117)
USE_GTK := 
# 默认
LINK.p = $(PC) $(PFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (从'mk/modules.mk'，行 64)
USE_CONS := 1
# 默认
YACC.y = $(YACC) $(YFLAGS)
# makefile (从'/usr/local/share/re/re.mk'，行 589)
HAVE_INET_PTON := 1
# makefile (从'Makefile'，行 21)
HIDE = @
# makefile (从'/usr/local/share/re/re.mk'，行 239)
AR := ar
# 环境
XDG_MENU_PREFIX = gnome-
# makefile (从'mk/mod.mk'，行 19)
natbd_NAME := natbd
# 环境
LC_NUMERIC = zh_CN.UTF-8
# makefile (从'Makefile'，行 45)
LIBREM_PATH := 
# makefile (从'mk/mod.mk'，行 19)
v4l2_codec_NAME := v4l2_codec
# makefile (从'mk/mod.mk'，行 13)
g711_OBJS := build-x86_64/modules/g711/g711.o   
# makefile (从'modules/vumeter/module.mk'，行 9)
vumeter_LFLAGS = 
# 默认
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (从'mk/modules.mk'，行 441)
MODULES = dtmfio $(EXTRA_MODULES) stun turn ice natbd auloop presence menu contact vumeter mwi account natpmp httpd srtp uuid debug_cmd aubridge aufile vidloop selfview vidbridge fakevideo alsa cons dtls_srtp evdev g711 l16 oss stdio syslog v4l2 v4l2_codec
# 默认
TANGLE = tangle
# 环境
SESSION = ubuntu
# makefile (从'/usr/local/share/re/re.mk'，行 220)
BIN_SUFFIX := 
# 环境
XDG_GREETER_DATA_DIR = /var/lib/lightdm-data/jk
# 环境
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (从'mk/modules.mk'，行 146)
USE_SDL := 
# 环境
JOB = dbus
# makefile (从'mk/mod.mk'，行 19)
vidloop_NAME := vidloop
# 环境
SSH_AUTH_SOCK = /run/user/1000/keyring-buNPrI/ssh
# makefile (从'modules/aufile/module.mk'，行 9)
aufile_LFLAGS = 
# 默认
GET = get
# makefile (从'modules/alsa/module.mk'，行 8)
alsa_SRCS = alsa.c alsa_src.c alsa_play.c
# 自动
%F = $(notdir $%)
# 环境
DISPLAY = :0.0
# makefile (从'mk/modules.mk'，行 115)
USE_GST_VIDEO1 := 
# makefile (从'mk/mod.mk'，行 19)
oss_NAME := oss
# 默认
COMPILE.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# makefile (从'modules/stdio/module.mk'，行 9)
stdio_LFLAGS = 
# makefile (从'Makefile'，行 97)
STATICLIB := libbaresip.a
# makefile (从'mk/mod.mk'，行 19)
vidbridge_NAME := vidbridge
# makefile (从'mk/modules.mk'，行 102)
USE_G726 := 
# 默认
CTANGLE = ctangle
# makefile (从'mk/modules.mk'，行 250)
USE_EVDEV := yes
# makefile (从'/usr/local/share/re/re.mk'，行 236)
SH_LFLAGS = -shared
# 环境
GTK_IM_MODULE = fcitx
# makefile (从'/usr/local/share/re/re.mk'，行 469)
USE_TLS := yes
# 默认
.LIBPATTERNS = lib%.so lib%.a
# makefile (从'mk/mod.mk'，行 19)
uuid_NAME := uuid
# 默认
LINK.C = $(LINK.cc)
# 环境
PWD = /home/jk/songxh/github_sxh/baresip/baresip
# 环境
QT_QPA_PLATFORMTHEME = appmenu-qt5
# makefile (从'modules/vidbridge/module.mk'，行 9)
vidbridge_LFLAGS = 
# makefile (从'modules/v4l2_codec/module.mk'，行 9)
v4l2_codec_LFLAGS = 
# makefile (从'mk/modules.mk'，行 209)
USE_VPX := 
# makefile (从'modules/mwi/module.mk'，行 8)
mwi_SRCS = mwi.c
# makefile (从'mk/modules.mk'，行 80)
USE_AVFORMAT := 
# 默认
LINK.S = $(CC) $(ASFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_MACH)
# makefile (从'/usr/local/share/re/re.mk'，行 97)
MKDEP := gcc -MM
# 环境
XDG_SEAT = seat0
# 默认
PREPROCESS.r = $(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -F
# makefile (从'modules/uuid/module.mk'，行 8)
uuid_SRCS = uuid.c
# makefile (从'mk/mod.mk'，行 13)
evdev_OBJS := build-x86_64/modules/evdev/evdev.o build-x86_64/modules/evdev/print.o   
# makefile (从'modules/auloop/module.mk'，行 8)
auloop_SRCS = auloop.c
# makefile (从'src/srcs.mk'，行 56)
APP_SRCS = main.c
# 默认
LINK.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (从'mk/mod.mk'，行 13)
oss_OBJS := build-x86_64/modules/oss/oss.o   
# makefile (从'/usr/local/share/re/re.mk'，行 380)
PREDEF := #define __DBL_MIN_EXP__ (-1021) #define __UINT_LEAST16_MAX__ 65535 #define __ATOMIC_ACQUIRE 2 #define __FLT_MIN__ 1.17549435082228750797e-38F #define __UINT_LEAST8_TYPE__ unsigned char #define __INTMAX_C(c) c ## L #define __CHAR_BIT__ 8 #define __UINT8_MAX__ 255 #define __WINT_MAX__ 4294967295U #define __ORDER_LITTLE_ENDIAN__ 1234 #define __SIZE_MAX__ 18446744073709551615UL #define __WCHAR_MAX__ 2147483647 #define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1 #define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1 #define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1 #define __DBL_DENORM_MIN__ ((double)4.94065645841246544177e-324L) #define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1 #define __GCC_ATOMIC_CHAR_LOCK_FREE 2 #define __FLT_EVAL_METHOD__ 0 #define __unix__ 1 #define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2 #define __x86_64 1 #define __UINT_FAST64_MAX__ 18446744073709551615UL #define __SIG_ATOMIC_TYPE__ int #define __DBL_MIN_10_EXP__ (-307) #define __FINITE_MATH_ONLY__ 0 #define __GNUC_PATCHLEVEL__ 4 #define __UINT_FAST8_MAX__ 255 #define __DEC64_MAX_EXP__ 385 #define __INT8_C(c) c #define __UINT_LEAST64_MAX__ 18446744073709551615UL #define __SHRT_MAX__ 32767 #define __LDBL_MAX__ 1.18973149535723176502e+4932L #define __UINT_LEAST8_MAX__ 255 #define __GCC_ATOMIC_BOOL_LOCK_FREE 2 #define __UINTMAX_TYPE__ long unsigned int #define __linux 1 #define __DEC32_EPSILON__ 1E-6DF #define __unix 1 #define __UINT32_MAX__ 4294967295U #define __LDBL_MAX_EXP__ 16384 #define __WINT_MIN__ 0U #define __linux__ 1 #define __SCHAR_MAX__ 127 #define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1) #define __INT64_C(c) c ## L #define __DBL_DIG__ 15 #define __GCC_ATOMIC_POINTER_LOCK_FREE 2 #define __SIZEOF_INT__ 4 #define __SIZEOF_POINTER__ 8 #define __USER_LABEL_PREFIX__  #define __STDC_HOSTED__ 1 #define __LDBL_HAS_INFINITY__ 1 #define __FLT_EPSILON__ 1.19209289550781250000e-7F #define __LDBL_MIN__ 3.36210314311209350626e-4932L #define __DEC32_MAX__ 9.999999E96DF #define __INT32_MAX__ 2147483647 #define __SIZEOF_LONG__ 8 #define __STDC_IEC_559__ 1 #define __STDC_ISO_10646__ 201103L #define __UINT16_C(c) c #define __DECIMAL_DIG__ 21 #define __gnu_linux__ 1 #define __LDBL_HAS_QUIET_NAN__ 1 #define __GNUC__ 4 #define __MMX__ 1 #define __FLT_HAS_DENORM__ 1 #define __SIZEOF_LONG_DOUBLE__ 16 #define __BIGGEST_ALIGNMENT__ 16 #define __DBL_MAX__ ((double)1.79769313486231570815e+308L) #define __INT_FAST32_MAX__ 9223372036854775807L #define __DBL_HAS_INFINITY__ 1 #define __DEC32_MIN_EXP__ (-94) #define __INT_FAST16_TYPE__ long int #define __STRICT_ANSI__ 1 #define __LDBL_HAS_DENORM__ 1 #define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL #define __INT_LEAST32_MAX__ 2147483647 #define __DEC32_MIN__ 1E-95DF #define __DBL_MAX_EXP__ 1024 #define __DEC128_EPSILON__ 1E-33DL #define __SSE2_MATH__ 1 #define __ATOMIC_HLE_RELEASE 131072 #define __PTRDIFF_MAX__ 9223372036854775807L #define __amd64 1 #define __STDC_NO_THREADS__ 1 #define __ATOMIC_HLE_ACQUIRE 65536 #define __LONG_LONG_MAX__ 9223372036854775807LL #define __SIZEOF_SIZE_T__ 8 #define __SIZEOF_WINT_T__ 4 #define __GCC_HAVE_DWARF2_CFI_ASM 1 #define __GXX_ABI_VERSION 1002 #define __FLT_MIN_EXP__ (-125) #define __INT_FAST64_TYPE__ long int #define __DBL_MIN__ ((double)2.22507385850720138309e-308L) #define __LP64__ 1 #define __DECIMAL_BID_FORMAT__ 1 #define __DEC128_MIN__ 1E-6143DL #define __REGISTER_PREFIX__  #define __UINT16_MAX__ 65535 #define __DBL_HAS_DENORM__ 1 #define __UINT8_TYPE__ unsigned char #define __NO_INLINE__ 1 #define __FLT_MANT_DIG__ 24 #define __VERSION__ "4.8.4" #define __UINT64_C(c) c ## UL #define _STDC_PREDEF_H 1 #define __GCC_ATOMIC_INT_LOCK_FREE 2 #define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__ #define __STDC_IEC_559_COMPLEX__ 1 #define __INT32_C(c) c #define __DEC64_EPSILON__ 1E-15DD #define __ORDER_PDP_ENDIAN__ 3412 #define __DEC128_MIN_EXP__ (-6142) #define __INT_FAST32_TYPE__ long int #define __UINT_LEAST16_TYPE__ short unsigned int #define __INT16_MAX__ 32767 #define __SIZE_TYPE__ long unsigned int #define __UINT64_MAX__ 18446744073709551615UL #define __INT8_TYPE__ signed char #define __ELF__ 1 #define __FLT_RADIX__ 2 #define __INT_LEAST16_TYPE__ short int #define __LDBL_EPSILON__ 1.08420217248550443401e-19L #define __UINTMAX_C(c) c ## UL #define __SSE_MATH__ 1 #define __k8 1 #define __SIG_ATOMIC_MAX__ 2147483647 #define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2 #define __SIZEOF_PTRDIFF_T__ 8 #define __x86_64__ 1 #define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF #define __INT_FAST16_MAX__ 9223372036854775807L #define __UINT_FAST32_MAX__ 18446744073709551615UL #define __UINT_LEAST64_TYPE__ long unsigned int #define __FLT_HAS_QUIET_NAN__ 1 #define __FLT_MAX_10_EXP__ 38 #define __LONG_MAX__ 9223372036854775807L #define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL #define __FLT_HAS_INFINITY__ 1 #define __UINT_FAST16_TYPE__ long unsigned int #define __DEC64_MAX__ 9.999999999999999E384DD #define __CHAR16_TYPE__ short unsigned int #define __PRAGMA_REDEFINE_EXTNAME 1 #define __INT_LEAST16_MAX__ 32767 #define __DEC64_MANT_DIG__ 16 #define __INT64_MAX__ 9223372036854775807L #define __UINT_LEAST32_MAX__ 4294967295U #define __GCC_ATOMIC_LONG_LOCK_FREE 2 #define __INT_LEAST64_TYPE__ long int #define __INT16_TYPE__ short int #define __INT_LEAST8_TYPE__ signed char #define __STDC_VERSION__ 199901L #define __DEC32_MAX_EXP__ 97 #define __INT_FAST8_MAX__ 127 #define __INTPTR_MAX__ 9223372036854775807L #define __SSE2__ 1 #define LINUX 1 #define __LDBL_MANT_DIG__ 64 #define __DBL_HAS_QUIET_NAN__ 1 #define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1) #define __code_model_small__ 1 #define __k8__ 1 #define __INTPTR_TYPE__ long int #define __UINT16_TYPE__ short unsigned int #define __WCHAR_TYPE__ int #define __SIZEOF_FLOAT__ 4 #define __pic__ 2 #define __UINTPTR_MAX__ 18446744073709551615UL #define __DEC64_MIN_EXP__ (-382) #define __INT_FAST64_MAX__ 9223372036854775807L #define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1 #define __FLT_DIG__ 6 #define __UINT_FAST64_TYPE__ long unsigned int #define __INT_MAX__ 2147483647 #define __amd64__ 1 #define __INT64_TYPE__ long int #define __FLT_MAX_EXP__ 128 #define __ORDER_BIG_ENDIAN__ 4321 #define __DBL_MANT_DIG__ 53 #define __INT_LEAST64_MAX__ 9223372036854775807L #define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2 #define __DEC64_MIN__ 1E-383DD #define __WINT_TYPE__ unsigned int #define __UINT_LEAST32_TYPE__ unsigned int #define __SIZEOF_SHORT__ 2 #define __SSE__ 1 #define __LDBL_MIN_EXP__ (-16381) #define __INT_LEAST8_MAX__ 127 #define __SSP__ 1 #define __SIZEOF_INT128__ 16 #define __LDBL_MAX_10_EXP__ 4932 #define __ATOMIC_RELAXED 0 #define __DBL_EPSILON__ ((double)2.22044604925031308085e-16L) #define _LP64 1 #define __UINT8_C(c) c #define __INT_LEAST32_TYPE__ int #define __SIZEOF_WCHAR_T__ 4 #define __UINT64_TYPE__ long unsigned int #define __INT_FAST8_TYPE__ signed char #define __GNUC_STDC_INLINE__ 1 #define __DBL_DECIMAL_DIG__ 17 #define __FXSR__ 1 #define OS "linux" #define __DEC_EVAL_METHOD__ 2 #define __UINT32_C(c) c ## U #define __INTMAX_MAX__ 9223372036854775807L #define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__ #define __FLT_DENORM_MIN__ 1.40129846432481707092e-45F #define __INT8_MAX__ 127 #define __PIC__ 2 #define __UINT_FAST32_TYPE__ long unsigned int #define __CHAR32_TYPE__ unsigned int #define __FLT_MAX__ 3.40282346638528859812e+38F #define __INT32_TYPE__ int #define __SIZEOF_DOUBLE__ 8 #define __FLT_MIN_10_EXP__ (-37) #define __INTMAX_TYPE__ long int #define __DEC128_MAX_EXP__ 6145 #define __ATOMIC_CONSUME 1 #define __GNUC_MINOR__ 8 #define __UINTMAX_MAX__ 18446744073709551615UL #define __DEC32_MANT_DIG__ 7 #define __DBL_MAX_10_EXP__ 308 #define __LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L #define __INT16_C(c) c #define __STDC__ 1 #define __PTRDIFF_TYPE__ long int #define __ATOMIC_SEQ_CST 5 #define __UINT32_TYPE__ unsigned int #define __UINTPTR_TYPE__ long unsigned int #define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD #define __DEC128_MANT_DIG__ 34 #define __LDBL_MIN_10_EXP__ (-4931) #define __SIZEOF_LONG_LONG__ 8 #define __GCC_ATOMIC_LLONG_LOCK_FREE 2 #define __LDBL_DIG__ 18 #define __FLT_DECIMAL_DIG__ 9 #define __UINT_FAST16_MAX__ 18446744073709551615UL #define __GCC_ATOMIC_SHORT_LOCK_FREE 2 #define __UINT_FAST8_TYPE__ unsigned char #define __ATOMIC_ACQ_REL 4 #define __ATOMIC_RELEASE 3
# makefile (从'/usr/local/share/re/re.mk'，行 52)
SYSROOT := /usr
# makefile (从'/usr/local/share/re/re.mk'，行 892)
CLANG_IGNORE := 
# 环境
GTK_MODULES = overlay-scrollbar:unity-gtk-module
# makefile (从'modules/account/module.mk'，行 8)
account_SRCS = account.c
# makefile (从'mk/modules.mk'，行 96)
USE_G722 := 
# makefile (从'mk/mod.mk'，行 19)
menu_NAME := menu
# 默认
LINK.s = $(CC) $(ASFLAGS) $(LDFLAGS) $(TARGET_MACH)
# 环境
HOME = /home/jk
# makefile (从'mk/mod.mk'，行 13)
cons_OBJS := build-x86_64/modules/cons/cons.o   
# makefile (从'mk/modules.mk'，行 90)
USE_DTLS := yes
# makefile (从'mk/mod.mk'，行 19)
cons_NAME := cons
# 环境
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (从'Makefile'，行 129)
TEST_OBJS := build-x86_64/test/account.o build-x86_64/test/aulevel.o build-x86_64/test/call.o build-x86_64/test/cmd.o build-x86_64/test/contact.o build-x86_64/test/cplusplus.o build-x86_64/test/message.o build-x86_64/test/mos.o build-x86_64/test/net.o build-x86_64/test/play.o build-x86_64/test/ua.o build-x86_64/test/video.o build-x86_64/test/mock/dnssrv.o build-x86_64/test/sip/aor.o build-x86_64/test/sip/auth.o build-x86_64/test/sip/domain.o build-x86_64/test/sip/location.o build-x86_64/test/sip/sipsrv.o build-x86_64/test/sip/user.o build-x86_64/test/mock/cert.o build-x86_64/test/mock/mock_aucodec.o build-x86_64/test/mock/mock_auplay.o build-x86_64/test/mock/mock_ausrc.o build-x86_64/test/mock/mock_vidsrc.o build-x86_64/test/mock/mock_vidcodec.o build-x86_64/test/mock/mock_vidisp.o build-x86_64/test/test.o build-x86_64/test/main.o 
# makefile (从'/usr/local/share/re/re.mk'，行 563)
HAVE_DLFCN_H := 1
# makefile (从'/usr/local/share/re/re.mk'，行 92)
CC_VER := gcc 4.04.3
# 环境
LOGNAME = jk
# makefile (从'modules/presence/module.mk'，行 9)
presence_LFLAGS = 
# makefile (从'mk/modules.mk'，行 60)
MOD_AUTODETECT := 1
# 自动
+F = $(notdir $+)
# makefile (从'mk/modules.mk'，行 66)
USE_L16 := 1
# makefile (从'Makefile'，行 88)
PREFIX := /usr/local
# makefile (从'modules/aufile/module.mk'，行 8)
aufile_SRCS = aufile.c
# makefile (从'modules/v4l2_codec/module.mk'，行 8)
v4l2_codec_SRCS = v4l2_codec.c
# 默认
CO = co
# 默认
MAKE_VERSION := 3.81
# 环境
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# 自动
^D = $(patsubst %/,%,$(dir $^))
# makefile (从'Makefile'，行 13)
USE_VIDEO := 1
# makefile (从'/usr/local/share/re/re.mk'，行 509)
HAVE_PTHREAD_RWLOCK := 1
# makefile (从'mk/mod.mk'，行 19)
ice_NAME := ice
# 环境
XDG_VTNR = 7
# makefile (从'modules/aubridge/module.mk'，行 8)
aubridge_SRCS = aubridge.c device.c src.c play.c
# makefile (从'/usr/local/share/re/re.mk'，行 511)
HAVE_LIBPTHREAD := 1
# 环境
LC_TIME = zh_CN.UTF-8
# 环境
COLORTERM = gnome-terminal
# 默认
MAKE = $(MAKE_COMMAND)
# makefile (从'/usr/local/share/re/re.mk'，行 359)
PEDANTIC := 1
# makefile (从'/usr/local/share/re/re.mk'，行 490)
USE_OPENSSL_HMAC := yes
# 环境
QT_IM_MODULE = xim
# makefile (从'Makefile'，行 106)
MOD_PATH := /usr/local/lib/baresip/modules
# makefile (从'mk/modules.mk'，行 152)
USE_SILK := 
# 环境
SHLVL = 1
# makefile (从'mk/mod.mk'，行 19)
natpmp_NAME := natpmp
# makefile (从'mk/mod.mk'，行 13)
stdio_OBJS := build-x86_64/modules/stdio/stdio.o   
# makefile (从'mk/modules.mk'，行 133)
USE_OPUS := 
# makefile (从'/usr/local/share/re/re.mk'，行 781)
LIBRE_INC := /usr/local/include/re
# makefile (从'Makefile'，行 92)
BINDIR := /usr/local/bin
# makefile (从'modules/l16/module.mk'，行 8)
l16_SRCS = l16.c
# 默认
AS = as
# makefile (从'mk/mod.mk'，行 13)
selfview_OBJS := build-x86_64/modules/selfview/selfview.o   
# 默认
PREPROCESS.S = $(CC) -E $(CPPFLAGS)
# makefile (从'mk/mod.mk'，行 13)
vidbridge_OBJS := build-x86_64/modules/vidbridge/vidbridge.o build-x86_64/modules/vidbridge/src.o build-x86_64/modules/vidbridge/disp.o   
# makefile (从'/usr/local/share/re/re.mk'，行 904)
DOX_DIR = ../$(PROJECT)-dox
# makefile (从'/usr/local/share/re/re.mk'，行 475)
USE_OPENSSL_SRTP := yes
# 环境
COMPIZ_CONFIG_PROFILE = ubuntu
# 默认
COMPILE.p = $(PC) $(PFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# 环境
XDG_SESSION_ID = c1
# 环境
USER = jk
# 默认
FC = f77
# makefile (从'mk/modules.mk'，行 193)
USE_V4L := 
# 环境
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := default
# 环境
XDG_CURRENT_DESKTOP = Unity
# makefile (从'mk/mod.mk'，行 13)
v4l2_codec_OBJS := build-x86_64/modules/v4l2_codec/v4l2_codec.o   
# makefile (从'modules/fakevideo/module.mk'，行 9)
fakevideo_LFLAGS = 
# makefile (从'modules/syslog/module.mk'，行 8)
syslog_SRCS = syslog.c
# makefile (从'mk/modules.mk'，行 124)
USE_ILBC := 
# makefile (从'mk/modules.mk'，行 149)
USE_SDL2 := 
# 自动
%D = $(patsubst %/,%,$(dir $%))
# makefile (从'/usr/local/share/re/re.mk'，行 218)
LIB_SUFFIX := .so
# 环境
GNOME_KEYRING_PID = 
# 环境
LC_TELEPHONE = zh_CN.UTF-8
# makefile (从'mk/modules.mk'，行 99)
USE_G722_1 := 
# makefile (从'Makefile'，行 17)
DESCR := "Baresip is a modular SIP User-Agent with audio and video support"
# makefile (从'modules/srtp/module.mk'，行 8)
srtp_SRCS = srtp.c sdes.c
# makefile (从'/usr/local/share/re/re.mk'，行 651)
LFLAGS = -fPIC $(EXTRA_LFLAGS)
# makefile (从'modules/turn/module.mk'，行 8)
turn_SRCS = turn.c
# makefile (从'/usr/local/share/re/re.mk'，行 531)
HAVE_GETOPT := 1
# 默认
WEAVE = weave
# 默认
MAKE_COMMAND := make
# makefile (从'mk/modules.mk'，行 85)
USE_BV32 := 
# 默认
LINK.cpp = $(LINK.cc)
# 默认
F77 = $(FC)
# 环境
OLDPWD = /home/jk/songxh
# makefile (从'Makefile'，行 105)
LIBDIR := /usr/local/lib
# makefile (从'mk/mod.mk'，行 13)
natbd_OBJS := build-x86_64/modules/natbd/natbd.o   
# makefile (从'mk/modules.mk'，行 164)
HAVE_SPEEXDSP := 
# makefile (从'mk/modules.mk'，行 158)
USE_STDIO := yes
# 默认
.VARIABLES := 
# 默认
PC = pc
# 自动
*F = $(notdir $*)
# 环境
LANGUAGE = zh_CN:en_US:en
# 环境
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# makefile (从'/usr/local/share/re/re.mk'，行 203)
OS := linux
# makefile (从'mk/mod.mk'，行 13)
account_OBJS := build-x86_64/modules/account/account.o   
# makefile (从'mk/mod.mk'，行 19)
vumeter_NAME := vumeter
# makefile (从'mk/mod.mk'，行 19)
g711_NAME := g711
# makefile (从'mk/mod.mk'，行 25)
modulename = $(lastword $(subst /, ,$(dir $1)))
# 默认
COMPILE.def = $(M2C) $(M2FLAGS) $(DEFFLAGS) $(TARGET_ARCH)
# makefile (从'src/srcs.mk'，行 49)
SRCS = account.c aucodec.c audio.c aufilt.c aulevel.c auplay.c ausrc.c baresip.c call.c cmd.c conf.c config.c contact.c event.c log.c menc.c message.c metric.c mnat.c module.c mos.c net.c play.c realtime.c reg.c rtpext.c rtpkeep.c sdp.c sipreq.c stream.c ua.c ui.c bfcp.c h264.c mctrl.c video.c vidcodec.c vidfilt.c vidisp.c vidsrc.c vidutil.c
# makefile (从'mk/modules.mk'，行 136)
USE_OSS := yes
# 环境
GNOME_KEYRING_CONTROL = /run/user/1000/keyring-buNPrI
# makefile (从'/usr/local/share/re/re.mk'，行 401)
ARCH := x86_64
# makefile
MAKEFLAGS = p
# makefile (从'mk/mod.mk'，行 13)
vidloop_OBJS := build-x86_64/modules/vidloop/vidloop.o   
# makefile (从'mk/mod.mk'，行 13)
ice_OBJS := build-x86_64/modules/ice/ice.o   
# 环境
MFLAGS = -p
# 自动
*D = $(patsubst %/,%,$(dir $*))
# makefile (从'modules/httpd/module.mk'，行 8)
httpd_SRCS = httpd.c
# makefile (从'modules/alsa/module.mk'，行 9)
alsa_LFLAGS = -lasound
# makefile (从'mk/mod.mk'，行 13)
stun_OBJS := build-x86_64/modules/stun/stun.o   
# 默认
LEX.l = $(LEX) $(LFLAGS) -t
# makefile (从'/usr/local/share/re/re.mk'，行 905)
DOX_TAR = $(PROJECT)-dox-$(VERSION)
# makefile (从'modules/stun/module.mk'，行 8)
stun_SRCS = stun.c
# makefile (从'/usr/local/share/re/re.mk'，行 775)
LIBRE_PATH := ../re
# 自动
+D = $(patsubst %/,%,$(dir $+))
# 默认
COMPILE.r = $(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -c
# makefile (从'/usr/local/share/re/re.mk'，行 82)
CC_LONGVER := Using built-in specs. COLLECT_GCC=gcc COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper Target: x86_64-linux-gnu Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.4-2ubuntu1~14.04.3' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu Thread model: posix gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3) 
# makefile (从'mk/mod.mk'，行 19)
mwi_NAME := mwi
# makefile (从'mk/mod.mk'，行 13)
vumeter_OBJS := build-x86_64/modules/vumeter/vumeter.o   
# 环境
LC_PAPER = zh_CN.UTF-8
# 默认
M2C = m2c
# makefile (从'mk/mod.mk'，行 19)
syslog_NAME := syslog
# makefile (从'mk/modules.mk'，行 110)
USE_GST := 
# makefile (从'mk/modules.mk'，行 105)
USE_GSM := 
# makefile (从'mk/mod.mk'，行 13)
uuid_OBJS := build-x86_64/modules/uuid/uuid.o   
# makefile (从'mk/mod.mk'，行 19)
auloop_NAME := auloop
# makefile (从'/usr/local/share/re/re.mk'，行 495)
USE_ZLIB := yes
# makefile (从'/usr/local/share/re/re.mk'，行 562)
HAVE_SYSLOG := 1
# makefile (从'/usr/local/share/re/re.mk'，行 621)
CCACHE := 
# makefile (从'mk/modules.mk'，行 139)
USE_PLC := 
# 环境
DEFAULTS_PATH = /usr/share/gconf/ubuntu.default.path
# makefile (从'mk/mod.mk'，行 19)
srtp_NAME := srtp
# makefile (从'modules/dtls_srtp/module.mk'，行 8)
dtls_srtp_SRCS = dtls_srtp.c srtp.c dtls.c
# makefile (从'mk/modules.mk'，行 217)
USE_OMX_BELLAGIO := 
# makefile (从'mk/mod.mk'，行 19)
dtmfio_NAME := dtmfio
# 环境
TEXTDOMAINDIR = /usr/share/locale/
# makefile (从'mk/mod.mk'，行 13)
fakevideo_OBJS := build-x86_64/modules/fakevideo/fakevideo.o   
# makefile (从'/usr/local/share/re/re.mk'，行 238)
APP_LFLAGS = -rdynamic
# 默认
MAKEFILES := 
# makefile (从'modules/oss/module.mk'，行 9)
oss_LFLAGS = 
# 环境
UPSTART_SESSION = unix:abstract=/com/ubuntu/upstart-session/1000/1236
# makefile (从'mk/modules.mk'，行 179)
USE_SPEEX_AEC := 
# makefile (从'mk/mod.mk'，行 13)
menu_OBJS := build-x86_64/modules/menu/menu.o   
# 默认
COMPILE.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# makefile (从'Makefile'，行 56)
CXXFLAGS = -I. -Iinclude -I$(LIBRE_INC) -I$(LIBREM_PATH)/include -I$(SYSROOT)/local/include/rem -I$(SYSROOT)/include/rem $(EXTRA_CXXFLAGS)
# makefile (从'/usr/local/share/re/re.mk'，行 653)
BUILD := build-x86_64
# 自动
<F = $(notdir $<)
# makefile (从'Makefile'，行 126)
LIB_OBJS := build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o   
# makefile (从'mk/modules.mk'，行 72)
USE_AMR := 
# makefile (从'/usr/local/share/re/re.mk'，行 518)
HAVE_GETIFADDRS := 1
# 默认
CXX = g++
# 环境
LC_MEASUREMENT = zh_CN.UTF-8
# 环境
INSTANCE = 
# makefile (从'mk/mod.mk'，行 13)
debug_cmd_OBJS := build-x86_64/modules/debug_cmd/debug_cmd.o   
# makefile (从'mk/mod.mk'，行 19)
account_NAME := account
# 默认
COFLAGS = 
# makefile (从'Makefile'，行 96)
SHARED := libbaresip.so
# makefile (从'mk/mod.mk'，行 19)
aubridge_NAME := aubridge
# makefile (从'Makefile'，行 104)
MOD_BLD := build-x86_64/modules/dtmfio build-x86_64/modules/stun build-x86_64/modules/turn build-x86_64/modules/ice build-x86_64/modules/natbd build-x86_64/modules/auloop build-x86_64/modules/presence build-x86_64/modules/menu build-x86_64/modules/contact build-x86_64/modules/vumeter build-x86_64/modules/mwi build-x86_64/modules/account build-x86_64/modules/natpmp build-x86_64/modules/httpd build-x86_64/modules/srtp build-x86_64/modules/uuid build-x86_64/modules/debug_cmd build-x86_64/modules/aubridge build-x86_64/modules/aufile build-x86_64/modules/vidloop build-x86_64/modules/selfview build-x86_64/modules/vidbridge build-x86_64/modules/fakevideo build-x86_64/modules/alsa build-x86_64/modules/cons build-x86_64/modules/dtls_srtp build-x86_64/modules/evdev build-x86_64/modules/g711 build-x86_64/modules/l16 build-x86_64/modules/oss build-x86_64/modules/stdio build-x86_64/modules/syslog build-x86_64/modules/v4l2 build-x86_64/modules/v4l2_codec
# makefile (从'/usr/local/share/re/re.mk'，行 860)
SPLINT_IGNORE := src/tls/openssl/tls.c src/tls/openssl/tls_tcp.c src/dns/darwin/srv.c src/aes/openssl/aes.c
# makefile (从'/usr/local/share/re/re.mk'，行 535)
HAVE_INTTYPES_H := 1
# 默认
COMPILE.C = $(COMPILE.cc)
# makefile (从'mk/mod.mk'，行 19)
contact_NAME := contact
# 环境
QT4_IM_MODULE = fcitx
# makefile (从'Makefile'，行 144)
LIBS = -ldl -lssl -lcrypto -lz -lpthread -L$(SYSROOT)/local/lib -lrem -lm -L$(SYSROOT)/lib
# makefile (从'mk/modules.mk'，行 199)
USE_V4L2 := yes
# 自动
^F = $(notdir $^)
# makefile (从'modules/aubridge/module.mk'，行 9)
aubridge_LFLAGS = 
# 默认
COMPILE.S = $(CC) $(ASFLAGS) $(CPPFLAGS) $(TARGET_MACH) -c
# makefile (从'mk/mod.mk'，行 19)
v4l2_NAME := v4l2
# makefile (从'/usr/local/share/re/re.mk'，行 99)
CC_SHORTVER := 4.x4.3
# makefile (从'Makefile'，行 140)
MOD_LFLAGS =  -L$(SYSROOT)/local/lib
# 默认
LINK.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (从'mk/mod.mk'，行 19)
l16_NAME := l16
# 默认
SUFFIXES := .out .a .ln .o .c .cc .C .cpp .p .f .F .r .y .l .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .txinfo .w .ch .web .sh .elc .el
# makefile (从'modules/g711/module.mk'，行 8)
g711_SRCS = g711.c
# makefile (从'modules/evdev/module.mk'，行 9)
evdev_SRCS = evdev.c print.c
# 默认
COMPILE.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# makefile (从'mk/modules.mk'，行 203)
USE_X11 := 
# makefile (从'Makefile'，行 95)
TEST_BIN := selftest
# makefile (从'mk/modules.mk'，行 155)
USE_SNDFILE := 
# makefile (从'/usr/local/share/re/re.mk'，行 200)
MACHINE := x86_64-linux-gnu
# makefile (从'/usr/local/share/re/re.mk'，行 891)
CLANG_OPTIONS := -Iinclude -I/usr/local/include/re -Wall -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wbad-function-cast -Wsign-compare -Wnested-externs -Wshadow -Waggregate-return -Wcast-align -g -fPIC -DLINUX -DOS=\"linux\" -std=c99 -pedantic -DARCH=\"x86_64\" -DUSE_OPENSSL -DUSE_TLS -DUSE_OPENSSL_DTLS -DUSE_DTLS -DUSE_OPENSSL_SRTP -DUSE_DTLS_SRTP -DUSE_ZLIB -DHAVE_PTHREAD -DHAVE_GETIFADDRS -DHAVE_STRERROR_R -DHAVE_GETOPT -DHAVE_INTTYPES_H -DHAVE_NET_ROUTE_H -DHAVE_SYS_SYSCTL_H -DHAVE_STDBOOL_H -DHAVE_INET6 -DHAVE_RESOLV -DHAVE_SYSLOG -DHAVE_FORK -DHAVE_INET_NTOP -DHAVE_PWD_H -DHAVE_POLL	 -DHAVE_INET_PTON -DHAVE_SELECT -DHAVE_SELECT_H -DHAVE_SETRLIMIT -DHAVE_SIGNAL -DHAVE_SYS_TIME_H -DHAVE_EPOLL -DHAVE_UNAME -DHAVE_UNISTD_H -DHAVE_STRINGS_H -DHAVE_GAI_STRERROR -DVERSION=\"0.5.7\" 
# makefile (从'mk/mod.mk'，行 13)
natpmp_OBJS := build-x86_64/modules/natpmp/natpmp.o build-x86_64/modules/natpmp/libnatpmp.o   
# makefile (从'modules/stdio/module.mk'，行 8)
stdio_SRCS = stdio.c
# 默认
COMPILE.s = $(AS) $(ASFLAGS) $(TARGET_MACH)
# makefile (从'mk/mod.mk'，行 13)
syslog_OBJS := build-x86_64/modules/syslog/syslog.o   
# makefile (从'/usr/local/share/re/re.mk'，行 792)
LIBRE_SO := /usr/local/lib
# makefile (从'mk/mod.mk'，行 19)
httpd_NAME := httpd
# 默认
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (从'/usr/local/share/re/re.mk'，行 489)
USE_OPENSSL_AES := yes
# makefile (从'modules/fakevideo/module.mk'，行 8)
fakevideo_SRCS = fakevideo.c
# 环境
LC_IDENTIFICATION = zh_CN.UTF-8
# makefile (从'modules/contact/module.mk'，行 8)
contact_SRCS = contact.c
# makefile (从'modules/selfview/module.mk'，行 8)
selfview_SRCS = selfview.c
# makefile (从'mk/mod.mk'，行 13)
dtmfio_OBJS := build-x86_64/modules/dtmfio/dtmfio.o   
# 环境
MAKELEVEL := 0
# 默认
MAKEINFO = makeinfo
# makefile (从'/usr/local/share/re/re.mk'，行 219)
MOD_SUFFIX := .so
# 环境
LC_ADDRESS = zh_CN.UTF-8
# makefile (从'/usr/local/share/re/re.mk'，行 856)
SPLINT_OPTIONS = +unixlib +skipsysheaders -noeffect		 -compdef		 -mustfreefresh	 -nullret		 -compmempass -observertrans	 -fixedformalarray      +voidabstract -mayaliasunique	 -boolops		 -nullpass		 -type -mustfreeonly		 -nullassign -unrecog		 -unqualifiedtrans	 -temptrans		 -usereleased -predboolint -statictrans -globstate		 -compdestroy		 -onlytrans		 -shiftimplementation -shiftnegative -predboolothers -nullstate		 -redef		 -usedef		 -dependenttrans	 -immediatetrans	 -branchstate		 -kepttrans		 -incondefs -exportlocal -nullderef -fullinitblock	 -evalorder		 -uniondef		 -realcompare		 -fcnuse -retvalother           -Iinclude -I$(LIBRE_INC) -DHAVE_GETOPT -DHAVE_POLL -DHAVE_STDBOOL_H -DHAVE_INET_NTOP -DHAVE_INET_PTON -DHAVE_INET6
# 默认
LINK.f = $(FC) $(FFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# 默认
TEX = tex
# makefile (从'mk/mod.mk'，行 19)
presence_NAME := presence
# makefile (从'modules/debug_cmd/module.mk'，行 8)
debug_cmd_SRCS = debug_cmd.c
# makefile (从'mk/modules.mk'，行 142)
USE_PORTAUDIO := 
# 环境
LANG = zh_CN.UTF-8
# 环境
TERM = xterm
# makefile (从'mk/mod.mk'，行 13)
aufile_OBJS := build-x86_64/modules/aufile/aufile.o   
# 默认
F77FLAGS = $(FFLAGS)
# 默认
LINK.o = $(CC) $(LDFLAGS) $(TARGET_ARCH)
# makefile (从'modules/oss/module.mk'，行 8)
oss_SRCS = oss.c
# makefile (从'mk/modules.mk'，行 128)
USE_JACK := 
# makefile (从'mk/modules.mk'，行 190)
HAVE_LIBMQTT := 
# makefile (从'mk/modules.mk'，行 196)
HAVE_LIBV4L2 := 
# makefile (从'mk/modules.mk'，行 87)
USE_CAIRO := 
# makefile (从'mk/modules.mk'，行 84)
USE_AVAHI := 
# makefile (从'mk/mod.mk'，行 19)
alsa_NAME := alsa
# 变量的杂凑表状态:
# 负载=420/1024=41%, 重新杂凑=0, 碰撞=4284/6046=71%

# Pattern-specific 变量值

# 没有 pattern-specific 变量的值。

# 目录

# modules/vumeter (设备 2054，i-节点 3294315)： 4 文件， 27 不可能.
# modules/mwi (设备 2054，i-节点 3163107)： 4 文件， 27 不可能.
# build-x86_64/modules/cons/SCCS：无法对其进行 stat 操作。
# modules/httpd/RCS：无法对其进行 stat 操作。
# modules/syslog/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/uuid/SCCS：无法对其进行 stat 操作。
# modules/oss (设备 2054，i-节点 3294184)： 4 文件， 27 不可能.
# test/mock/RCS：无法对其进行 stat 操作。
# modules/debug_cmd (设备 2054，i-节点 3026526)： 4 文件， 27 不可能.
# build-x86_64/modules/fakevideo/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/fakevideo (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/v4l2_codec/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/cons/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/alsa/SCCS：无法对其进行 stat 操作。
# modules/g711/RCS：无法对其进行 stat 操作。
# modules/evdev/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/l16 (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/g711/SCCS：无法对其进行 stat 操作。
# modules/fakevideo/SCCS：无法对其进行 stat 操作。
# src/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/auloop/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/aubridge/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/srtp/SCCS：无法对其进行 stat 操作。
# build-x86_64/test/mock/RCS：无法对其进行 stat 操作。
# modules/g711 (设备 2054，i-节点 3026555)： 4 文件， 27 不可能.
# modules/v4l2 (设备 2054，i-节点 3294280)： 4 文件， 27 不可能.
# SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/vumeter/RCS：无法对其进行 stat 操作。
# modules/alsa (设备 2054，i-节点 2887820)： 7 文件， 47 不可能.
# modules/contact/RCS：无法对其进行 stat 操作。
# modules/cons/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/stun/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/mwi (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/aufile (设备 2054，i-节点 2887845)： 4 文件， 27 不可能.
# build-x86_64/modules/srtp/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/contact (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/ice (设备 2054，i-节点 3163067)： 4 文件， 27 不可能.
# build-x86_64/modules/natbd/RCS：无法对其进行 stat 操作。
# modules/menu/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/debug_cmd (设备 0，i-节点 0)： 无 文件， 17 不可能.
# test/sip (设备 2054，i-节点 3294357)： 9 文件， 42 不可能.
# build-x86_64/modules/uuid/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/v4l2_codec/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/turn/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/evdev/RCS：无法对其进行 stat 操作。
# . (设备 2054，i-节点 1974866)： 20 文件， 68 不可能.
# modules/v4l2_codec/RCS：无法对其进行 stat 操作。
# modules/auloop/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/oss/SCCS：无法对其进行 stat 操作。
# modules/presence/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/presence/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/auloop (设备 0，i-节点 0)： 无 文件， 17 不可能.
# /usr/local/share/re/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/stdio (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/debug_cmd/SCCS：无法对其进行 stat 操作。
# build-x86_64/test/sip (设备 0，i-节点 0)： 无 文件， 102 不可能.
# build-x86_64/modules/v4l2 (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/dtmfio/SCCS：无法对其进行 stat 操作。
# modules/mwi/RCS：无法对其进行 stat 操作。
# build-x86_64/test/sip/SCCS：无法对其进行 stat 操作。
# modules/stdio/SCCS：无法对其进行 stat 操作。
# modules/syslog (设备 2054，i-节点 3294268)： 4 文件， 27 不可能.
# build-x86_64/modules/turn (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/dtmfio/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/g711 (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/contact/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/httpd/RCS：无法对其进行 stat 操作。
# modules/cons/RCS：无法对其进行 stat 操作。
# modules/aufile/RCS：无法对其进行 stat 操作。
# modules/vidloop (设备 2054，i-节点 3294298)： 4 文件， 27 不可能.
# modules/turn/RCS：无法对其进行 stat 操作。
# modules/fakevideo (设备 2054，i-节点 3026552)： 4 文件， 27 不可能.
# build-x86_64/modules/mwi/SCCS：无法对其进行 stat 操作。
# test (设备 2054，i-节点 3294336)： 20 文件， 115 不可能.
# modules/aubridge/RCS：无法对其进行 stat 操作。
# modules/vumeter/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/v4l2_codec/RCS：无法对其进行 stat 操作。
# modules/auloop/SCCS：无法对其进行 stat 操作。
# modules/selfview/SCCS：无法对其进行 stat 操作。
# modules/vumeter/RCS：无法对其进行 stat 操作。
# modules/stdio/RCS：无法对其进行 stat 操作。
# modules/srtp/SCCS：无法对其进行 stat 操作。
# build-x86_64/src (设备 0，i-节点 0)： 无 文件， 714 不可能.
# modules/presence (设备 2054，i-节点 3294198)： 8 文件， 57 不可能.
# build-x86_64/modules/alsa (设备 0，i-节点 0)： 无 文件， 51 不可能.
# modules/debug_cmd/RCS：无法对其进行 stat 操作。
# build-x86_64/test (设备 0，i-节点 0)： 无 文件， 238 不可能.
# build-x86_64/modules/debug_cmd/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/syslog (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/srtp (设备 2054，i-节点 3294254)： 6 文件， 37 不可能.
# build-x86_64/modules/selfview/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/account/RCS：无法对其进行 stat 操作。
# modules/turn (设备 2054，i-节点 3294271)： 4 文件， 27 不可能.
# modules/l16 (设备 2054，i-节点 3163082)： 4 文件， 27 不可能.
# build-x86_64/modules/vidloop (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/vumeter (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/dtmfio (设备 2054，i-节点 3026541)： 4 文件， 27 不可能.
# modules/vidloop/SCCS：无法对其进行 stat 操作。
# mk (设备 2054，i-节点 2756316)： 6 文件， 34 不可能.
# modules/alsa/RCS：无法对其进行 stat 操作。
# modules/selfview/RCS：无法对其进行 stat 操作。
# modules/contact/SCCS：无法对其进行 stat 操作。
# modules/stdio (设备 2054，i-节点 3294259)： 4 文件， 27 不可能.
# test/sip/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/g711/SCCS：无法对其进行 stat 操作。
# modules/cons (设备 2054，i-节点 2887886)： 4 文件， 27 不可能.
# modules/dtmfio/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/vidbridge (设备 0，i-节点 0)： 无 文件， 51 不可能.
# build-x86_64/modules/presence/RCS：无法对其进行 stat 操作。
# modules/ice/RCS：无法对其进行 stat 操作。
# modules/natpmp/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/alsa/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/natpmp (设备 0，i-节点 0)： 无 文件， 34 不可能.
# build-x86_64/test/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/cons (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/dtmfio (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/dtls_srtp/RCS：无法对其进行 stat 操作。
# test/sip/SCCS：无法对其进行 stat 操作。
# build-x86_64/test/sip/RCS：无法对其进行 stat 操作。
# modules/account/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/aubridge (设备 0，i-节点 0)： 无 文件， 68 不可能.
# modules/vidbridge/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/ice (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/v4l2_codec (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/src/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/menu/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/mwi/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/vidloop/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/syslog/SCCS：无法对其进行 stat 操作。
# modules/uuid (设备 2054，i-节点 3294274)： 4 文件， 27 不可能.
# build-x86_64/modules/natbd (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/v4l2/RCS：无法对其进行 stat 操作。
# test/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/dtls_srtp (设备 0，i-节点 0)： 无 文件， 51 不可能.
# modules/v4l2/SCCS：无法对其进行 stat 操作。
# mk/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/ice/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/l16/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/natbd/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/menu/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/natpmp/SCCS：无法对其进行 stat 操作。
# modules/contact (设备 2054，i-节点 2887889)： 4 文件， 27 不可能.
# modules/selfview (设备 2054，i-节点 3294228)： 4 文件， 27 不可能.
# build-x86_64/modules/v4l2/SCCS：无法对其进行 stat 操作。
# modules/natpmp/RCS：无法对其进行 stat 操作。
# modules/httpd/SCCS：无法对其进行 stat 操作。
# modules/srtp/RCS：无法对其进行 stat 操作。
# build-x86_64/test/RCS：无法对其进行 stat 操作。
# /usr/local/share/re/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/account/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/vidbridge/SCCS：无法对其进行 stat 操作。
# modules/vidloop/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/dtls_srtp/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/aubridge/RCS：无法对其进行 stat 操作。
# modules/vidbridge/RCS：无法对其进行 stat 操作。
# modules/natbd/SCCS：无法对其进行 stat 操作。
# modules/fakevideo/RCS：无法对其进行 stat 操作。
# modules/turn/SCCS：无法对其进行 stat 操作。
# build-x86_64/src/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/uuid (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/alsa/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/vidloop/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/syslog/RCS：无法对其进行 stat 操作。
# modules/uuid/SCCS：无法对其进行 stat 操作。
# /usr/local/share/re (设备 2054，i-节点 3948143)： 3 文件， 17 不可能.
# modules/auloop (设备 2054，i-节点 2887848)： 4 文件， 27 不可能.
# build-x86_64/modules/stdio/SCCS：无法对其进行 stat 操作。
# modules/httpd (设备 2054，i-节点 3163064)： 4 文件， 27 不可能.
# build-x86_64/modules/turn/RCS：无法对其进行 stat 操作。
# mk/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/aufile/RCS：无法对其进行 stat 操作。
# modules/natpmp (设备 2054，i-节点 3163113)： 6 文件， 37 不可能.
# test/mock (设备 2054，i-节点 3294345)： 10 文件， 56 不可能.
# modules/syslog/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/presence (设备 0，i-节点 0)： 无 文件， 68 不可能.
# build-x86_64/modules/aufile/SCCS：无法对其进行 stat 操作。
# src (设备 2054，i-节点 3026589)： 47 文件， 437 不可能.
# build-x86_64/modules/selfview (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/natbd (设备 2054，i-节点 3163110)： 4 文件， 27 不可能.
# modules/aubridge (设备 2054，i-节点 2887831)： 8 文件， 57 不可能.
# modules/l16/SCCS：无法对其进行 stat 操作。
# modules/stun/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/oss (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/vidbridge/RCS：无法对其进行 stat 操作。
# modules/natbd/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/vumeter/SCCS：无法对其进行 stat 操作。
# modules/vidbridge (设备 2054，i-节点 3294287)： 7 文件， 47 不可能.
# build-x86_64/test/mock (设备 0，i-节点 0)： 无 文件， 136 不可能.
# build-x86_64/modules/l16/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/selfview/RCS：无法对其进行 stat 操作。
# modules/v4l2/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/srtp (设备 0，i-节点 0)： 无 文件， 34 不可能.
# build-x86_64/modules/httpd (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/oss/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/fakevideo/SCCS：无法对其进行 stat 操作。
# modules/stun/SCCS：无法对其进行 stat 操作。
# modules/account/SCCS：无法对其进行 stat 操作。
# modules/menu (设备 2054，i-节点 3163090)： 4 文件， 27 不可能.
# test/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/stdio/RCS：无法对其进行 stat 操作。
# modules/ice/SCCS：无法对其进行 stat 操作。
# modules/dtls_srtp/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/stun/RCS：无法对其进行 stat 操作。
# modules/v4l2_codec (设备 2054，i-节点 3294283)： 5 文件， 27 不可能.
# build-x86_64/modules/auloop/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/g711/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/contact/RCS：无法对其进行 stat 操作。
# modules/oss/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/aufile (设备 0，i-节点 0)： 无 文件， 17 不可能.
# test/mock/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/stun (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/stun (设备 2054，i-节点 3294262)： 4 文件， 27 不可能.
# build-x86_64/modules/evdev/SCCS：无法对其进行 stat 操作。
# modules/l16/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/natpmp/RCS：无法对其进行 stat 操作。
# modules/aufile/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/account (设备 0，i-节点 0)： 无 文件， 17 不可能.
# modules/evdev/SCCS：无法对其进行 stat 操作。
# modules/account (设备 2054，i-节点 2756326)： 4 文件， 27 不可能.
# modules/evdev (设备 2054，i-节点 3026547)： 6 文件， 37 不可能.
# build-x86_64/modules/evdev (设备 0，i-节点 0)： 无 文件， 34 不可能.
# src/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/ice/RCS：无法对其进行 stat 操作。
# modules/dtls_srtp (设备 2054，i-节点 3026535)： 7 文件， 47 不可能.
# modules/presence/RCS：无法对其进行 stat 操作。
# build-x86_64/test/mock/SCCS：无法对其进行 stat 操作。
# modules/mwi/SCCS：无法对其进行 stat 操作。
# modules/aubridge/SCCS：无法对其进行 stat 操作。
# build-x86_64/modules/dtls_srtp/SCCS：无法对其进行 stat 操作。
# modules/menu/SCCS：无法对其进行 stat 操作。
# modules/uuid/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/httpd/SCCS：无法对其进行 stat 操作。
# modules/dtmfio/SCCS：无法对其进行 stat 操作。
# RCS：无法对其进行 stat 操作。
# build-x86_64/modules/debug_cmd/RCS：无法对其进行 stat 操作。
# build-x86_64/modules/menu (设备 0，i-节点 0)： 无 文件， 17 不可能.
# build-x86_64/modules/oss/RCS：无法对其进行 stat 操作。

# 275 文件， 3860 不可能在 237 目录中。

# 隐含规则

build-x86_64/modules/dtmfio/%.o: modules/dtmfio/%.c build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtmfio/%.o: modules/dtmfio/%.m build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtmfio/%.o: modules/dtmfio/%.cpp build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtmfio/%.o: modules/dtmfio/%.S build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stun/%.o: modules/stun/%.c build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stun/%.o: modules/stun/%.m build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stun/%.o: modules/stun/%.cpp build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stun/%.o: modules/stun/%.S build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/turn/%.o: modules/turn/%.c build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/turn/%.o: modules/turn/%.m build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/turn/%.o: modules/turn/%.cpp build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/turn/%.o: modules/turn/%.S build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/ice/%.o: modules/ice/%.c build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/ice/%.o: modules/ice/%.m build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/ice/%.o: modules/ice/%.cpp build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/ice/%.o: modules/ice/%.S build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natbd/%.o: modules/natbd/%.c build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natbd/%.o: modules/natbd/%.m build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natbd/%.o: modules/natbd/%.cpp build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natbd/%.o: modules/natbd/%.S build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/auloop/%.o: modules/auloop/%.c build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/auloop/%.o: modules/auloop/%.m build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/auloop/%.o: modules/auloop/%.cpp build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/auloop/%.o: modules/auloop/%.S build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/presence/%.o: modules/presence/%.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/presence/%.o: modules/presence/%.m build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/presence/%.o: modules/presence/%.cpp build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/presence/%.o: modules/presence/%.S build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/menu/%.o: modules/menu/%.c build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/menu/%.o: modules/menu/%.m build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/menu/%.o: modules/menu/%.cpp build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/menu/%.o: modules/menu/%.S build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/contact/%.o: modules/contact/%.c build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/contact/%.o: modules/contact/%.m build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/contact/%.o: modules/contact/%.cpp build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/contact/%.o: modules/contact/%.S build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vumeter/%.o: modules/vumeter/%.c build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vumeter/%.o: modules/vumeter/%.m build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vumeter/%.o: modules/vumeter/%.cpp build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vumeter/%.o: modules/vumeter/%.S build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/mwi/%.o: modules/mwi/%.c build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/mwi/%.o: modules/mwi/%.m build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/mwi/%.o: modules/mwi/%.cpp build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/mwi/%.o: modules/mwi/%.S build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/account/%.o: modules/account/%.c build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/account/%.o: modules/account/%.m build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/account/%.o: modules/account/%.cpp build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/account/%.o: modules/account/%.S build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natpmp/%.o: modules/natpmp/%.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natpmp/%.o: modules/natpmp/%.m build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natpmp/%.o: modules/natpmp/%.cpp build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/natpmp/%.o: modules/natpmp/%.S build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/httpd/%.o: modules/httpd/%.c build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/httpd/%.o: modules/httpd/%.m build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/httpd/%.o: modules/httpd/%.cpp build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/httpd/%.o: modules/httpd/%.S build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/srtp/%.o: modules/srtp/%.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/srtp/%.o: modules/srtp/%.m build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/srtp/%.o: modules/srtp/%.cpp build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/srtp/%.o: modules/srtp/%.S build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/uuid/%.o: modules/uuid/%.c build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/uuid/%.o: modules/uuid/%.m build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/uuid/%.o: modules/uuid/%.cpp build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/uuid/%.o: modules/uuid/%.S build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/debug_cmd/%.o: modules/debug_cmd/%.c build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/debug_cmd/%.o: modules/debug_cmd/%.m build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/debug_cmd/%.o: modules/debug_cmd/%.cpp build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/debug_cmd/%.o: modules/debug_cmd/%.S build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aubridge/%.o: modules/aubridge/%.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aubridge/%.o: modules/aubridge/%.m build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aubridge/%.o: modules/aubridge/%.cpp build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aubridge/%.o: modules/aubridge/%.S build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aufile/%.o: modules/aufile/%.c build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aufile/%.o: modules/aufile/%.m build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aufile/%.o: modules/aufile/%.cpp build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/aufile/%.o: modules/aufile/%.S build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidloop/%.o: modules/vidloop/%.c build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidloop/%.o: modules/vidloop/%.m build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidloop/%.o: modules/vidloop/%.cpp build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidloop/%.o: modules/vidloop/%.S build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/selfview/%.o: modules/selfview/%.c build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/selfview/%.o: modules/selfview/%.m build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/selfview/%.o: modules/selfview/%.cpp build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/selfview/%.o: modules/selfview/%.S build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidbridge/%.o: modules/vidbridge/%.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidbridge/%.o: modules/vidbridge/%.m build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidbridge/%.o: modules/vidbridge/%.cpp build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidbridge/%.o: modules/vidbridge/%.S build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/fakevideo/%.o: modules/fakevideo/%.c build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/fakevideo/%.o: modules/fakevideo/%.m build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/fakevideo/%.o: modules/fakevideo/%.cpp build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/fakevideo/%.o: modules/fakevideo/%.S build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/alsa/%.o: modules/alsa/%.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/alsa/%.o: modules/alsa/%.m build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/alsa/%.o: modules/alsa/%.cpp build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/alsa/%.o: modules/alsa/%.S build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/cons/%.o: modules/cons/%.c build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/cons/%.o: modules/cons/%.m build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/cons/%.o: modules/cons/%.cpp build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/cons/%.o: modules/cons/%.S build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtls_srtp/%.o: modules/dtls_srtp/%.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtls_srtp/%.o: modules/dtls_srtp/%.m build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtls_srtp/%.o: modules/dtls_srtp/%.cpp build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/dtls_srtp/%.o: modules/dtls_srtp/%.S build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/evdev/%.o: modules/evdev/%.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/evdev/%.o: modules/evdev/%.m build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/evdev/%.o: modules/evdev/%.cpp build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/evdev/%.o: modules/evdev/%.S build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/g711/%.o: modules/g711/%.c build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/g711/%.o: modules/g711/%.m build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/g711/%.o: modules/g711/%.cpp build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/g711/%.o: modules/g711/%.S build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/l16/%.o: modules/l16/%.c build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/l16/%.o: modules/l16/%.m build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/l16/%.o: modules/l16/%.cpp build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/l16/%.o: modules/l16/%.S build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/oss/%.o: modules/oss/%.c build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/oss/%.o: modules/oss/%.m build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/oss/%.o: modules/oss/%.cpp build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/oss/%.o: modules/oss/%.S build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stdio/%.o: modules/stdio/%.c build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stdio/%.o: modules/stdio/%.m build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stdio/%.o: modules/stdio/%.cpp build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/stdio/%.o: modules/stdio/%.S build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/syslog/%.o: modules/syslog/%.c build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/syslog/%.o: modules/syslog/%.m build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/syslog/%.o: modules/syslog/%.cpp build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/syslog/%.o: modules/syslog/%.S build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2/%.o: modules/v4l2/%.c build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2/%.o: modules/v4l2/%.m build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2/%.o: modules/v4l2/%.cpp build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2/%.o: modules/v4l2/%.S build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2_codec/%.o: modules/v4l2_codec/%.c build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2_codec/%.o: modules/v4l2_codec/%.m build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 49)：
	@echo "  OC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) $(OBJCFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2_codec/%.o: modules/v4l2_codec/%.cpp build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 56)：
	@echo "  CXX [M] $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CXX) $(CXXFLAGS) $($(call modulename,$@)_CXXFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/v4l2_codec/%.o: modules/v4l2_codec/%.S build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
#  要执行的命令 (从“mk/mod.mk”，行 63)：
	@echo "  AS [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) -DMOD_NAME=\"$(MOD)\" -c $< -o $@ $(DFLAGS)
	

build-x86_64/%.o: %.c build-x86_64 Makefile src/srcs.mk
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/%.o: %.cpp build-x86_64 Makefile src/srcs.mk
#  要执行的命令 (从“Makefile”，行 224)：
	@echo "  CXX     $@"
	$(HIDE)$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/%.o: %.m build-x86_64 Makefile src/srcs.mk
#  要执行的命令 (从“Makefile”，行 228)：
	@echo "  OC      $@"
	$(HIDE)$(CC) $(CFLAGS) $(OBJCFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/%.o: %.S build-x86_64 Makefile src/srcs.mk
#  要执行的命令 (从“Makefile”，行 232)：
	@echo "  AS      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

%.out:

%.a:

%.ln:

%.o:

%: %.o
#  要执行的命令 (内置)：
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.c:

%: %.c
#  要执行的命令 (内置)：
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.ln: %.c
#  要执行的命令 (内置)：
	$(LINT.c) -C$* $<

%.o: %.c
#  要执行的命令 (内置)：
	$(COMPILE.c) $(OUTPUT_OPTION) $<

%.cc:

%: %.cc
#  要执行的命令 (内置)：
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.cc
#  要执行的命令 (内置)：
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

%.C:

%: %.C
#  要执行的命令 (内置)：
	$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.C
#  要执行的命令 (内置)：
	$(COMPILE.C) $(OUTPUT_OPTION) $<

%.cpp:

%: %.cpp
#  要执行的命令 (内置)：
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.cpp
#  要执行的命令 (内置)：
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

%.p:

%: %.p
#  要执行的命令 (内置)：
	$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.p
#  要执行的命令 (内置)：
	$(COMPILE.p) $(OUTPUT_OPTION) $<

%.f:

%: %.f
#  要执行的命令 (内置)：
	$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.f
#  要执行的命令 (内置)：
	$(COMPILE.f) $(OUTPUT_OPTION) $<

%.F:

%: %.F
#  要执行的命令 (内置)：
	$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.F
#  要执行的命令 (内置)：
	$(COMPILE.F) $(OUTPUT_OPTION) $<

%.f: %.F
#  要执行的命令 (内置)：
	$(PREPROCESS.F) $(OUTPUT_OPTION) $<

%.r:

%: %.r
#  要执行的命令 (内置)：
	$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.r
#  要执行的命令 (内置)：
	$(COMPILE.r) $(OUTPUT_OPTION) $<

%.f: %.r
#  要执行的命令 (内置)：
	$(PREPROCESS.r) $(OUTPUT_OPTION) $<

%.y:

%.ln: %.y
#  要执行的命令 (内置)：
	$(YACC.y) $< 
	$(LINT.c) -C$* y.tab.c 
	$(RM) y.tab.c

%.c: %.y
#  要执行的命令 (内置)：
	$(YACC.y) $< 
	mv -f y.tab.c $@

%.l:

%.ln: %.l
#  要执行的命令 (内置)：
	@$(RM) $*.c
	$(LEX.l) $< > $*.c
	$(LINT.c) -i $*.c -o $@
	$(RM) $*.c

%.c: %.l
#  要执行的命令 (内置)：
	@$(RM) $@ 
	$(LEX.l) $< > $@

%.r: %.l
#  要执行的命令 (内置)：
	$(LEX.l) $< > $@ 
	mv -f lex.yy.r $@

%.s:

%: %.s
#  要执行的命令 (内置)：
	$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.s
#  要执行的命令 (内置)：
	$(COMPILE.s) -o $@ $<

%.S:

%: %.S
#  要执行的命令 (内置)：
	$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.S
#  要执行的命令 (内置)：
	$(COMPILE.S) -o $@ $<

%.s: %.S
#  要执行的命令 (内置)：
	$(PREPROCESS.S) $< > $@

%.mod:

%: %.mod
#  要执行的命令 (内置)：
	$(COMPILE.mod) -o $@ -e $@ $^

%.o: %.mod
#  要执行的命令 (内置)：
	$(COMPILE.mod) -o $@ $<

%.sym:

%.def:

%.sym: %.def
#  要执行的命令 (内置)：
	$(COMPILE.def) -o $@ $<

%.h:

%.info:

%.dvi:

%.tex:

%.dvi: %.tex
#  要执行的命令 (内置)：
	$(TEX) $<

%.texinfo:

%.info: %.texinfo
#  要执行的命令 (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.texinfo
#  要执行的命令 (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.texi:

%.info: %.texi
#  要执行的命令 (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.texi
#  要执行的命令 (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.txinfo:

%.info: %.txinfo
#  要执行的命令 (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.txinfo
#  要执行的命令 (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.w:

%.c: %.w
#  要执行的命令 (内置)：
	$(CTANGLE) $< - $@

%.tex: %.w
#  要执行的命令 (内置)：
	$(CWEAVE) $< - $@

%.ch:

%.web:

%.p: %.web
#  要执行的命令 (内置)：
	$(TANGLE) $<

%.tex: %.web
#  要执行的命令 (内置)：
	$(WEAVE) $<

%.sh:

%: %.sh
#  要执行的命令 (内置)：
	cat $< >$@ 
	chmod a+x $@

%.elc:

%.el:

(%): %
#  要执行的命令 (内置)：
	$(AR) $(ARFLAGS) $@ $<

%.out: %
#  要执行的命令 (内置)：
	@rm -f $@ 
	cp $< $@

%.c: %.w %.ch
#  要执行的命令 (内置)：
	$(CTANGLE) $^ $@

%.tex: %.w %.ch
#  要执行的命令 (内置)：
	$(CWEAVE) $^ $@

%:: %,v
#  要执行的命令 (内置)：
	$(CHECKOUT,v)

%:: RCS/%,v
#  要执行的命令 (内置)：
	$(CHECKOUT,v)

%:: RCS/%
#  要执行的命令 (内置)：
	$(CHECKOUT,v)

%:: s.%
#  要执行的命令 (内置)：
	$(GET) $(GFLAGS) $(SCCS_OUTPUT_OPTION) $<

%:: SCCS/s.%
#  要执行的命令 (内置)：
	$(GET) $(GFLAGS) $(SCCS_OUTPUT_OPTION) $<

# 226 条隐含规则，5 (2.2%) 终端。

# 文件

# 不是一个目标：
build-x86_64/src/ua.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/vidsrc.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/rtpext.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/uuid/uuid.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/baresip.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/natbd/natbd.o: modules/natbd/natbd.c build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“natbd”
#  最近更新 2018-01-16 14:00:36.214275404
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/natbd/natbd.o
# 自动
# % := 
# 自动
# * := natbd
# 自动
# + := modules/natbd/natbd.c build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/natbd/natbd.c
# 自动
# ^ := modules/natbd/natbd.c build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
# 自动
# ? := modules/natbd/natbd.c build-x86_64 Makefile mk/mod.mk modules/natbd/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/httpd/httpd.o: modules/httpd/httpd.c build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“httpd”
#  最近更新 2018-01-16 14:00:37.370281136
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/httpd/httpd.o
# 自动
# % := 
# 自动
# * := httpd
# 自动
# + := modules/httpd/httpd.c build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/httpd/httpd.c
# 自动
# ^ := modules/httpd/httpd.c build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
# 自动
# ? := modules/httpd/httpd.c build-x86_64 Makefile mk/mod.mk modules/httpd/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.web.p:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(TANGLE) $<

# 不是一个目标：
modules/debug_cmd/debug_cmd.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/alsa/alsa_src.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

splint-all:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 869)：
	@splint $(SPLINT_LIBS) $(SPLINT_OPTIONS) $(SPLINT_SOURCES)
	

# 不是一个目标：
modules/l16/l16.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/v4l2/v4l2.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/aubridge/device.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/fakevideo/fakevideo.o: modules/fakevideo/fakevideo.c build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“fakevideo”
#  最近更新 2018-01-16 14:00:38.562287047
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/fakevideo/fakevideo.o
# 自动
# % := 
# 自动
# * := fakevideo
# 自动
# + := modules/fakevideo/fakevideo.c build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/fakevideo/fakevideo.c
# 自动
# ^ := modules/fakevideo/fakevideo.c build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
# 自动
# ? := modules/fakevideo/fakevideo.c build-x86_64 Makefile mk/mod.mk modules/fakevideo/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/aubridge/play.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/mnat.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/cmd.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-11 15:31:58.379230853
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/alsa/alsa_play.o: modules/alsa/alsa_play.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“alsa_play”
#  最近更新 2018-01-16 14:00:38.858288515
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/alsa/alsa_play.o
# 自动
# % := 
# 自动
# * := alsa_play
# 自动
# + := modules/alsa/alsa_play.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/alsa/alsa_play.c
# 自动
# ^ := modules/alsa/alsa_play.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 自动
# ? := modules/alsa/alsa_play.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/sip/aor.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/vidbridge/src.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_ausrc.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/test/aulevel.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/natpmp/libnatpmp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/srtp/srtp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/cert.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/vidloop/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/syslog/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/natbd/natbd.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.l.r:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LEX.l) $< > $@ 
	mv -f lex.yy.r $@

# 不是一个目标：
build-x86_64/modules/aufile/aufile.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_aucodec.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/stun/stun.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/alsa/alsa_src.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

clang:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 896)：
	@clang --analyze $(CLANG_OPTIONS) $(CLANG_SRCS)
	@rm -f *.plist
	

# 不是一个目标：
modules/dtls_srtp/dtls_srtp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.dvi:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/srtp/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/cons/cons.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/cert.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/natbd/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/presence/publisher.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_vidisp.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

git_snapshot:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 739)：
	git archive --format=tar --prefix=$(PROJECT)-$(VERSION)/ HEAD \
	| gzip > ../$(PROJECT)-$(VERSION).tar.gz
	

# 不是一个目标：
build-x86_64/modules/auloop/auloop.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

fakevideo.so: build-x86_64/modules/fakevideo/fakevideo.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.582287146
#  文件已经被更新。
#  更新成功。
# 自动
# @ := fakevideo.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/fakevideo/fakevideo.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/fakevideo/fakevideo.o
# 自动
# ^ := build-x86_64/modules/fakevideo/fakevideo.o
# 自动
# ? := build-x86_64/modules/fakevideo/fakevideo.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/play.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.F.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.F) $(OUTPUT_OPTION) $<

selfview.so: build-x86_64/modules/selfview/selfview.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.286285679
#  文件已经被更新。
#  更新成功。
# 自动
# @ := selfview.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/selfview/selfview.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/selfview/selfview.o
# 自动
# ^ := build-x86_64/modules/selfview/selfview.o
# 自动
# ? := build-x86_64/modules/selfview/selfview.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

build-x86_64/src/aulevel.o: src/aulevel.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/aulevel”
#  最近更新 2018-01-16 14:00:40.618297242
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/aulevel.o
# 自动
# % := 
# 自动
# * := src/aulevel
# 自动
# + := src/aulevel.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/aulevel.c
# 自动
# ^ := src/aulevel.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/aulevel.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

git_release:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 734)：
	git archive --format=tar --prefix=$(PROJECT)-$(VERSION)/ v$(VERSION) \
	| gzip > ../$(PROJECT)-$(VERSION).tar.gz
	

build-x86_64/modules/v4l2_codec/v4l2_codec.o: modules/v4l2_codec/v4l2_codec.c build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“v4l2_codec”
#  最近更新 2018-01-16 14:00:40.086294604
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/v4l2_codec/v4l2_codec.o
# 自动
# % := 
# 自动
# * := v4l2_codec
# 自动
# + := modules/v4l2_codec/v4l2_codec.c build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/v4l2_codec/v4l2_codec.c
# 自动
# ^ := modules/v4l2_codec/v4l2_codec.c build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
# 自动
# ? := modules/v4l2_codec/v4l2_codec.c build-x86_64 Makefile mk/mod.mk modules/v4l2_codec/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/evdev/print.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/call.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

all: sanity dtmfio.so stun.so turn.so ice.so natbd.so auloop.so presence.so menu.so contact.so vumeter.so mwi.so account.so natpmp.so httpd.so srtp.so uuid.so debug_cmd.so aubridge.so aufile.so vidloop.so selfview.so vidbridge.so fakevideo.so alsa.so cons.so dtls_srtp.so evdev.so g711.so l16.so oss.so stdio.so syslog.so v4l2.so v4l2_codec.so baresip
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/2380=0%

# 不是一个目标：
.y.ln:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(YACC.y) $< 
	$(LINT.c) -C$* y.tab.c 
	$(RM) y.tab.c

# 不是一个目标：
.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
src/auplay.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/vidfilt.o: src/vidfilt.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/vidfilt”
#  最近更新 2018-01-16 14:00:43.162309857
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/vidfilt.o
# 自动
# % := 
# 自动
# * := src/vidfilt
# 自动
# + := src/vidfilt.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/vidfilt.c
# 自动
# ^ := src/vidfilt.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/vidfilt.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/contact.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/account.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.y:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/dtmfio/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

debug_cmd.so: build-x86_64/modules/debug_cmd/debug_cmd.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.718282862
#  文件已经被更新。
#  更新成功。
# 自动
# @ := debug_cmd.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/debug_cmd/debug_cmd.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/debug_cmd/debug_cmd.o
# 自动
# ^ := build-x86_64/modules/debug_cmd/debug_cmd.o
# 自动
# ? := build-x86_64/modules/debug_cmd/debug_cmd.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
.def.sym:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.def) -o $@ $<

v4l2_codec.so: build-x86_64/modules/v4l2_codec/v4l2_codec.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:40.106294704
#  文件已经被更新。
#  更新成功。
# 自动
# @ := v4l2_codec.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/v4l2_codec/v4l2_codec.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/v4l2_codec/v4l2_codec.o
# 自动
# ^ := build-x86_64/modules/v4l2_codec/v4l2_codec.o
# 自动
# ? := build-x86_64/modules/v4l2_codec/v4l2_codec.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
src/reg.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
mk/modules.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.765705222
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/aubridge/aubridge.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

.PHONY: distclean info deb debclean rpm modules test clean ccheck
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/audio.o: src/audio.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/audio”
#  最近更新 2018-01-16 14:00:40.490296608
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/audio.o
# 自动
# % := 
# 自动
# * := src/audio
# 自动
# + := src/audio.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/audio.c
# 自动
# ^ := src/audio.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/audio.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

modules: dtmfio.so stun.so turn.so ice.so natbd.so auloop.so presence.so menu.so contact.so vumeter.so mwi.so account.so natpmp.so httpd.so srtp.so uuid.so debug_cmd.so aubridge.so aufile.so vidloop.so selfview.so vidbridge.so fakevideo.so alsa.so cons.so dtls_srtp.so evdev.so g711.so l16.so oss.so stdio.so syslog.so v4l2.so v4l2_codec.so
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。

build-x86_64/src/sdp.o: src/sdp.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/sdp”
#  最近更新 2018-01-16 14:00:42.302305593
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/sdp.o
# 自动
# % := 
# 自动
# * := src/sdp
# 自动
# + := src/sdp.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/sdp.c
# 自动
# ^ := src/sdp.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/sdp.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

install-dev: install-shared install-static
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/conf.o: src/conf.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/conf”
#  最近更新 2018-01-16 14:00:41.16229994
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/conf.o
# 自动
# % := 
# 自动
# * := src/conf
# 自动
# + := src/conf.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/conf.c
# 自动
# ^ := src/conf.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/conf.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/contact/contact.o: modules/contact/contact.c build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“contact”
#  最近更新 2018-01-16 14:00:36.854278578
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/contact/contact.o
# 自动
# % := 
# 自动
# * := contact
# 自动
# + := modules/contact/contact.c build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/contact/contact.c
# 自动
# ^ := modules/contact/contact.c build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
# 自动
# ? := modules/contact/contact.c build-x86_64 Makefile mk/mod.mk modules/contact/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/stun/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/uuid/uuid.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.p.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.p) $(OUTPUT_OPTION) $<

# 不是一个目标：
.p:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
build-x86_64/src/play.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/call.o: src/call.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/call”
#  最近更新 2018-01-16 14:00:40.982299047
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/call.o
# 自动
# % := 
# 自动
# * := src/call
# 自动
# + := src/call.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/call.c
# 自动
# ^ := src/call.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/call.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.txinfo.dvi:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

vumeter.so: build-x86_64/modules/vumeter/vumeter.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.970279153
#  文件已经被更新。
#  更新成功。
# 自动
# @ := vumeter.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/vumeter/vumeter.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/vumeter/vumeter.o
# 自动
# ^ := build-x86_64/modules/vumeter/vumeter.o
# 自动
# ? := build-x86_64/modules/vumeter/vumeter.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/contact.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/aufile/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/mwi/mwi.o: modules/mwi/mwi.c build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“mwi”
#  最近更新 2018-01-16 14:00:37.03827949
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/mwi/mwi.o
# 自动
# % := 
# 自动
# * := mwi
# 自动
# + := modules/mwi/mwi.c build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/mwi/mwi.c
# 自动
# ^ := modules/mwi/mwi.c build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
# 自动
# ? := modules/mwi/mwi.c build-x86_64 Makefile mk/mod.mk modules/mwi/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/video.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/menu/menu.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-11 14:51:04.787064147
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/l16/l16.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/menu/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/vumeter/vumeter.o: modules/vumeter/vumeter.c build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“vumeter”
#  最近更新 2018-01-16 14:00:36.946279034
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/vumeter/vumeter.o
# 自动
# % := 
# 自动
# * := vumeter
# 自动
# + := modules/vumeter/vumeter.c build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/vumeter/vumeter.c
# 自动
# ^ := modules/vumeter/vumeter.c build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
# 自动
# ? := modules/vumeter/vumeter.c build-x86_64 Makefile mk/mod.mk modules/vumeter/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=6/38=16%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/src/mos.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/account/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.765705222
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/video.o: src/video.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/video”
#  最近更新 2018-01-16 14:00:43.042309262
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/video.o
# 自动
# % := 
# 自动
# * := src/video
# 自动
# + := src/video.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/video.c
# 自动
# ^ := src/video.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/video.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/sip/user.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/modules/evdev/print.o: modules/evdev/print.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“print”
#  最近更新 2018-01-16 14:00:39.386291133
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/evdev/print.o
# 自动
# % := 
# 自动
# * := print
# 自动
# + := modules/evdev/print.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/evdev/print.c
# 自动
# ^ := modules/evdev/print.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
# 自动
# ? := modules/evdev/print.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/turn/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/log.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

natbd.so: build-x86_64/modules/natbd/natbd.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.234275503
#  文件已经被更新。
#  更新成功。
# 自动
# @ := natbd.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/natbd/natbd.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/natbd/natbd.o
# 自动
# ^ := build-x86_64/modules/natbd/natbd.o
# 自动
# ? := build-x86_64/modules/natbd/natbd.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
.a:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
src/net.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

account.so: build-x86_64/modules/account/account.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.142280006
#  文件已经被更新。
#  更新成功。
# 自动
# @ := account.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/account/account.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/account/account.o
# 自动
# ^ := build-x86_64/modules/account/account.o
# 自动
# ? := build-x86_64/modules/account/account.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
src/rtpkeep.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/presence/subscriber.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.l.ln:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	@$(RM) $*.c
	$(LEX.l) $< > $*.c
	$(LINT.c) -i $*.c -o $@
	$(RM) $*.c

build-x86_64/modules/aubridge/aubridge.o: modules/aubridge/aubridge.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“aubridge”
#  最近更新 2018-01-16 14:00:37.77028312
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/aubridge/aubridge.o
# 自动
# % := 
# 自动
# * := aubridge
# 自动
# + := modules/aubridge/aubridge.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/aubridge/aubridge.c
# 自动
# ^ := modules/aubridge/aubridge.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# ? := modules/aubridge/aubridge.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/src/rtpkeep.o: src/rtpkeep.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/rtpkeep”
#  最近更新 2018-01-16 14:00:42.234305256
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/rtpkeep.o
# 自动
# % := 
# 自动
# * := src/rtpkeep
# 自动
# + := src/rtpkeep.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/rtpkeep.c
# 自动
# ^ := src/rtpkeep.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/rtpkeep.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

distclean:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 660)：
	@rm -rf build* *core*
	@rm -f *stamp $(BIN)
	@rm -f `find . -name "*.[oda]"` `find . -name "*.so"`
	@rm -f `find . -name "*~"` `find . -name "\.\#*"`
	@rm -f `find . -name "*.orig"` `find . -name "*.rej"`
	@rm -f `find . -name "*.previous"` `find . -name "*.gcov"`
	@rm -f `find . -name "*.exe"` `find . -name "*.dll"`
	@rm -f `find . -name "*.dylib"`
	

# 不是一个目标：
build-x86_64/test/message.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.w.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(CTANGLE) $< - $@

# 不是一个目标：
.texi.dvi:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# 不是一个目标：
modules/account/account.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.765705222
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.sh:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	cat $< >$@ 
	chmod a+x $@

build-x86_64/src/contact.o: src/contact.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/contact”
#  最近更新 2018-01-16 14:00:41.334300793
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/contact.o
# 自动
# % := 
# 自动
# * := src/contact
# 自动
# + := src/contact.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/contact.c
# 自动
# ^ := src/contact.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/contact.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

vidloop.so: build-x86_64/modules/vidloop/vidloop.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.198285242
#  文件已经被更新。
#  更新成功。
# 自动
# @ := vidloop.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/vidloop/vidloop.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/vidloop/vidloop.o
# 自动
# ^ := build-x86_64/modules/vidloop/vidloop.o
# 自动
# ? := build-x86_64/modules/vidloop/vidloop.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

rpm: tar
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 762)：
	sudo cp ../$(PROJECT)-$(VERSION).tar.gz /usr/src/$(RPM)/SOURCES
	sudo rpmbuild -ba rpm/$(PROJECT).spec
	

# 不是一个目标：
build-x86_64/modules/presence/publisher.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/sip/sipsrv.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/stdio/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.cc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

oss.so: build-x86_64/modules/oss/oss.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.674292561
#  文件已经被更新。
#  更新成功。
# 自动
# @ := oss.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/oss/oss.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/oss/oss.o
# 自动
# ^ := build-x86_64/modules/oss/oss.o
# 自动
# ? := build-x86_64/modules/oss/oss.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/src/stream.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/conf.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/ua.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.cc.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

# 不是一个目标：
build-x86_64/modules/account/account.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/aufile/aufile.o: modules/aufile/aufile.c build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“aufile”
#  最近更新 2018-01-16 14:00:38.058284548
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/aufile/aufile.o
# 自动
# % := 
# 自动
# * := aufile
# 自动
# + := modules/aufile/aufile.c build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/aufile/aufile.c
# 自动
# ^ := modules/aufile/aufile.c build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
# 自动
# ? := modules/aufile/aufile.c build-x86_64 Makefile mk/mod.mk modules/aufile/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/l16/l16.o: modules/l16/l16.c build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“l16”
#  最近更新 2018-01-16 14:00:39.554291966
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/l16/l16.o
# 自动
# % := 
# 自动
# * := l16
# 自动
# + := modules/l16/l16.c build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/l16/l16.c
# 自动
# ^ := modules/l16/l16.c build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
# 自动
# ? := modules/l16/l16.c build-x86_64 Makefile mk/mod.mk modules/l16/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/video.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/sip/domain.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/src/auplay.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/turn/turn.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/audio.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mos.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/message.o: src/message.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/message”
#  最近更新 2018-01-16 14:00:41.578302003
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/message.o
# 自动
# % := 
# 自动
# * := src/message
# 自动
# + := src/message.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/message.c
# 自动
# ^ := src/message.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/message.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.SUFFIXES: .out .a .ln .o .c .cc .C .cpp .p .f .F .r .y .l .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .txinfo .w .ch .web .sh .elc .el
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

selftest: libbaresip.a build-x86_64/test/account.o build-x86_64/test/aulevel.o build-x86_64/test/call.o build-x86_64/test/cmd.o build-x86_64/test/contact.o build-x86_64/test/cplusplus.o build-x86_64/test/message.o build-x86_64/test/mos.o build-x86_64/test/net.o build-x86_64/test/play.o build-x86_64/test/ua.o build-x86_64/test/video.o build-x86_64/test/mock/dnssrv.o build-x86_64/test/sip/aor.o build-x86_64/test/sip/auth.o build-x86_64/test/sip/domain.o build-x86_64/test/sip/location.o build-x86_64/test/sip/sipsrv.o build-x86_64/test/sip/user.o build-x86_64/test/mock/cert.o build-x86_64/test/mock/mock_aucodec.o build-x86_64/test/mock/mock_auplay.o build-x86_64/test/mock/mock_ausrc.o build-x86_64/test/mock/mock_vidsrc.o build-x86_64/test/mock/mock_vidcodec.o build-x86_64/test/mock/mock_vidisp.o build-x86_64/test/test.o build-x86_64/test/main.o
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 214)：
	@echo "  LD      $@"
	$(HIDE)$(CXX) $(LFLAGS) $(TEST_OBJS) \
	-L$(LIBRE_SO) -L. \
	-l$(PROJECT) -lre $(LIBS) $(TEST_LIBS) -o $@
	

# 不是一个目标：
build-x86_64/test/main.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

uuid.so: build-x86_64/modules/uuid/uuid.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.626282406
#  文件已经被更新。
#  更新成功。
# 自动
# @ := uuid.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/uuid/uuid.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/uuid/uuid.o
# 自动
# ^ := build-x86_64/modules/uuid/uuid.o
# 自动
# ? := build-x86_64/modules/uuid/uuid.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

../baresip-dox:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 908)：
	@mkdir $@
	

build-x86_64/modules/presence/notifier.o: modules/presence/notifier.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“notifier”
#  最近更新 2018-01-16 14:00:36.54627705
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/presence/notifier.o
# 自动
# % := 
# 自动
# * := notifier
# 自动
# + := modules/presence/notifier.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/presence/notifier.c
# 自动
# ^ := modules/presence/notifier.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# ? := modules/presence/notifier.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/mock/mock_vidsrc.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

uninstall:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 263)：
	@rm -f $(DESTDIR)$(PREFIX)/bin/$(BIN)
	@rm -rf $(DESTDIR)$(MOD_PATH)
	@rm -f $(DESTDIR)$(PREFIX)/lib/$(SHARED)
	@rm -f $(DESTDIR)$(PREFIX)/lib/$(STATICLIB)
	@rm -f $(DESTDIR)$(PREFIX)/lib/pkgconfig/libbaresip.pc
	

# 不是一个目标：
build-x86_64/src/ui.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/vidloop/vidloop.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/evdev/evdev.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.c.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.c) $(OUTPUT_OPTION) $<

info:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 671)：
	@echo "info - $(PROJECT) version $(VERSION)"
	@echo "  MODULES:       $(MODULES)"
	@echo "  MACHINE:       $(MACHINE)"
	@echo "  ARCH:          $(ARCH)"
	@echo "  OS:            $(OS)"
	@echo "  BUILD:         $(BUILD)"
	@echo "  CCACHE:        $(CCACHE)"
	@echo "  CC:            $(CC_NAME) $(CC_SHORTVER)"
	@echo "  CFLAGS:        $(CFLAGS)"
	@echo "  DFLAGS:        $(DFLAGS)"
	@echo "  LFLAGS:        $(LFLAGS)"
	@echo "  SH_LFLAGS:     $(SH_LFLAGS)"
	@echo "  MOD_LFLAGS:    $(MOD_LFLAGS)"
	@echo "  APP_LFLAGS:    $(APP_LFLAGS)"
	@echo "  LIBS:          $(LIBS)"
	@echo "  LIBRE_MK:      $(LIBRE_MK)"
	@echo "  LIBRE_INC:     $(LIBRE_INC)"
	@echo "  LIBRE_SO:      $(LIBRE_SO)"
	@echo "  USE_OPENSSL:   $(USE_OPENSSL)"
	@echo "  USE_OPENSSL_AES:   $(USE_OPENSSL_AES)"
	@echo "  USE_OPENSSL_HMAC:  $(USE_OPENSSL_HMAC)"
	@echo "  USE_TLS:       $(USE_TLS)"
	@echo "  USE_DTLS:      $(USE_DTLS)"
	@echo "  USE_DTLS_SRTP: $(USE_DTLS_SRTP)"
	@echo "  USE_ZLIB:      $(USE_ZLIB)"
	@echo "  GCOV:          $(GCOV)"
	@echo "  GPROF:         $(GPROF)"
	@echo "  CROSS_COMPILE: $(CROSS_COMPILE)"
	@echo "  SYSROOT:       $(SYSROOT)"
	@echo "  SYSROOT_ALT:   $(SYSROOT_ALT)"
	@echo "  LIB_SUFFIX:    $(LIB_SUFFIX)"
	@echo "  MOD_SUFFIX:    $(MOD_SUFFIX)"
	@echo "  BIN_SUFFIX:    $(BIN_SUFFIX)"
	

Makefile: mk/mod.mk mk/modules.mk modules/dtmfio/module.mk modules/stun/module.mk modules/turn/module.mk modules/ice/module.mk modules/natbd/module.mk modules/auloop/module.mk modules/presence/module.mk modules/menu/module.mk modules/contact/module.mk modules/vumeter/module.mk modules/mwi/module.mk modules/account/module.mk modules/natpmp/module.mk modules/httpd/module.mk modules/srtp/module.mk modules/uuid/module.mk modules/debug_cmd/module.mk modules/aubridge/module.mk modules/aufile/module.mk modules/vidloop/module.mk modules/selfview/module.mk modules/vidbridge/module.mk modules/fakevideo/module.mk modules/alsa/module.mk modules/cons/module.mk modules/dtls_srtp/module.mk modules/evdev/module.mk modules/g711/module.mk modules/l16/module.mk modules/oss/module.mk modules/stdio/module.mk modules/syslog/module.mk modules/v4l2/module.mk modules/v4l2_codec/module.mk /usr/local/share/re/re.mk
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.765705222
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/aucodec.o: src/aucodec.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/aucodec”
#  最近更新 2018-01-16 14:00:40.274295537
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/aucodec.o
# 自动
# % := 
# 自动
# * := src/aucodec
# 自动
# + := src/aucodec.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/aucodec.c
# 自动
# ^ := src/aucodec.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/aucodec.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/mock/mock_vidcodec.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/vidloop/vidloop.o: modules/vidloop/vidloop.c build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“vidloop”
#  最近更新 2018-01-16 14:00:38.174285123
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/vidloop/vidloop.o
# 自动
# % := 
# 自动
# * := vidloop
# 自动
# + := modules/vidloop/vidloop.c build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/vidloop/vidloop.c
# 自动
# ^ := modules/vidloop/vidloop.c build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
# 自动
# ? := modules/vidloop/vidloop.c build-x86_64 Makefile mk/mod.mk modules/vidloop/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.r.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.r) $(OUTPUT_OPTION) $<

build-x86_64/modules/alsa/alsa_src.o: modules/alsa/alsa_src.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“alsa_src”
#  最近更新 2018-01-16 14:00:38.766288059
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/alsa/alsa_src.o
# 自动
# % := 
# 自动
# * := alsa_src
# 自动
# + := modules/alsa/alsa_src.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/alsa/alsa_src.c
# 自动
# ^ := modules/alsa/alsa_src.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 自动
# ? := modules/alsa/alsa_src.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.r:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
src/h264.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/ua.o: src/ua.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/ua”
#  最近更新 2018-01-16 14:00:42.642307279
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/ua.o
# 自动
# % := 
# 自动
# * := src/ua
# 自动
# + := src/ua.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/ua.c
# 自动
# ^ := src/ua.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/ua.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/srtp/sdes.o: modules/srtp/sdes.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“sdes”
#  最近更新 2018-01-16 14:00:37.52228189
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/srtp/sdes.o
# 自动
# % := 
# 自动
# * := sdes
# 自动
# + := modules/srtp/sdes.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/srtp/sdes.c
# 自动
# ^ := modules/srtp/sdes.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
# 自动
# ? := modules/srtp/sdes.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/src/vidsrc.o: src/vidsrc.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/vidsrc”
#  最近更新 2018-01-16 14:00:43.286310472
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/vidsrc.o
# 自动
# % := 
# 自动
# * := src/vidsrc
# 自动
# + := src/vidsrc.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/vidsrc.c
# 自动
# ^ := src/vidsrc.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/vidsrc.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/play.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/baresip.o: src/baresip.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/baresip”
#  最近更新 2018-01-16 14:00:40.798298135
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/baresip.o
# 自动
# % := 
# 自动
# * := src/baresip
# 自动
# + := src/baresip.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/baresip.c
# 自动
# ^ := src/baresip.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/baresip.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/ice/ice.o: modules/ice/ice.c build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“ice”
#  最近更新 2018-01-16 14:00:36.106274868
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/ice/ice.o
# 自动
# % := 
# 自动
# * := ice
# 自动
# + := modules/ice/ice.c build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/ice/ice.c
# 自动
# ^ := modules/ice/ice.c build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
# 自动
# ? := modules/ice/ice.c build-x86_64 Makefile mk/mod.mk modules/ice/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/ice/ice.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.817705479
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/menu/menu.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/main.o: src/main.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/main”
#  最近更新 2018-01-16 14:00:43.410311087
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/main.o
# 自动
# % := 
# 自动
# * := src/main
# 自动
# + := src/main.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/main.c
# 自动
# ^ := src/main.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/main.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/mock/dnssrv.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

menu.so: build-x86_64/modules/menu/menu.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.782278221
#  文件已经被更新。
#  更新成功。
# 自动
# @ := menu.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/menu/menu.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/menu/menu.o
# 自动
# ^ := build-x86_64/modules/menu/menu.o
# 自动
# ? := build-x86_64/modules/menu/menu.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
modules/natpmp/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/oss/oss.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/g711/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/vidfilt.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_auplay.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/net.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/aubridge/device.o: modules/aubridge/device.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“device”
#  最近更新 2018-01-16 14:00:37.842283477
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/aubridge/device.o
# 自动
# % := 
# 自动
# * := device
# 自动
# + := modules/aubridge/device.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/aubridge/device.c
# 自动
# ^ := modules/aubridge/device.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# ? := modules/aubridge/device.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

test: selftest
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 211)：
	./$(TEST_BIN)
	

# 不是一个目标：
.ch:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

cons.so: build-x86_64/modules/cons/cons.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.99028917
#  文件已经被更新。
#  更新成功。
# 自动
# @ := cons.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/cons/cons.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/cons/cons.o
# 自动
# ^ := build-x86_64/modules/cons/cons.o
# 自动
# ? := build-x86_64/modules/cons/cons.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/sip/aor.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/modules/vidbridge/src.o: modules/vidbridge/src.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src”
#  最近更新 2018-01-16 14:00:38.406286274
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/vidbridge/src.o
# 自动
# % := 
# 自动
# * := src
# 自动
# + := modules/vidbridge/src.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/vidbridge/src.c
# 自动
# ^ := modules/vidbridge/src.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 自动
# ? := modules/vidbridge/src.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/httpd/httpd.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.817705479
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/aulevel.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

libbaresip.pc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 186)：
	@echo 'prefix='$(PREFIX) > libbaresip.pc
	@echo 'exec_prefix=$${prefix}' >> libbaresip.pc
	@echo 'libdir=$${prefix}/lib' >> libbaresip.pc
	@echo 'includedir=$${prefix}/include' >> libbaresip.pc
	@echo '' >> libbaresip.pc
	@echo 'Name: libbaresip' >> libbaresip.pc
	@echo 'Description: $(DESCR)' >> libbaresip.pc
	@echo 'Version: '$(VERSION) >> libbaresip.pc
	@echo 'URL: http://www.creytiv.com/baresip.html' >> libbaresip.pc
	@echo 'Libs: -L$${libdir} -lbaresip' >> libbaresip.pc
	@echo 'Cflags: -I$${includedir}' >> libbaresip.pc
	

build-x86_64/modules/vidbridge/vidbridge.o: modules/vidbridge/vidbridge.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“vidbridge”
#  最近更新 2018-01-16 14:00:38.346285976
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/vidbridge/vidbridge.o
# 自动
# % := 
# 自动
# * := vidbridge
# 自动
# + := modules/vidbridge/vidbridge.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/vidbridge/vidbridge.c
# 自动
# ^ := modules/vidbridge/vidbridge.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 自动
# ? := modules/vidbridge/vidbridge.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/mock/mock_vidcodec.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/modules/presence/subscriber.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/realtime.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/mctrl.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/stream.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_aucodec.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/test/account.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/selfview/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/call.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/metric.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/v4l2/v4l2.o: modules/v4l2/v4l2.c build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“v4l2”
#  最近更新 2018-01-16 14:00:39.95829397
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/v4l2/v4l2.o
# 自动
# % := 
# 自动
# * := v4l2
# 自动
# + := modules/v4l2/v4l2.c build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/v4l2/v4l2.c
# 自动
# ^ := modules/v4l2/v4l2.c build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
# 自动
# ? := modules/v4l2/v4l2.c build-x86_64 Makefile mk/mod.mk modules/v4l2/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=5/38=13%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/cons/cons.o: modules/cons/cons.c build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“cons”
#  最近更新 2018-01-16 14:00:38.97028907
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/cons/cons.o
# 自动
# % := 
# 自动
# * := cons
# 自动
# + := modules/cons/cons.c build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/cons/cons.c
# 自动
# ^ := modules/cons/cons.c build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
# 自动
# ? := modules/cons/cons.c build-x86_64 Makefile mk/mod.mk modules/cons/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=5/38=13%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.info:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/test/contact.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/src/cmd.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/auloop/auloop.o: modules/auloop/auloop.c build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“auloop”
#  最近更新 2018-01-16 14:00:36.31827592
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/auloop/auloop.o
# 自动
# % := 
# 自动
# * := auloop
# 自动
# + := modules/auloop/auloop.c build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/auloop/auloop.c
# 自动
# ^ := modules/auloop/auloop.c build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
# 自动
# ? := modules/auloop/auloop.c build-x86_64 Makefile mk/mod.mk modules/auloop/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=7/38=18%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.elc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/natpmp/natpmp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.l.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	@$(RM) $@ 
	$(LEX.l) $< > $@

ice.so: build-x86_64/modules/ice/ice.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.126274968
#  文件已经被更新。
#  更新成功。
# 自动
# @ := ice.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/ice/ice.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/ice/ice.o
# 自动
# ^ := build-x86_64/modules/ice/ice.o
# 自动
# ? := build-x86_64/modules/ice/ice.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/modules/presence/presence.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/g711/g711.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/alsa/alsa.o: modules/alsa/alsa.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“alsa”
#  最近更新 2018-01-16 14:00:38.670287583
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/alsa/alsa.o
# 自动
# % := 
# 自动
# * := alsa
# 自动
# + := modules/alsa/alsa.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/alsa/alsa.c
# 自动
# ^ := modules/alsa/alsa.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 自动
# ? := modules/alsa/alsa.c build-x86_64 Makefile mk/mod.mk modules/alsa/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/debug_cmd/debug_cmd.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/call.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/log.o: src/log.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/log”
#  最近更新 2018-01-16 14:00:41.458301408
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/log.o
# 自动
# % := 
# 自动
# * := src/log
# 自动
# + := src/log.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/log.c
# 自动
# ^ := src/log.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/log.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/menu/menu.o: modules/menu/menu.c build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“menu”
#  最近更新 2018-01-16 14:00:36.762278121
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/menu/menu.o
# 自动
# % := 
# 自动
# * := menu
# 自动
# + := modules/menu/menu.c build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/menu/menu.c
# 自动
# ^ := modules/menu/menu.c build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
# 自动
# ? := modules/menu/menu.c build-x86_64 Makefile mk/mod.mk modules/menu/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/src/account.o: src/account.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/account”
#  最近更新 2018-01-16 14:00:40.218295259
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/account.o
# 自动
# % := 
# 自动
# * := src/account
# 自动
# + := src/account.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/account.c
# 自动
# ^ := src/account.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/account.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/srtp/sdes.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/srtp/srtp.o: modules/srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“srtp”
#  最近更新 2018-01-16 14:00:37.470281632
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/srtp/srtp.o
# 自动
# % := 
# 自动
# * := srtp
# 自动
# + := modules/srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/srtp/srtp.c
# 自动
# ^ := modules/srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
# 自动
# ? := modules/srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/srtp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/httpd/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.817705479
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/vidisp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.ln:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/dtls_srtp/srtp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

natpmp.so: build-x86_64/modules/natpmp/natpmp.o build-x86_64/modules/natpmp/libnatpmp.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.306280819
#  文件已经被更新。
#  更新成功。
# 自动
# @ := natpmp.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/natpmp/natpmp.o build-x86_64/modules/natpmp/libnatpmp.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/natpmp/natpmp.o
# 自动
# ^ := build-x86_64/modules/natpmp/natpmp.o build-x86_64/modules/natpmp/libnatpmp.o
# 自动
# ? := build-x86_64/modules/natpmp/natpmp.o build-x86_64/modules/natpmp/libnatpmp.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/72=1%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

build-x86_64/src/vidisp.o: src/vidisp.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/vidisp”
#  最近更新 2018-01-16 14:00:43.226310175
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/vidisp.o
# 自动
# % := 
# 自动
# * := src/vidisp
# 自动
# + := src/vidisp.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/vidisp.c
# 自动
# ^ := src/vidisp.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/vidisp.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.C:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
src/vidutil.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/aufilt.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/h264.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/stdio/stdio.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-11 18:32:07.500830393
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.r.f:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(PREPROCESS.r) $(OUTPUT_OPTION) $<

# 不是一个目标：
.S:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@

build-x86_64/modules/oss/oss.o: modules/oss/oss.c build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“oss”
#  最近更新 2018-01-16 14:00:39.654292462
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/oss/oss.o
# 自动
# % := 
# 自动
# * := oss
# 自动
# + := modules/oss/oss.c build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/oss/oss.c
# 自动
# ^ := modules/oss/oss.c build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
# 自动
# ? := modules/oss/oss.c build-x86_64 Makefile mk/mod.mk modules/oss/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=5/38=13%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/src/vidcodec.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/ice/ice.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/dtls_srtp/dtls.o: modules/dtls_srtp/dtls.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“dtls”
#  最近更新 2018-01-16 14:00:39.202290221
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/dtls_srtp/dtls.o
# 自动
# % := 
# 自动
# * := dtls
# 自动
# + := modules/dtls_srtp/dtls.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/dtls_srtp/dtls.c
# 自动
# ^ := modules/dtls_srtp/dtls.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 自动
# ? := modules/dtls_srtp/dtls.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.texinfo.info:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# 不是一个目标：
.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
build-x86_64/test/sip/location.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/message.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/cmd.o: src/cmd.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/cmd”
#  最近更新 2018-01-16 14:00:41.078299523
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/cmd.o
# 自动
# % := 
# 自动
# * := src/cmd
# 自动
# + := src/cmd.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/cmd.c
# 自动
# ^ := src/cmd.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/cmd.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/net.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.w.tex:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(CWEAVE) $< - $@

# 不是一个目标：
build-x86_64/test/sip/auth.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/v4l2_codec/v4l2_codec.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.c.ln:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINT.c) -C$* $<

# 不是一个目标：
.s.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.s) -o $@ $<

default: all
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/2380=0%

sanity:
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.s:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
modules/auloop/auloop.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/vidbridge/vidbridge.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/dtls_srtp/dtls_srtp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/dnssrv.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/rtpext.o: src/rtpext.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/rtpext”
#  最近更新 2018-01-16 14:00:42.170304938
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/rtpext.o
# 自动
# % := 
# 自动
# * := src/rtpext
# 自动
# + := src/rtpext.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/rtpext.c
# 自动
# ^ := src/rtpext.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/rtpext.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/aucodec.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/play.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/mwi/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/test.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/play.o: src/play.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/play”
#  最近更新 2018-01-16 14:00:41.978303986
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/play.o
# 自动
# % := 
# 自动
# * := src/play
# 自动
# + := src/play.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/play.c
# 自动
# ^ := src/play.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/play.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/sdp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/stun/stun.o: modules/stun/stun.c build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“stun”
#  最近更新 2018-01-16 14:00:35.878273738
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/stun/stun.o
# 自动
# % := 
# 自动
# * := stun
# 自动
# + := modules/stun/stun.c build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/stun/stun.c
# 自动
# ^ := modules/stun/stun.c build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
# 自动
# ? := modules/stun/stun.c build-x86_64 Makefile mk/mod.mk modules/stun/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=5/38=13%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/src/event.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/ua.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/vidsrc.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

evdev.so: build-x86_64/modules/evdev/evdev.o build-x86_64/modules/evdev/print.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.410291252
#  文件已经被更新。
#  更新成功。
# 自动
# @ := evdev.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/evdev/evdev.o build-x86_64/modules/evdev/print.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/evdev/evdev.o
# 自动
# ^ := build-x86_64/modules/evdev/evdev.o build-x86_64/modules/evdev/print.o
# 自动
# ? := build-x86_64/modules/evdev/evdev.o build-x86_64/modules/evdev/print.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/72=3%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/message.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

install: baresip dtmfio.so stun.so turn.so ice.so natbd.so auloop.so presence.so menu.so contact.so vumeter.so mwi.so account.so natpmp.so httpd.so srtp.so uuid.so debug_cmd.so aubridge.so aufile.so vidloop.so selfview.so vidbridge.so fakevideo.so alsa.so cons.so dtls_srtp.so evdev.so g711.so l16.so oss.so stdio.so syslog.so v4l2.so v4l2_codec.so
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 240)：
	@mkdir -p $(DESTDIR)$(BINDIR)
	$(INSTALL) -m 0755 $(BIN) $(DESTDIR)$(BINDIR)
	@mkdir -p $(DESTDIR)$(MOD_PATH)
	$(INSTALL) -m 0644 $(MOD_BINS) $(DESTDIR)$(MOD_PATH)
	@mkdir -p $(DESTDIR)$(SHARE_PATH)
	$(INSTALL) -m 0644 share/* $(DESTDIR)$(SHARE_PATH)
	

# 不是一个目标：
src/rtpext.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

libbaresip.a: build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 178)：
	@echo "  AR      $@"
	@rm -f $@; $(AR) $(AFLAGS) $@ $^
	

# 不是一个目标：
src/baresip.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/bfcp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/aubridge/src.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.def:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/mos.o: src/mos.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/mos”
#  最近更新 2018-01-16 14:00:41.818303193
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/mos.o
# 自动
# % := 
# 自动
# * := src/mos
# 自动
# + := src/mos.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/mos.c
# 自动
# ^ := src/mos.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/mos.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
mk/Doxyfile:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/modules/natpmp/natpmp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/alsa/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/account.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/mnat.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/g711/g711.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/g711/g711.o: modules/g711/g711.c build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“g711”
#  最近更新 2018-01-16 14:00:39.47429157
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/g711/g711.o
# 自动
# % := 
# 自动
# * := g711
# 自动
# + := modules/g711/g711.c build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/g711/g711.c
# 自动
# ^ := modules/g711/g711.c build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
# 自动
# ? := modules/g711/g711.c build-x86_64 Makefile mk/mod.mk modules/g711/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=5/38=13%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/ua.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/modules/account/account.o: modules/account/account.c build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“account”
#  最近更新 2018-01-16 14:00:37.122279907
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/account/account.o
# 自动
# % := 
# 自动
# * := account
# 自动
# + := modules/account/account.c build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/account/account.c
# 自动
# ^ := modules/account/account.c build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
# 自动
# ? := modules/account/account.c build-x86_64 Makefile mk/mod.mk modules/account/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

alsa.so: build-x86_64/modules/alsa/alsa.o build-x86_64/modules/alsa/alsa_src.o build-x86_64/modules/alsa/alsa_play.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.902288733
#  文件已经被更新。
#  更新成功。
# 自动
# @ := alsa.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/alsa/alsa.o build-x86_64/modules/alsa/alsa_src.o build-x86_64/modules/alsa/alsa_play.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/alsa/alsa.o
# 自动
# ^ := build-x86_64/modules/alsa/alsa.o build-x86_64/modules/alsa/alsa_src.o build-x86_64/modules/alsa/alsa_play.o
# 自动
# ? := build-x86_64/modules/alsa/alsa.o build-x86_64/modules/alsa/alsa_src.o build-x86_64/modules/alsa/alsa_play.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/95=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/video.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/src/module.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.texinfo.dvi:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# 不是一个目标：
.el:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/auplay.o: src/auplay.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/auplay”
#  最近更新 2018-01-16 14:00:40.67829754
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/auplay.o
# 自动
# % := 
# 自动
# * := src/auplay
# 自动
# + := src/auplay.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/auplay.c
# 自动
# ^ := src/auplay.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/auplay.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

g711.so: build-x86_64/modules/g711/g711.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.498291689
#  文件已经被更新。
#  更新成功。
# 自动
# @ := g711.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/g711/g711.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/g711/g711.o
# 自动
# ^ := build-x86_64/modules/g711/g711.o
# 自动
# ? := build-x86_64/modules/g711/g711.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/src/conf.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/main.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

turn.so: build-x86_64/modules/turn/turn.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:35.990274293
#  文件已经被更新。
#  更新成功。
# 自动
# @ := turn.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/turn/turn.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/turn/turn.o
# 自动
# ^ := build-x86_64/modules/turn/turn.o
# 自动
# ? := build-x86_64/modules/turn/turn.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
.texinfo:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/srtp/sdes.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/stdio/stdio.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/dtls_srtp/srtp.o: modules/dtls_srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“srtp”
#  最近更新 2018-01-16 14:00:39.142289923
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/dtls_srtp/srtp.o
# 自动
# % := 
# 自动
# * := srtp
# 自动
# + := modules/dtls_srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/dtls_srtp/srtp.c
# 自动
# ^ := modules/dtls_srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 自动
# ? := modules/dtls_srtp/srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/modules/vidbridge/disp.o: modules/vidbridge/disp.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“disp”
#  最近更新 2018-01-16 14:00:38.470286591
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/vidbridge/disp.o
# 自动
# % := 
# 自动
# * := disp
# 自动
# + := modules/vidbridge/disp.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/vidbridge/disp.c
# 自动
# ^ := modules/vidbridge/disp.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 自动
# ? := modules/vidbridge/disp.c build-x86_64 Makefile mk/mod.mk modules/vidbridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/dtls_srtp/srtp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/metric.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.y.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(YACC.y) $< 
	mv -f y.tab.c $@

# 不是一个目标：
modules/v4l2/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/sdp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/oss/oss.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/menc.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.out:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/stream.o: src/stream.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/stream”
#  最近更新 2018-01-16 14:00:42.474306446
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/stream.o
# 自动
# % := 
# 自动
# * := src/stream
# 自动
# + := src/stream.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/stream.c
# 自动
# ^ := src/stream.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/stream.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.web.tex:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(WEAVE) $<

# 不是一个目标：
modules/vidbridge/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.texi.info:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

version:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 283)：
	@perl -pi -e 's/BARESIP_VERSION.*/BARESIP_VERSION \"$(VERSION)"/' \
	include/baresip.h
	@perl -pi -e "s/PROJECT_NUMBER         = .*/\
	PROJECT_NUMBER         = $(VERSION)/" \
	mk/Doxyfile
	@echo "updating version number to $(VERSION)"
	

# 不是一个目标：
build-x86_64/src/ausrc.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

release:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 714)：
	@rm -rf ../$(TAR_SRC)
	@svn export . ../$(TAR_SRC)
	@if [ -f ../$(TAR_SRC)/mk/exclude ]; then \
	cat ../$(TAR_SRC)/mk/exclude \
	| sed 's|^|../$(TAR_SRC)/|' | xargs -t rm -rf ; \
	rm -f ../$(TAR_SRC)/mk/exclude ; \
	fi
	@cd .. && rm -f $(TAR_SRC).tar.gz \
	&& tar -zcf $(TAR_SRC).tar.gz $(TAR_SRC) \
	&& echo "created release tarball `pwd`/$(TAR_SRC).tar.gz"
	

# 不是一个目标：
modules/cons/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mos.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

mwi.so: build-x86_64/modules/mwi/mwi.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.062279609
#  文件已经被更新。
#  更新成功。
# 自动
# @ := mwi.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/mwi/mwi.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/mwi/mwi.o
# 自动
# ^ := build-x86_64/modules/mwi/mwi.o
# 自动
# ? := build-x86_64/modules/mwi/mwi.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
.DEFAULT:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
src/aulevel.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/fakevideo/fakevideo.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/v4l2/v4l2.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/stun/stun.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.h:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/alsa/alsa_play.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/vidcodec.o: src/vidcodec.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/vidcodec”
#  最近更新 2018-01-16 14:00:43.10230956
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/vidcodec.o
# 自动
# % := 
# 自动
# * := src/vidcodec
# 自动
# + := src/vidcodec.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/vidcodec.c
# 自动
# ^ := src/vidcodec.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/vidcodec.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/selfview/selfview.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/mnat.o: src/mnat.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/mnat”
#  最近更新 2018-01-16 14:00:41.694302578
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/mnat.o
# 自动
# % := 
# 自动
# * := src/mnat
# 自动
# + := src/mnat.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/mnat.c
# 自动
# ^ := src/mnat.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/mnat.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

auloop.so: build-x86_64/modules/auloop/auloop.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.338276019
#  文件已经被更新。
#  更新成功。
# 自动
# @ := auloop.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/auloop/auloop.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/auloop/auloop.o
# 自动
# ^ := build-x86_64/modules/auloop/auloop.o
# 自动
# ? := build-x86_64/modules/auloop/auloop.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/mock/mock_auplay.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/net.o: src/net.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/net”
#  最近更新 2018-01-16 14:00:41.902303609
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/net.o
# 自动
# % := 
# 自动
# * := src/net
# 自动
# + := src/net.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/net.c
# 自动
# ^ := src/net.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/net.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/cmd.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

deb:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 746)：
	dpkg-buildpackage -rfakeroot
	

vidbridge.so: build-x86_64/modules/vidbridge/vidbridge.o build-x86_64/modules/vidbridge/src.o build-x86_64/modules/vidbridge/disp.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.49028669
#  文件已经被更新。
#  更新成功。
# 自动
# @ := vidbridge.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/vidbridge/vidbridge.o build-x86_64/modules/vidbridge/src.o build-x86_64/modules/vidbridge/disp.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/vidbridge/vidbridge.o
# 自动
# ^ := build-x86_64/modules/vidbridge/vidbridge.o build-x86_64/modules/vidbridge/src.o build-x86_64/modules/vidbridge/disp.o
# 自动
# ? := build-x86_64/modules/vidbridge/vidbridge.o build-x86_64/modules/vidbridge/src.o build-x86_64/modules/vidbridge/disp.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/95=1%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
src/config.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/uuid/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/presence/subscriber.o: modules/presence/subscriber.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“subscriber”
#  最近更新 2018-01-16 14:00:36.478276713
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/presence/subscriber.o
# 自动
# % := 
# 自动
# * := subscriber
# 自动
# + := modules/presence/subscriber.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/presence/subscriber.c
# 自动
# ^ := modules/presence/subscriber.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# ? := modules/presence/subscriber.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

baresip: build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o build-x86_64/src/main.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:43.490311484
#  文件已经被更新。
#  更新成功。
# 自动
# @ := baresip
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o build-x86_64/src/main.o
# 自动
# | := 
# 自动
# < := build-x86_64/src/account.o
# 自动
# ^ := build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o build-x86_64/src/main.o
# 自动
# ? := build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o build-x86_64/src/main.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/780=0%
#  要执行的命令 (从“Makefile”，行 200)：
	@echo "  LD      $@"
	$(HIDE)$(LD) $(LFLAGS) $(APP_LFLAGS) $^ \
	-L$(LIBRE_SO) -lre $(LIBS) -o $@
	

build-x86_64/modules/syslog/syslog.o: modules/syslog/syslog.c build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“syslog”
#  最近更新 2018-01-16 14:00:39.826293315
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/syslog/syslog.o
# 自动
# % := 
# 自动
# * := syslog
# 自动
# + := modules/syslog/syslog.c build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/syslog/syslog.c
# 自动
# ^ := modules/syslog/syslog.c build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
# 自动
# ? := modules/syslog/syslog.c build-x86_64 Makefile mk/mod.mk modules/syslog/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/l16/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_vidisp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/account.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/aufile/aufile.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/mctrl.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/aubridge/src.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/main.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/mos.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.tex.dvi:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(TEX) $<

ccheck:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 280)：
	@ccheck.pl > /dev/null
	

# 不是一个目标：
build-x86_64/src/video.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/log.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/config.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/presence/notifier.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.cpp.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

# 不是一个目标：
.cpp:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
build-x86_64/src/reg.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/presence/presence.o: modules/presence/presence.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“presence”
#  最近更新 2018-01-16 14:00:36.398276316
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/presence/presence.o
# 自动
# % := 
# 自动
# * := presence
# 自动
# + := modules/presence/presence.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/presence/presence.c
# 自动
# ^ := modules/presence/presence.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# ? := modules/presence/presence.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

build-x86_64/src/module.o: src/module.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/module”
#  最近更新 2018-01-16 14:00:41.758302895
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/module.o
# 自动
# % := 
# 自动
# * := src/module
# 自动
# + := src/module.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/module.c
# 自动
# ^ := src/module.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/module.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

clean:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 271)：
	@rm -rf $(BIN) $(MOD_BINS) $(SHARED) $(BUILD) $(TEST_BIN) \
	$(STATICLIB) libbaresip.pc
	@rm -f *stamp \
	`find . -name "*.[od]"` \
	`find . -name "*~"` \
	`find . -name "\.\#*"`
	

../baresip-dox/Doxyfile: mk/Doxyfile Makefile
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 911)：
	@cp $< $@
	@perl -pi -e 's/PROJECT_NUMBER\s*=.*/PROJECT_NUMBER = $(VERSION)/' \
	$(DOX_DIR)/Doxyfile
	

# 不是一个目标：
.C.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.C) $(OUTPUT_OPTION) $<

# 不是一个目标：
modules/aubridge/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/selfview/selfview.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/debug_cmd/debug_cmd.o: modules/debug_cmd/debug_cmd.c build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“debug_cmd”
#  最近更新 2018-01-16 14:00:37.698282763
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/debug_cmd/debug_cmd.o
# 自动
# % := 
# 自动
# * := debug_cmd
# 自动
# + := modules/debug_cmd/debug_cmd.c build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/debug_cmd/debug_cmd.c
# 自动
# ^ := modules/debug_cmd/debug_cmd.c build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
# 自动
# ? := modules/debug_cmd/debug_cmd.c build-x86_64 Makefile mk/mod.mk modules/debug_cmd/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

install-static: libbaresip.a
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 257)：
	@mkdir -p $(DESTDIR)$(INCDIR)
	$(INSTALL) -Cm 0644 include/baresip.h $(DESTDIR)$(INCDIR)
	@mkdir -p $(DESTDIR)$(LIBDIR)
	$(INSTALL) -m 0644 $(STATICLIB) $(DESTDIR)$(LIBDIR)
	

# 不是一个目标：
.texi:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/test/cplusplus.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

aubridge.so: build-x86_64/modules/aubridge/aubridge.o build-x86_64/modules/aubridge/device.o build-x86_64/modules/aubridge/src.o build-x86_64/modules/aubridge/play.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.978284151
#  文件已经被更新。
#  更新成功。
# 自动
# @ := aubridge.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/aubridge/aubridge.o build-x86_64/modules/aubridge/device.o build-x86_64/modules/aubridge/src.o build-x86_64/modules/aubridge/play.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/aubridge/aubridge.o
# 自动
# ^ := build-x86_64/modules/aubridge/aubridge.o build-x86_64/modules/aubridge/device.o build-x86_64/modules/aubridge/src.o build-x86_64/modules/aubridge/play.o
# 自动
# ? := build-x86_64/modules/aubridge/aubridge.o build-x86_64/modules/aubridge/device.o build-x86_64/modules/aubridge/src.o build-x86_64/modules/aubridge/play.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/118=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/modules/aubridge/play.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.txinfo:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.tex:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/contact/contact.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

tar:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 726)：
	@rm -rf ../$(TAR_SRC)
	@svn export . ../$(TAR_SRC)
	@cd .. && rm -f $(TAR_SRC).tar.gz \
	&& tar -zcf $(TAR_SRC).tar.gz $(TAR_SRC) \
	&& echo "created source tarball `pwd`/$(TAR_SRC).tar.gz"
	

contact.so: build-x86_64/modules/contact/contact.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.878278697
#  文件已经被更新。
#  更新成功。
# 自动
# @ := contact.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/contact/contact.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/contact/contact.o
# 自动
# ^ := build-x86_64/modules/contact/contact.o
# 自动
# ? := build-x86_64/modules/contact/contact.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

build-x86_64/src/aufilt.o: src/aufilt.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/aufilt”
#  最近更新 2018-01-16 14:00:40.550296905
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/aufilt.o
# 自动
# % := 
# 自动
# * := src/aufilt
# 自动
# + := src/aufilt.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/aufilt.c
# 自动
# ^ := src/aufilt.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/aufilt.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/src/h264.o: src/h264.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/h264”
#  最近更新 2018-01-16 14:00:42.846308291
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/h264.o
# 自动
# % := 
# 自动
# * := src/h264
# 自动
# + := src/h264.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/h264.c
# 自动
# ^ := src/h264.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/h264.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/httpd/httpd.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/mwi/mwi.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

splint-verbose:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 877)：
	@for n in $(SPLINT_SOURCES); do \
	echo "running splint on $${n}"; \
	splint $(SPLINT_LIBS) $(SPLINT_OPTIONS) $${n} ; \
	done
	

# 不是一个目标：
.txinfo.info:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# 不是一个目标：
.w:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

v4l2.so: build-x86_64/modules/v4l2/v4l2.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.978294069
#  文件已经被更新。
#  更新成功。
# 自动
# @ := v4l2.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/v4l2/v4l2.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/v4l2/v4l2.o
# 自动
# ^ := build-x86_64/modules/v4l2/v4l2.o
# 自动
# ? := build-x86_64/modules/v4l2/v4l2.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
modules/vumeter/vumeter.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/fakevideo/fakevideo.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

l16.so: build-x86_64/modules/l16/l16.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.574292065
#  文件已经被更新。
#  更新成功。
# 自动
# @ := l16.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/l16/l16.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/l16/l16.o
# 自动
# ^ := build-x86_64/modules/l16/l16.o
# 自动
# ? := build-x86_64/modules/l16/l16.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
modules/auloop/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/presence/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/alsa/alsa_play.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/evdev/evdev.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/audio.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_ausrc.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/debug_cmd/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
/usr/local/share/re/re.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-10 15:15:05.417773385
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/sip/sipsrv.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/sip/auth.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/src/sipreq.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/sipreq.o: src/sipreq.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/sipreq”
#  最近更新 2018-01-16 14:00:42.36230589
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/sipreq.o
# 自动
# % := 
# 自动
# * := src/sipreq
# 自动
# + := src/sipreq.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/sipreq.c
# 自动
# ^ := src/sipreq.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/sipreq.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/ui.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

httpd.so: build-x86_64/modules/httpd/httpd.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.394281255
#  文件已经被更新。
#  更新成功。
# 自动
# @ := httpd.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/httpd/httpd.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/httpd/httpd.o
# 自动
# ^ := build-x86_64/modules/httpd/httpd.o
# 自动
# ? := build-x86_64/modules/httpd/httpd.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

build-x86_64/modules/dtmfio/dtmfio.o: modules/dtmfio/dtmfio.c build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“dtmfio”
#  最近更新 2018-01-16 14:00:35.794273321
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/dtmfio/dtmfio.o
# 自动
# % := 
# 自动
# * := dtmfio
# 自动
# + := modules/dtmfio/dtmfio.c build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/dtmfio/dtmfio.c
# 自动
# ^ := modules/dtmfio/dtmfio.c build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
# 自动
# ? := modules/dtmfio/dtmfio.c build-x86_64 Makefile mk/mod.mk modules/dtmfio/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/46=9%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/vidcodec.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/ice/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.817705479
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/test.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/src/event.o: src/event.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/event”
#  最近更新 2018-01-16 14:00:41.39830111
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/event.o
# 自动
# % := 
# 自动
# * := src/event
# 自动
# + := src/event.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/event.c
# 自动
# ^ := src/event.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/event.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

libbaresip.so: build-x86_64/src/account.o build-x86_64/src/aucodec.o build-x86_64/src/audio.o build-x86_64/src/aufilt.o build-x86_64/src/aulevel.o build-x86_64/src/auplay.o build-x86_64/src/ausrc.o build-x86_64/src/baresip.o build-x86_64/src/call.o build-x86_64/src/cmd.o build-x86_64/src/conf.o build-x86_64/src/config.o build-x86_64/src/contact.o build-x86_64/src/event.o build-x86_64/src/log.o build-x86_64/src/menc.o build-x86_64/src/message.o build-x86_64/src/metric.o build-x86_64/src/mnat.o build-x86_64/src/module.o build-x86_64/src/mos.o build-x86_64/src/net.o build-x86_64/src/play.o build-x86_64/src/realtime.o build-x86_64/src/reg.o build-x86_64/src/rtpext.o build-x86_64/src/rtpkeep.o build-x86_64/src/sdp.o build-x86_64/src/sipreq.o build-x86_64/src/stream.o build-x86_64/src/ua.o build-x86_64/src/ui.o build-x86_64/src/bfcp.o build-x86_64/src/h264.o build-x86_64/src/mctrl.o build-x86_64/src/video.o build-x86_64/src/vidcodec.o build-x86_64/src/vidfilt.o build-x86_64/src/vidisp.o build-x86_64/src/vidsrc.o build-x86_64/src/vidutil.o
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 174)：
	@echo "  LD      $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $^ -L$(LIBRE_SO) -lre $(LIBS) -o $@
	

stdio.so: build-x86_64/modules/stdio/stdio.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.766293018
#  文件已经被更新。
#  更新成功。
# 自动
# @ := stdio.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/stdio/stdio.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/stdio/stdio.o
# 自动
# ^ := build-x86_64/modules/stdio/stdio.o
# 自动
# ? := build-x86_64/modules/stdio/stdio.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

syslog.so: build-x86_64/modules/syslog/syslog.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.846293414
#  文件已经被更新。
#  更新成功。
# 自动
# @ := syslog.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/syslog/syslog.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/syslog/syslog.o
# 自动
# ^ := build-x86_64/modules/syslog/syslog.o
# 自动
# ? := build-x86_64/modules/syslog/syslog.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=3/49=6%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
build-x86_64/test/sip/location.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build-x86_64/modules/turn/turn.o: modules/turn/turn.c build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“turn”
#  最近更新 2018-01-16 14:00:35.970274194
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/turn/turn.o
# 自动
# % := 
# 自动
# * := turn
# 自动
# + := modules/turn/turn.c build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/turn/turn.c
# 自动
# ^ := modules/turn/turn.c build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
# 自动
# ? := modules/turn/turn.c build-x86_64 Makefile mk/mod.mk modules/turn/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
test/srcs.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.861705698
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/uuid/uuid.o: modules/uuid/uuid.c build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“uuid”
#  最近更新 2018-01-16 14:00:37.606282307
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/uuid/uuid.o
# 自动
# % := 
# 自动
# * := uuid
# 自动
# + := modules/uuid/uuid.c build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/uuid/uuid.c
# 自动
# ^ := modules/uuid/uuid.c build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
# 自动
# ? := modules/uuid/uuid.c build-x86_64 Makefile mk/mod.mk modules/uuid/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=6/38=16%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/alsa/alsa.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/aulevel.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

presence.so: build-x86_64/modules/presence/presence.o build-x86_64/modules/presence/subscriber.o build-x86_64/modules/presence/notifier.o build-x86_64/modules/presence/publisher.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:36.638277507
#  文件已经被更新。
#  更新成功。
# 自动
# @ := presence.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/presence/presence.o build-x86_64/modules/presence/subscriber.o build-x86_64/modules/presence/notifier.o build-x86_64/modules/presence/publisher.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/presence/presence.o
# 自动
# ^ := build-x86_64/modules/presence/presence.o build-x86_64/modules/presence/subscriber.o build-x86_64/modules/presence/notifier.o build-x86_64/modules/presence/publisher.o
# 自动
# ? := build-x86_64/modules/presence/presence.o build-x86_64/modules/presence/subscriber.o build-x86_64/modules/presence/notifier.o build-x86_64/modules/presence/publisher.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/118=1%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

install-shared: libbaresip.so libbaresip.pc
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 250)：
	@mkdir -p $(DESTDIR)$(INCDIR)
	$(INSTALL) -Cm 0644 include/baresip.h $(DESTDIR)$(INCDIR)
	@mkdir -p $(DESTDIR)$(LIBDIR) $(DESTDIR)$(LIBDIR)/pkgconfig
	$(INSTALL) -m 0644 $(SHARED) $(DESTDIR)$(LIBDIR)
	$(INSTALL) -m 0644 libbaresip.pc $(DESTDIR)$(LIBDIR)/pkgconfig
	

# 不是一个目标：
build-x86_64/modules/v4l2_codec/v4l2_codec.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/dtls_srtp/dtls_srtp.o: modules/dtls_srtp/dtls_srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“dtls_srtp”
#  最近更新 2018-01-16 14:00:39.078289606
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/dtls_srtp/dtls_srtp.o
# 自动
# % := 
# 自动
# * := dtls_srtp
# 自动
# + := modules/dtls_srtp/dtls_srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/dtls_srtp/dtls_srtp.c
# 自动
# ^ := modules/dtls_srtp/dtls_srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 自动
# ? := modules/dtls_srtp/dtls_srtp.c build-x86_64 Makefile mk/mod.mk modules/dtls_srtp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

srtp.so: build-x86_64/modules/srtp/srtp.o build-x86_64/modules/srtp/sdes.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:37.542281989
#  文件已经被更新。
#  更新成功。
# 自动
# @ := srtp.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/srtp/srtp.o build-x86_64/modules/srtp/sdes.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/srtp/srtp.o
# 自动
# ^ := build-x86_64/modules/srtp/srtp.o build-x86_64/modules/srtp/sdes.o
# 自动
# ? := build-x86_64/modules/srtp/srtp.o build-x86_64/modules/srtp/sdes.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/72=3%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

build-x86_64/modules/natpmp/natpmp.o: modules/natpmp/natpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“natpmp”
#  最近更新 2018-01-16 14:00:37.218280383
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/natpmp/natpmp.o
# 自动
# % := 
# 自动
# * := natpmp
# 自动
# + := modules/natpmp/natpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/natpmp/natpmp.c
# 自动
# ^ := modules/natpmp/natpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
# 自动
# ? := modules/natpmp/natpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/src/vidisp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/vidbridge/disp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64: Makefile
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:35.742273064
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64
# 自动
# % := 
# 自动
# * := 
# 自动
# + := Makefile
# 自动
# | := 
# 自动
# < := Makefile
# 自动
# ^ := Makefile
# 自动
# ? := Makefile
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/17=6%
#  要执行的命令 (从“Makefile”，行 236)：
	@mkdir -p $(BUILD)/src $(MOD_BLD) $(BUILD)/test/mock $(BUILD)/test/sip
	@touch $@
	

# 不是一个目标：
build-x86_64/src/vidfilt.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/event.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.S.s:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(PREPROCESS.S) $< > $@

# 不是一个目标：
.mod:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.mod) -o $@ -e $@ $^

# 不是一个目标：
src/realtime.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

src/static.c: build-x86_64 Makefile src/srcs.mk modules/dtmfio/module.mk modules/stun/module.mk modules/turn/module.mk modules/ice/module.mk modules/natbd/module.mk modules/auloop/module.mk modules/presence/module.mk modules/menu/module.mk modules/contact/module.mk modules/vumeter/module.mk modules/mwi/module.mk modules/account/module.mk modules/natpmp/module.mk modules/httpd/module.mk modules/srtp/module.mk modules/uuid/module.mk modules/debug_cmd/module.mk modules/aubridge/module.mk modules/aufile/module.mk modules/vidloop/module.mk modules/selfview/module.mk modules/vidbridge/module.mk modules/fakevideo/module.mk modules/alsa/module.mk modules/cons/module.mk modules/dtls_srtp/module.mk modules/evdev/module.mk modules/g711/module.mk modules/l16/module.mk modules/oss/module.mk modules/stdio/module.mk modules/syslog/module.mk modules/v4l2/module.mk modules/v4l2_codec/module.mk
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“Makefile”，行 291)：
	@echo "  SH      $@"
	@echo "/* static.c - autogenerated by makefile */"  > $@
	@echo "#include <re_types.h>"  >> $@
	@echo "#include <re_mod.h>"  >> $@
	@echo ""  >> $@
	@for n in $(MODULES); do \
	echo "extern const struct mod_export exports_$${n};" >> $@ ; \
	done
	@echo ""  >> $@
	@echo "const struct mod_export *mod_table[] = {"  >> $@
	@for n in $(MODULES); do \
	echo "  &exports_$${n},"  >> $@  ; \
	done
	@echo "  NULL"  >> $@
	@echo "};"  >> $@
	

# 不是一个目标：
build-x86_64/src/vidutil.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
mk/mod.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.765705222
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/dtmfio/dtmfio.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/ui.o: src/ui.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/ui”
#  最近更新 2018-01-16 14:00:42.706307596
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/ui.o
# 自动
# % := 
# 自动
# * := src/ui
# 自动
# + := src/ui.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/ui.c
# 自动
# ^ := src/ui.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/ui.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.mod.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.mod) -o $@ $<

# 不是一个目标：
modules/dtls_srtp/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/dtls_srtp/dtls.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.F.f:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(PREPROCESS.F) $(OUTPUT_OPTION) $<

# 不是一个目标：
build-x86_64/test/net.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
modules/vidloop/vidloop.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/metric.o: src/metric.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/metric”
#  最近更新 2018-01-16 14:00:41.6383023
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/metric.o
# 自动
# % := 
# 自动
# * := src/metric
# 自动
# + := src/metric.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/metric.c
# 自动
# ^ := src/metric.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/metric.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/contact/contact.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/oss/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

splint-test:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 883)：
	@splint $(SPLINT_LIBS) $(SPLINT_OPTIONS) test.c
	

build-x86_64/src/menc.o: src/menc.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/menc”
#  最近更新 2018-01-16 14:00:41.514301685
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/menc.o
# 自动
# % := 
# 自动
# * := src/menc
# 自动
# + := src/menc.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/menc.c
# 自动
# ^ := src/menc.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/menc.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/src/call.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/aubridge/aubridge.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

dox: ../baresip-dox ../baresip-dox/Doxyfile
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 917)：
	@doxygen $(DOX_DIR)/Doxyfile 2>&1 | grep -v DEBUG_ ; true
	@cd .. && rm -f $(DOX_TAR).tar.gz && \
	tar -zcf $(DOX_TAR).tar.gz $(PROJECT)-dox > /dev/null && \
	echo "Doxygen docs in `pwd`/$(DOX_TAR).tar.gz"
	

# 不是一个目标：
build-x86_64/modules/mwi/mwi.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/menc.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.S.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.S) -o $@ $<

# 不是一个目标：
modules/presence/presence.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.845705618
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/vumeter/vumeter.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/vidbridge/src.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/vidbridge/vidbridge.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/sip/user.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/vidutil.o: src/vidutil.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/vidutil”
#  最近更新 2018-01-16 14:00:43.34631077
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/vidutil.o
# 自动
# % := 
# 自动
# * := src/vidutil
# 自动
# + := src/vidutil.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/vidutil.c
# 自动
# ^ := src/vidutil.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/vidutil.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/modules/evdev/print.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/realtime.o: src/realtime.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/realtime”
#  最近更新 2018-01-16 14:00:42.030304244
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/realtime.o
# 自动
# % := 
# 自动
# * := src/realtime
# 自动
# + := src/realtime.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/realtime.c
# 自动
# ^ := src/realtime.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/realtime.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
modules/aubridge/device.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.781705301
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/stdio/stdio.o: modules/stdio/stdio.c build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“stdio”
#  最近更新 2018-01-16 14:00:39.742292899
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/stdio/stdio.o
# 自动
# % := 
# 自动
# * := stdio
# 自动
# + := modules/stdio/stdio.c build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/stdio/stdio.c
# 自动
# ^ := modules/stdio/stdio.c build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
# 自动
# ? := modules/stdio/stdio.c build-x86_64 Makefile mk/mod.mk modules/stdio/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=6/38=16%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

stun.so: build-x86_64/modules/stun/stun.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:35.898273837
#  文件已经被更新。
#  更新成功。
# 自动
# @ := stun.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/stun/stun.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/stun/stun.o
# 自动
# ^ := build-x86_64/modules/stun/stun.o
# 自动
# ? := build-x86_64/modules/stun/stun.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/49=2%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
modules/syslog/syslog.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/presence/publisher.o: modules/presence/publisher.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“publisher”
#  最近更新 2018-01-16 14:00:36.618277407
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/presence/publisher.o
# 自动
# % := 
# 自动
# * := publisher
# 自动
# + := modules/presence/publisher.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/presence/publisher.c
# 自动
# ^ := modules/presence/publisher.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 自动
# ? := modules/presence/publisher.c build-x86_64 Makefile mk/mod.mk modules/presence/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/sip/domain.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/selfview/selfview.o: modules/selfview/selfview.c build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“selfview”
#  最近更新 2018-01-16 14:00:38.266285579
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/selfview/selfview.o
# 自动
# % := 
# 自动
# * := selfview
# 自动
# + := modules/selfview/selfview.c build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/selfview/selfview.c
# 自动
# ^ := modules/selfview/selfview.c build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
# 自动
# ? := modules/selfview/selfview.c build-x86_64 Makefile mk/mod.mk modules/selfview/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

aufile.so: build-x86_64/modules/aufile/aufile.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:38.082284667
#  文件已经被更新。
#  更新成功。
# 自动
# @ := aufile.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/aufile/aufile.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/aufile/aufile.o
# 自动
# ^ := build-x86_64/modules/aufile/aufile.o
# 自动
# ? := build-x86_64/modules/aufile/aufile.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/49=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
modules/srtp/srtp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/evdev/evdev.o: modules/evdev/evdev.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“evdev”
#  最近更新 2018-01-16 14:00:39.294290677
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/evdev/evdev.o
# 自动
# % := 
# 自动
# * := evdev
# 自动
# + := modules/evdev/evdev.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/evdev/evdev.c
# 自动
# ^ := modules/evdev/evdev.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
# 自动
# ? := modules/evdev/evdev.c build-x86_64 Makefile mk/mod.mk modules/evdev/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
build-x86_64/test/cmd.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
src/main.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-12 15:03:15.311121084
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/mctrl.o: src/mctrl.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/mctrl”
#  最近更新 2018-01-16 14:00:42.898308548
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/mctrl.o
# 自动
# % := 
# 自动
# * := src/mctrl
# 自动
# + := src/mctrl.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/mctrl.c
# 自动
# ^ := src/mctrl.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/mctrl.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/ausrc.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/natbd/natbd.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.821705499
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/aufilt.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/fakevideo/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/contact.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/srcs.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/turn/turn.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.l:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/modules/natpmp/libnatpmp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/cons/cons.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/dtmfio/dtmfio.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/alsa/alsa.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/aubridge/src.o: modules/aubridge/src.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src”
#  最近更新 2018-01-16 14:00:37.902283774
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/aubridge/src.o
# 自动
# % := 
# 自动
# * := src
# 自动
# + := modules/aubridge/src.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/aubridge/src.c
# 自动
# ^ := modules/aubridge/src.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# ? := modules/aubridge/src.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.F:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@

splint:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 872)：
	@for n in $(SPLINT_SOURCES); do \
	splint $(SPLINT_LIBS) $(SPLINT_OPTIONS) $${n} 2>/dev/null ; \
	done
	

dtmfio.so: build-x86_64/modules/dtmfio/dtmfio.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:35.814273421
#  文件已经被更新。
#  更新成功。
# 自动
# @ := dtmfio.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/dtmfio/dtmfio.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/dtmfio/dtmfio.o
# 自动
# ^ := build-x86_64/modules/dtmfio/dtmfio.o
# 自动
# ? := build-x86_64/modules/dtmfio/dtmfio.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=2/57=4%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

# 不是一个目标：
src/module.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/evdev/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.79770538
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/v4l2_codec/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/bfcp.o: src/bfcp.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/bfcp”
#  最近更新 2018-01-16 14:00:42.778307953
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/bfcp.o
# 自动
# % := 
# 自动
# * := src/bfcp
# 自动
# + := src/bfcp.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/bfcp.c
# 自动
# ^ := src/bfcp.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/bfcp.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.web:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

dtls_srtp.so: build-x86_64/modules/dtls_srtp/dtls_srtp.o build-x86_64/modules/dtls_srtp/srtp.o build-x86_64/modules/dtls_srtp/dtls.o
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  最近更新 2018-01-16 14:00:39.22229032
#  文件已经被更新。
#  更新成功。
# 自动
# @ := dtls_srtp.so
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build-x86_64/modules/dtls_srtp/dtls_srtp.o build-x86_64/modules/dtls_srtp/srtp.o build-x86_64/modules/dtls_srtp/dtls.o
# 自动
# | := 
# 自动
# < := build-x86_64/modules/dtls_srtp/dtls_srtp.o
# 自动
# ^ := build-x86_64/modules/dtls_srtp/dtls_srtp.o build-x86_64/modules/dtls_srtp/srtp.o build-x86_64/modules/dtls_srtp/dtls.o
# 自动
# ? := build-x86_64/modules/dtls_srtp/dtls_srtp.o build-x86_64/modules/dtls_srtp/srtp.o build-x86_64/modules/dtls_srtp/dtls.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/95=1%
#  要执行的命令 (从“mk/mod.mk”，行 35)：
	@echo "  LD [M]  $@"
	$(HIDE)$(LD) $(LFLAGS) $(SH_LFLAGS) $(MOD_LFLAGS) \
	$($(basename $@)_OBJS) \
	$($(basename $@)_LFLAGS) -L$(LIBRE_SO) -lre -o $@
	

build-x86_64/modules/natpmp/libnatpmp.o: modules/natpmp/libnatpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“libnatpmp”
#  最近更新 2018-01-16 14:00:37.28628072
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/natpmp/libnatpmp.o
# 自动
# % := 
# 自动
# * := libnatpmp
# 自动
# + := modules/natpmp/libnatpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/natpmp/libnatpmp.c
# 自动
# ^ := modules/natpmp/libnatpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
# 自动
# ? := modules/natpmp/libnatpmp.c build-x86_64 Makefile mk/mod.mk modules/natpmp/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
src/sipreq.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.857705678
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/config.o: src/config.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/config”
#  最近更新 2018-01-16 14:00:41.266300456
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/config.o
# 自动
# % := 
# 自动
# * := src/config
# 自动
# + := src/config.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/config.c
# 自动
# ^ := src/config.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/config.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

debclean:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 750)：
	@rm -rf build-stamp configure-stamp debian/files debian/$(PROJECT) \
	debian/lib$(PROJECT) debian/lib$(PROJECT)-dev debian/tmp \
	debian/.debhelper debian/*.debhelper debian/*.debhelper.log \
	debian/*.substvars
	

# 不是一个目标：
.sym:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/src/message.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/src/reg.o: src/reg.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/reg”
#  最近更新 2018-01-16 14:00:42.106304621
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/reg.o
# 自动
# % := 
# 自动
# * := src/reg
# 自动
# + := src/reg.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/reg.c
# 自动
# ^ := src/reg.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/reg.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

build-x86_64/src/ausrc.o: src/ausrc.c build-x86_64 Makefile src/srcs.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“src/ausrc”
#  最近更新 2018-01-16 14:00:40.734297818
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/src/ausrc.o
# 自动
# % := 
# 自动
# * := src/ausrc
# 自动
# + := src/ausrc.c build-x86_64 Makefile src/srcs.mk
# 自动
# | := 
# 自动
# < := src/ausrc.c
# 自动
# ^ := src/ausrc.c build-x86_64 Makefile src/srcs.mk
# 自动
# ? := src/ausrc.c build-x86_64 Makefile src/srcs.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/31=13%
#  要执行的命令 (从“Makefile”，行 220)：
	@echo "  CC      $@"
	$(HIDE)$(CC) $(CFLAGS) -c $< -o $@ $(DFLAGS)
	

# 不是一个目标：
.f:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
build-x86_64/modules/presence/notifier.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/mock/mock_vidsrc.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/contact/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.785705321
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/src/rtpkeep.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
.f.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (内置)：
	$(COMPILE.f) $(OUTPUT_OPTION) $<

# 不是一个目标：
build-x86_64/modules/dtls_srtp/dtls.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/test/cplusplus.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build-x86_64/src/aucodec.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
modules/vumeter/module.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.849705638
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

build-x86_64/modules/aubridge/play.o: modules/aubridge/play.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
#  对隐含规则的搜索已完成。
#  隐含/静态模式主干：“play”
#  最近更新 2018-01-16 14:00:37.958284052
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build-x86_64/modules/aubridge/play.o
# 自动
# % := 
# 自动
# * := play
# 自动
# + := modules/aubridge/play.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# | := 
# 自动
# < := modules/aubridge/play.c
# 自动
# ^ := modules/aubridge/play.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 自动
# ? := modules/aubridge/play.c build-x86_64 Makefile mk/mod.mk modules/aubridge/module.mk mk/modules.mk
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=4/38=11%
#  要执行的命令 (从“mk/mod.mk”，行 42)：
	@echo "  CC [M]  $@"
	@mkdir -p $(dir $@)
	$(HIDE)$(CC) $(CFLAGS) $($(call modulename,$@)_CFLAGS) \
	-c $< -o $@ $(DFLAGS)
	

splint-sources:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的命令 (从“/usr/local/share/re/re.mk”，行 866)：
	@echo $(SPLINT_SOURCES)
	

# 不是一个目标：
build-x86_64/modules/syslog/syslog.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
src/bfcp.c:
#  对隐含规则的搜索已完成。
#  最近更新 2018-01-02 11:09:12.853705658
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 不是一个目标：
build-x86_64/modules/vidbridge/disp.d:
#  缺省的、MAKEFILES 指定的、-include/sinclude 包含的 makefile。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件已经被更新。
#  更新失败。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/0=0%

# 文件杂凑表状态:
# 负载=509/1024=50%, 重新杂凑=0, 碰撞=24974/34320=73%
# VPATH 搜索路径

# 没有“vpath”搜索路径。

# 没有通用搜索路径(“VPATH”变量)。

# strcache 中的字符串数量: 159
# # of strcache buffers: 2
# strcache size: total = 8192 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 3564 / max = 3553 / min = 11 / avg = 1782

# 在 Tue Jan 16 14:00:43 2018
 上完成 make 数据基础
